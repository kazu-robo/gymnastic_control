fukazawa@exiarepair3:~/Documents$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x62f2af0[16374] --> 0x6774db0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteuc
sh: 1: c: not found
32512
2.irteusgl$ 
nil
2.irteusgl$ 
nil
2.irteusgl$ quit
[ INFO] [1570173337.271307309]: cell* ROSEUS_EXIT(context*, int, cell**)
fukazawa@exiarepair3:~/Documents$ cd
fukazawa@exiarepair3:~$ cd catkin_ws/jaxon_tutorial/src/gymnastic_control/
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x58a4af0[16374] --> 0x5d26db0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$ jaxoninit

;; extending gcstack 0x5d26db0[32738] --> 0x6a44e70[65476] top=7fe1
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570173365.185128491, 593.225000000]: [/default_robot_interface_1570173364674509504] waiting /clock... 0.0016 seconds elapsed.
[ INFO] [1570173365.185263498, 593.225000000]: [/default_robot_interface_1570173364674509504] /clock is now published.
[ WARN] [1570173365.207940146, 593.251000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570173365.650608578, 593.671000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570173365.952866723, 593.993000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570173366.196663673, 594.199000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570173366.408468109, 594.405000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570173366.695584766, 594.721000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570173367.026960360, 595.038000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570173367.346894530, 595.351000000]: ROSEUS is already installed as /default_robot_interface_1570173364674509504
[ WARN] [1570173370.337312672, 597.629000000]: ROSEUS is already installed as /default_robot_interface_1570173364674509504
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

make *ri*?(Y or N): y
nil
3.irteusgl$ walk-up-generate
;; #<rotational-joint #X8b506a0 CHEST_JOINT1> :joint-angle(-0.044657) violate min-angle(0.0)
[ WARN] [1570173426.323569823, 643.661000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X263b6ab0> received wrong goal
[ WARN] [1570173426.326126543, 643.661000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X263a8668> received wrong goal
[ WARN] [1570173426.328667023, 643.661000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X26437c40> received wrong goal
[ WARN] [1570173426.330722540, 643.663000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X263f7920> received wrong goal
generating walking pattern ...
real machine move
(nil)
4.irteusgl$ quit
[ INFO] [1570174009.311082988, 1201.097000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570174009.311130336, 1201.097000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x5c95af0[16374] --> 0x6117db0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$ jaxoninit

;; extending gcstack 0x6117db0[32738] --> 0x6e35e70[65476] top=7fe1
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570174053.038748218, 18.777000000]: [/default_robot_interface_1570174052525301552] waiting /clock... 0.003414 seconds elapsed.
[ INFO] [1570174053.038849779, 18.777000000]: [/default_robot_interface_1570174052525301552] /clock is now published.
[ WARN] [1570174053.065835276, 18.799000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570174053.503161363, 19.216000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570174053.801166577, 19.528000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570174054.023495100, 19.740000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570174054.331351881, 20.058000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570174054.562517866, 20.271000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570174054.771734643, 20.489000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570174055.105812018, 20.811000000]: ROSEUS is already installed as /default_robot_interface_1570174052525301552
[ WARN] [1570174058.055785619, 23.699000000]: ROSEUS is already installed as /default_robot_interface_1570174052525301552
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

make *ri*?(Y or N): y
nil
3.irteusgl$ walk-up-generate
;; #<rotational-joint #X8f416a0 CHEST_JOINT1> :joint-angle(-0.044853) violate min-angle(0.0)
generating walking pattern ...
real machine move
(nil)
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ send *ri* :methods
(:init :set-hand-controller :rarm-controller :larm-controller :rleg-controller :lleg-controller :head-controller :torso-controller :init :move-gripper :start-grasp :stop-grasp :hand-reset :hand-stop :hand-resume :get-joint-angle :get-joint-velocity :get-joint-effort :gripper :state :init :rtmros-motor-states-callback :rtmros-zmp-callback :rtmros-imu-callback :rtmros-force-sensor-callback :rtmros-emergency-mode-callback :rtmros-capture-point-callback :rtmros-contact-states-callback :tmp-force-moment-vector-for-limb :tmp-force-moment-vector :force-vector :moment-vector :off-force-vector :off-moment-vector :reference-force-vector :reference-moment-vector :absolute-force-vector :absolute-moment-vector :zmp-vector :ref-capture-point-vector :act-capture-point-vector :ref-contact-states :act-contact-states :temperature-vector :motor-extra-data :imucoords :accel-vector :gyro-vector :state :define-all-rosbridge-srv-methods :get-rosbridge-fnames-from-type :get-rosbridge-idl-fnames :get-rosbridge-srv-fnames :get-rosbridge-method-def-macro :get-idl-enum-values :set-interpolation-mode :calc-zmp-from-state :get-robot-date-string :def-limb-controller-method :set-base-pose :set-base-coords :set-base-pos :set-base-rpy :wait-interpolation-of-group :add-joint-group :remove-joint-group :set-joint-angles-of-group :load-pattern :wait-interpolation-seq :sync-controller :set-ref-forces-moments :set-ref-forces :set-ref-moments :set-ref-force :set-ref-moment :angle-vector-sequence-full :set-tolerance :start-collision-detection :stop-collision-detection :get-collision-status :save-log :start-log :set-log-maxlength :set-servo-gain-percentage :remove-force-sensor-offset :set-servo-error-limit :calibrate-inertia-sensor :raw-get-impedance-controller-param :raw-set-impedance-controller-param :get-impedance-controller-param-arguments :start-impedance :raw-start-impedance :start-impedance-no-wait :stop-impedance :stop-impedance-no-wait :wait-impedance-controller-transition :set-impedance-controller-param :get-impedance-controller-param :get-impedance-controller-controller-mode :force-sensor-method :get-object-turnaround-detector-param :raw-set-object-turnaround-detector-param :get-object-turnaround-detector-param-arguments :start-object-turnaround-detection :check-object-turnaround-detection :get-otd-object-forces-moments :set-object-turnaround-ref-force :set-object-turnaround-ref-moment :set-object-turnaround-detector-param :get-object-turnaround-detector-detector-total-wrench :raw-get-forcemoment-offset-param :raw-set-forcemoment-offset-param :get-forcemoment-offset-param-arguments :zero-set-forcemoment-offset-param :set-forcemoment-offset-param :get-forcemoment-offset-param :load-forcemoment-offset-param :load-forcemoment-offset-params :dump-forcemoment-offset-params :remove-force-sensor-offset-rmfo :remove-force-sensor-offset-rmfo-arms :remove-force-sensor-offset-rmfo-legs :reset-force-moment-offset-arms :reset-force-moment-offset-legs :reset-force-moment-offset :_reset-force-moment-offset :get-gait-generator-param :raw-set-gait-generator-param :get-gait-generator-param-arguments :get-auto-balancer-param :raw-set-auto-balancer-param :get-auto-balancer-param-arguments :start-auto-balancer :stop-auto-balancer :go-pos-no-wait :go-pos :raw-get-foot-step-param :get-foot-step-params :get-foot-step-param :set-foot-steps-no-wait :set-foot-steps :set-foot-steps-with-param-no-wait :set-foot-steps-with-param :set-foot-steps-roll-pitch :set-foot-steps-with-base-height :set-foot-steps-with-param-and-base-height :adjust-foot-steps :adjust-foot-steps-roll-pitch :get-remaining-foot-step-sequence-current-index :get-current-footstep-index :get-remaining-foot-step-sequence :get-go-pos-footsteps-sequence :draw-remaining-foot-step-sequence :go-velocity :go-stop :emergency-walking-stop :calc-go-velocity-param-from-velocity-center-offset :wait-foot-steps :set-gait-generator-param :print-gait-generator-orbit-type :get-gait-generator-orbit-type :calc-toe-heel-phase-ratio :set-gait-generator-toe-heel-angles :get-auto-balancer-controller-mode :set-auto-balancer-param :print-auto-balancer-use-force-mode :get-auto-balancer-use-force-mode :abc-footstep->eus-footstep :eus-footstep->abc-footstep :cmd-vel-cb :cmd-vel-mode :start-cmd-vel-mode :stop-cmd-vel-mode :calc-dvel-with-velocity-center-offset :set-default-step-time-with-the-same-swing-time :start-graspless-manip-mode :stop-graspless-manip-mode :calc-hand-trans-coords-dual-arms :calc-hand-trans-coords-single-arm :set-soft-error-limit :get-st-param :raw-set-st-param :get-st-param-arguments :set-st-param :set-st-param-for-non-feedback-lip-mode :set-default-st-param :set-st-param-by-ratio :get-st-controller-mode :get-st-algorithm :start-st :stop-st :get-kalman-filter-param :set-kalman-filter-param :get-kalman-filter-param-arguments :get-kalman-filter-algorithm :get-emergency-stopper-param :set-emergency-stopper-param :get-emergency-stopper-param-arguments :emergency-stop-motion :hard-emergency-stop-motion :emergency-release-motion :hard-emergency-release-motion :emergency-mode :get-hand-config-list :start-grasp :stop-grasp :start-default-unstable-controllers :stop-default-unstable-controllers :raw-get-reference-force-updater-param :raw-set-reference-force-updater-param :get-reference-force-updater-param-arguments :get-supported-reference-force-updater-name-list :start-reference-force-updater :stop-reference-force-updater :start-reference-force-updater-no-wait :stop-reference-force-updater-no-wait :set-reference-force-updater-param :get-reference-force-updater-param :get-torque-controller-param :set-torque-controller-param :get-torque-controller-param-arguments :enable-torque-control :disable-torque-control :start-torque-control :stop-torque-control :set-reference-torque :print-rtc-param-all :accelerationfilterservice_resetfilter :accelerationfilterservice_setaccelerationfilterparam :accelerationfilterservice_getaccelerationfilterparam :dataloggerservice_add :dataloggerservice_save :dataloggerservice_maxlength :dataloggerservice_clear :kalmanfilterservice_resetkalmanfilterstate :kalmanfilterservice_getkalmanfilterparam :kalmanfilterservice_setkalmanfilterparam :thermolimiterservice_setparameter :thermolimiterservice_getparameter :graspcontrollerservice_stopgrasp :graspcontrollerservice_startgrasp :collisiondetectorservice_getcollisionstatus :collisiondetectorservice_enablecollisiondetection :collisiondetectorservice_setcollisionloop :collisiondetectorservice_disablecollisiondetection :collisiondetectorservice_settolerance :timekeeperservice_sleep :nullservice_echo :virtualforcesensorservice_removevirtualforcesensoroffset :removeforcesensorlinkoffsetservice_setforcemomentoffsetparam :removeforcesensorlinkoffsetservice_getforcemomentoffsetparam :removeforcesensorlinkoffsetservice_loadforcemomentoffsetparams :removeforcesensorlinkoffsetservice_dumpforcemomentoffsetparams :removeforcesensorlinkoffsetservice_removeforcesensoroffset :stateholderservice_getcommand :stateholderservice_goactual :objectcontactturnarounddetectorservice_startobjectcontactturnarounddetection :objectcontactturnarounddetectorservice_getobjectcontactturnarounddetectorparam :objectcontactturnarounddetectorservice_startobjectcontactturnarounddetectionforgeneralizedwrench :objectcontactturnarounddetectorservice_checkobjectcontactturnarounddetection :objectcontactturnarounddetectorservice_getobjectforcesmoments :objectcontactturnarounddetectorservice_getobjectgeneralizedconstraintwrenches :objectcontactturnarounddetectorservice_setobjectcontactturnarounddetectorparam :objectcontactturnarounddetectorservice_checkobjectcontactturnarounddetectionforgeneralizedwrench :robothardwareservice_setdisturbanceobservergain :robothardwareservice_writedigitaloutputwithmask :robothardwareservice_writedigitaloutput :robothardwareservice_lengthdigitalinput :robothardwareservice_readdigitalinput :robothardwareservice_getstatus2 :robothardwareservice_calibrateinertiasensor :robothardwareservice_setjointinertia :robothardwareservice_enabledisturbanceobserver :robothardwareservice_removeforcesensoroffset :robothardwareservice_setservogainpercentage :robothardwareservice_readdigitaloutput :robothardwareservice_setservotorquegainpercentage :robothardwareservice_setjointcontrolmode :robothardwareservice_addjointgroup :robothardwareservice_disabledisturbanceobserver :robothardwareservice_power :robothardwareservice_lengthdigitaloutput :robothardwareservice_initializejointangle :robothardwareservice_setservoerrorlimit :robothardwareservice_setjointinertias :robothardwareservice_servo :robothardwareservice_getstatus :torquecontrollerservice_settorquecontrollerparam :torquecontrollerservice_enablemultipletorquecontrollers :torquecontrollerservice_starttorquecontrol :torquecontrollerservice_setmultiplereferencetorques :torquecontrollerservice_disablemultipletorquecontrollers :torquecontrollerservice_startmultipletorquecontrols :torquecontrollerservice_gettorquecontrollerparam :torquecontrollerservice_stoptorquecontrol :torquecontrollerservice_setreferencetorque :torquecontrollerservice_stopmultipletorquecontrols :torquecontrollerservice_disabletorquecontroller :torquecontrollerservice_enabletorquecontroller :referenceforceupdaterservice_setreferenceforceupdaterparam :referenceforceupdaterservice_stopreferenceforceupdater :referenceforceupdaterservice_startreferenceforceupdater :referenceforceupdaterservice_getreferenceforceupdaterparam :referenceforceupdaterservice_waitreferenceforceupdatertransition :referenceforceupdaterservice_getsupportedreferenceforceupdaternamesequence :referenceforceupdaterservice_stopreferenceforceupdaternowait :referenceforceupdaterservice_startreferenceforceupdaternowait :img_cameracaptureservice_stop_continuous :img_cameracaptureservice_take_one_frame :img_cameracaptureservice_start_continuous :pcdloaderservice_load :wavplayerservice_playwavnowait :wavplayerservice_playwav :forwardkinematicsservice_getrelativecurrentposition :forwardkinematicsservice_getreferencepose :forwardkinematicsservice_getcurrentpose :forwardkinematicsservice_selectbaselink :torquefilterservice_dummy :impedancecontrollerservice_waitimpedancecontrollertransition :impedancecontrollerservice_setimpedancecontrollerparam :impedancecontrollerservice_getimpedancecontrollerparam :impedancecontrollerservice_startimpedancecontrollernowait :impedancecontrollerservice_startimpedancecontroller :impedancecontrollerservice_stopimpedancecontrollernowait :impedancecontrollerservice_stopimpedancecontroller :sequenceplayerservice_playpatternofgroup :sequenceplayerservice_setzmp :sequenceplayerservice_isempty :sequenceplayerservice_clearofgroup :sequenceplayerservice_removejointgroup :sequenceplayerservice_clearnowait :sequenceplayerservice_setinterpolationmode :sequenceplayerservice_setmaxikerror :sequenceplayerservice_setjointanglessequencefull :sequenceplayerservice_setjointanglessequenceofgroup :sequenceplayerservice_setjointangle :sequenceplayerservice_setjointangleswithmask :sequenceplayerservice_setwrenches :sequenceplayerservice_settargetpose :sequenceplayerservice_setmaxikiteration :sequenceplayerservice_addjointgroup :sequenceplayerservice_setbaserpy :sequenceplayerservice_clearjointangles :sequenceplayerservice_loadpattern :sequenceplayerservice_setjointangles :sequenceplayerservice_setjointanglesofgroup :sequenceplayerservice_clearjointanglesofgroup :sequenceplayerservice_setjointanglessequencewithmask :sequenceplayerservice_clear :sequenceplayerservice_setbasepos :sequenceplayerservice_setinitialstate :sequenceplayerservice_waitinterpolation :sequenceplayerservice_playpattern :sequenceplayerservice_waitinterpolationofgroup :sequenceplayerservice_setjointanglessequence :servocontrollerservice_getspeed :servocontrollerservice_servoon :servocontrollerservice_setjointanglesofgroup :servocontrollerservice_removejointgroup :servocontrollerservice_getmaxtorque :servocontrollerservice_setmaxtorque :servocontrollerservice_setjointangle :servocontrollerservice_addjointgroup :servocontrollerservice_servooff :servocontrollerservice_gettorque :servocontrollerservice_getjointangles :servocontrollerservice_getjointangle :servocontrollerservice_setreset :servocontrollerservice_setjointangles :servocontrollerservice_getduration :servocontrollerservice_gettemperature :servocontrollerservice_getvoltage :emergencystopperservice_releasemotion :emergencystopperservice_stopmotion :emergencystopperservice_setemergencystopperparam :emergencystopperservice_getemergencystopperparam :executionprofileservice_getprofile :executionprofileservice_resetprofile :executionprofileservice_getcomponentprofile :ogmap3dservice_getogmap3d :ogmap3dservice_save :ogmap3dservice_clear :softerrorlimiterservice_setservoerrorlimit :stabilizerservice_startstabilizer :stabilizerservice_setparameter :stabilizerservice_stopstabilizer :stabilizerservice_getparameter :stabilizerservice_dummy :autobalancerservice_setfootsteps :autobalancerservice_getremainingfootstepsequence :autobalancerservice_adjustfootsteps :autobalancerservice_setautobalancerparam :autobalancerservice_waitfootstepsearly :autobalancerservice_gostop :autobalancerservice_setfootstepswithparam :autobalancerservice_waitfootsteps :autobalancerservice_getautobalancerparam :autobalancerservice_getgaitgeneratorparam :autobalancerservice_stopautobalancer :autobalancerservice_setgaitgeneratorparam :autobalancerservice_getgoposfootstepssequence :autobalancerservice_gopos :autobalancerservice_startautobalancer :autobalancerservice_emergencystop :autobalancerservice_getfootstepparam :autobalancerservice_govelocity :autobalancerservice_releaseemergencystop :init :add-controller :robot-interface-simulation-callback :publish-joint-state :angle-vector-safe :angle-vector-duration :angle-vector-simulation :angle-vector :angle-vector-sequence :wait-interpolation :interpolatingp :wait-interpolation-smooth :interpolating-smoothp :stop-motion :cancel-angle-vector :worldcoords :torque-vector :potentio-vector :reference-vector :actual-vector :error-vector :state-vector :stamp :send-ros-controller :set-robot-state1 :get-robot-state :ros-state-callback :wait-until-update-all-joints :update-robot-state :state :default-controller :sub-angle-vector :robot :viewer :objects :set-simulation-default-look-at :draw-objects :find-object :joint-action-enable :simulation-modep :warningp :spin-once :send-trajectory :send-trajectory-each :ros-wait :go-pos :go-pos-no-wait :go-wait :go-velocity :go-stop :gripper :joint-trajectory-to-angle-vector-list :show-goal-hand-coords :find-descendants-dae-links :show-mesh-traj-with-color :nod :eus-mannequin-mode :play-sound :speak :speak-en :speak-jp :plist :get :put :name :remprop :prin1 :prin1 :warning :error :slots :methods :super :get-val :set-val)
5.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X31989898>
6.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
7.irteusgl$ send *ri* :stop-auto-balancer
#<hrpsys_ros_bridge::openhrp_autobalancerservice_stopautobalancerresponse #X169668b0>
8.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
9.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X31a42658>
10.irteusgl$ reset-pose :tm 1
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 1 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
11.irteusgl$ load "box-climb-stair.l 
t
12.irteusgl$ walk-up-generate
;; #<rotational-joint #X8f416a0 CHEST_JOINT1> :joint-angle(-0.046074) violate min-angle(0.0)
[ WARN] [1570174988.743317913, 947.017000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X252078b8> received wrong goal
[ WARN] [1570174988.745067916, 947.029000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X25450220> received wrong goal
generating walking pattern ...
real machine move
Call Stack (max depth: 20):
  0: at (reset-pose tm)
  1: at (let ((tm 3)) (reset-pose tm) (unix:sleep tm))
  2: at (progn (warn "real machine move~%") (let ((tm 3)) (reset-pose tm) (unix:sleep tm)) (send *ri* :angle-vector-sequence-full av-list tm-list) (send *ri* :wait-interpolation))
  3: at (if real (progn (warn "real machine move~%") (let ((tm 3)) (reset-pose tm) (unix:sleep tm)) (send *ri* :angle-vector-sequence-full av-list tm-list) (send *ri* :wait-interpolation)))
  4: at (when real (warn "real machine move~%") (let ((tm 3)) (reset-pose tm) (unix:sleep tm)) (send *ri* :angle-vector-sequence-full av-list tm-list) (send *ri* :wait-interpolation))
  5: at (let* ((fs-list) (rleg-end-coords (send *robot* :rleg :end-coords :copy-worldcoords)) (lleg-end-coords (send *robot* :lleg :end-coords :copy-worldcoords))) (setq fs-list (list (send (make-coords :coords (send rleg-end-coords :copy-worldcoords) :name :rleg) :translate (float-vector 0 0 0) :world) (send (make-coords :coords (send lleg-end-coords :copy-worldcoords) :name :lleg) :translate (float-vector stride 0 box-height) :world) (send (make-coords :coords (send rleg-end-coords :copy-worldcoords) :name :rleg) :translate (float-vector stride 0 box-height) :world))) (send *robot* :reset-pose) (send *robot* :legs :move-end-pos (float-vector 0 0 bend-knee-height)) (send *ri* :angle-vector (send *robot* :angle-vector)) (send *ri* :wait-interpolation) (send *robot* :fix-leg-to-coords (make-coords)) (warning-message 3 "generating walking pattern ...~%") (setq walk-pattern (send *robot* :calc-walk-pattern-from-footstep-list fs-list :all-limbs '(:rleg :lleg) :init-pose-function #'(lambda nil) :debug-view debug-view :default-step-time step-time :default-step-height step-height :dt dt)) (setq av-list nil) (setq tm-list nil) (dolist (a walk-pattern) (push (concatenate float-vector (cadr (memq :angle-vector a)) #f(0.0 0.0 0.0 0.0)) av-list) (push (* 1000 dt) tm-list)) (nreverse av-list) (nreverse tm-list) (when real (warn "real machine move~%") (let ((tm 3)) (reset-pose tm) (unix:sleep tm)) (send *ri* :angle-vector-sequence-full av-list tm-list) (send *ri* :wait-interpolation)))
  6: at (walk-up-generate)
  7: at #<compiled-code #X5cc4828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: keyword expected for arguments in (reset-pose tm)
13.E1-irteusgl$ reset
14.irteusgl$ load "box-climb-stair.l 
t
15.irteusgl$ walk-up-generate
;; #<rotational-joint #X8f416a0 CHEST_JOINT1> :joint-angle(-0.045927) violate min-angle(0.0)
[ WARN] [1570175062.453068088, 1020.087000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X30e525c8> received wrong goal
generating walking pattern ...
;; inverse-kinematics failed.
;; dif-pos : #f(-2.090531e-05 -2.849256e-06 -3.794645e-05)/(4.341754e-05/1)
;; dif-rot : #f(-1.108478e-16 -3.919866e-16 6.437473e-17)/(4.124135e-16/0.017453)
;; dif-pos : #f(3.21976 -5.642696e-06 -6.110334e-05)/(3.21976/1)
;; dif-rot : #f(2.313075e-09 -0.022963 0.002373)/(0.023086/0.017453)
;; cog-dif : #f(0.027329 -0.000164)/(0.027329/5.0)
;;  coords : #<coordinates #X1325f8e0  410.25 42.853 -91.834 / -0.46 -2.509e-08 1.244e-08>
;;  angles : (#f(2.3302 0.763831 0.0 0.0 0.0 -1.62256) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X27645418  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.091e-05 -100.0 3.795e-05 / 1.694e-10 3.927e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  396.795 100.008 400.205 / -0.002 0.023 -2.725e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  410.25 42.853 926.666 / -0.46 -2.509e-08 1.244e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  365.84 -46.744 936.166 / 2.257e-09 -2.800e-08 -6.239e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.84 -46.744 814.166 / 2.257e-09 -2.800e-08 -0.074> #<bodyset-link #X6f14d58 RLEG_LINK2  365.84 -47.488 804.194 / -0.04 0.497 -0.085> #<bodyset-link #X6f38680 RLEG_LINK3  184.015 -72.301 471.442 / -0.041 0.504 -0.085> #<bodyset-link #X130e0d78 RLEG_LINK4  2.090e-05 -97.025 139.889 / 1.694e-10 3.927e-16 -0.074> #<bodyset-link #X12a84e10 RLEG_LINK5  2.091e-05 -100.0 100.0 / 1.694e-10 3.927e-16 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  410.25 42.853 926.666 / -0.46 -2.509e-08 1.244e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  454.66 132.451 936.166 / 1.889e-07 -2.800e-08 -5.290e-15> #<bodyset-link #X6fe7740 LLEG_LINK1  454.66 132.451 814.166 / 1.889e-07 -2.800e-08 -0.103> #<bodyset-link #X6fe1bf0 LLEG_LINK2  454.66 131.423 804.219 / 0.16 -0.995 -0.19> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.035 110.418 600.949 / -0.561 1.379 -0.57> #<bodyset-link #X1316f038 LLEG_LINK4  400.015 104.115 539.956 / -0.002 0.023 -0.103> #<bodyset-link #X6f6d3c0 LLEG_LINK5  399.091 100.005 500.179 / -0.002 0.023 -2.725e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.091e-05 -100.0 3.795e-05 / 1.694e-10 3.927e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  396.795 100.008 400.205 / -0.002 0.023 -2.725e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  410.25 42.853 926.666 / -0.46 -2.509e-08 1.244e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  365.84 -46.744 936.166 / 2.257e-09 -2.800e-08 -6.239e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.84 -46.744 814.166 / 2.257e-09 -2.800e-08 -0.074> #<bodyset-link #X6f14d58 RLEG_LINK2  365.84 -47.488 804.194 / -0.04 0.497 -0.085> #<bodyset-link #X6f38680 RLEG_LINK3  184.015 -72.301 471.442 / -0.041 0.504 -0.085> #<bodyset-link #X130e0d78 RLEG_LINK4  2.090e-05 -97.025 139.889 / 1.694e-10 3.927e-16 -0.074> #<bodyset-link #X12a84e10 RLEG_LINK5  2.091e-05 -100.0 100.0 / 1.694e-10 3.927e-16 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  410.25 42.853 926.666 / -0.46 -2.509e-08 1.244e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  454.66 132.451 936.166 / 1.889e-07 -2.800e-08 -5.290e-15> #<bodyset-link #X6fe7740 LLEG_LINK1  454.66 132.451 814.166 / 1.889e-07 -2.800e-08 -0.103> #<bodyset-link #X6fe1bf0 LLEG_LINK2  454.66 131.423 804.219 / 0.16 -0.995 -0.19> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.035 110.418 600.949 / -0.561 1.379 -0.57> #<bodyset-link #X1316f038 LLEG_LINK4  400.015 104.115 539.956 / -0.002 0.023 -0.103> #<bodyset-link #X6f6d3c0 LLEG_LINK5  399.091 100.005 500.179 / -0.002 0.023 -2.725e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(339.841 69.9145 1217.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  410.25 42.853 926.666 / -0.46 -2.509e-08 1.244e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.091e-05 -100.0 3.795e-05 / 1.694e-10 3.927e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  396.795 100.008 400.205 / -0.002 0.023 -2.725e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  365.84 -46.744 936.166 / 2.257e-09 -2.800e-08 -6.239e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.84 -46.744 814.166 / 2.257e-09 -2.800e-08 -0.074> #<bodyset-link #X6f14d58 RLEG_LINK2  365.84 -47.488 804.194 / -0.04 0.497 -0.085> #<bodyset-link #X6f38680 RLEG_LINK3  184.015 -72.301 471.442 / -0.041 0.504 -0.085> #<bodyset-link #X130e0d78 RLEG_LINK4  2.090e-05 -97.025 139.889 / 1.694e-10 3.927e-16 -0.074> #<bodyset-link #X12a84e10 RLEG_LINK5  2.091e-05 -100.0 100.0 / 1.694e-10 3.927e-16 5.588e-10>) (#<bodyset-link #X1258dac0 LLEG_LINK0  454.66 132.451 936.166 / 1.889e-07 -2.800e-08 -5.290e-15> #<bodyset-link #X6fe7740 LLEG_LINK1  454.66 132.451 814.166 / 1.889e-07 -2.800e-08 -0.103> #<bodyset-link #X6fe1bf0 LLEG_LINK2  454.66 131.423 804.219 / 0.16 -0.995 -0.19> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.035 110.418 600.949 / -0.561 1.379 -0.57> #<bodyset-link #X1316f038 LLEG_LINK4  400.015 104.115 539.956 / -0.002 0.023 -0.103> #<bodyset-link #X6f6d3c0 LLEG_LINK5  399.091 100.005 500.179 / -0.002 0.023 -2.725e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(339.841 69.9145 1217.9) :target-centroid-pos #f(339.841 69.9145 1217.9) :fix-limbs-target-coords (#<coordinates #X27645418  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.895977 0.4441 -2.800114e-08 410.25) (-0.4441 0.895977 -8.218213e-19 42.8533) (2.508838e-08 1.243530e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint619075312) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(2.3302 0.763831 0.0 0.0 0.0 -1.62256) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.783291e-32 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.783291e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.936999e-20 0.0) (0.0 1.0 0.0 0.0) (4.936999e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.783291e-32 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.783291e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.936999e-20 0.0) (0.0 1.0 0.0 0.0) (4.936999e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(339.841 69.9145 1217.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.783291e-32 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.783291e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.936999e-20 0.0) (0.0 1.0 0.0 0.0) (4.936999e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(339.841 69.9145 1217.9) :target-centroid-pos #f(339.841 69.9145 1217.9) :fix-limbs-target-coords (list #<coordinates #X27645418  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-45-87-91-29-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-45-87-91-29-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-4.26234 -0.600897 -7.49175)/(8.64031/1)
;; dif-rot : #f(-6.921445e-17 5.405893e-14 4.445816e-15)/(5.424148e-14/0.017453)
;; dif-pos : #f(1.00816 0.019274 -0.005577)/(1.00836/1)
;; dif-rot : #f(4.901716e-06 -0.007131 0.001014)/(0.007202/0.017453)
;; cog-dif : #f(-0.185145 -0.026621)/(0.187049/5.0)
;;  coords : #<coordinates #X1325f8e0  416.88 52.451 -91.834 / -0.348 -2.632e-08 9.556e-09>
;;  angles : (#f(4.68508 1.5737 0.0 0.0 0.0 -3.18028) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X27c2d4a8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.262 -99.399 7.492 / 1.694e-10 -5.406e-14 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  399.006 99.982 400.144 / -0.001 0.007 -8.518e-06>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  416.88 52.451 926.666 / -0.348 -2.632e-08 9.556e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  382.753 -41.545 936.166 / 2.462e-09 -2.800e-08 -6.811e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  382.753 -41.545 814.166 / 2.462e-09 -2.800e-08 -0.082> #<bodyset-link #X6f14d58 RLEG_LINK2  382.753 -42.361 804.2 / -0.046 0.515 -0.094> #<bodyset-link #X6f38680 RLEG_LINK3  195.046 -69.32 474.899 / -0.047 0.524 -0.094> #<bodyset-link #X130e0d78 RLEG_LINK4  4.262 -96.135 147.358 / 1.694e-10 -5.406e-14 -0.082> #<bodyset-link #X12a84e10 RLEG_LINK5  4.262 -99.399 107.492 / 1.694e-10 -5.406e-14 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  416.88 52.451 926.666 / -0.348 -2.632e-08 9.556e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  451.007 146.448 936.166 / 4.073e-05 -2.800e-08 -1.140e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  451.007 146.448 814.166 / 4.073e-05 -2.800e-08 -0.147> #<bodyset-link #X6fe1bf0 LLEG_LINK2  451.007 144.984 804.274 / 0.232 -0.999 -0.274> #<bodyset-link #X6f7a6c0 LLEG_LINK3  774.006 115.697 606.249 / -0.683 1.341 -0.696> #<bodyset-link #X1316f038 LLEG_LINK4  400.007 105.836 539.71 / -0.001 0.007 -0.147> #<bodyset-link #X6f6d3c0 LLEG_LINK5  399.719 99.982 500.142 / -0.001 0.007 -8.518e-06>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.262 -99.399 7.492 / 1.694e-10 -5.406e-14 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  399.006 99.982 400.144 / -0.001 0.007 -8.518e-06>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  416.88 52.451 926.666 / -0.348 -2.632e-08 9.556e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  382.753 -41.545 936.166 / 2.462e-09 -2.800e-08 -6.811e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  382.753 -41.545 814.166 / 2.462e-09 -2.800e-08 -0.082> #<bodyset-link #X6f14d58 RLEG_LINK2  382.753 -42.361 804.2 / -0.046 0.515 -0.094> #<bodyset-link #X6f38680 RLEG_LINK3  195.046 -69.32 474.899 / -0.047 0.524 -0.094> #<bodyset-link #X130e0d78 RLEG_LINK4  4.262 -96.135 147.358 / 1.694e-10 -5.406e-14 -0.082> #<bodyset-link #X12a84e10 RLEG_LINK5  4.262 -99.399 107.492 / 1.694e-10 -5.406e-14 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  416.88 52.451 926.666 / -0.348 -2.632e-08 9.556e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  451.007 146.448 936.166 / 4.073e-05 -2.800e-08 -1.140e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  451.007 146.448 814.166 / 4.073e-05 -2.800e-08 -0.147> #<bodyset-link #X6fe1bf0 LLEG_LINK2  451.007 144.984 804.274 / 0.232 -0.999 -0.274> #<bodyset-link #X6f7a6c0 LLEG_LINK3  774.006 115.697 606.249 / -0.683 1.341 -0.696> #<bodyset-link #X1316f038 LLEG_LINK4  400.007 105.836 539.71 / -0.001 0.007 -0.147> #<bodyset-link #X6f6d3c0 LLEG_LINK5  399.719 99.982 500.142 / -0.001 0.007 -8.518e-06>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(342.794 71.3908 1217.97) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  416.88 52.451 926.666 / -0.348 -2.632e-08 9.556e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.262 -99.399 7.492 / 1.694e-10 -5.406e-14 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  399.006 99.982 400.144 / -0.001 0.007 -8.518e-06>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  382.753 -41.545 936.166 / 2.462e-09 -2.800e-08 -6.811e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  382.753 -41.545 814.166 / 2.462e-09 -2.800e-08 -0.082> #<bodyset-link #X6f14d58 RLEG_LINK2  382.753 -42.361 804.2 / -0.046 0.515 -0.094> #<bodyset-link #X6f38680 RLEG_LINK3  195.046 -69.32 474.899 / -0.047 0.524 -0.094> #<bodyset-link #X130e0d78 RLEG_LINK4  4.262 -96.135 147.358 / 1.694e-10 -5.406e-14 -0.082> #<bodyset-link #X12a84e10 RLEG_LINK5  4.262 -99.399 107.492 / 1.694e-10 -5.406e-14 5.588e-10>) (#<bodyset-link #X1258dac0 LLEG_LINK0  451.007 146.448 936.166 / 4.073e-05 -2.800e-08 -1.140e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  451.007 146.448 814.166 / 4.073e-05 -2.800e-08 -0.147> #<bodyset-link #X6fe1bf0 LLEG_LINK2  451.007 144.984 804.274 / 0.232 -0.999 -0.274> #<bodyset-link #X6f7a6c0 LLEG_LINK3  774.006 115.697 606.249 / -0.683 1.341 -0.696> #<bodyset-link #X1316f038 LLEG_LINK4  400.007 105.836 539.71 / -0.001 0.007 -0.147> #<bodyset-link #X6f6d3c0 LLEG_LINK5  399.719 99.982 500.142 / -0.001 0.007 -8.518e-06>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(342.794 71.3908 1217.97) :target-centroid-pos #f(342.794 71.3908 1217.97) :fix-limbs-target-coords (#<coordinates #X27c2d4a8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.939965 0.34127 -2.800114e-08 416.88) (-0.34127 0.939965 -8.218213e-19 52.4514) (2.632010e-08 9.555958e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint625648856) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(4.68508 1.5737 0.0 0.0 0.0 -3.18028) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.559173e-31 0.0) (0.0 1.0 0.0 1.421085e-14) (9.559173e-31 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.168404e-19 1.884968e-18 0.0) (-2.168404e-19 1.0 -2.043686e-37 1.421085e-14) (-1.884968e-18 -2.043686e-37 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.559173e-31 0.0) (0.0 1.0 0.0 1.421085e-14) (9.559173e-31 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.168404e-19 1.884968e-18 0.0) (-2.168404e-19 1.0 -2.043686e-37 1.421085e-14) (-1.884968e-18 -2.043686e-37 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(342.794 71.3908 1217.97) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.559173e-31 0.0) (0.0 1.0 0.0 1.421085e-14) (9.559173e-31 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.168404e-19 1.884968e-18 0.0) (-2.168404e-19 1.0 -2.043686e-37 1.421085e-14) (-1.884968e-18 -2.043686e-37 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(342.794 71.3908 1217.97) :target-centroid-pos #f(342.794 71.3908 1217.97) :fix-limbs-target-coords (list #<coordinates #X27c2d4a8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-46-26-21-71-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-46-26-21-71-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-9.858034e-05 -1.393747e-05 -0.000179)/(0.000205/1)
;; dif-rot : #f(2.793006e-17 -3.462552e-16 3.535857e-17)/(3.491747e-16/0.017453)
;; dif-pos : #f(7.6659 -1.973644e-05 -0.000291)/(7.6659/1)
;; dif-rot : #f(2.639786e-08 -0.054688 0.005119)/(0.054927/0.017453)
;; cog-dif : #f(0.064918 -0.000547)/(0.06492/5.0)
;;  coords : #<coordinates #X1325f8e0  414.802 42.371 -91.834 / -0.515 -2.437e-08 1.379e-08>
;;  angles : (#f(6.987 2.36536 0.0 0.0 0.0 -4.70295) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X281df1d8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  9.858e-05 -100.0 0.0 / 1.694e-10 3.469e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  392.36 100.039 400.551 / -0.005 0.055 -0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  414.802 42.371 926.666 / -0.515 -2.437e-08 1.379e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  365.545 -44.656 936.166 / 2.339e-09 -2.800e-08 -6.468e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.545 -44.656 814.166 / 2.339e-09 -2.800e-08 -0.077> #<bodyset-link #X6f14d58 RLEG_LINK2  365.545 -45.429 804.196 / -0.042 0.496 -0.088> #<bodyset-link #X6f38680 RLEG_LINK3  184.266 -71.232 471.222 / -0.043 0.505 -0.088> #<bodyset-link #X130e0d78 RLEG_LINK4  9.858e-05 -96.909 139.881 / 1.694e-10 3.469e-16 -0.077> #<bodyset-link #X12a84e10 RLEG_LINK5  9.858e-05 -100.0 100.0 / 1.694e-10 3.469e-16 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  414.802 42.371 926.666 / -0.515 -2.437e-08 1.379e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  464.06 129.398 936.166 / 8.058e-07 -2.800e-08 -2.256e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  464.06 129.398 814.166 / 8.058e-07 -2.800e-08 -0.093> #<bodyset-link #X6fe1bf0 LLEG_LINK2  464.06 128.466 804.21 / 0.134 -0.96 -0.163> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.804 108.348 589.299 / -0.619 1.411 -0.625> #<bodyset-link #X1316f038 LLEG_LINK4  400.022 103.748 540.167 / -0.005 0.055 -0.093> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.826 100.025 500.401 / -0.005 0.055 -0.0>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  9.858e-05 -100.0 0.0 / 1.694e-10 3.469e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  392.36 100.039 400.551 / -0.005 0.055 -0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  414.802 42.371 926.666 / -0.515 -2.437e-08 1.379e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  365.545 -44.656 936.166 / 2.339e-09 -2.800e-08 -6.468e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.545 -44.656 814.166 / 2.339e-09 -2.800e-08 -0.077> #<bodyset-link #X6f14d58 RLEG_LINK2  365.545 -45.429 804.196 / -0.042 0.496 -0.088> #<bodyset-link #X6f38680 RLEG_LINK3  184.266 -71.232 471.222 / -0.043 0.505 -0.088> #<bodyset-link #X130e0d78 RLEG_LINK4  9.858e-05 -96.909 139.881 / 1.694e-10 3.469e-16 -0.077> #<bodyset-link #X12a84e10 RLEG_LINK5  9.858e-05 -100.0 100.0 / 1.694e-10 3.469e-16 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  414.802 42.371 926.666 / -0.515 -2.437e-08 1.379e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  464.06 129.398 936.166 / 8.058e-07 -2.800e-08 -2.256e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  464.06 129.398 814.166 / 8.058e-07 -2.800e-08 -0.093> #<bodyset-link #X6fe1bf0 LLEG_LINK2  464.06 128.466 804.21 / 0.134 -0.96 -0.163> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.804 108.348 589.299 / -0.619 1.411 -0.625> #<bodyset-link #X1316f038 LLEG_LINK4  400.022 103.748 540.167 / -0.005 0.055 -0.093> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.826 100.025 500.401 / -0.005 0.055 -0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(345.68 72.8338 1218.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  414.802 42.371 926.666 / -0.515 -2.437e-08 1.379e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  9.858e-05 -100.0 0.0 / 1.694e-10 3.469e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  392.36 100.039 400.551 / -0.005 0.055 -0.0>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  365.545 -44.656 936.166 / 2.339e-09 -2.800e-08 -6.468e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.545 -44.656 814.166 / 2.339e-09 -2.800e-08 -0.077> #<bodyset-link #X6f14d58 RLEG_LINK2  365.545 -45.429 804.196 / -0.042 0.496 -0.088> #<bodyset-link #X6f38680 RLEG_LINK3  184.266 -71.232 471.222 / -0.043 0.505 -0.088> #<bodyset-link #X130e0d78 RLEG_LINK4  9.858e-05 -96.909 139.881 / 1.694e-10 3.469e-16 -0.077> #<bodyset-link #X12a84e10 RLEG_LINK5  9.858e-05 -100.0 100.0 / 1.694e-10 3.469e-16 5.588e-10>) (#<bodyset-link #X1258dac0 LLEG_LINK0  464.06 129.398 936.166 / 8.058e-07 -2.800e-08 -2.256e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  464.06 129.398 814.166 / 8.058e-07 -2.800e-08 -0.093> #<bodyset-link #X6fe1bf0 LLEG_LINK2  464.06 128.466 804.21 / 0.134 -0.96 -0.163> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.804 108.348 589.299 / -0.619 1.411 -0.625> #<bodyset-link #X1316f038 LLEG_LINK4  400.022 103.748 540.167 / -0.005 0.055 -0.093> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.826 100.025 500.401 / -0.005 0.055 -0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(345.68 72.8338 1218.04) :target-centroid-pos #f(345.68 72.8338 1218.04) :fix-limbs-target-coords (#<coordinates #X281df1d8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.870268 0.492578 -2.800114e-08 414.802) (-0.492578 0.870268 -8.218221e-19 42.3709) (2.436850e-08 1.379275e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint788251176) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(6.987 2.36536 0.0 0.0 0.0 -4.70295) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.658343e-33 -1.355253e-20) (0.0 1.0 0.0 0.0) (-4.658343e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.633811e-18 0.0) (0.0 1.0 0.0 0.0) (-1.633811e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.658343e-33 -1.355253e-20) (0.0 1.0 0.0 0.0) (-4.658343e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.633811e-18 0.0) (0.0 1.0 0.0 0.0) (-1.633811e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(345.68 72.8338 1218.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.658343e-33 -1.355253e-20) (0.0 1.0 0.0 0.0) (-4.658343e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.633811e-18 0.0) (0.0 1.0 0.0 0.0) (-1.633811e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(345.68 72.8338 1218.04) :target-centroid-pos #f(345.68 72.8338 1218.04) :fix-limbs-target-coords (list #<coordinates #X281df1d8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-46-76-87-61-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-46-76-87-61-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-0.616143 -0.940926 -0.415516)/(1.19901/1)
;; dif-rot : #f(1.748586e-07 -2.833077e-07 -8.681925e-07)/(9.298371e-07/0.017453)
;; dif-pos : #f(10.3823 0.835216 -0.215283)/(10.418/1)
;; dif-rot : #f(-3.721816e-05 -0.071505 0.008922)/(0.07206/0.017453)
;; cog-dif : #f(-0.477628 0.247117)/(0.537769/5.0)
;;  coords : #<coordinates #X1325f8e0  417.848 42.407 -91.834 / -0.534 -2.410e-08 1.426e-08>
;;  angles : (#f(9.23251 3.13762 0.0 0.0 0.0 -6.18832) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2843b128  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.616 -99.059 0.416 / 8.684e-07 2.833e-07 -1.743e-07> #<cascaded-coords #X12422518 :lleg-end-coords  389.667 99.257 401.088 / -0.009 0.072 -0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  366.914 -43.649 936.166 / 8.925e-07 -2.800e-08 -2.499e-14> #<bodyset-link #X9501ce8 RLEG_LINK1  366.914 -43.649 814.166 / 8.925e-07 -2.800e-08 -0.077> #<bodyset-link #X6f14d58 RLEG_LINK2  366.914 -44.423 804.196 / -0.042 0.498 -0.088> #<bodyset-link #X6f38680 RLEG_LINK3  184.775 -70.236 471.692 / -0.043 0.504 -0.089> #<bodyset-link #X130e0d78 RLEG_LINK4  0.616 -95.963 140.296 / 8.684e-07 2.833e-07 -0.077> #<bodyset-link #X12a84e10 RLEG_LINK5  0.616 -99.059 100.416 / 8.684e-07 2.833e-07 -1.743e-07>) (#<bodyset-link #X6ee5ff8 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  468.783 128.463 936.166 / -0.002 -2.800e-08 6.203e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  468.783 128.463 814.166 / -0.002 -2.800e-08 -0.094> #<bodyset-link #X6fe1bf0 LLEG_LINK2  468.78 127.529 804.21 / 0.127 -0.941 -0.159> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.26 106.121 583.343 / -0.689 1.424 -0.693> #<bodyset-link #X1316f038 LLEG_LINK4  399.69 102.943 540.555 / -0.009 0.072 -0.094> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.811 99.222 500.832 / -0.009 0.072 -0.0>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.616 -99.059 0.416 / 8.684e-07 2.833e-07 -1.743e-07> #<cascaded-coords #X12422518 :lleg-end-coords  389.667 99.257 401.088 / -0.009 0.072 -0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  366.914 -43.649 936.166 / 8.925e-07 -2.800e-08 -2.499e-14> #<bodyset-link #X9501ce8 RLEG_LINK1  366.914 -43.649 814.166 / 8.925e-07 -2.800e-08 -0.077> #<bodyset-link #X6f14d58 RLEG_LINK2  366.914 -44.423 804.196 / -0.042 0.498 -0.088> #<bodyset-link #X6f38680 RLEG_LINK3  184.775 -70.236 471.692 / -0.043 0.504 -0.089> #<bodyset-link #X130e0d78 RLEG_LINK4  0.616 -95.963 140.296 / 8.684e-07 2.833e-07 -0.077> #<bodyset-link #X12a84e10 RLEG_LINK5  0.616 -99.059 100.416 / 8.684e-07 2.833e-07 -1.743e-07>) (#<bodyset-link #X6ee5ff8 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  468.783 128.463 936.166 / -0.002 -2.800e-08 6.203e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  468.783 128.463 814.166 / -0.002 -2.800e-08 -0.094> #<bodyset-link #X6fe1bf0 LLEG_LINK2  468.78 127.529 804.21 / 0.127 -0.941 -0.159> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.26 106.121 583.343 / -0.689 1.424 -0.693> #<bodyset-link #X1316f038 LLEG_LINK4  399.69 102.943 540.555 / -0.009 0.072 -0.094> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.811 99.222 500.832 / -0.009 0.072 -0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(348.495 74.2414 1218.11) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.616 -99.059 0.416 / 8.684e-07 2.833e-07 -1.743e-07> #<cascaded-coords #X12422518 :lleg-end-coords  389.667 99.257 401.088 / -0.009 0.072 -0.0>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  366.914 -43.649 936.166 / 8.925e-07 -2.800e-08 -2.499e-14> #<bodyset-link #X9501ce8 RLEG_LINK1  366.914 -43.649 814.166 / 8.925e-07 -2.800e-08 -0.077> #<bodyset-link #X6f14d58 RLEG_LINK2  366.914 -44.423 804.196 / -0.042 0.498 -0.088> #<bodyset-link #X6f38680 RLEG_LINK3  184.775 -70.236 471.692 / -0.043 0.504 -0.089> #<bodyset-link #X130e0d78 RLEG_LINK4  0.616 -95.963 140.296 / 8.684e-07 2.833e-07 -0.077> #<bodyset-link #X12a84e10 RLEG_LINK5  0.616 -99.059 100.416 / 8.684e-07 2.833e-07 -1.743e-07>) (#<bodyset-link #X1258dac0 LLEG_LINK0  468.783 128.463 936.166 / -0.002 -2.800e-08 6.203e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  468.783 128.463 814.166 / -0.002 -2.800e-08 -0.094> #<bodyset-link #X6fe1bf0 LLEG_LINK2  468.78 127.529 804.21 / 0.127 -0.941 -0.159> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.26 106.121 583.343 / -0.689 1.424 -0.693> #<bodyset-link #X1316f038 LLEG_LINK4  399.69 102.943 540.555 / -0.009 0.072 -0.094> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.811 99.222 500.832 / -0.009 0.072 -0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(348.495 74.2414 1218.11) :target-centroid-pos #f(348.495 74.2414 1218.11) :fix-limbs-target-coords (#<coordinates #X2843b128  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.860563 0.509344 -2.800114e-08 417.848) (-0.509344 0.860563 -8.218197e-19 42.4071) (2.409675e-08 1.426220e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint402872736) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(9.23251 3.13762 0.0 0.0 0.0 -6.18832) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.877479e-25 0.0) (0.0 1.0 0.0 0.0) (-6.877479e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.449858e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (2.449858e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.877479e-25 0.0) (0.0 1.0 0.0 0.0) (-6.877479e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.449858e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (2.449858e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(348.495 74.2414 1218.11) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.877479e-25 0.0) (0.0 1.0 0.0 0.0) (-6.877479e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.449858e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (2.449858e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(348.495 74.2414 1218.11) :target-centroid-pos #f(348.495 74.2414 1218.11) :fix-limbs-target-coords (list #<coordinates #X2843b128  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-47-16-69-93-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-47-16-69-93-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-18.0039 -8.26434 -40.8319)/(45.3838/1)
;; dif-rot : #f(3.332415e-16 1.191907e-12 9.164651e-14)/(1.195425e-12/0.017453)
;; dif-pos : #f(3.17603 5.45577 -2.99215)/(6.9861/1)
;; dif-rot : #f(-0.000114 -0.007401 -0.004688)/(0.008762/0.017453)
;; cog-dif : #f(-4.19413 1.52783)/(4.46375/5.0)
;;  coords : #<coordinates #X1325f8e0  430.599 67.221 -91.834 / -0.19 -2.750e-08 5.298e-09>
;;  angles : (#f(11.418 3.88923 0.0 0.0 0.0 -7.63397) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X289b6f60  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.004 -91.736 40.832 / 1.693e-10 -1.192e-12 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  396.886 94.529 403.146 / 0.005 0.007 0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  430.599 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  411.678 -30.973 936.166 / 2.696e-09 -2.800e-08 -7.467e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  411.678 -30.973 814.166 / 2.696e-09 -2.800e-08 -0.09> #<bodyset-link #X6f14d58 RLEG_LINK2  411.678 -31.872 804.207 / -0.031 0.327 -0.095> #<bodyset-link #X6f38680 RLEG_LINK3  288.952 -64.194 446.026 / -0.091 0.79 -0.128> #<bodyset-link #X130e0d78 RLEG_LINK4  18.004 -88.141 180.67 / 1.693e-10 -1.192e-12 -0.09> #<bodyset-link #X12a84e10 RLEG_LINK5  18.004 -91.736 140.832 / 1.693e-10 -1.192e-12 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  430.599 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  449.52 165.415 936.166 / 0.006 -2.800e-08 -1.783e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  449.52 165.415 814.166 / 0.006 -2.800e-08 -0.223> #<bodyset-link #X6fe1bf0 LLEG_LINK2  449.534 163.202 804.414 / 0.346 -0.973 -0.404> #<bodyset-link #X6f7a6c0 LLEG_LINK3  771.796 120.603 607.609 / -0.883 1.287 -0.909> #<bodyset-link #X1316f038 LLEG_LINK4  397.873 103.371 542.151 / 0.005 0.007 -0.223> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.626 94.519 503.143 / 0.005 0.007 0.0>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.004 -91.736 40.832 / 1.693e-10 -1.192e-12 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  396.886 94.529 403.146 / 0.005 0.007 0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  430.599 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  411.678 -30.973 936.166 / 2.696e-09 -2.800e-08 -7.467e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  411.678 -30.973 814.166 / 2.696e-09 -2.800e-08 -0.09> #<bodyset-link #X6f14d58 RLEG_LINK2  411.678 -31.872 804.207 / -0.031 0.327 -0.095> #<bodyset-link #X6f38680 RLEG_LINK3  288.952 -64.194 446.026 / -0.091 0.79 -0.128> #<bodyset-link #X130e0d78 RLEG_LINK4  18.004 -88.141 180.67 / 1.693e-10 -1.192e-12 -0.09> #<bodyset-link #X12a84e10 RLEG_LINK5  18.004 -91.736 140.832 / 1.693e-10 -1.192e-12 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  430.599 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  449.52 165.415 936.166 / 0.006 -2.800e-08 -1.783e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  449.52 165.415 814.166 / 0.006 -2.800e-08 -0.223> #<bodyset-link #X6fe1bf0 LLEG_LINK2  449.534 163.202 804.414 / 0.346 -0.973 -0.404> #<bodyset-link #X6f7a6c0 LLEG_LINK3  771.796 120.603 607.609 / -0.883 1.287 -0.909> #<bodyset-link #X1316f038 LLEG_LINK4  397.873 103.371 542.151 / 0.005 0.007 -0.223> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.626 94.519 503.143 / 0.005 0.007 0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(351.235 75.6114 1218.19) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  430.599 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.004 -91.736 40.832 / 1.693e-10 -1.192e-12 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  396.886 94.529 403.146 / 0.005 0.007 0.0>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  411.678 -30.973 936.166 / 2.696e-09 -2.800e-08 -7.467e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  411.678 -30.973 814.166 / 2.696e-09 -2.800e-08 -0.09> #<bodyset-link #X6f14d58 RLEG_LINK2  411.678 -31.872 804.207 / -0.031 0.327 -0.095> #<bodyset-link #X6f38680 RLEG_LINK3  288.952 -64.194 446.026 / -0.091 0.79 -0.128> #<bodyset-link #X130e0d78 RLEG_LINK4  18.004 -88.141 180.67 / 1.693e-10 -1.192e-12 -0.09> #<bodyset-link #X12a84e10 RLEG_LINK5  18.004 -91.736 140.832 / 1.693e-10 -1.192e-12 5.588e-10>) (#<bodyset-link #X1258dac0 LLEG_LINK0  449.52 165.415 936.166 / 0.006 -2.800e-08 -1.783e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  449.52 165.415 814.166 / 0.006 -2.800e-08 -0.223> #<bodyset-link #X6fe1bf0 LLEG_LINK2  449.534 163.202 804.414 / 0.346 -0.973 -0.404> #<bodyset-link #X6f7a6c0 LLEG_LINK3  771.796 120.603 607.609 / -0.883 1.287 -0.909> #<bodyset-link #X1316f038 LLEG_LINK4  397.873 103.371 542.151 / 0.005 0.007 -0.223> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.626 94.519 503.143 / 0.005 0.007 0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(351.235 75.6114 1218.19) :target-centroid-pos #f(351.235 75.6114 1218.19) :fix-limbs-target-coords (#<coordinates #X289b6f60  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981937 0.189207 -2.800114e-08 430.599) (-0.189207 0.981937 -8.218217e-19 67.2209) (2.749536e-08 5.298006e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint401969248) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(11.418 3.88923 0.0 0.0 0.0 -7.63397) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.732553e-29 0.0) (0.0 1.0 0.0 0.0) (-6.732553e-29 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -8.673617e-19 3.723769e-19 5.684342e-14) (8.673617e-19 1.0 1.614927e-37 0.0) (-3.723769e-19 1.614927e-37 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.732553e-29 0.0) (0.0 1.0 0.0 0.0) (-6.732553e-29 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -8.673617e-19 3.723769e-19 5.684342e-14) (8.673617e-19 1.0 1.614927e-37 0.0) (-3.723769e-19 1.614927e-37 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(351.235 75.6114 1218.19) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.732553e-29 0.0) (0.0 1.0 0.0 0.0) (-6.732553e-29 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -8.673617e-19 3.723769e-19 5.684342e-14) (8.673617e-19 1.0 1.614927e-37 0.0) (-3.723769e-19 1.614927e-37 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(351.235 75.6114 1218.19) :target-centroid-pos #f(351.235 75.6114 1218.19) :fix-limbs-target-coords (list #<coordinates #X289b6f60  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-47-55-91-02-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-47-55-91-02-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-0.000247 -3.708954e-05 -0.000449)/(0.000514/1)
;; dif-rot : #f(-1.386034e-16 -1.100851e-16 2.421756e-16)/(2.999645e-16/0.017453)
;; dif-pos : #f(13.5283 -0.002578 -0.001159)/(13.5283/1)
;; dif-rot : #f(-8.983575e-06 -0.096545 0.007622)/(0.096846/0.017453)
;; cog-dif : #f(0.114047 -0.001215)/(0.114053/5.0)
;;  coords : #<coordinates #X1325f8e0  420.873 41.843 -91.834 / -0.593 -2.323e-08 1.564e-08>
;;  angles : (#f(13.5395 4.61885 0.0 0.0 0.0 -9.03733) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X28f0b360  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.0 -100.0 0.0 / 1.694e-10 1.108e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  386.549 100.105 401.437 / -0.008 0.097 -0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  420.873 41.843 926.666 / -0.593 -2.323e-08 1.564e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  365.018 -41.103 936.166 / 2.479e-09 -2.800e-08 -6.858e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.018 -41.103 814.166 / 2.479e-09 -2.800e-08 -0.082> #<bodyset-link #X6f14d58 RLEG_LINK2  365.018 -41.925 804.2 / -0.044 0.493 -0.093> #<bodyset-link #X6f38680 RLEG_LINK3  184.432 -69.405 470.983 / -0.046 0.505 -0.094> #<bodyset-link #X130e0d78 RLEG_LINK4  0.0 -96.712 139.865 / 1.694e-10 1.108e-16 -0.082> #<bodyset-link #X12a84e10 RLEG_LINK5  0.0 -100.0 100.0 / 1.694e-10 1.108e-16 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  420.873 41.843 926.666 / -0.593 -2.323e-08 1.564e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  476.729 124.79 936.166 / -9.424e-07 -2.800e-08 2.639e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  476.729 124.79 814.166 / -9.424e-07 -2.800e-08 -0.079> #<bodyset-link #X6fe1bf0 LLEG_LINK2  476.729 124.003 804.197 / 0.103 -0.914 -0.129> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.576 105.838 574.07 / -0.727 1.453 -0.73> #<bodyset-link #X1316f038 LLEG_LINK4  400.057 103.201 540.66 / -0.008 0.097 -0.079> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.189 100.068 500.971 / -0.008 0.097 -0.0>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.0 -100.0 0.0 / 1.694e-10 1.108e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  386.549 100.105 401.437 / -0.008 0.097 -0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  420.873 41.843 926.666 / -0.593 -2.323e-08 1.564e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  365.018 -41.103 936.166 / 2.479e-09 -2.800e-08 -6.858e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.018 -41.103 814.166 / 2.479e-09 -2.800e-08 -0.082> #<bodyset-link #X6f14d58 RLEG_LINK2  365.018 -41.925 804.2 / -0.044 0.493 -0.093> #<bodyset-link #X6f38680 RLEG_LINK3  184.432 -69.405 470.983 / -0.046 0.505 -0.094> #<bodyset-link #X130e0d78 RLEG_LINK4  0.0 -96.712 139.865 / 1.694e-10 1.108e-16 -0.082> #<bodyset-link #X12a84e10 RLEG_LINK5  0.0 -100.0 100.0 / 1.694e-10 1.108e-16 5.588e-10>) (#<bodyset-link #X6ee5ff8 BODY  420.873 41.843 926.666 / -0.593 -2.323e-08 1.564e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  476.729 124.79 936.166 / -9.424e-07 -2.800e-08 2.639e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  476.729 124.79 814.166 / -9.424e-07 -2.800e-08 -0.079> #<bodyset-link #X6fe1bf0 LLEG_LINK2  476.729 124.003 804.197 / 0.103 -0.914 -0.129> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.576 105.838 574.07 / -0.727 1.453 -0.73> #<bodyset-link #X1316f038 LLEG_LINK4  400.057 103.201 540.66 / -0.008 0.097 -0.079> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.189 100.068 500.971 / -0.008 0.097 -0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(353.895 76.9414 1218.27) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  420.873 41.843 926.666 / -0.593 -2.323e-08 1.564e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.0 -100.0 0.0 / 1.694e-10 1.108e-16 5.588e-10> #<cascaded-coords #X12422518 :lleg-end-coords  386.549 100.105 401.437 / -0.008 0.097 -0.0>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  365.018 -41.103 936.166 / 2.479e-09 -2.800e-08 -6.858e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  365.018 -41.103 814.166 / 2.479e-09 -2.800e-08 -0.082> #<bodyset-link #X6f14d58 RLEG_LINK2  365.018 -41.925 804.2 / -0.044 0.493 -0.093> #<bodyset-link #X6f38680 RLEG_LINK3  184.432 -69.405 470.983 / -0.046 0.505 -0.094> #<bodyset-link #X130e0d78 RLEG_LINK4  0.0 -96.712 139.865 / 1.694e-10 1.108e-16 -0.082> #<bodyset-link #X12a84e10 RLEG_LINK5  0.0 -100.0 100.0 / 1.694e-10 1.108e-16 5.588e-10>) (#<bodyset-link #X1258dac0 LLEG_LINK0  476.729 124.79 936.166 / -9.424e-07 -2.800e-08 2.639e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  476.729 124.79 814.166 / -9.424e-07 -2.800e-08 -0.079> #<bodyset-link #X6fe1bf0 LLEG_LINK2  476.729 124.003 804.197 / 0.103 -0.914 -0.129> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.576 105.838 574.07 / -0.727 1.453 -0.73> #<bodyset-link #X1316f038 LLEG_LINK4  400.057 103.201 540.66 / -0.008 0.097 -0.079> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.189 100.068 500.971 / -0.008 0.097 -0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(353.895 76.9414 1218.27) :target-centroid-pos #f(353.895 76.9414 1218.27) :fix-limbs-target-coords (#<coordinates #X28f0b360  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.829468 0.558554 -2.800114e-08 420.873) (-0.558554 0.829468 -8.218221e-19 41.8434) (2.322606e-08 1.564015e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint677406160) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(13.5395 4.61885 0.0 0.0 0.0 -9.03733) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.696302e-33 0.0) (0.0 1.0 0.0 0.0) (-2.696302e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.089212e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (5.089212e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.696302e-33 0.0) (0.0 1.0 0.0 0.0) (-2.696302e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.089212e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (5.089212e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(353.895 76.9414 1218.27) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.696302e-33 0.0) (0.0 1.0 0.0 0.0) (-2.696302e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.089212e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (5.089212e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(353.895 76.9414 1218.27) :target-centroid-pos #f(353.895 76.9414 1218.27) :fix-limbs-target-coords (list #<coordinates #X28f0b360  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-47-93-25-88-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-47-93-25-88-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-2.94197 -0.76134 -4.0218)/(5.0408/1)
;; dif-rot : #f(1.148176e-09 -4.914348e-09 -1.990619e-08)/(2.053596e-08/0.017453)
;; dif-pos : #f(13.9781 0.573331 -0.055125)/(13.9899/1)
;; dif-rot : #f(0.000135 -0.098172 0.013579)/(0.099107/0.017453)
;; cog-dif : #f(-0.376545 0.168874)/(0.41268/5.0)
;;  coords : #<coordinates #X1325f8e0  426.391 46.643 -91.834 / -0.539 -2.403e-08 1.438e-08>
;;  angles : (#f(15.593 5.32507 0.0 0.0 0.0 -10.3957) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2d5715d0  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.942 -99.239 4.022 / 2.008e-08 4.914e-09 -5.894e-10> #<cascaded-coords #X12422518 :lleg-end-coords  386.102 99.616 401.557 / -0.014 0.098 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  426.391 46.643 926.666 / -0.539 -2.403e-08 1.438e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  375.03 -39.159 936.166 / 2.286e-08 -2.800e-08 -6.393e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  375.03 -39.159 814.166 / 2.286e-08 -2.800e-08 -0.084> #<bodyset-link #X6f14d58 RLEG_LINK2  375.03 -40.002 804.202 / -0.047 0.507 -0.097> #<bodyset-link #X6f38680 RLEG_LINK3  189.82 -67.974 473.574 / -0.048 0.512 -0.097> #<bodyset-link #X130e0d78 RLEG_LINK4  2.942 -95.867 143.879 / 2.008e-08 4.914e-09 -0.084> #<bodyset-link #X12a84e10 RLEG_LINK5  2.942 -99.239 104.022 / 2.008e-08 4.914e-09 -5.894e-10>) (#<bodyset-link #X6ee5ff8 BODY  426.391 46.643 926.666 / -0.539 -2.403e-08 1.438e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  477.752 132.446 936.166 / -0.003 -2.800e-08 8.970e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  477.752 132.446 814.166 / -0.003 -2.800e-08 -0.105> #<bodyset-link #X6fe1bf0 LLEG_LINK2  477.748 131.393 804.222 / 0.132 -0.906 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.45 105.982 573.282 / -0.885 1.435 -0.887> #<bodyset-link #X1316f038 LLEG_LINK4  399.859 103.741 540.659 / -0.014 0.098 -0.106> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.904 99.563 501.075 / -0.014 0.098 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.942 -99.239 4.022 / 2.008e-08 4.914e-09 -5.894e-10> #<cascaded-coords #X12422518 :lleg-end-coords  386.102 99.616 401.557 / -0.014 0.098 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  426.391 46.643 926.666 / -0.539 -2.403e-08 1.438e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  375.03 -39.159 936.166 / 2.286e-08 -2.800e-08 -6.393e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  375.03 -39.159 814.166 / 2.286e-08 -2.800e-08 -0.084> #<bodyset-link #X6f14d58 RLEG_LINK2  375.03 -40.002 804.202 / -0.047 0.507 -0.097> #<bodyset-link #X6f38680 RLEG_LINK3  189.82 -67.974 473.574 / -0.048 0.512 -0.097> #<bodyset-link #X130e0d78 RLEG_LINK4  2.942 -95.867 143.879 / 2.008e-08 4.914e-09 -0.084> #<bodyset-link #X12a84e10 RLEG_LINK5  2.942 -99.239 104.022 / 2.008e-08 4.914e-09 -5.894e-10>) (#<bodyset-link #X6ee5ff8 BODY  426.391 46.643 926.666 / -0.539 -2.403e-08 1.438e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  477.752 132.446 936.166 / -0.003 -2.800e-08 8.970e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  477.752 132.446 814.166 / -0.003 -2.800e-08 -0.105> #<bodyset-link #X6fe1bf0 LLEG_LINK2  477.748 131.393 804.222 / 0.132 -0.906 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.45 105.982 573.282 / -0.885 1.435 -0.887> #<bodyset-link #X1316f038 LLEG_LINK4  399.859 103.741 540.659 / -0.014 0.098 -0.106> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.904 99.563 501.075 / -0.014 0.098 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(356.47 78.2286 1218.35) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  426.391 46.643 926.666 / -0.539 -2.403e-08 1.438e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.942 -99.239 4.022 / 2.008e-08 4.914e-09 -5.894e-10> #<cascaded-coords #X12422518 :lleg-end-coords  386.102 99.616 401.557 / -0.014 0.098 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  375.03 -39.159 936.166 / 2.286e-08 -2.800e-08 -6.393e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  375.03 -39.159 814.166 / 2.286e-08 -2.800e-08 -0.084> #<bodyset-link #X6f14d58 RLEG_LINK2  375.03 -40.002 804.202 / -0.047 0.507 -0.097> #<bodyset-link #X6f38680 RLEG_LINK3  189.82 -67.974 473.574 / -0.048 0.512 -0.097> #<bodyset-link #X130e0d78 RLEG_LINK4  2.942 -95.867 143.879 / 2.008e-08 4.914e-09 -0.084> #<bodyset-link #X12a84e10 RLEG_LINK5  2.942 -99.239 104.022 / 2.008e-08 4.914e-09 -5.894e-10>) (#<bodyset-link #X1258dac0 LLEG_LINK0  477.752 132.446 936.166 / -0.003 -2.800e-08 8.970e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  477.752 132.446 814.166 / -0.003 -2.800e-08 -0.105> #<bodyset-link #X6fe1bf0 LLEG_LINK2  477.748 131.393 804.222 / 0.132 -0.906 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.45 105.982 573.282 / -0.885 1.435 -0.887> #<bodyset-link #X1316f038 LLEG_LINK4  399.859 103.741 540.659 / -0.014 0.098 -0.106> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.904 99.563 501.075 / -0.014 0.098 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(356.47 78.2286 1218.35) :target-centroid-pos #f(356.47 78.2286 1218.35) :fix-limbs-target-coords (#<coordinates #X2d5715d0  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.858025 0.513609 -2.800114e-08 426.391) (-0.513609 0.858025 -8.218238e-19 46.6432) (2.402567e-08 1.438163e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint672782296) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(15.593 5.32507 0.0 0.0 0.0 -10.3957) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.387091e-25 -4.440892e-16) (0.0 1.0 0.0 0.0) (1.387091e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.649597e-19 0.0) (0.0 1.0 0.0 0.0) (1.649597e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.387091e-25 -4.440892e-16) (0.0 1.0 0.0 0.0) (1.387091e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.649597e-19 0.0) (0.0 1.0 0.0 0.0) (1.649597e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(356.47 78.2286 1218.35) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.387091e-25 -4.440892e-16) (0.0 1.0 0.0 0.0) (1.387091e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.649597e-19 0.0) (0.0 1.0 0.0 0.0) (1.649597e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(356.47 78.2286 1218.35) :target-centroid-pos #f(356.47 78.2286 1218.35) :fix-limbs-target-coords (list #<coordinates #X2d5715d0  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-48-32-50-09-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-48-32-50-09-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(44.3 -3.06915 -41.7855)/(60.9749/1)
;; dif-rot : #f(4.416954e-11 -0.118576 0.012183)/(0.1192/0.017453)
;; dif-pos : #f(5.44167 0.723491 -0.191172)/(5.49288/1)
;; dif-rot : #f(3.375501e-06 -0.035199 0.007537)/(0.035997/0.017453)
;; cog-dif : #f(0.794269 0.204686)/(0.82022/5.0)
;;  coords : #<coordinates #X1325f8e0  437.973 69.327 -91.834 / -0.238 -2.721e-08 6.607e-09>
;;  angles : (#f(17.574 6.00638 0.0 0.0 0.0 -11.7061) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2d97a468  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -39.005 -96.423 46.73 / -0.012 0.119 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  394.577 99.317 400.514 / -0.008 0.035 -0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  437.973 69.327 926.666 / -0.238 -2.721e-08 6.607e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  414.378 -27.85 936.166 / 3.051e-09 -2.800e-08 -8.460e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  414.378 -27.85 814.166 / 3.051e-09 -2.800e-08 -0.102> #<bodyset-link #X6f14d58 RLEG_LINK2  414.378 -28.872 804.219 / -0.072 0.609 -0.125> #<bodyset-link #X6f38680 RLEG_LINK3  195.979 -60.654 494.878 / -0.072 0.609 -0.125> #<bodyset-link #X130e0d78 RLEG_LINK4  -22.419 -92.436 185.536 / -0.012 0.119 -0.103> #<bodyset-link #X12a84e10 RLEG_LINK5  -27.176 -96.495 146.028 / -0.012 0.119 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  437.973 69.327 926.666 / -0.238 -2.721e-08 6.607e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  461.567 166.504 936.166 / 2.480e-06 -2.800e-08 -6.945e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  461.568 166.504 814.166 / 2.480e-06 -2.800e-08 -0.211> #<bodyset-link #X6fe1bf0 LLEG_LINK2  461.568 164.409 804.388 / 0.297 -0.94 -0.363> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.317 119.506 594.757 / -0.948 1.313 -0.964> #<bodyset-link #X1316f038 LLEG_LINK4  399.536 107.677 539.539 / -0.008 0.035 -0.211> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.096 99.305 500.452 / -0.008 0.035 -0.0>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -39.005 -96.423 46.73 / -0.012 0.119 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  394.577 99.317 400.514 / -0.008 0.035 -0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  437.973 69.327 926.666 / -0.238 -2.721e-08 6.607e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  414.378 -27.85 936.166 / 3.051e-09 -2.800e-08 -8.460e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  414.378 -27.85 814.166 / 3.051e-09 -2.800e-08 -0.102> #<bodyset-link #X6f14d58 RLEG_LINK2  414.378 -28.872 804.219 / -0.072 0.609 -0.125> #<bodyset-link #X6f38680 RLEG_LINK3  195.979 -60.654 494.878 / -0.072 0.609 -0.125> #<bodyset-link #X130e0d78 RLEG_LINK4  -22.419 -92.436 185.536 / -0.012 0.119 -0.103> #<bodyset-link #X12a84e10 RLEG_LINK5  -27.176 -96.495 146.028 / -0.012 0.119 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  437.973 69.327 926.666 / -0.238 -2.721e-08 6.607e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  461.567 166.504 936.166 / 2.480e-06 -2.800e-08 -6.945e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  461.568 166.504 814.166 / 2.480e-06 -2.800e-08 -0.211> #<bodyset-link #X6fe1bf0 LLEG_LINK2  461.568 164.409 804.388 / 0.297 -0.94 -0.363> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.317 119.506 594.757 / -0.948 1.313 -0.964> #<bodyset-link #X1316f038 LLEG_LINK4  399.536 107.677 539.539 / -0.008 0.035 -0.211> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.096 99.305 500.452 / -0.008 0.035 -0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(358.954 79.4705 1218.43) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  437.973 69.327 926.666 / -0.238 -2.721e-08 6.607e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -39.005 -96.423 46.73 / -0.012 0.119 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  394.577 99.317 400.514 / -0.008 0.035 -0.0>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  414.378 -27.85 936.166 / 3.051e-09 -2.800e-08 -8.460e-17> #<bodyset-link #X9501ce8 RLEG_LINK1  414.378 -27.85 814.166 / 3.051e-09 -2.800e-08 -0.102> #<bodyset-link #X6f14d58 RLEG_LINK2  414.378 -28.872 804.219 / -0.072 0.609 -0.125> #<bodyset-link #X6f38680 RLEG_LINK3  195.979 -60.654 494.878 / -0.072 0.609 -0.125> #<bodyset-link #X130e0d78 RLEG_LINK4  -22.419 -92.436 185.536 / -0.012 0.119 -0.103> #<bodyset-link #X12a84e10 RLEG_LINK5  -27.176 -96.495 146.028 / -0.012 0.119 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  461.567 166.504 936.166 / 2.480e-06 -2.800e-08 -6.945e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  461.568 166.504 814.166 / 2.480e-06 -2.800e-08 -0.211> #<bodyset-link #X6fe1bf0 LLEG_LINK2  461.568 164.409 804.388 / 0.297 -0.94 -0.363> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.317 119.506 594.757 / -0.948 1.313 -0.964> #<bodyset-link #X1316f038 LLEG_LINK4  399.536 107.677 539.539 / -0.008 0.035 -0.211> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.096 99.305 500.452 / -0.008 0.035 -0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(358.954 79.4705 1218.43) :target-centroid-pos #f(358.954 79.4705 1218.43) :fix-limbs-target-coords (#<coordinates #X2d97a468  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.971766 0.235948 -2.800114e-08 437.973) (-0.235948 0.971766 -8.218213e-19 69.327) (2.721055e-08 6.606804e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint630555464) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(17.574 6.00638 0.0 0.0 0.0 -11.7061) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.616292e-18 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (4.616292e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.196595e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-1.196595e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.616292e-18 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (4.616292e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.196595e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-1.196595e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(358.954 79.4705 1218.43) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.616292e-18 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (4.616292e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.196595e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-1.196595e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(358.954 79.4705 1218.43) :target-centroid-pos #f(358.954 79.4705 1218.43) :fix-limbs-target-coords (list #<coordinates #X2d97a468  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-48-70-81-85-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-48-70-81-85-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(44.4702 -11.0767 -51.9361)/(69.2651/1)
;; dif-rot : #f(-0.000497 0.000105 0.000955)/(0.001082/0.017453)
;; dif-pos : #f(12.6064 0.694241 0.016229)/(12.6255/1)
;; dif-rot : #f(-3.861040e-05 -0.088448 0.017375)/(0.090139/0.017453)
;; cog-dif : #f(-0.524935 0.067898)/(0.529308/5.0)
;;  coords : #<coordinates #X1325f8e0  439.866 59.927 -91.834 / -0.382 -2.598e-08 1.044e-08>
;;  angles : (#f(19.4779 6.66115 0.0 0.0 0.0 -12.9655) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2ddc6108  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -44.465 -88.907 51.937 / -0.001 -0.0 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  387.445 99.525 401.229 / -0.017 0.088 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  439.866 59.927 926.666 / -0.382 -2.598e-08 1.044e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  402.583 -32.863 936.166 / -0.001 -2.800e-08 2.699e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  402.583 -32.863 814.166 / -0.001 -2.800e-08 -0.085> #<bodyset-link #X6f14d58 RLEG_LINK2  402.583 -33.714 804.203 / -0.062 0.624 -0.105> #<bodyset-link #X6f38680 RLEG_LINK3  179.86 -59.685 497.413 / -0.063 0.629 -0.105> #<bodyset-link #X130e0d78 RLEG_LINK4  -44.477 -85.554 191.792 / -0.001 -0.0 -0.085> #<bodyset-link #X12a84e10 RLEG_LINK5  -44.476 -88.956 151.937 / -0.001 -0.0 0.0>) (#<bodyset-link #X6ee5ff8 BODY  439.866 59.927 926.666 / -0.382 -2.598e-08 1.044e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  477.149 152.717 936.166 / -0.002 -2.800e-08 6.410e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  477.149 152.717 814.166 / -0.002 -2.800e-08 -0.169> #<bodyset-link #X6fe1bf0 LLEG_LINK2  477.145 151.035 804.309 / 0.213 -0.896 -0.273> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.162 111.36 575.803 / -1.056 1.377 -1.061> #<bodyset-link #X1316f038 LLEG_LINK4  399.878 106.136 540.11 / -0.017 0.088 -0.17> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.278 99.444 500.838 / -0.017 0.088 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -44.465 -88.907 51.937 / -0.001 -0.0 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  387.445 99.525 401.229 / -0.017 0.088 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  439.866 59.927 926.666 / -0.382 -2.598e-08 1.044e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  402.583 -32.863 936.166 / -0.001 -2.800e-08 2.699e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  402.583 -32.863 814.166 / -0.001 -2.800e-08 -0.085> #<bodyset-link #X6f14d58 RLEG_LINK2  402.583 -33.714 804.203 / -0.062 0.624 -0.105> #<bodyset-link #X6f38680 RLEG_LINK3  179.86 -59.685 497.413 / -0.063 0.629 -0.105> #<bodyset-link #X130e0d78 RLEG_LINK4  -44.477 -85.554 191.792 / -0.001 -0.0 -0.085> #<bodyset-link #X12a84e10 RLEG_LINK5  -44.476 -88.956 151.937 / -0.001 -0.0 0.0>) (#<bodyset-link #X6ee5ff8 BODY  439.866 59.927 926.666 / -0.382 -2.598e-08 1.044e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  477.149 152.717 936.166 / -0.002 -2.800e-08 6.410e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  477.149 152.717 814.166 / -0.002 -2.800e-08 -0.169> #<bodyset-link #X6fe1bf0 LLEG_LINK2  477.145 151.035 804.309 / 0.213 -0.896 -0.273> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.162 111.36 575.803 / -1.056 1.377 -1.061> #<bodyset-link #X1316f038 LLEG_LINK4  399.878 106.136 540.11 / -0.017 0.088 -0.17> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.278 99.444 500.838 / -0.017 0.088 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(361.341 80.664 1218.52) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  439.866 59.927 926.666 / -0.382 -2.598e-08 1.044e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -44.465 -88.907 51.937 / -0.001 -0.0 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  387.445 99.525 401.229 / -0.017 0.088 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  402.583 -32.863 936.166 / -0.001 -2.800e-08 2.699e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  402.583 -32.863 814.166 / -0.001 -2.800e-08 -0.085> #<bodyset-link #X6f14d58 RLEG_LINK2  402.583 -33.714 804.203 / -0.062 0.624 -0.105> #<bodyset-link #X6f38680 RLEG_LINK3  179.86 -59.685 497.413 / -0.063 0.629 -0.105> #<bodyset-link #X130e0d78 RLEG_LINK4  -44.477 -85.554 191.792 / -0.001 -0.0 -0.085> #<bodyset-link #X12a84e10 RLEG_LINK5  -44.476 -88.956 151.937 / -0.001 -0.0 0.0>) (#<bodyset-link #X1258dac0 LLEG_LINK0  477.149 152.717 936.166 / -0.002 -2.800e-08 6.410e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  477.149 152.717 814.166 / -0.002 -2.800e-08 -0.169> #<bodyset-link #X6fe1bf0 LLEG_LINK2  477.145 151.035 804.309 / 0.213 -0.896 -0.273> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.162 111.36 575.803 / -1.056 1.377 -1.061> #<bodyset-link #X1316f038 LLEG_LINK4  399.878 106.136 540.11 / -0.017 0.088 -0.17> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.278 99.444 500.838 / -0.017 0.088 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(361.341 80.664 1218.52) :target-centroid-pos #f(361.341 80.664 1218.52) :fix-limbs-target-coords (#<coordinates #X2ddc6108  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.9279 0.372829 -2.800114e-08 439.866) (-0.372829 0.9279 -8.218213e-19 59.9268) (2.598226e-08 1.043964e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint342625912) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.4779 6.66115 0.0 0.0 0.0 -12.9655) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.723324e-21 -7.105427e-15) (0.0 1.0 0.0 0.0) (-6.723324e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.289696e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-6.289696e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.723324e-21 -7.105427e-15) (0.0 1.0 0.0 0.0) (-6.723324e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.289696e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-6.289696e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(361.341 80.664 1218.52) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.723324e-21 -7.105427e-15) (0.0 1.0 0.0 0.0) (-6.723324e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.289696e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-6.289696e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(361.341 80.664 1218.52) :target-centroid-pos #f(361.341 80.664 1218.52) :fix-limbs-target-coords (list #<coordinates #X2ddc6108  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-49-10-42-84-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-49-10-42-84-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(84.9211 -5.88268 -54.2157)/(100.923/1)
;; dif-rot : #f(-0.000321 -0.199075 0.02459)/(0.200589/0.017453)
;; dif-pos : #f(7.32561 0.698727 -0.190142)/(7.36131/1)
;; dif-rot : #f(-0.000397 -0.048365 0.014322)/(0.050443/0.017453)
;; cog-dif : #f(1.51043 -0.044004)/(1.51107/5.0)
;;  coords : #<coordinates #X1325f8e0  443.868 72.754 -91.834 / -0.229 -2.727e-08 6.366e-09>
;;  angles : (#f(21.2996 7.28765 0.0 0.0 0.0 -14.1705) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2e2cc7a8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -72.354 -92.197 69.925 / -0.025 0.199 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  392.697 99.406 400.675 / -0.014 0.048 5.075e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  443.868 72.754 926.666 / -0.229 -2.727e-08 6.366e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  421.135 -24.628 936.166 / -0.003 -2.800e-08 9.040e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  421.135 -24.628 814.166 / -0.003 -2.800e-08 -0.107> #<bodyset-link #X6f14d58 RLEG_LINK2  421.131 -25.695 804.224 / -0.086 0.655 -0.135> #<bodyset-link #X6f38680 RLEG_LINK3  188.26 -57.005 505.575 / -0.086 0.655 -0.135> #<bodyset-link #X130e0d78 RLEG_LINK4  -44.611 -88.314 206.927 / -0.025 0.199 -0.109> #<bodyset-link #X12a84e10 RLEG_LINK5  -52.58 -92.473 167.95 / -0.025 0.199 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  443.868 72.754 926.666 / -0.229 -2.727e-08 6.366e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  466.602 170.136 936.166 / -0.003 -2.800e-08 9.407e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  466.602 170.136 814.166 / -0.003 -2.800e-08 -0.223> #<bodyset-link #X6fe1bf0 LLEG_LINK2  466.594 167.927 804.413 / 0.298 -0.919 -0.373> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.093 118.231 589.61 / -1.021 1.311 -1.033> #<bodyset-link #X1316f038 LLEG_LINK4  399.544 108.151 539.522 / -0.014 0.048 -0.223> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.531 99.332 500.558 / -0.014 0.048 5.075e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -72.354 -92.197 69.925 / -0.025 0.199 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  392.697 99.406 400.675 / -0.014 0.048 5.075e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  443.868 72.754 926.666 / -0.229 -2.727e-08 6.366e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  421.135 -24.628 936.166 / -0.003 -2.800e-08 9.040e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  421.135 -24.628 814.166 / -0.003 -2.800e-08 -0.107> #<bodyset-link #X6f14d58 RLEG_LINK2  421.131 -25.695 804.224 / -0.086 0.655 -0.135> #<bodyset-link #X6f38680 RLEG_LINK3  188.26 -57.005 505.575 / -0.086 0.655 -0.135> #<bodyset-link #X130e0d78 RLEG_LINK4  -44.611 -88.314 206.927 / -0.025 0.199 -0.109> #<bodyset-link #X12a84e10 RLEG_LINK5  -52.58 -92.473 167.95 / -0.025 0.199 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  443.868 72.754 926.666 / -0.229 -2.727e-08 6.366e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  466.602 170.136 936.166 / -0.003 -2.800e-08 9.407e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  466.602 170.136 814.166 / -0.003 -2.800e-08 -0.223> #<bodyset-link #X6fe1bf0 LLEG_LINK2  466.594 167.927 804.413 / 0.298 -0.919 -0.373> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.093 118.231 589.61 / -1.021 1.311 -1.033> #<bodyset-link #X1316f038 LLEG_LINK4  399.544 108.151 539.522 / -0.014 0.048 -0.223> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.531 99.332 500.558 / -0.014 0.048 5.075e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(363.625 81.806 1218.62) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  443.868 72.754 926.666 / -0.229 -2.727e-08 6.366e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -72.354 -92.197 69.925 / -0.025 0.199 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  392.697 99.406 400.675 / -0.014 0.048 5.075e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  421.135 -24.628 936.166 / -0.003 -2.800e-08 9.040e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  421.135 -24.628 814.166 / -0.003 -2.800e-08 -0.107> #<bodyset-link #X6f14d58 RLEG_LINK2  421.131 -25.695 804.224 / -0.086 0.655 -0.135> #<bodyset-link #X6f38680 RLEG_LINK3  188.26 -57.005 505.575 / -0.086 0.655 -0.135> #<bodyset-link #X130e0d78 RLEG_LINK4  -44.611 -88.314 206.927 / -0.025 0.199 -0.109> #<bodyset-link #X12a84e10 RLEG_LINK5  -52.58 -92.473 167.95 / -0.025 0.199 -0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  466.602 170.136 936.166 / -0.003 -2.800e-08 9.407e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  466.602 170.136 814.166 / -0.003 -2.800e-08 -0.223> #<bodyset-link #X6fe1bf0 LLEG_LINK2  466.594 167.927 804.413 / 0.298 -0.919 -0.373> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.093 118.231 589.61 / -1.021 1.311 -1.033> #<bodyset-link #X1316f038 LLEG_LINK4  399.544 108.151 539.522 / -0.014 0.048 -0.223> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.531 99.332 500.558 / -0.014 0.048 5.075e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(363.625 81.806 1218.62) :target-centroid-pos #f(363.625 81.806 1218.62) :fix-limbs-target-coords (#<coordinates #X2e2cc7a8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.973817 0.227334 -2.800114e-08 443.868) (-0.227334 0.973817 -8.218230e-19 72.7542) (2.726798e-08 6.365609e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint336588112) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(21.2996 7.28765 0.0 0.0 0.0 -14.1705) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.248272e-17 -1.421085e-14) (0.0 1.0 0.0 0.0) (-1.248272e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.107072e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (1.107072e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.248272e-17 -1.421085e-14) (0.0 1.0 0.0 0.0) (-1.248272e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.107072e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (1.107072e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(363.625 81.806 1218.62) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.248272e-17 -1.421085e-14) (0.0 1.0 0.0 0.0) (-1.248272e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.107072e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (1.107072e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(363.625 81.806 1218.62) :target-centroid-pos #f(363.625 81.806 1218.62) :fix-limbs-target-coords (list #<coordinates #X2e2cc7a8  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-49-48-82-73-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-49-48-82-73-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-210.201 4.60178 -403.01)/(454.557/1)
;; dif-rot : #f(0.009597 -0.054476 -0.070302)/(0.089455/0.017453)
;; dif-pos : #f(8.95358 0.136711 -8.12558)/(12.0917/1)
;; dif-rot : #f(0.002312 0.002619 -0.06743)/(0.067521/0.017453)
;; cog-dif : #f(34.7251 1.28101)/(34.7487/5.0)
;;  coords : #<coordinates #X1325f8e0  368.145 40.947 -91.834 / -0.65 -2.229e-08 1.695e-08>
;;  angles : (#f(23.0335 7.88395 0.0 0.0 0.0 -15.3174) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2e7111a0  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  231.484 -85.253 390.922 / 0.07 0.055 -0.008> #<cascaded-coords #X12422518 :lleg-end-coords  391.068 99.278 408.234 / 0.067 -0.003 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  368.144 40.947 926.666 / -0.65 -2.229e-08 1.695e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  307.608 -38.648 936.166 / 0.077 -2.792e-08 -2.150e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  307.608 -38.648 814.166 / 0.077 -2.792e-08 -0.123> #<bodyset-link #X6f14d58 RLEG_LINK2  307.702 -39.869 804.242 / 0.24 -0.922 -0.204> #<bodyset-link #X6f38680 RLEG_LINK3  613.934 -44.111 579.288 / -0.676 1.392 -0.761> #<bodyset-link #X130e0d78 RLEG_LINK4  238.715 -79.059 530.408 / 0.07 0.055 -0.123> #<bodyset-link #X12a84e10 RLEG_LINK5  236.891 -84.104 490.769 / 0.07 0.055 -0.008>) (#<bodyset-link #X6ee5ff8 BODY  368.144 40.947 926.666 / -0.65 -2.229e-08 1.695e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  428.681 120.542 936.166 / 0.067 -2.794e-08 -1.883e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  428.681 120.542 814.166 / 0.067 -2.794e-08 -0.06> #<bodyset-link #X6fe1bf0 LLEG_LINK2  428.721 119.941 804.185 / 0.177 -1.067 -0.125> #<bodyset-link #X6f7a6c0 LLEG_LINK3  762.091 131.404 622.159 / -0.227 1.366 -0.3> #<bodyset-link #X1316f038 LLEG_LINK4  390.535 101.896 548.161 / 0.067 -0.003 -0.06> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.799 99.5 508.234 / 0.067 -0.003 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  231.484 -85.253 390.922 / 0.07 0.055 -0.008> #<cascaded-coords #X12422518 :lleg-end-coords  391.068 99.278 408.234 / 0.067 -0.003 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  368.144 40.947 926.666 / -0.65 -2.229e-08 1.695e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  307.608 -38.648 936.166 / 0.077 -2.792e-08 -2.150e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  307.608 -38.648 814.166 / 0.077 -2.792e-08 -0.123> #<bodyset-link #X6f14d58 RLEG_LINK2  307.702 -39.869 804.242 / 0.24 -0.922 -0.204> #<bodyset-link #X6f38680 RLEG_LINK3  613.934 -44.111 579.288 / -0.676 1.392 -0.761> #<bodyset-link #X130e0d78 RLEG_LINK4  238.715 -79.059 530.408 / 0.07 0.055 -0.123> #<bodyset-link #X12a84e10 RLEG_LINK5  236.891 -84.104 490.769 / 0.07 0.055 -0.008>) (#<bodyset-link #X6ee5ff8 BODY  368.144 40.947 926.666 / -0.65 -2.229e-08 1.695e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  428.681 120.542 936.166 / 0.067 -2.794e-08 -1.883e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  428.681 120.542 814.166 / 0.067 -2.794e-08 -0.06> #<bodyset-link #X6fe1bf0 LLEG_LINK2  428.721 119.941 804.185 / 0.177 -1.067 -0.125> #<bodyset-link #X6f7a6c0 LLEG_LINK3  762.091 131.404 622.159 / -0.227 1.366 -0.3> #<bodyset-link #X1316f038 LLEG_LINK4  390.535 101.896 548.161 / 0.067 -0.003 -0.06> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.799 99.5 508.234 / 0.067 -0.003 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(365.799 82.8929 1218.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  368.144 40.947 926.666 / -0.65 -2.229e-08 1.695e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  231.484 -85.253 390.922 / 0.07 0.055 -0.008> #<cascaded-coords #X12422518 :lleg-end-coords  391.068 99.278 408.234 / 0.067 -0.003 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  307.608 -38.648 936.166 / 0.077 -2.792e-08 -2.150e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  307.608 -38.648 814.166 / 0.077 -2.792e-08 -0.123> #<bodyset-link #X6f14d58 RLEG_LINK2  307.702 -39.869 804.242 / 0.24 -0.922 -0.204> #<bodyset-link #X6f38680 RLEG_LINK3  613.934 -44.111 579.288 / -0.676 1.392 -0.761> #<bodyset-link #X130e0d78 RLEG_LINK4  238.715 -79.059 530.408 / 0.07 0.055 -0.123> #<bodyset-link #X12a84e10 RLEG_LINK5  236.891 -84.104 490.769 / 0.07 0.055 -0.008>) (#<bodyset-link #X1258dac0 LLEG_LINK0  428.681 120.542 936.166 / 0.067 -2.794e-08 -1.883e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  428.681 120.542 814.166 / 0.067 -2.794e-08 -0.06> #<bodyset-link #X6fe1bf0 LLEG_LINK2  428.721 119.941 804.185 / 0.177 -1.067 -0.125> #<bodyset-link #X6f7a6c0 LLEG_LINK3  762.091 131.404 622.159 / -0.227 1.366 -0.3> #<bodyset-link #X1316f038 LLEG_LINK4  390.535 101.896 548.161 / 0.067 -0.003 -0.06> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.799 99.5 508.234 / 0.067 -0.003 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(365.799 82.8929 1218.71) :target-centroid-pos #f(365.799 82.8929 1218.71) :fix-limbs-target-coords (#<coordinates #X2e7111a0  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.795949 0.605363 -2.800114e-08 368.145) (-0.605363 0.795949 -8.218205e-19 40.947) (2.228748e-08 1.695087e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint337608864) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(23.0335 7.88395 0.0 0.0 0.0 -15.3174) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.981556e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (2.981556e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.387779e-17 -5.285486e-19 0.0) (1.387779e-17 1.0 8.673617e-19 0.0) (5.285486e-19 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.981556e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (2.981556e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.387779e-17 -5.285486e-19 0.0) (1.387779e-17 1.0 8.673617e-19 0.0) (5.285486e-19 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(365.799 82.8929 1218.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.981556e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (2.981556e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.387779e-17 -5.285486e-19 0.0) (1.387779e-17 1.0 8.673617e-19 0.0) (5.285486e-19 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(365.799 82.8929 1218.71) :target-centroid-pos #f(365.799 82.8929 1218.71) :fix-limbs-target-coords (list #<coordinates #X2e7111a0  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-49-87-64-98-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-49-87-64-98-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-99.93 -22.9823 -372.615)/(386.466/1)
;; dif-rot : #f(0.002286 -0.172789 -0.01025)/(0.173108/0.017453)
;; dif-pos : #f(18.4167 3.99234 -0.90239)/(18.866/1)
;; dif-rot : #f(0.008955 -0.120754 -0.019724)/(0.122681/0.017453)
;; cog-dif : #f(-4.87619 0.981151)/(4.97392/5.0)
;;  coords : #<coordinates #X1325f8e0  416.029 39.932 -91.834 / -0.711 -2.121e-08 1.828e-08>
;;  angles : (#f(24.6743 8.44826 0.0 0.0 0.0 -16.4028) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2ecb5750  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  162.256 -74.843 349.852 / 0.01 0.173 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.924 95.665 403.278 / 0.019 0.121 -0.008>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  416.029 39.932 926.666 / -0.711 -2.121e-08 1.828e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  350.746 -35.818 936.166 / 0.026 -2.799e-08 -7.407e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  350.746 -35.818 814.166 / 0.026 -2.799e-08 -0.093> #<bodyset-link #X6f14d58 RLEG_LINK2  350.77 -36.747 804.21 / 0.09 -0.597 -0.113> #<bodyset-link #X6f38680 RLEG_LINK3  566.087 -60.221 491.979 / -1.42 1.477 -1.447> #<bodyset-link #X130e0d78 RLEG_LINK4  186.256 -70.682 487.591 / 0.01 0.173 -0.095> #<bodyset-link #X12a84e10 RLEG_LINK5  179.448 -74.527 448.363 / 0.01 0.173 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  416.029 39.932 926.666 / -0.711 -2.121e-08 1.828e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  481.313 115.682 936.166 / 0.026 -2.799e-08 -7.224e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  481.313 115.682 814.166 / 0.026 -2.799e-08 -0.054> #<bodyset-link #X6fe1bf0 LLEG_LINK2  481.326 115.146 804.181 / 0.092 -0.892 -0.086> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.791 110.022 566.521 / -0.67 1.487 -0.698> #<bodyset-link #X1316f038 LLEG_LINK4  398.733 98.932 542.196 / 0.019 0.121 -0.054> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.961 96.677 502.546 / 0.019 0.121 -0.008>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  162.256 -74.843 349.852 / 0.01 0.173 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.924 95.665 403.278 / 0.019 0.121 -0.008>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  416.029 39.932 926.666 / -0.711 -2.121e-08 1.828e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  350.746 -35.818 936.166 / 0.026 -2.799e-08 -7.407e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  350.746 -35.818 814.166 / 0.026 -2.799e-08 -0.093> #<bodyset-link #X6f14d58 RLEG_LINK2  350.77 -36.747 804.21 / 0.09 -0.597 -0.113> #<bodyset-link #X6f38680 RLEG_LINK3  566.087 -60.221 491.979 / -1.42 1.477 -1.447> #<bodyset-link #X130e0d78 RLEG_LINK4  186.256 -70.682 487.591 / 0.01 0.173 -0.095> #<bodyset-link #X12a84e10 RLEG_LINK5  179.448 -74.527 448.363 / 0.01 0.173 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  416.029 39.932 926.666 / -0.711 -2.121e-08 1.828e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  481.313 115.682 936.166 / 0.026 -2.799e-08 -7.224e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  481.313 115.682 814.166 / 0.026 -2.799e-08 -0.054> #<bodyset-link #X6fe1bf0 LLEG_LINK2  481.326 115.146 804.181 / 0.092 -0.892 -0.086> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.791 110.022 566.521 / -0.67 1.487 -0.698> #<bodyset-link #X1316f038 LLEG_LINK4  398.733 98.932 542.196 / 0.019 0.121 -0.054> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.961 96.677 502.546 / 0.019 0.121 -0.008>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(367.856 83.9215 1218.81) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  416.029 39.932 926.666 / -0.711 -2.121e-08 1.828e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  162.256 -74.843 349.852 / 0.01 0.173 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.924 95.665 403.278 / 0.019 0.121 -0.008>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  350.746 -35.818 936.166 / 0.026 -2.799e-08 -7.407e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  350.746 -35.818 814.166 / 0.026 -2.799e-08 -0.093> #<bodyset-link #X6f14d58 RLEG_LINK2  350.77 -36.747 804.21 / 0.09 -0.597 -0.113> #<bodyset-link #X6f38680 RLEG_LINK3  566.087 -60.221 491.979 / -1.42 1.477 -1.447> #<bodyset-link #X130e0d78 RLEG_LINK4  186.256 -70.682 487.591 / 0.01 0.173 -0.095> #<bodyset-link #X12a84e10 RLEG_LINK5  179.448 -74.527 448.363 / 0.01 0.173 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  481.313 115.682 936.166 / 0.026 -2.799e-08 -7.224e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  481.313 115.682 814.166 / 0.026 -2.799e-08 -0.054> #<bodyset-link #X6fe1bf0 LLEG_LINK2  481.326 115.146 804.181 / 0.092 -0.892 -0.086> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.791 110.022 566.521 / -0.67 1.487 -0.698> #<bodyset-link #X1316f038 LLEG_LINK4  398.733 98.932 542.196 / 0.019 0.121 -0.054> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.961 96.677 502.546 / 0.019 0.121 -0.008>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(367.856 83.9215 1218.81) :target-centroid-pos #f(367.856 83.9215 1218.81) :fix-limbs-target-coords (#<coordinates #X2ecb5750  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.7575 0.652835 -2.800114e-08 416.029) (-0.652835 0.7575 -8.218221e-19 39.9324) (2.121086e-08 1.828013e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint802582192) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(24.6743 8.44826 0.0 0.0 0.0 -16.4028) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693608e-10 7.638654e-19) (1.693608e-10 1.0 -5.588126e-10) (-6.692245e-19 5.588126e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.186693e-17 1.421085e-14) (0.0 1.0 0.0 0.0) (1.186693e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.052206e-18 0.0) (0.0 1.0 0.0 0.0) (-4.052206e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.186693e-17 1.421085e-14) (0.0 1.0 0.0 0.0) (1.186693e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.052206e-18 0.0) (0.0 1.0 0.0 0.0) (-4.052206e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(367.856 83.9215 1218.81) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.186693e-17 1.421085e-14) (0.0 1.0 0.0 0.0) (1.186693e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.052206e-18 0.0) (0.0 1.0 0.0 0.0) (-4.052206e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(367.856 83.9215 1218.81) :target-centroid-pos #f(367.856 83.9215 1218.81) :fix-limbs-target-coords (list #<coordinates #X2ecb5750  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.692e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-50-38-44-56-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-50-38-44-56-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(24.2525 -17.7128 -44.4559)/(53.6494/1)
;; dif-rot : #f(-0.00114 -0.07553 0.038814)/(0.084927/0.017453)
;; dif-pos : #f(7.07264 -1.54752 0.006364)/(7.23996/1)
;; dif-rot : #f(-0.001198 -0.054418 0.04332)/(0.069565/0.017453)
;; cog-dif : #f(-0.169301 -2.56964)/(2.57521/5.0)
;;  coords : #<coordinates #X1325f8e0  450.597 78.916 -91.834 / -0.226 -2.729e-08 6.280e-09>
;;  angles : (#f(26.2195 8.97965 0.0 0.0 0.0 -17.4249) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2f25e620  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.690e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -20.125 -81.477 46.154 / -0.039 0.076 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  393.025 101.852 400.51 / -0.043 0.054 1.898e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  450.597 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  428.168 -18.536 936.166 / -0.03 -2.799e-08 8.451e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  428.168 -18.536 814.166 / -0.03 -2.799e-08 -0.114> #<bodyset-link #X6f14d58 RLEG_LINK2  428.133 -19.673 804.231 / -0.11 0.606 -0.139> #<bodyset-link #X6f38680 RLEG_LINK3  209.362 -48.485 494.863 / -0.11 0.606 -0.139> #<bodyset-link #X130e0d78 RLEG_LINK4  -9.41 -77.297 185.494 / -0.039 0.076 -0.114> #<bodyset-link #X12a84e10 RLEG_LINK5  -12.583 -81.737 145.868 / -0.039 0.076 -0.0>) (#<bodyset-link #X6ee5ff8 BODY  450.597 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  473.026 176.368 936.166 / -0.03 -2.799e-08 8.391e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  473.026 176.368 814.166 / -0.03 -2.799e-08 -0.24> #<bodyset-link #X6fe1bf0 LLEG_LINK2  472.954 173.988 804.454 / 0.285 -0.901 -0.394> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.001 111.411 586.669 / -1.102 1.298 -1.087> #<bodyset-link #X1316f038 LLEG_LINK4  400.985 111.055 539.15 / -0.043 0.054 -0.241> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.46 101.614 500.362 / -0.043 0.054 1.898e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -20.125 -81.477 46.154 / -0.039 0.076 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  393.025 101.852 400.51 / -0.043 0.054 1.898e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  450.597 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  428.168 -18.536 936.166 / -0.03 -2.799e-08 8.451e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  428.168 -18.536 814.166 / -0.03 -2.799e-08 -0.114> #<bodyset-link #X6f14d58 RLEG_LINK2  428.133 -19.673 804.231 / -0.11 0.606 -0.139> #<bodyset-link #X6f38680 RLEG_LINK3  209.362 -48.485 494.863 / -0.11 0.606 -0.139> #<bodyset-link #X130e0d78 RLEG_LINK4  -9.41 -77.297 185.494 / -0.039 0.076 -0.114> #<bodyset-link #X12a84e10 RLEG_LINK5  -12.583 -81.737 145.868 / -0.039 0.076 -0.0>) (#<bodyset-link #X6ee5ff8 BODY  450.597 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  473.026 176.368 936.166 / -0.03 -2.799e-08 8.391e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  473.026 176.368 814.166 / -0.03 -2.799e-08 -0.24> #<bodyset-link #X6fe1bf0 LLEG_LINK2  472.954 173.988 804.454 / 0.285 -0.901 -0.394> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.001 111.411 586.669 / -1.102 1.298 -1.087> #<bodyset-link #X1316f038 LLEG_LINK4  400.985 111.055 539.15 / -0.043 0.054 -0.241> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.46 101.614 500.362 / -0.043 0.054 1.898e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(369.793 84.8901 1218.91) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  450.597 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -20.125 -81.477 46.154 / -0.039 0.076 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  393.025 101.852 400.51 / -0.043 0.054 1.898e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  428.168 -18.536 936.166 / -0.03 -2.799e-08 8.451e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  428.168 -18.536 814.166 / -0.03 -2.799e-08 -0.114> #<bodyset-link #X6f14d58 RLEG_LINK2  428.133 -19.673 804.231 / -0.11 0.606 -0.139> #<bodyset-link #X6f38680 RLEG_LINK3  209.362 -48.485 494.863 / -0.11 0.606 -0.139> #<bodyset-link #X130e0d78 RLEG_LINK4  -9.41 -77.297 185.494 / -0.039 0.076 -0.114> #<bodyset-link #X12a84e10 RLEG_LINK5  -12.583 -81.737 145.868 / -0.039 0.076 -0.0>) (#<bodyset-link #X1258dac0 LLEG_LINK0  473.026 176.368 936.166 / -0.03 -2.799e-08 8.391e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  473.026 176.368 814.166 / -0.03 -2.799e-08 -0.24> #<bodyset-link #X6fe1bf0 LLEG_LINK2  472.954 173.988 804.454 / 0.285 -0.901 -0.394> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.001 111.411 586.669 / -1.102 1.298 -1.087> #<bodyset-link #X1316f038 LLEG_LINK4  400.985 111.055 539.15 / -0.043 0.054 -0.241> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.46 101.614 500.362 / -0.043 0.054 1.898e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(369.793 84.8901 1218.91) :target-centroid-pos #f(369.793 84.8901 1218.91) :fix-limbs-target-coords (#<coordinates #X2f25e620  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.690e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.974523 0.224289 -2.800114e-08 450.597) (-0.224289 0.974523 -8.218226e-19 78.916) (2.728775e-08 6.280341e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint823336760) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(26.2195 8.97965 0.0 0.0 0.0 -17.4249) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(-1.421582e-13 -100.0 3.979039e-13) :rot #2f((1.0 -1.693606e-10 7.636590e-19) (1.693606e-10 1.0 -5.588121e-10) (-6.690183e-19 5.588121e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.038152e-18 -3.552714e-15) (0.0 1.0 0.0 0.0) (-5.038152e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.673236e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.673236e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.038152e-18 -3.552714e-15) (0.0 1.0 0.0 0.0) (-5.038152e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.673236e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.673236e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(369.793 84.8901 1218.91) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.038152e-18 -3.552714e-15) (0.0 1.0 0.0 0.0) (-5.038152e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.673236e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.673236e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(369.793 84.8901 1218.91) :target-centroid-pos #f(369.793 84.8901 1218.91) :fix-limbs-target-coords (list #<coordinates #X2f25e620  -1.422e-13 -100.0 3.979e-13 / 1.694e-10 6.690e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-50-77-76-21-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-50-77-76-21-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-132.596 0.63207 -272.217)/(302.794/1)
;; dif-rot : #f(0.001307 -0.039074 -0.037994)/(0.054516/0.017453)
;; dif-pos : #f(17.7998 0.262998 -0.585014)/(17.8113/1)
;; dif-rot : #f(0.002415 -0.10932 -0.033602)/(0.114393/0.017453)
;; cog-dif : #f(2.55472 1.86418)/(3.16256/5.0)
;;  coords : #<coordinates #X1325f8e0  419.924 48.312 -91.834 / -0.603 -2.306e-08 1.589e-08>
;;  angles : (#f(27.6708 9.50607 0.0 0.0 0.0 -18.3651) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2f7a47f8  4.112e-05 -100.0 0.025 / 1.694e-10 6.684e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  143.048 -95.042 266.853 / 0.038 0.039 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  382.403 99.145 402.655 / 0.034 0.109 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  419.924 48.312 926.666 / -0.603 -2.306e-08 1.589e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  363.181 -34.03 936.166 / 0.042 -2.798e-08 -1.190e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  363.181 -34.03 814.166 / 0.042 -2.798e-08 -0.115> #<bodyset-link #X6f14d58 RLEG_LINK2  363.23 -35.174 804.232 / 0.095 -0.428 -0.126> #<bodyset-link #X6f38680 RLEG_LINK3  523.688 -67.909 461.331 / -0.62 1.385 -0.671> #<bodyset-link #X130e0d78 RLEG_LINK4  148.328 -90.198 406.483 / 0.038 0.039 -0.115> #<bodyset-link #X12a84e10 RLEG_LINK5  146.951 -94.837 366.777 / 0.038 0.039 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  419.924 48.312 926.666 / -0.603 -2.306e-08 1.589e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  476.668 130.654 936.166 / 0.043 -2.797e-08 -1.211e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  476.668 130.654 814.166 / 0.043 -2.797e-08 -0.088> #<bodyset-link #X6fe1bf0 LLEG_LINK2  476.706 129.779 804.205 / 0.154 -0.899 -0.141> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.992 122.131 570.177 / -0.816 1.455 -0.863> #<bodyset-link #X1316f038 LLEG_LINK4  397.534 103.239 541.665 / 0.034 0.109 -0.088> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.307 99.57 502.058 / 0.034 0.109 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  143.048 -95.042 266.853 / 0.038 0.039 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  382.403 99.145 402.655 / 0.034 0.109 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  419.924 48.312 926.666 / -0.603 -2.306e-08 1.589e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  363.181 -34.03 936.166 / 0.042 -2.798e-08 -1.190e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  363.181 -34.03 814.166 / 0.042 -2.798e-08 -0.115> #<bodyset-link #X6f14d58 RLEG_LINK2  363.23 -35.174 804.232 / 0.095 -0.428 -0.126> #<bodyset-link #X6f38680 RLEG_LINK3  523.688 -67.909 461.331 / -0.62 1.385 -0.671> #<bodyset-link #X130e0d78 RLEG_LINK4  148.328 -90.198 406.483 / 0.038 0.039 -0.115> #<bodyset-link #X12a84e10 RLEG_LINK5  146.951 -94.837 366.777 / 0.038 0.039 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  419.924 48.312 926.666 / -0.603 -2.306e-08 1.589e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  476.668 130.654 936.166 / 0.043 -2.797e-08 -1.211e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  476.668 130.654 814.166 / 0.043 -2.797e-08 -0.088> #<bodyset-link #X6fe1bf0 LLEG_LINK2  476.706 129.779 804.205 / 0.154 -0.899 -0.141> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.992 122.131 570.177 / -0.816 1.455 -0.863> #<bodyset-link #X1316f038 LLEG_LINK4  397.534 103.239 541.665 / 0.034 0.109 -0.088> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.307 99.57 502.058 / 0.034 0.109 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(371.614 85.8003 1219.02) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  419.924 48.312 926.666 / -0.603 -2.306e-08 1.589e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  143.048 -95.042 266.853 / 0.038 0.039 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  382.403 99.145 402.655 / 0.034 0.109 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  363.181 -34.03 936.166 / 0.042 -2.798e-08 -1.190e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  363.181 -34.03 814.166 / 0.042 -2.798e-08 -0.115> #<bodyset-link #X6f14d58 RLEG_LINK2  363.23 -35.174 804.232 / 0.095 -0.428 -0.126> #<bodyset-link #X6f38680 RLEG_LINK3  523.688 -67.909 461.331 / -0.62 1.385 -0.671> #<bodyset-link #X130e0d78 RLEG_LINK4  148.328 -90.198 406.483 / 0.038 0.039 -0.115> #<bodyset-link #X12a84e10 RLEG_LINK5  146.951 -94.837 366.777 / 0.038 0.039 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  476.668 130.654 936.166 / 0.043 -2.797e-08 -1.211e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  476.668 130.654 814.166 / 0.043 -2.797e-08 -0.088> #<bodyset-link #X6fe1bf0 LLEG_LINK2  476.706 129.779 804.205 / 0.154 -0.899 -0.141> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.992 122.131 570.177 / -0.816 1.455 -0.863> #<bodyset-link #X1316f038 LLEG_LINK4  397.534 103.239 541.665 / 0.034 0.109 -0.088> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.307 99.57 502.058 / 0.034 0.109 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(371.614 85.8003 1219.02) :target-centroid-pos #f(371.614 85.8003 1219.02) :fix-limbs-target-coords (#<coordinates #X2f7a47f8  4.112e-05 -100.0 0.025 / 1.694e-10 6.684e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.823418 0.567435 -2.800114e-08 419.924) (-0.567435 0.823418 -8.218221e-19 48.3123) (2.305665e-08 1.588882e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint304338744) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(27.6708 9.50607 0.0 0.0 0.0 -18.3651) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.112430e-05 -100.0 0.025294) :rot #2f((1.0 -1.693601e-10 7.630430e-19) (1.693601e-10 1.0 -5.588105e-10) (-6.684028e-19 5.588105e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.869748e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.869748e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.052206e-18 0.0) (0.0 1.0 0.0 0.0) (4.052206e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.869748e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.869748e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.052206e-18 0.0) (0.0 1.0 0.0 0.0) (4.052206e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(371.614 85.8003 1219.02) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.869748e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.869748e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.052206e-18 0.0) (0.0 1.0 0.0 0.0) (4.052206e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(371.614 85.8003 1219.02) :target-centroid-pos #f(371.614 85.8003 1219.02) :fix-limbs-target-coords (list #<coordinates #X2f7a47f8  4.112e-05 -100.0 0.025 / 1.694e-10 6.684e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-51-15-16-37-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-51-15-16-37-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(109.196 -31.4771 -36.3238)/(119.306/1)
;; dif-rot : #f(-0.00507 -0.21881 0.064585)/(0.228199/0.017453)
;; dif-pos : #f(27.6747 5.7058 -2.11919)/(28.3361/1)
;; dif-rot : #f(-0.005732 -0.192173 0.079645)/(0.208103/0.017453)
;; cog-dif : #f(-4.17986 -1.73607)/(4.52605/5.0)
;;  coords : #<coordinates #X1325f8e0  449.035 50.232 -91.834 / -0.651 -2.228e-08 1.696e-08>
;;  angles : (#f(29.0327 10.0565 0.0 0.0 0.0 -19.2065) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2fdbbe20  0.0 -100.0 0.101 / 1.694e-10 6.672e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -96.46 -62.096 59.2 / -0.065 0.219 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  372.886 96.457 407.509 / -0.08 0.192 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  449.035 50.232 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  388.456 -29.33 936.166 / -0.046 -2.797e-08 1.297e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  388.456 -29.33 814.166 / -0.046 -2.797e-08 -0.084> #<bodyset-link #X6f14d58 RLEG_LINK2  388.417 -30.169 804.202 / -0.108 0.635 -0.104> #<bodyset-link #X6f38680 RLEG_LINK3  161.244 -45.3 499.959 / -0.108 0.635 -0.104> #<bodyset-link #X130e0d78 RLEG_LINK4  -65.928 -60.431 195.716 / -0.065 0.219 -0.086> #<bodyset-link #X12a84e10 RLEG_LINK5  -74.785 -63.302 156.815 / -0.065 0.219 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  449.035 50.232 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  509.615 129.794 936.166 / -0.054 -2.796e-08 1.517e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  509.615 129.794 814.166 / -0.054 -2.796e-08 -0.132> #<bodyset-link #X6fe1bf0 LLEG_LINK2  509.544 128.479 804.254 / 0.08 -0.789 -0.188> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.322 78.841 541.279 / -1.691 1.438 -1.637> #<bodyset-link #X1316f038 LLEG_LINK4  399.919 99.871 544.576 / -0.08 0.192 -0.135> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.942 95.126 505.667 / -0.08 0.192 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -96.46 -62.096 59.2 / -0.065 0.219 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  372.886 96.457 407.509 / -0.08 0.192 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  449.035 50.232 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  388.456 -29.33 936.166 / -0.046 -2.797e-08 1.297e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  388.456 -29.33 814.166 / -0.046 -2.797e-08 -0.084> #<bodyset-link #X6f14d58 RLEG_LINK2  388.417 -30.169 804.202 / -0.108 0.635 -0.104> #<bodyset-link #X6f38680 RLEG_LINK3  161.244 -45.3 499.959 / -0.108 0.635 -0.104> #<bodyset-link #X130e0d78 RLEG_LINK4  -65.928 -60.431 195.716 / -0.065 0.219 -0.086> #<bodyset-link #X12a84e10 RLEG_LINK5  -74.785 -63.302 156.815 / -0.065 0.219 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  449.035 50.232 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  509.615 129.794 936.166 / -0.054 -2.796e-08 1.517e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  509.615 129.794 814.166 / -0.054 -2.796e-08 -0.132> #<bodyset-link #X6fe1bf0 LLEG_LINK2  509.544 128.479 804.254 / 0.08 -0.789 -0.188> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.322 78.841 541.279 / -1.691 1.438 -1.637> #<bodyset-link #X1316f038 LLEG_LINK4  399.919 99.871 544.576 / -0.08 0.192 -0.135> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.942 95.126 505.667 / -0.08 0.192 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(373.324 86.6556 1219.13) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  449.035 50.232 926.666 / -0.651 -2.228e-08 1.696e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -96.46 -62.096 59.2 / -0.065 0.219 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  372.886 96.457 407.509 / -0.08 0.192 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  388.456 -29.33 936.166 / -0.046 -2.797e-08 1.297e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  388.456 -29.33 814.166 / -0.046 -2.797e-08 -0.084> #<bodyset-link #X6f14d58 RLEG_LINK2  388.417 -30.169 804.202 / -0.108 0.635 -0.104> #<bodyset-link #X6f38680 RLEG_LINK3  161.244 -45.3 499.959 / -0.108 0.635 -0.104> #<bodyset-link #X130e0d78 RLEG_LINK4  -65.928 -60.431 195.716 / -0.065 0.219 -0.086> #<bodyset-link #X12a84e10 RLEG_LINK5  -74.785 -63.302 156.815 / -0.065 0.219 -0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  509.615 129.794 936.166 / -0.054 -2.796e-08 1.517e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  509.615 129.794 814.166 / -0.054 -2.796e-08 -0.132> #<bodyset-link #X6fe1bf0 LLEG_LINK2  509.544 128.479 804.254 / 0.08 -0.789 -0.188> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.322 78.841 541.279 / -1.691 1.438 -1.637> #<bodyset-link #X1316f038 LLEG_LINK4  399.919 99.871 544.576 / -0.08 0.192 -0.135> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.942 95.126 505.667 / -0.08 0.192 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(373.324 86.6556 1219.13) :target-centroid-pos #f(373.324 86.6556 1219.13) :fix-limbs-target-coords (#<coordinates #X2fdbbe20  0.0 -100.0 0.101 / 1.694e-10 6.672e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.79562 0.605796 -2.800114e-08 449.035) (-0.605796 0.79562 -8.218221e-19 50.2322) (2.227827e-08 1.696298e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint637904112) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(29.0327 10.0565 0.0 0.0 0.0 -19.2065) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.000329 -100.0 0.101171) :rot #2f((1.0 -1.693592e-10 7.618173e-19) (1.693592e-10 1.0 -5.588075e-10) (-6.671781e-19 5.588075e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.933120e-18 -1.421085e-14) (0.0 1.0 0.0 0.0) (4.933120e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.105886e-17 -5.684342e-14) (0.0 1.0 0.0 0.0) (-1.105886e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.933120e-18 -1.421085e-14) (0.0 1.0 0.0 0.0) (4.933120e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.105886e-17 -5.684342e-14) (0.0 1.0 0.0 0.0) (-1.105886e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(373.324 86.6556 1219.13) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.933120e-18 -1.421085e-14) (0.0 1.0 0.0 0.0) (4.933120e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.105886e-17 -5.684342e-14) (0.0 1.0 0.0 0.0) (-1.105886e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(373.324 86.6556 1219.13) :target-centroid-pos #f(373.324 86.6556 1219.13) :fix-limbs-target-coords (list #<coordinates #X2fdbbe20  0.0 -100.0 0.101 / 1.694e-10 6.672e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-51-54-20-97-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-51-54-20-97-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(7.65746 -3.37225 -18.232)/(20.0602/1)
;; dif-rot : #f(-3.070345e-05 -5.172088e-05 -0.000687)/(0.00069/0.017453)
;; dif-pos : #f(24.3137 0.42524 0.031555)/(24.3175/1)
;; dif-rot : #f(-0.000509 -0.170956 0.025562)/(0.172857/0.017453)
;; cog-dif : #f(-0.352975 0.220574)/(0.416226/5.0)
;;  coords : #<coordinates #X1325f8e0  444.985 52.438 -91.834 / -0.607 -2.300e-08 1.597e-08>
;;  angles : (#f(30.3107 10.6328 0.0 0.0 0.0 -19.9527) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X303939d0  0.001 -100.0 0.228 / 1.694e-10 6.651e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -7.658 -96.634 18.46 / 0.001 5.171e-05 3.072e-05> #<cascaded-coords #X12422518 :lleg-end-coords  376.047 100.192 404.237 / -0.026 0.171 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  444.985 52.438 926.666 / -0.607 -2.300e-08 1.597e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  387.949 -29.701 936.166 / 0.001 -2.800e-08 -1.939e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  387.949 -29.701 814.166 / 0.001 -2.800e-08 -0.096> #<bodyset-link #X6f14d58 RLEG_LINK2  387.949 -30.655 804.212 / -0.057 0.543 -0.112> #<bodyset-link #X6f38680 RLEG_LINK3  190.872 -61.78 480.806 / -0.058 0.547 -0.112> #<bodyset-link #X130e0d78 RLEG_LINK4  -7.653 -92.821 158.278 / 0.001 5.171e-05 -0.096> #<bodyset-link #X12a84e10 RLEG_LINK5  -7.653 -96.637 118.46 / 0.001 5.171e-05 3.072e-05>) (#<bodyset-link #X6ee5ff8 BODY  444.985 52.438 926.666 / -0.607 -2.300e-08 1.597e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  502.021 134.578 936.166 / -0.006 -2.800e-08 1.731e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  502.021 134.578 814.166 / -0.006 -2.800e-08 -0.113> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.014 133.45 804.23 / 0.114 -0.814 -0.165> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.896 102.536 546.886 / -1.461 1.457 -1.456> #<bodyset-link #X1316f038 LLEG_LINK4  399.932 104.324 541.938 / -0.026 0.171 -0.115> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.056 99.924 502.779 / -0.026 0.171 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -7.658 -96.634 18.46 / 0.001 5.171e-05 3.072e-05> #<cascaded-coords #X12422518 :lleg-end-coords  376.047 100.192 404.237 / -0.026 0.171 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  444.985 52.438 926.666 / -0.607 -2.300e-08 1.597e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  387.949 -29.701 936.166 / 0.001 -2.800e-08 -1.939e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  387.949 -29.701 814.166 / 0.001 -2.800e-08 -0.096> #<bodyset-link #X6f14d58 RLEG_LINK2  387.949 -30.655 804.212 / -0.057 0.543 -0.112> #<bodyset-link #X6f38680 RLEG_LINK3  190.872 -61.78 480.806 / -0.058 0.547 -0.112> #<bodyset-link #X130e0d78 RLEG_LINK4  -7.653 -92.821 158.278 / 0.001 5.171e-05 -0.096> #<bodyset-link #X12a84e10 RLEG_LINK5  -7.653 -96.637 118.46 / 0.001 5.171e-05 3.072e-05>) (#<bodyset-link #X6ee5ff8 BODY  444.985 52.438 926.666 / -0.607 -2.300e-08 1.597e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  502.021 134.578 936.166 / -0.006 -2.800e-08 1.731e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  502.021 134.578 814.166 / -0.006 -2.800e-08 -0.113> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.014 133.45 804.23 / 0.114 -0.814 -0.165> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.896 102.536 546.886 / -1.461 1.457 -1.456> #<bodyset-link #X1316f038 LLEG_LINK4  399.932 104.324 541.938 / -0.026 0.171 -0.115> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.056 99.924 502.779 / -0.026 0.171 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(374.932 87.4592 1219.24) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  444.985 52.438 926.666 / -0.607 -2.300e-08 1.597e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -7.658 -96.634 18.46 / 0.001 5.171e-05 3.072e-05> #<cascaded-coords #X12422518 :lleg-end-coords  376.047 100.192 404.237 / -0.026 0.171 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  387.949 -29.701 936.166 / 0.001 -2.800e-08 -1.939e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  387.949 -29.701 814.166 / 0.001 -2.800e-08 -0.096> #<bodyset-link #X6f14d58 RLEG_LINK2  387.949 -30.655 804.212 / -0.057 0.543 -0.112> #<bodyset-link #X6f38680 RLEG_LINK3  190.872 -61.78 480.806 / -0.058 0.547 -0.112> #<bodyset-link #X130e0d78 RLEG_LINK4  -7.653 -92.821 158.278 / 0.001 5.171e-05 -0.096> #<bodyset-link #X12a84e10 RLEG_LINK5  -7.653 -96.637 118.46 / 0.001 5.171e-05 3.072e-05>) (#<bodyset-link #X1258dac0 LLEG_LINK0  502.021 134.578 936.166 / -0.006 -2.800e-08 1.731e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  502.021 134.578 814.166 / -0.006 -2.800e-08 -0.113> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.014 133.45 804.23 / 0.114 -0.814 -0.165> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.896 102.536 546.886 / -1.461 1.457 -1.456> #<bodyset-link #X1316f038 LLEG_LINK4  399.932 104.324 541.938 / -0.026 0.171 -0.115> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.056 99.924 502.779 / -0.026 0.171 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(374.932 87.4592 1219.24) :target-centroid-pos #f(374.932 87.4592 1219.24) :fix-limbs-target-coords (#<coordinates #X303939d0  0.001 -100.0 0.228 / 1.694e-10 6.651e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.821394 0.570362 -2.800114e-08 444.985) (-0.570362 0.821394 -8.218221e-19 52.4383) (2.299996e-08 1.597078e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint641610824) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(30.3107 10.6328 0.0 0.0 0.0 -19.9527) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.00111 -100.0 0.227612) :rot #2f((1.0 -1.693576e-10 7.597848e-19) (1.693576e-10 1.0 -5.588023e-10) (-6.651473e-19 5.588023e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.306945e-21 -1.776357e-15) (0.0 1.0 0.0 0.0) (-1.306945e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.650211e-19 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (4.650211e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.306945e-21 -1.776357e-15) (0.0 1.0 0.0 0.0) (-1.306945e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.650211e-19 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (4.650211e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(374.932 87.4592 1219.24) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.306945e-21 -1.776357e-15) (0.0 1.0 0.0 0.0) (-1.306945e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.650211e-19 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (4.650211e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(374.932 87.4592 1219.24) :target-centroid-pos #f(374.932 87.4592 1219.24) :fix-limbs-target-coords (list #<coordinates #X303939d0  0.001 -100.0 0.228 / 1.694e-10 6.651e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-51-92-16-65-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-51-92-16-65-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(14.1295 -13.6117 -600.765)/(601.085/1)
;; dif-rot : #f(0.024231 -0.430899 -0.06632)/(0.436646/0.017453)
;; dif-pos : #f(26.9098 3.97062 -0.812925)/(27.2133/1)
;; dif-rot : #f(0.012599 -0.143637 -0.10325)/(0.177345/0.017453)
;; cog-dif : #f(-2.38163 2.07644)/(3.15971/5.0)
;;  coords : #<coordinates #X1325f8e0  416.282 40.414 -91.834 / -0.715 -2.114e-08 1.837e-08>
;;  angles : (#f(31.5099 11.2371 0.0 0.0 0.0 -20.607) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X30a108e8  0.003 -100.0 0.405 / 1.694e-10 6.621e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  236.496 -64.709 551.883 / 0.065 0.431 -0.01> #<cascaded-coords #X12422518 :lleg-end-coords  374.051 93.327 404.819 / 0.103 0.144 -0.005>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  416.282 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  350.689 -35.068 936.166 / 0.112 -2.782e-08 -3.139e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  350.689 -35.068 814.166 / 0.112 -2.782e-08 -0.102> #<bodyset-link #X6f14d58 RLEG_LINK2  350.803 -36.082 804.219 / 0.256 -0.947 -0.176> #<bodyset-link #X6f38680 RLEG_LINK3  661.505 -23.582 585.796 / -2.647 1.302 -2.747> #<bodyset-link #X130e0d78 RLEG_LINK4  294.443 -55.39 678.822 / 0.065 0.431 -0.113> #<bodyset-link #X12a84e10 RLEG_LINK5  278.151 -60.956 642.717 / 0.065 0.431 -0.01>) (#<bodyset-link #X6ee5ff8 BODY  416.282 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  481.876 115.896 936.166 / 0.108 -2.784e-08 -3.016e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  481.876 115.896 814.166 / 0.108 -2.784e-08 -0.033> #<bodyset-link #X6fe1bf0 LLEG_LINK2  481.912 115.564 804.172 / 0.147 -0.868 -0.052> #<bodyset-link #X6f7a6c0 LLEG_LINK3  771.259 138.661 558.929 / -0.575 1.518 -0.684> #<bodyset-link #X1316f038 LLEG_LINK4  393.844 97.254 543.345 / 0.103 0.144 -0.034> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.275 95.32 503.782 / 0.103 0.144 -0.005>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  236.496 -64.709 551.883 / 0.065 0.431 -0.01> #<cascaded-coords #X12422518 :lleg-end-coords  374.051 93.327 404.819 / 0.103 0.144 -0.005>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  416.282 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  350.689 -35.068 936.166 / 0.112 -2.782e-08 -3.139e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  350.689 -35.068 814.166 / 0.112 -2.782e-08 -0.102> #<bodyset-link #X6f14d58 RLEG_LINK2  350.803 -36.082 804.219 / 0.256 -0.947 -0.176> #<bodyset-link #X6f38680 RLEG_LINK3  661.505 -23.582 585.796 / -2.647 1.302 -2.747> #<bodyset-link #X130e0d78 RLEG_LINK4  294.443 -55.39 678.822 / 0.065 0.431 -0.113> #<bodyset-link #X12a84e10 RLEG_LINK5  278.151 -60.956 642.717 / 0.065 0.431 -0.01>) (#<bodyset-link #X6ee5ff8 BODY  416.282 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  481.876 115.896 936.166 / 0.108 -2.784e-08 -3.016e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  481.876 115.896 814.166 / 0.108 -2.784e-08 -0.033> #<bodyset-link #X6fe1bf0 LLEG_LINK2  481.912 115.564 804.172 / 0.147 -0.868 -0.052> #<bodyset-link #X6f7a6c0 LLEG_LINK3  771.259 138.661 558.929 / -0.575 1.518 -0.684> #<bodyset-link #X1316f038 LLEG_LINK4  393.844 97.254 543.345 / 0.103 0.144 -0.034> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.275 95.32 503.782 / 0.103 0.144 -0.005>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(376.442 88.2144 1219.36) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  416.282 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  236.496 -64.709 551.883 / 0.065 0.431 -0.01> #<cascaded-coords #X12422518 :lleg-end-coords  374.051 93.327 404.819 / 0.103 0.144 -0.005>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  350.689 -35.068 936.166 / 0.112 -2.782e-08 -3.139e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  350.689 -35.068 814.166 / 0.112 -2.782e-08 -0.102> #<bodyset-link #X6f14d58 RLEG_LINK2  350.803 -36.082 804.219 / 0.256 -0.947 -0.176> #<bodyset-link #X6f38680 RLEG_LINK3  661.505 -23.582 585.796 / -2.647 1.302 -2.747> #<bodyset-link #X130e0d78 RLEG_LINK4  294.443 -55.39 678.822 / 0.065 0.431 -0.113> #<bodyset-link #X12a84e10 RLEG_LINK5  278.151 -60.956 642.717 / 0.065 0.431 -0.01>) (#<bodyset-link #X1258dac0 LLEG_LINK0  481.876 115.896 936.166 / 0.108 -2.784e-08 -3.016e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  481.876 115.896 814.166 / 0.108 -2.784e-08 -0.033> #<bodyset-link #X6fe1bf0 LLEG_LINK2  481.912 115.564 804.172 / 0.147 -0.868 -0.052> #<bodyset-link #X6f7a6c0 LLEG_LINK3  771.259 138.661 558.929 / -0.575 1.518 -0.684> #<bodyset-link #X1316f038 LLEG_LINK4  393.844 97.254 543.345 / 0.103 0.144 -0.034> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.275 95.32 503.782 / 0.103 0.144 -0.005>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(376.442 88.2144 1219.36) :target-centroid-pos #f(376.442 88.2144 1219.36) :fix-limbs-target-coords (#<coordinates #X30a108e8  0.003 -100.0 0.405 / 1.694e-10 6.621e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.754817 0.655935 -2.800114e-08 416.282) (-0.655935 0.754817 -8.218221e-19 40.4139) (2.113574e-08 1.836693e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint606688528) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(31.5099 11.2371 0.0 0.0 0.0 -20.607) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.002631 -100.0 0.404585) :rot #2f((1.0 -1.693553e-10 7.567516e-19) (1.693553e-10 1.0 -5.587947e-10) (-6.621168e-19 5.587947e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.450297e-17 2.842171e-14) (0.0 1.0 0.0 0.0) (-2.450297e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.376937e-17 0.0) (0.0 1.0 0.0 7.105427e-15) (1.376937e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.450297e-17 2.842171e-14) (0.0 1.0 0.0 0.0) (-2.450297e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.376937e-17 0.0) (0.0 1.0 0.0 7.105427e-15) (1.376937e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(376.442 88.2144 1219.36) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.450297e-17 2.842171e-14) (0.0 1.0 0.0 0.0) (-2.450297e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.376937e-17 0.0) (0.0 1.0 0.0 7.105427e-15) (1.376937e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(376.442 88.2144 1219.36) :target-centroid-pos #f(376.442 88.2144 1219.36) :fix-limbs-target-coords (list #<coordinates #X30a108e8  0.003 -100.0 0.405 / 1.694e-10 6.621e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-52-30-57-88-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-52-30-57-88-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-189.559 -13.7722 -349.88)/(398.168/1)
;; dif-rot : #f(0.000663 -0.057474 -0.00831)/(0.058076/0.017453)
;; dif-pos : #f(-2.87688 -0.170464 2.36778)/(3.72987/1)
;; dif-rot : #f(6.845382e-05 -0.01668 -0.014975)/(0.022416/0.017453)
;; cog-dif : #f(20.8782 -0.408687)/(20.8822/5.0)
;;  coords : #<coordinates #X1325f8e0  398.179 51.119 -91.834 / -0.651 -2.227e-08 1.698e-08>
;;  angles : (#f(32.635 11.8708 0.0 0.0 0.0 -21.1723) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X30f990a0  0.005 -100.0 0.632 / 1.694e-10 6.579e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  209.227 -84.342 339.039 / 0.008 0.057 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  402.848 100.213 397.716 / 0.015 0.017 5.644e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  398.179 51.119 926.666 / -0.651 -2.227e-08 1.698e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  337.546 -28.402 936.166 / 0.017 -2.800e-08 -4.634e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  337.546 -28.402 814.166 / 0.017 -2.800e-08 -0.142> #<bodyset-link #X6f14d58 RLEG_LINK2  337.57 -29.821 804.268 / 0.145 -0.729 -0.192> #<bodyset-link #X6f38680 RLEG_LINK3  593.968 -65.473 526.079 / -0.821 1.38 -0.847> #<bodyset-link #X130e0d78 RLEG_LINK4  217.198 -78.547 478.402 / 0.008 0.057 -0.143> #<bodyset-link #X12a84e10 RLEG_LINK5  214.971 -84.252 438.874 / 0.008 0.057 -0.0>) (#<bodyset-link #X6ee5ff8 BODY  398.179 51.119 926.666 / -0.651 -2.227e-08 1.698e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  458.812 130.641 936.166 / 0.017 -2.800e-08 -4.629e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  458.812 130.641 814.166 / 0.017 -2.800e-08 -0.093> #<bodyset-link #X6fe1bf0 LLEG_LINK2  458.827 129.713 804.21 / 0.161 -0.997 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.6 116.061 600.94 / -0.483 1.379 -0.508> #<bodyset-link #X1316f038 LLEG_LINK4  405.125 103.956 537.524 / 0.015 0.017 -0.093> #<bodyset-link #X6f6d3c0 LLEG_LINK5  404.516 100.232 497.702 / 0.015 0.017 5.644e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  209.227 -84.342 339.039 / 0.008 0.057 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  402.848 100.213 397.716 / 0.015 0.017 5.644e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  398.179 51.119 926.666 / -0.651 -2.227e-08 1.698e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  337.546 -28.402 936.166 / 0.017 -2.800e-08 -4.634e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  337.546 -28.402 814.166 / 0.017 -2.800e-08 -0.142> #<bodyset-link #X6f14d58 RLEG_LINK2  337.57 -29.821 804.268 / 0.145 -0.729 -0.192> #<bodyset-link #X6f38680 RLEG_LINK3  593.968 -65.473 526.079 / -0.821 1.38 -0.847> #<bodyset-link #X130e0d78 RLEG_LINK4  217.198 -78.547 478.402 / 0.008 0.057 -0.143> #<bodyset-link #X12a84e10 RLEG_LINK5  214.971 -84.252 438.874 / 0.008 0.057 -0.0>) (#<bodyset-link #X6ee5ff8 BODY  398.179 51.119 926.666 / -0.651 -2.227e-08 1.698e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  458.812 130.641 936.166 / 0.017 -2.800e-08 -4.629e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  458.812 130.641 814.166 / 0.017 -2.800e-08 -0.093> #<bodyset-link #X6fe1bf0 LLEG_LINK2  458.827 129.713 804.21 / 0.161 -0.997 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.6 116.061 600.94 / -0.483 1.379 -0.508> #<bodyset-link #X1316f038 LLEG_LINK4  405.125 103.956 537.524 / 0.015 0.017 -0.093> #<bodyset-link #X6f6d3c0 LLEG_LINK5  404.516 100.232 497.702 / 0.015 0.017 5.644e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(377.862 88.9241 1219.48) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  398.179 51.119 926.666 / -0.651 -2.227e-08 1.698e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  209.227 -84.342 339.039 / 0.008 0.057 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  402.848 100.213 397.716 / 0.015 0.017 5.644e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  337.546 -28.402 936.166 / 0.017 -2.800e-08 -4.634e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  337.546 -28.402 814.166 / 0.017 -2.800e-08 -0.142> #<bodyset-link #X6f14d58 RLEG_LINK2  337.57 -29.821 804.268 / 0.145 -0.729 -0.192> #<bodyset-link #X6f38680 RLEG_LINK3  593.968 -65.473 526.079 / -0.821 1.38 -0.847> #<bodyset-link #X130e0d78 RLEG_LINK4  217.198 -78.547 478.402 / 0.008 0.057 -0.143> #<bodyset-link #X12a84e10 RLEG_LINK5  214.971 -84.252 438.874 / 0.008 0.057 -0.0>) (#<bodyset-link #X1258dac0 LLEG_LINK0  458.812 130.641 936.166 / 0.017 -2.800e-08 -4.629e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  458.812 130.641 814.166 / 0.017 -2.800e-08 -0.093> #<bodyset-link #X6fe1bf0 LLEG_LINK2  458.827 129.713 804.21 / 0.161 -0.997 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.6 116.061 600.94 / -0.483 1.379 -0.508> #<bodyset-link #X1316f038 LLEG_LINK4  405.125 103.956 537.524 / 0.015 0.017 -0.093> #<bodyset-link #X6f6d3c0 LLEG_LINK5  404.516 100.232 497.702 / 0.015 0.017 5.644e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(377.862 88.9241 1219.48) :target-centroid-pos #f(377.862 88.9241 1219.48) :fix-limbs-target-coords (#<coordinates #X30f990a0  0.005 -100.0 0.632 / 1.694e-10 6.579e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.795215 0.606328 -2.800114e-08 398.179) (-0.606328 0.795215 -8.218221e-19 51.1194) (2.226692e-08 1.697787e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint304886240) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(32.635 11.8708 0.0 0.0 0.0 -21.1723) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.005139 -100.0 0.632048) :rot #2f((1.0 -1.693521e-10 7.525269e-19) (1.693521e-10 1.0 -5.587841e-10) (-6.578957e-19 5.587841e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.734723e-18 1.706771e-17 2.842171e-14) (1.734723e-18 1.0 2.168404e-19 0.0) (-1.706771e-17 -2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.747062e-19 0.0) (0.0 1.0 0.0 0.0) (3.747062e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.734723e-18 1.706771e-17 2.842171e-14) (1.734723e-18 1.0 2.168404e-19 0.0) (-1.706771e-17 -2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.747062e-19 0.0) (0.0 1.0 0.0 0.0) (3.747062e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(377.862 88.9241 1219.48) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.734723e-18 1.706771e-17 2.842171e-14) (1.734723e-18 1.0 2.168404e-19 0.0) (-1.706771e-17 -2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.747062e-19 0.0) (0.0 1.0 0.0 0.0) (3.747062e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(377.862 88.9241 1219.48) :target-centroid-pos #f(377.862 88.9241 1219.48) :fix-limbs-target-coords (list #<coordinates #X30f990a0  0.005 -100.0 0.632 / 1.694e-10 6.579e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-52-69-78-13-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-52-69-78-13-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-17.3489 69.5163 -0.003348)/(71.6485/1)
;; dif-rot : #f(4.191481e-09 -8.530447e-11 -0.155868)/(0.155868/0.017453)
;; dif-pos : #f(37.5574 6.61699 1.78983)/(38.1779/1)
;; dif-rot : #f(0.020103 -0.202413 -0.146763)/(0.250827/0.017453)
;; cog-dif : #f(6.7417 9.80493)/(11.899/5.0)
;;  coords : #<coordinates #X1325f8e0  437.929 42.303 -91.834 / -0.666 -2.201e-08 1.731e-08>
;;  angles : (#f(33.6903 12.5358 0.0 0.0 0.0 -21.6515) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X31542d38  0.009 -100.0 0.91 / 1.693e-10 6.523e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  27.939 -165.98 0.913 / 0.156 3.242e-10 -3.616e-09> #<cascaded-coords #X12422518 :lleg-end-coords  364.243 88.015 405.99 / 0.147 0.203 -0.005>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  437.929 42.303 926.666 / -0.666 -2.201e-08 1.731e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  376.109 -36.3 936.166 / 0.156 -2.766e-08 -4.347e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  376.109 -36.3 814.166 / 0.156 -2.766e-08 -0.103> #<bodyset-link #X6f14d58 RLEG_LINK2  376.269 -37.32 804.22 / 0.101 0.488 -0.117> #<bodyset-link #X6f38680 RLEG_LINK3  204.53 -99.335 470.964 / 0.098 0.505 -0.118> #<bodyset-link #X130e0d78 RLEG_LINK4  27.298 -161.899 140.699 / 0.156 3.242e-10 -0.103> #<bodyset-link #X12a84e10 RLEG_LINK5  27.939 -165.98 100.913 / 0.156 3.242e-10 -3.616e-09>) (#<bodyset-link #X6ee5ff8 BODY  437.929 42.303 926.666 / -0.666 -2.201e-08 1.731e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  499.748 120.905 936.166 / 0.154 -2.767e-08 -4.302e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.748 120.905 814.166 / 0.154 -2.767e-08 -0.036> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.804 120.545 804.173 / 0.191 -0.787 -0.052> #<bodyset-link #X6f7a6c0 LLEG_LINK3  767.352 152.257 536.194 / -1.879 1.53 -2.032> #<bodyset-link #X1316f038 LLEG_LINK4  391.887 94.133 543.082 / 0.147 0.203 -0.037> #<bodyset-link #X6f6d3c0 LLEG_LINK5  384.126 91.482 503.932 / 0.147 0.203 -0.005>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  27.939 -165.98 0.913 / 0.156 3.242e-10 -3.616e-09> #<cascaded-coords #X12422518 :lleg-end-coords  364.243 88.015 405.99 / 0.147 0.203 -0.005>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  437.929 42.303 926.666 / -0.666 -2.201e-08 1.731e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  376.109 -36.3 936.166 / 0.156 -2.766e-08 -4.347e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  376.109 -36.3 814.166 / 0.156 -2.766e-08 -0.103> #<bodyset-link #X6f14d58 RLEG_LINK2  376.269 -37.32 804.22 / 0.101 0.488 -0.117> #<bodyset-link #X6f38680 RLEG_LINK3  204.53 -99.335 470.964 / 0.098 0.505 -0.118> #<bodyset-link #X130e0d78 RLEG_LINK4  27.298 -161.899 140.699 / 0.156 3.242e-10 -0.103> #<bodyset-link #X12a84e10 RLEG_LINK5  27.939 -165.98 100.913 / 0.156 3.242e-10 -3.616e-09>) (#<bodyset-link #X6ee5ff8 BODY  437.929 42.303 926.666 / -0.666 -2.201e-08 1.731e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  499.748 120.905 936.166 / 0.154 -2.767e-08 -4.302e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.748 120.905 814.166 / 0.154 -2.767e-08 -0.036> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.804 120.545 804.173 / 0.191 -0.787 -0.052> #<bodyset-link #X6f7a6c0 LLEG_LINK3  767.352 152.257 536.194 / -1.879 1.53 -2.032> #<bodyset-link #X1316f038 LLEG_LINK4  391.887 94.133 543.082 / 0.147 0.203 -0.037> #<bodyset-link #X6f6d3c0 LLEG_LINK5  384.126 91.482 503.932 / 0.147 0.203 -0.005>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(379.196 89.5911 1219.61) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  437.929 42.303 926.666 / -0.666 -2.201e-08 1.731e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  27.939 -165.98 0.913 / 0.156 3.242e-10 -3.616e-09> #<cascaded-coords #X12422518 :lleg-end-coords  364.243 88.015 405.99 / 0.147 0.203 -0.005>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  376.109 -36.3 936.166 / 0.156 -2.766e-08 -4.347e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  376.109 -36.3 814.166 / 0.156 -2.766e-08 -0.103> #<bodyset-link #X6f14d58 RLEG_LINK2  376.269 -37.32 804.22 / 0.101 0.488 -0.117> #<bodyset-link #X6f38680 RLEG_LINK3  204.53 -99.335 470.964 / 0.098 0.505 -0.118> #<bodyset-link #X130e0d78 RLEG_LINK4  27.298 -161.899 140.699 / 0.156 3.242e-10 -0.103> #<bodyset-link #X12a84e10 RLEG_LINK5  27.939 -165.98 100.913 / 0.156 3.242e-10 -3.616e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.748 120.905 936.166 / 0.154 -2.767e-08 -4.302e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.748 120.905 814.166 / 0.154 -2.767e-08 -0.036> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.804 120.545 804.173 / 0.191 -0.787 -0.052> #<bodyset-link #X6f7a6c0 LLEG_LINK3  767.352 152.257 536.194 / -1.879 1.53 -2.032> #<bodyset-link #X1316f038 LLEG_LINK4  391.887 94.133 543.082 / 0.147 0.203 -0.037> #<bodyset-link #X6f6d3c0 LLEG_LINK5  384.126 91.482 503.932 / 0.147 0.203 -0.005>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(379.196 89.5911 1219.61) :target-centroid-pos #f(379.196 89.5911 1219.61) :fix-limbs-target-coords (#<coordinates #X31542d38  0.009 -100.0 0.91 / 1.693e-10 6.523e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.786023 0.618197 -2.800114e-08 437.929) (-0.618197 0.786023 -8.218238e-19 42.3028) (2.200954e-08 1.731022e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint292973416) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(33.6903 12.5358 0.0 0.0 0.0 -21.6515) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.008879 -100.0 0.909943) :rot #2f((1.0 -1.693478e-10 7.469229e-19) (1.693478e-10 1.0 -5.587699e-10) (-6.522964e-19 5.587699e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.332268e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.119968e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (4.119968e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.332268e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.119968e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (4.119968e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(379.196 89.5911 1219.61) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.332268e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.119968e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (4.119968e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(379.196 89.5911 1219.61) :target-centroid-pos #f(379.196 89.5911 1219.61) :fix-limbs-target-coords (list #<coordinates #X31542d38  0.009 -100.0 0.91 / 1.693e-10 6.523e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-53-05-37-14-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-53-05-37-14-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-271.789 -20.6776 -424.249)/(504.266/1)
;; dif-rot : #f(0.000839 -0.018316 -0.017581)/(0.025402/0.017453)
;; dif-pos : #f(4.07353 -0.466647 -2.74972)/(4.93684/1)
;; dif-rot : #f(-4.097636e-05 0.001965 -0.019033)/(0.019134/0.017453)
;; cog-dif : #f(36.1026 4.07436)/(36.3318/5.0)
;;  coords : #<coordinates #X1325f8e0  381.138 48.383 -91.834 / -0.622 -2.275e-08 1.632e-08>
;;  angles : (#f(34.6799 13.2333 0.0 0.0 0.0 -22.0472) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X31ba17a8  0.014 -100.0 1.238 / 1.693e-10 6.451e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  279.118 -74.126 420.422 / 0.018 0.018 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  395.927 100.389 402.873 / 0.019 -0.002 2.228e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  381.138 48.383 926.666 / -0.622 -2.275e-08 1.632e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  322.837 -32.864 936.166 / 0.02 -2.800e-08 -5.625e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  322.837 -32.864 814.166 / 0.02 -2.800e-08 -0.136> #<bodyset-link #X6f14d58 RLEG_LINK2  322.865 -34.224 804.259 / 0.262 -1.05 -0.277> #<bodyset-link #X6f38680 RLEG_LINK3  656.066 -52.478 622.481 / -0.66 1.356 -0.691> #<bodyset-link #X130e0d78 RLEG_LINK4  281.579 -68.575 560.027 / 0.018 0.018 -0.136> #<bodyset-link #X12a84e10 RLEG_LINK5  280.949 -74.026 520.405 / 0.018 0.018 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  381.138 48.383 926.666 / -0.622 -2.275e-08 1.632e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  439.438 129.63 936.166 / 0.019 -2.800e-08 -5.279e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  439.438 129.63 814.166 / 0.019 -2.800e-08 -0.091> #<bodyset-link #X6fe1bf0 LLEG_LINK2  439.455 128.721 804.208 / 0.174 -1.038 -0.18> #<bodyset-link #X6f7a6c0 LLEG_LINK3  768.501 117.6 614.457 / -0.421 1.36 -0.449> #<bodyset-link #X1316f038 LLEG_LINK4  395.583 104.017 542.707 / 0.019 -0.002 -0.091> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.731 100.383 502.873 / 0.019 -0.002 2.228e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  279.118 -74.126 420.422 / 0.018 0.018 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  395.927 100.389 402.873 / 0.019 -0.002 2.228e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  381.138 48.383 926.666 / -0.622 -2.275e-08 1.632e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  322.837 -32.864 936.166 / 0.02 -2.800e-08 -5.625e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  322.837 -32.864 814.166 / 0.02 -2.800e-08 -0.136> #<bodyset-link #X6f14d58 RLEG_LINK2  322.865 -34.224 804.259 / 0.262 -1.05 -0.277> #<bodyset-link #X6f38680 RLEG_LINK3  656.066 -52.478 622.481 / -0.66 1.356 -0.691> #<bodyset-link #X130e0d78 RLEG_LINK4  281.579 -68.575 560.027 / 0.018 0.018 -0.136> #<bodyset-link #X12a84e10 RLEG_LINK5  280.949 -74.026 520.405 / 0.018 0.018 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  381.138 48.383 926.666 / -0.622 -2.275e-08 1.632e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  439.438 129.63 936.166 / 0.019 -2.800e-08 -5.279e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  439.438 129.63 814.166 / 0.019 -2.800e-08 -0.091> #<bodyset-link #X6fe1bf0 LLEG_LINK2  439.455 128.721 804.208 / 0.174 -1.038 -0.18> #<bodyset-link #X6f7a6c0 LLEG_LINK3  768.501 117.6 614.457 / -0.421 1.36 -0.449> #<bodyset-link #X1316f038 LLEG_LINK4  395.583 104.017 542.707 / 0.019 -0.002 -0.091> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.731 100.383 502.873 / 0.019 -0.002 2.228e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(380.449 90.2179 1219.73) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  381.138 48.383 926.666 / -0.622 -2.275e-08 1.632e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  279.118 -74.126 420.422 / 0.018 0.018 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  395.927 100.389 402.873 / 0.019 -0.002 2.228e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  322.837 -32.864 936.166 / 0.02 -2.800e-08 -5.625e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  322.837 -32.864 814.166 / 0.02 -2.800e-08 -0.136> #<bodyset-link #X6f14d58 RLEG_LINK2  322.865 -34.224 804.259 / 0.262 -1.05 -0.277> #<bodyset-link #X6f38680 RLEG_LINK3  656.066 -52.478 622.481 / -0.66 1.356 -0.691> #<bodyset-link #X130e0d78 RLEG_LINK4  281.579 -68.575 560.027 / 0.018 0.018 -0.136> #<bodyset-link #X12a84e10 RLEG_LINK5  280.949 -74.026 520.405 / 0.018 0.018 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  439.438 129.63 936.166 / 0.019 -2.800e-08 -5.279e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  439.438 129.63 814.166 / 0.019 -2.800e-08 -0.091> #<bodyset-link #X6fe1bf0 LLEG_LINK2  439.455 128.721 804.208 / 0.174 -1.038 -0.18> #<bodyset-link #X6f7a6c0 LLEG_LINK3  768.501 117.6 614.457 / -0.421 1.36 -0.449> #<bodyset-link #X1316f038 LLEG_LINK4  395.583 104.017 542.707 / 0.019 -0.002 -0.091> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.731 100.383 502.873 / 0.019 -0.002 2.228e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(380.449 90.2179 1219.73) :target-centroid-pos #f(380.449 90.2179 1219.73) :fix-limbs-target-coords (#<coordinates #X31ba17a8  0.014 -100.0 1.238 / 1.693e-10 6.451e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.812471 0.583002 -2.800114e-08 381.138) (-0.583002 0.812471 -8.218221e-19 48.3827) (2.275011e-08 1.632471e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint291166152) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(34.6799 13.2333 0.0 0.0 0.0 -22.0472) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.014097 -100.0 1.2382) :rot #2f((1.0 -1.693423e-10 7.397548e-19) (1.693423e-10 1.0 -5.587519e-10) (-6.451345e-19 5.587519e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.071723e-19 0.0) (0.0 1.0 0.0 0.0) (9.071723e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.226080e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.226080e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.071723e-19 0.0) (0.0 1.0 0.0 0.0) (9.071723e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.226080e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.226080e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(380.449 90.2179 1219.73) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.071723e-19 0.0) (0.0 1.0 0.0 0.0) (9.071723e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.226080e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.226080e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(380.449 90.2179 1219.73) :target-centroid-pos #f(380.449 90.2179 1219.73) :fix-limbs-target-coords (list #<coordinates #X31ba17a8  0.014 -100.0 1.238 / 1.693e-10 6.451e-19 5.588e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-53-26-03-19-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-53-26-03-19-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-110.032 9.61935 -336.043)/(353.729/1)
;; dif-rot : #f(0.008711 -0.131385 -0.029914)/(0.135029/0.017453)
;; dif-pos : #f(25.8698 -5.51566 -1.88276)/(26.5182/1)
;; dif-rot : #f(0.004448 -0.154318 -0.043439)/(0.160377/0.017453)
;; cog-dif : #f(4.14844 0.863854)/(4.23742/5.0)
;;  coords : #<coordinates #X1325f8e0  423.836 49.631 -91.834 / -0.691 -2.158e-08 1.784e-08>
;;  angles : (#f(35.6077 13.9649 0.0 0.0 0.0 -22.3619) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X7d82520  0.021 -100.0 1.617 / 1.693e-10 6.362e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  153.321 -102.818 320.388 / 0.03 0.131 -0.007> #<cascaded-coords #X12422518 :lleg-end-coords  374.525 104.415 405.963 / 0.043 0.154 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  423.836 49.631 926.666 / -0.691 -2.158e-08 1.784e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  360.111 -27.435 936.166 / 0.051 -2.796e-08 -1.429e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  360.111 -27.435 814.166 / 0.051 -2.796e-08 -0.162> #<bodyset-link #X6f14d58 RLEG_LINK2  360.193 -29.042 804.297 / 0.142 -0.509 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  550.219 -72.571 478.114 / -1.207 1.401 -1.263> #<bodyset-link #X130e0d78 RLEG_LINK4  171.388 -95.112 458.652 / 0.03 0.131 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  166.407 -101.754 419.523 / 0.03 0.131 -0.007>) (#<bodyset-link #X6ee5ff8 BODY  423.836 49.631 926.666 / -0.691 -2.158e-08 1.784e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  487.56 126.697 936.166 / 0.052 -2.796e-08 -1.447e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  487.56 126.697 814.166 / 0.052 -2.796e-08 -0.053> #<bodyset-link #X6fe1bf0 LLEG_LINK2  487.588 126.168 804.18 / 0.113 -0.856 -0.081> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.206 127.848 555.84 / -0.996 1.51 -1.048> #<bodyset-link #X1316f038 LLEG_LINK4  395.923 107.603 544.242 / 0.043 0.154 -0.054> #<bodyset-link #X6f6d3c0 LLEG_LINK5  389.881 105.192 504.774 / 0.043 0.154 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  153.321 -102.818 320.388 / 0.03 0.131 -0.007> #<cascaded-coords #X12422518 :lleg-end-coords  374.525 104.415 405.963 / 0.043 0.154 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  423.836 49.631 926.666 / -0.691 -2.158e-08 1.784e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  360.111 -27.435 936.166 / 0.051 -2.796e-08 -1.429e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  360.111 -27.435 814.166 / 0.051 -2.796e-08 -0.162> #<bodyset-link #X6f14d58 RLEG_LINK2  360.193 -29.042 804.297 / 0.142 -0.509 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  550.219 -72.571 478.114 / -1.207 1.401 -1.263> #<bodyset-link #X130e0d78 RLEG_LINK4  171.388 -95.112 458.652 / 0.03 0.131 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  166.407 -101.754 419.523 / 0.03 0.131 -0.007>) (#<bodyset-link #X6ee5ff8 BODY  423.836 49.631 926.666 / -0.691 -2.158e-08 1.784e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  487.56 126.697 936.166 / 0.052 -2.796e-08 -1.447e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  487.56 126.697 814.166 / 0.052 -2.796e-08 -0.053> #<bodyset-link #X6fe1bf0 LLEG_LINK2  487.588 126.168 804.18 / 0.113 -0.856 -0.081> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.206 127.848 555.84 / -0.996 1.51 -1.048> #<bodyset-link #X1316f038 LLEG_LINK4  395.923 107.603 544.242 / 0.043 0.154 -0.054> #<bodyset-link #X6f6d3c0 LLEG_LINK5  389.881 105.192 504.774 / 0.043 0.154 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(381.628 90.807 1219.87) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  423.836 49.631 926.666 / -0.691 -2.158e-08 1.784e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  153.321 -102.818 320.388 / 0.03 0.131 -0.007> #<cascaded-coords #X12422518 :lleg-end-coords  374.525 104.415 405.963 / 0.043 0.154 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  360.111 -27.435 936.166 / 0.051 -2.796e-08 -1.429e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  360.111 -27.435 814.166 / 0.051 -2.796e-08 -0.162> #<bodyset-link #X6f14d58 RLEG_LINK2  360.193 -29.042 804.297 / 0.142 -0.509 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  550.219 -72.571 478.114 / -1.207 1.401 -1.263> #<bodyset-link #X130e0d78 RLEG_LINK4  171.388 -95.112 458.652 / 0.03 0.131 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  166.407 -101.754 419.523 / 0.03 0.131 -0.007>) (#<bodyset-link #X1258dac0 LLEG_LINK0  487.56 126.697 936.166 / 0.052 -2.796e-08 -1.447e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  487.56 126.697 814.166 / 0.052 -2.796e-08 -0.053> #<bodyset-link #X6fe1bf0 LLEG_LINK2  487.588 126.168 804.18 / 0.113 -0.856 -0.081> #<bodyset-link #X6f7a6c0 LLEG_LINK3  775.206 127.848 555.84 / -0.996 1.51 -1.048> #<bodyset-link #X1316f038 LLEG_LINK4  395.923 107.603 544.242 / 0.043 0.154 -0.054> #<bodyset-link #X6f6d3c0 LLEG_LINK5  389.881 105.192 504.774 / 0.043 0.154 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(381.628 90.807 1219.87) :target-centroid-pos #f(381.628 90.807 1219.87) :fix-limbs-target-coords (#<coordinates #X7d82520  0.021 -100.0 1.617 / 1.693e-10 6.362e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.77066 0.637247 -2.800114e-08 423.836) (-0.637247 0.77066 -8.218221e-19 49.631) (2.157936e-08 1.784363e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint677960848) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(35.6077 13.9649 0.0 0.0 0.0 -22.3619) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.021039 -100.0 1.61675) :rot #2f((1.0 -1.693355e-10 7.308409e-19) (1.693355e-10 1.0 -5.587294e-10) (-6.362282e-19 5.587294e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.195333e-17 2.842171e-14) (0.0 1.0 0.0 1.421085e-14) (1.195333e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.143833e-17 0.0) (0.0 1.0 0.0 0.0) (-1.143833e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.195333e-17 2.842171e-14) (0.0 1.0 0.0 1.421085e-14) (1.195333e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.143833e-17 0.0) (0.0 1.0 0.0 0.0) (-1.143833e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(381.628 90.807 1219.87) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.195333e-17 2.842171e-14) (0.0 1.0 0.0 1.421085e-14) (1.195333e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.143833e-17 0.0) (0.0 1.0 0.0 0.0) (-1.143833e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(381.628 90.807 1219.87) :target-centroid-pos #f(381.628 90.807 1219.87) :fix-limbs-target-coords (list #<coordinates #X7d82520  0.021 -100.0 1.617 / 1.693e-10 6.362e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-53-59-00-25-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-53-59-00-25-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-17.6835 65.0336 -0.001963)/(67.3949/1)
;; dif-rot : #f(3.727097e-09 -2.116155e-11 -0.145638)/(0.145638/0.017453)
;; dif-pos : #f(38.2689 7.98166 1.73297)/(39.1308/1)
;; dif-rot : #f(0.023641 -0.21365 -0.136375)/(0.254565/0.017453)
;; cog-dif : #f(6.32386 9.18299)/(11.1498/5.0)
;;  coords : #<coordinates #X1325f8e0  441.344 43.647 -91.834 / -0.688 -2.164e-08 1.777e-08>
;;  angles : (#f(36.3189 14.6679 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X99e1d38  0.03 -100.0 2.045 / 1.693e-10 6.254e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.964 -161.779 2.047 / 0.146 2.109e-10 -3.160e-09> #<cascaded-coords #X12422518 :lleg-end-coords  363.701 86.962 406.659 / 0.136 0.215 -0.009>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  441.344 43.647 926.666 / -0.688 -2.164e-08 1.777e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  377.873 -33.627 936.166 / 0.146 -2.770e-08 -4.064e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  377.873 -33.627 814.166 / 0.146 -2.770e-08 -0.106> #<bodyset-link #X6f14d58 RLEG_LINK2  378.027 -34.676 804.223 / 0.089 0.491 -0.12> #<bodyset-link #X6f38680 RLEG_LINK3  205.012 -95.883 471.477 / 0.086 0.508 -0.122> #<bodyset-link #X130e0d78 RLEG_LINK4  26.349 -157.586 141.822 / 0.146 2.109e-10 -0.106> #<bodyset-link #X12a84e10 RLEG_LINK5  26.964 -161.779 102.047 / 0.146 2.109e-10 -3.160e-09>) (#<bodyset-link #X6ee5ff8 BODY  441.344 43.647 926.666 / -0.688 -2.164e-08 1.777e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  504.816 120.922 936.166 / 0.145 -2.771e-08 -4.039e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  504.816 120.922 814.166 / 0.145 -2.771e-08 -0.04> #<bodyset-link #X6fe1bf0 LLEG_LINK2  504.874 120.522 804.175 / 0.184 -0.771 -0.056> #<bodyset-link #X6f7a6c0 LLEG_LINK3  768.811 147.876 532.166 / -2.059 1.521 -2.203> #<bodyset-link #X1316f038 LLEG_LINK4  392.884 93.542 543.41 / 0.136 0.215 -0.041> #<bodyset-link #X6f6d3c0 LLEG_LINK5  384.676 90.75 504.361 / 0.136 0.215 -0.009>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.964 -161.779 2.047 / 0.146 2.109e-10 -3.160e-09> #<cascaded-coords #X12422518 :lleg-end-coords  363.701 86.962 406.659 / 0.136 0.215 -0.009>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  441.344 43.647 926.666 / -0.688 -2.164e-08 1.777e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  377.873 -33.627 936.166 / 0.146 -2.770e-08 -4.064e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  377.873 -33.627 814.166 / 0.146 -2.770e-08 -0.106> #<bodyset-link #X6f14d58 RLEG_LINK2  378.027 -34.676 804.223 / 0.089 0.491 -0.12> #<bodyset-link #X6f38680 RLEG_LINK3  205.012 -95.883 471.477 / 0.086 0.508 -0.122> #<bodyset-link #X130e0d78 RLEG_LINK4  26.349 -157.586 141.822 / 0.146 2.109e-10 -0.106> #<bodyset-link #X12a84e10 RLEG_LINK5  26.964 -161.779 102.047 / 0.146 2.109e-10 -3.160e-09>) (#<bodyset-link #X6ee5ff8 BODY  441.344 43.647 926.666 / -0.688 -2.164e-08 1.777e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  504.816 120.922 936.166 / 0.145 -2.771e-08 -4.039e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  504.816 120.922 814.166 / 0.145 -2.771e-08 -0.04> #<bodyset-link #X6fe1bf0 LLEG_LINK2  504.874 120.522 804.175 / 0.184 -0.771 -0.056> #<bodyset-link #X6f7a6c0 LLEG_LINK3  768.811 147.876 532.166 / -2.059 1.521 -2.203> #<bodyset-link #X1316f038 LLEG_LINK4  392.884 93.542 543.41 / 0.136 0.215 -0.041> #<bodyset-link #X6f6d3c0 LLEG_LINK5  384.676 90.75 504.361 / 0.136 0.215 -0.009>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(382.735 91.3606 1220.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  441.344 43.647 926.666 / -0.688 -2.164e-08 1.777e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.964 -161.779 2.047 / 0.146 2.109e-10 -3.160e-09> #<cascaded-coords #X12422518 :lleg-end-coords  363.701 86.962 406.659 / 0.136 0.215 -0.009>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  377.873 -33.627 936.166 / 0.146 -2.770e-08 -4.064e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  377.873 -33.627 814.166 / 0.146 -2.770e-08 -0.106> #<bodyset-link #X6f14d58 RLEG_LINK2  378.027 -34.676 804.223 / 0.089 0.491 -0.12> #<bodyset-link #X6f38680 RLEG_LINK3  205.012 -95.883 471.477 / 0.086 0.508 -0.122> #<bodyset-link #X130e0d78 RLEG_LINK4  26.349 -157.586 141.822 / 0.146 2.109e-10 -0.106> #<bodyset-link #X12a84e10 RLEG_LINK5  26.964 -161.779 102.047 / 0.146 2.109e-10 -3.160e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  504.816 120.922 936.166 / 0.145 -2.771e-08 -4.039e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  504.816 120.922 814.166 / 0.145 -2.771e-08 -0.04> #<bodyset-link #X6fe1bf0 LLEG_LINK2  504.874 120.522 804.175 / 0.184 -0.771 -0.056> #<bodyset-link #X6f7a6c0 LLEG_LINK3  768.811 147.876 532.166 / -2.059 1.521 -2.203> #<bodyset-link #X1316f038 LLEG_LINK4  392.884 93.542 543.41 / 0.136 0.215 -0.041> #<bodyset-link #X6f6d3c0 LLEG_LINK5  384.676 90.75 504.361 / 0.136 0.215 -0.009>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(382.735 91.3606 1220.0) :target-centroid-pos #f(382.735 91.3606 1220.0) :fix-limbs-target-coords (#<coordinates #X99e1d38  0.03 -100.0 2.045 / 1.693e-10 6.254e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.772747 0.634714 -2.800114e-08 441.344) (-0.634714 0.772747 -8.218205e-19 43.6473) (2.163780e-08 1.777271e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint662005600) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(36.3189 14.6679 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.02995 -100.0 2.04548) :rot #2f((1.0 -1.693273e-10 7.200025e-19) (1.693273e-10 1.0 -5.587021e-10) (-6.253990e-19 5.587021e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 2.220446e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.105886e-17 0.0) (0.0 1.0 0.0 0.0) (1.105886e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 2.220446e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.105886e-17 0.0) (0.0 1.0 0.0 0.0) (1.105886e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(382.735 91.3606 1220.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 2.220446e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.105886e-17 0.0) (0.0 1.0 0.0 0.0) (1.105886e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(382.735 91.3606 1220.0) :target-centroid-pos #f(382.735 91.3606 1220.0) :fix-limbs-target-coords (list #<coordinates #X99e1d38  0.03 -100.0 2.045 / 1.693e-10 6.254e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-53-97-10-09-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-53-97-10-09-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-20.4325 -18.9541 -36.159)/(45.6532/1)
;; dif-rot : #f(2.615259e-09 -1.994416e-10 0.033707)/(0.033707/0.017453)
;; dif-pos : #f(11.6235 -2.22194 0.074186)/(11.8342/1)
;; dif-rot : #f(-0.004128 -0.083169 0.057623)/(0.101265/0.017453)
;; cog-dif : #f(-0.981453 -2.35235)/(2.54889/5.0)
;;  coords : #<coordinates #X1325f8e0  465.199 88.538 -91.834 / -0.202 -2.743e-08 5.614e-09>
;;  angles : (#f(36.8694 15.3593 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X9f036e0  0.041 -100.0 2.524 / 1.693e-10 6.125e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  21.101 -81.745 38.683 / -0.034 1.742e-10 -2.060e-09> #<cascaded-coords #X12422518 :lleg-end-coords  388.572 102.885 401.028 / -0.058 0.083 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  465.199 88.538 926.666 / -0.202 -2.743e-08 5.614e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  445.149 -9.431 936.166 / -0.034 -2.799e-08 9.437e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  445.149 -9.431 814.166 / -0.034 -2.799e-08 -0.127> #<bodyset-link #X6f14d58 RLEG_LINK2  445.107 -10.702 804.248 / -0.108 0.527 -0.148> #<bodyset-link #X6f38680 RLEG_LINK3  251.14 -45.818 479.372 / -0.129 0.64 -0.159> #<bodyset-link #X130e0d78 RLEG_LINK4  21.272 -76.664 178.359 / -0.034 1.742e-10 -0.127> #<bodyset-link #X12a84e10 RLEG_LINK5  21.101 -81.745 138.683 / -0.034 1.742e-10 -2.060e-09>) (#<bodyset-link #X6ee5ff8 BODY  465.199 88.538 926.666 / -0.202 -2.743e-08 5.614e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  485.249 186.508 936.166 / -0.034 -2.798e-08 9.618e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  485.249 186.508 814.166 / -0.034 -2.798e-08 -0.271> #<bodyset-link #X6fe1bf0 LLEG_LINK2  485.156 183.828 804.533 / 0.288 -0.849 -0.418> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.951 109.845 575.161 / -1.251 1.282 -1.23> #<bodyset-link #X1316f038 LLEG_LINK4  400.68 112.795 539.072 / -0.058 0.083 -0.272> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.863 102.234 500.681 / -0.058 0.083 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  21.101 -81.745 38.683 / -0.034 1.742e-10 -2.060e-09> #<cascaded-coords #X12422518 :lleg-end-coords  388.572 102.885 401.028 / -0.058 0.083 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  465.199 88.538 926.666 / -0.202 -2.743e-08 5.614e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  445.149 -9.431 936.166 / -0.034 -2.799e-08 9.437e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  445.149 -9.431 814.166 / -0.034 -2.799e-08 -0.127> #<bodyset-link #X6f14d58 RLEG_LINK2  445.107 -10.702 804.248 / -0.108 0.527 -0.148> #<bodyset-link #X6f38680 RLEG_LINK3  251.14 -45.818 479.372 / -0.129 0.64 -0.159> #<bodyset-link #X130e0d78 RLEG_LINK4  21.272 -76.664 178.359 / -0.034 1.742e-10 -0.127> #<bodyset-link #X12a84e10 RLEG_LINK5  21.101 -81.745 138.683 / -0.034 1.742e-10 -2.060e-09>) (#<bodyset-link #X6ee5ff8 BODY  465.199 88.538 926.666 / -0.202 -2.743e-08 5.614e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  485.249 186.508 936.166 / -0.034 -2.798e-08 9.618e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  485.249 186.508 814.166 / -0.034 -2.798e-08 -0.271> #<bodyset-link #X6fe1bf0 LLEG_LINK2  485.156 183.828 804.533 / 0.288 -0.849 -0.418> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.951 109.845 575.161 / -1.251 1.282 -1.23> #<bodyset-link #X1316f038 LLEG_LINK4  400.68 112.795 539.072 / -0.058 0.083 -0.272> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.863 102.234 500.681 / -0.058 0.083 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(383.776 91.8809 1220.14) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  465.199 88.538 926.666 / -0.202 -2.743e-08 5.614e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  21.101 -81.745 38.683 / -0.034 1.742e-10 -2.060e-09> #<cascaded-coords #X12422518 :lleg-end-coords  388.572 102.885 401.028 / -0.058 0.083 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  445.149 -9.431 936.166 / -0.034 -2.799e-08 9.437e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  445.149 -9.431 814.166 / -0.034 -2.799e-08 -0.127> #<bodyset-link #X6f14d58 RLEG_LINK2  445.107 -10.702 804.248 / -0.108 0.527 -0.148> #<bodyset-link #X6f38680 RLEG_LINK3  251.14 -45.818 479.372 / -0.129 0.64 -0.159> #<bodyset-link #X130e0d78 RLEG_LINK4  21.272 -76.664 178.359 / -0.034 1.742e-10 -0.127> #<bodyset-link #X12a84e10 RLEG_LINK5  21.101 -81.745 138.683 / -0.034 1.742e-10 -2.060e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  485.249 186.508 936.166 / -0.034 -2.798e-08 9.618e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  485.249 186.508 814.166 / -0.034 -2.798e-08 -0.271> #<bodyset-link #X6fe1bf0 LLEG_LINK2  485.156 183.828 804.533 / 0.288 -0.849 -0.418> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.951 109.845 575.161 / -1.251 1.282 -1.23> #<bodyset-link #X1316f038 LLEG_LINK4  400.68 112.795 539.072 / -0.058 0.083 -0.272> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.863 102.234 500.681 / -0.058 0.083 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(383.776 91.8809 1220.14) :target-centroid-pos #f(383.776 91.8809 1220.14) :fix-limbs-target-coords (#<coordinates #X9f036e0  0.041 -100.0 2.524 / 1.693e-10 6.125e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.979695 0.200495 -2.800114e-08 465.199) (-0.200495 0.979695 -8.218226e-19 88.5383) (2.743257e-08 5.614100e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint835239168) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(36.8694 15.3593 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.041074 -100.0 2.52429) :rot #2f((1.0 -1.693174e-10 7.070639e-19) (1.693174e-10 1.0 -5.586695e-10) (-6.124714e-19 5.586695e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.462349e-27 -7.105427e-15) (0.0 1.0 0.0 0.0) (6.462349e-27 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.778268e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-2.778268e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.462349e-27 -7.105427e-15) (0.0 1.0 0.0 0.0) (6.462349e-27 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.778268e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-2.778268e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(383.776 91.8809 1220.14) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.462349e-27 -7.105427e-15) (0.0 1.0 0.0 0.0) (6.462349e-27 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.778268e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-2.778268e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(383.776 91.8809 1220.14) :target-centroid-pos #f(383.776 91.8809 1220.14) :fix-limbs-target-coords (list #<coordinates #X9f036e0  0.041 -100.0 2.524 / 1.693e-10 6.125e-19 5.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-54-51-18-46-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-54-51-18-46-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(28.7643 -60.6599 -39.416)/(77.85/1)
;; dif-rot : #f(-0.001681 0.00026 0.001332)/(0.002161/0.017453)
;; dif-pos : #f(29.8513 -3.18002 0.239289)/(30.0212/1)
;; dif-rot : #f(-0.013396 -0.195903 0.040937)/(0.200583/0.017453)
;; cog-dif : #f(0.307936 -0.706093)/(0.770319/5.0)
;;  coords : #<coordinates #X1325f8e0  459.492 60.622 -91.834 / -0.536 -2.407e-08 1.431e-08>
;;  angles : (#f(37.4829 16.1302 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #Xa523788  0.055 -100.0 3.053 / 1.693e-10 5.973e-19 5.586e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -28.639 -39.368 42.564 / -0.001 -0.0 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  370.846 104.356 405.743 / -0.04 0.196 0.009>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  459.492 60.622 926.666 / -0.536 -2.407e-08 1.431e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  408.383 -25.331 936.166 / -0.001 -2.800e-08 3.747e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  408.383 -25.331 814.166 / -0.001 -2.800e-08 -0.022> #<bodyset-link #X6f14d58 RLEG_LINK2  408.382 -25.551 804.169 / -0.017 0.61 -0.027> #<bodyset-link #X6f38680 RLEG_LINK3  190.7 -32.118 492.766 / -0.017 0.615 -0.027> #<bodyset-link #X130e0d78 RLEG_LINK4  -28.674 -38.656 182.554 / -0.001 -0.0 -0.022> #<bodyset-link #X12a84e10 RLEG_LINK5  -28.665 -39.536 142.563 / -0.001 -0.0 0.002>) (#<bodyset-link #X6ee5ff8 BODY  459.492 60.622 926.666 / -0.536 -2.407e-08 1.431e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  510.6 146.575 936.166 / -0.011 -2.800e-08 3.119e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  510.6 146.575 814.166 / -0.011 -2.800e-08 -0.145> #<bodyset-link #X6fe1bf0 LLEG_LINK2  510.584 145.131 804.271 / 0.132 -0.772 -0.203> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.153 103.251 537.714 / -1.672 1.425 -1.66> #<bodyset-link #X1316f038 LLEG_LINK4  398.217 108.2 542.628 / -0.04 0.196 -0.148> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.278 102.626 503.822 / -0.04 0.196 0.009>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -28.639 -39.368 42.564 / -0.001 -0.0 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  370.846 104.356 405.743 / -0.04 0.196 0.009>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  459.492 60.622 926.666 / -0.536 -2.407e-08 1.431e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  408.383 -25.331 936.166 / -0.001 -2.800e-08 3.747e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  408.383 -25.331 814.166 / -0.001 -2.800e-08 -0.022> #<bodyset-link #X6f14d58 RLEG_LINK2  408.382 -25.551 804.169 / -0.017 0.61 -0.027> #<bodyset-link #X6f38680 RLEG_LINK3  190.7 -32.118 492.766 / -0.017 0.615 -0.027> #<bodyset-link #X130e0d78 RLEG_LINK4  -28.674 -38.656 182.554 / -0.001 -0.0 -0.022> #<bodyset-link #X12a84e10 RLEG_LINK5  -28.665 -39.536 142.563 / -0.001 -0.0 0.002>) (#<bodyset-link #X6ee5ff8 BODY  459.492 60.622 926.666 / -0.536 -2.407e-08 1.431e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  510.6 146.575 936.166 / -0.011 -2.800e-08 3.119e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  510.6 146.575 814.166 / -0.011 -2.800e-08 -0.145> #<bodyset-link #X6fe1bf0 LLEG_LINK2  510.584 145.131 804.271 / 0.132 -0.772 -0.203> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.153 103.251 537.714 / -1.672 1.425 -1.66> #<bodyset-link #X1316f038 LLEG_LINK4  398.217 108.2 542.628 / -0.04 0.196 -0.148> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.278 102.626 503.822 / -0.04 0.196 0.009>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(384.753 92.3698 1220.29) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  459.492 60.622 926.666 / -0.536 -2.407e-08 1.431e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -28.639 -39.368 42.564 / -0.001 -0.0 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  370.846 104.356 405.743 / -0.04 0.196 0.009>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  408.383 -25.331 936.166 / -0.001 -2.800e-08 3.747e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  408.383 -25.331 814.166 / -0.001 -2.800e-08 -0.022> #<bodyset-link #X6f14d58 RLEG_LINK2  408.382 -25.551 804.169 / -0.017 0.61 -0.027> #<bodyset-link #X6f38680 RLEG_LINK3  190.7 -32.118 492.766 / -0.017 0.615 -0.027> #<bodyset-link #X130e0d78 RLEG_LINK4  -28.674 -38.656 182.554 / -0.001 -0.0 -0.022> #<bodyset-link #X12a84e10 RLEG_LINK5  -28.665 -39.536 142.563 / -0.001 -0.0 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  510.6 146.575 936.166 / -0.011 -2.800e-08 3.119e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  510.6 146.575 814.166 / -0.011 -2.800e-08 -0.145> #<bodyset-link #X6fe1bf0 LLEG_LINK2  510.584 145.131 804.271 / 0.132 -0.772 -0.203> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.153 103.251 537.714 / -1.672 1.425 -1.66> #<bodyset-link #X1316f038 LLEG_LINK4  398.217 108.2 542.628 / -0.04 0.196 -0.148> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.278 102.626 503.822 / -0.04 0.196 0.009>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(384.753 92.3698 1220.29) :target-centroid-pos #f(384.753 92.3698 1220.29) :fix-limbs-target-coords (#<coordinates #Xa523788  0.055 -100.0 3.053 / 1.693e-10 5.973e-19 5.586e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.859528 0.511089 -2.800114e-08 459.492) (-0.511089 0.859528 -8.218213e-19 60.6219) (2.406776e-08 1.431108e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint612336688) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(37.4829 16.1302 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.054655 -100.0 3.05308) :rot #2f((1.0 -1.693058e-10 6.918522e-19) (1.693058e-10 1.0 -5.586312e-10) (-5.972727e-19 5.586312e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.388132e-21 0.0) (0.0 1.0 0.0 0.0) (-3.388132e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.355253e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.355253e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.388132e-21 0.0) (0.0 1.0 0.0 0.0) (-3.388132e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.355253e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.355253e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(384.753 92.3698 1220.29) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.388132e-21 0.0) (0.0 1.0 0.0 0.0) (-3.388132e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.355253e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.355253e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(384.753 92.3698 1220.29) :target-centroid-pos #f(384.753 92.3698 1220.29) :fix-limbs-target-coords (list #<coordinates #Xa523788  0.055 -100.0 3.053 / 1.693e-10 5.973e-19 5.586e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-54-91-96-56-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-54-91-96-56-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-2.19544 -0.095493 -3.17063)/(3.85772/1)
;; dif-rot : #f(-6.373773e-09 4.692595e-07 1.225023e-05)/(1.225922e-05/0.017453)
;; dif-pos : #f(33.386 1.52973 0.222189)/(33.4217/1)
;; dif-rot : #f(-0.00145 -0.228284 0.029364)/(0.230169/0.017453)
;; cog-dif : #f(-0.985195 0.990032)/(1.3967/5.0)
;;  coords : #<coordinates #X1325f8e0  447.895 46.556 -91.834 / -0.797 -1.957e-08 2.003e-08>
;;  angles : (#f(38.1645 16.987 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X11620028  0.071 -100.0 3.632 / 1.693e-10 5.796e-19 5.586e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.266 -99.905 6.802 / -1.225e-05 -4.693e-07 6.935e-09> #<cascaded-coords #X12422518 :lleg-end-coords  367.414 99.438 407.473 / -0.03 0.228 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  447.895 46.556 926.666 / -0.797 -1.957e-08 2.003e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  376.374 -23.335 936.166 / -1.230e-05 -2.800e-08 3.444e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  376.374 -23.335 814.166 / -1.230e-05 -2.800e-08 -0.108> #<bodyset-link #X6f14d58 RLEG_LINK2  376.374 -24.411 804.224 / -0.059 0.501 -0.123> #<bodyset-link #X6f38680 RLEG_LINK3  192.86 -60.221 473.407 / -0.062 0.522 -0.124> #<bodyset-link #X130e0d78 RLEG_LINK4  2.266 -95.6 146.57 / -1.225e-05 -4.693e-07 -0.108> #<bodyset-link #X12a84e10 RLEG_LINK5  2.266 -99.905 106.802 / -1.225e-05 -4.693e-07 6.935e-09>) (#<bodyset-link #X6ee5ff8 BODY  447.895 46.556 926.666 / -0.797 -1.957e-08 2.003e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  519.416 116.447 936.166 / -0.015 -2.800e-08 4.232e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  519.416 116.447 814.166 / -0.015 -2.800e-08 -0.063> #<bodyset-link #X6fe1bf0 LLEG_LINK2  519.407 115.82 804.186 / 0.044 -0.75 -0.086> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.725 94.492 527.24 / -2.193 1.494 -2.177> #<bodyset-link #X1316f038 LLEG_LINK4  399.144 101.267 543.76 / -0.03 0.228 -0.064> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.039 98.961 504.879 / -0.03 0.228 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.266 -99.905 6.802 / -1.225e-05 -4.693e-07 6.935e-09> #<cascaded-coords #X12422518 :lleg-end-coords  367.414 99.438 407.473 / -0.03 0.228 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  447.895 46.556 926.666 / -0.797 -1.957e-08 2.003e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  376.374 -23.335 936.166 / -1.230e-05 -2.800e-08 3.444e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  376.374 -23.335 814.166 / -1.230e-05 -2.800e-08 -0.108> #<bodyset-link #X6f14d58 RLEG_LINK2  376.374 -24.411 804.224 / -0.059 0.501 -0.123> #<bodyset-link #X6f38680 RLEG_LINK3  192.86 -60.221 473.407 / -0.062 0.522 -0.124> #<bodyset-link #X130e0d78 RLEG_LINK4  2.266 -95.6 146.57 / -1.225e-05 -4.693e-07 -0.108> #<bodyset-link #X12a84e10 RLEG_LINK5  2.266 -99.905 106.802 / -1.225e-05 -4.693e-07 6.935e-09>) (#<bodyset-link #X6ee5ff8 BODY  447.895 46.556 926.666 / -0.797 -1.957e-08 2.003e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  519.416 116.447 936.166 / -0.015 -2.800e-08 4.232e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  519.416 116.447 814.166 / -0.015 -2.800e-08 -0.063> #<bodyset-link #X6fe1bf0 LLEG_LINK2  519.407 115.82 804.186 / 0.044 -0.75 -0.086> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.725 94.492 527.24 / -2.193 1.494 -2.177> #<bodyset-link #X1316f038 LLEG_LINK4  399.144 101.267 543.76 / -0.03 0.228 -0.064> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.039 98.961 504.879 / -0.03 0.228 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(385.672 92.8293 1220.44) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  447.895 46.556 926.666 / -0.797 -1.957e-08 2.003e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.266 -99.905 6.802 / -1.225e-05 -4.693e-07 6.935e-09> #<cascaded-coords #X12422518 :lleg-end-coords  367.414 99.438 407.473 / -0.03 0.228 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  376.374 -23.335 936.166 / -1.230e-05 -2.800e-08 3.444e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  376.374 -23.335 814.166 / -1.230e-05 -2.800e-08 -0.108> #<bodyset-link #X6f14d58 RLEG_LINK2  376.374 -24.411 804.224 / -0.059 0.501 -0.123> #<bodyset-link #X6f38680 RLEG_LINK3  192.86 -60.221 473.407 / -0.062 0.522 -0.124> #<bodyset-link #X130e0d78 RLEG_LINK4  2.266 -95.6 146.57 / -1.225e-05 -4.693e-07 -0.108> #<bodyset-link #X12a84e10 RLEG_LINK5  2.266 -99.905 106.802 / -1.225e-05 -4.693e-07 6.935e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  519.416 116.447 936.166 / -0.015 -2.800e-08 4.232e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  519.416 116.447 814.166 / -0.015 -2.800e-08 -0.063> #<bodyset-link #X6fe1bf0 LLEG_LINK2  519.407 115.82 804.186 / 0.044 -0.75 -0.086> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.725 94.492 527.24 / -2.193 1.494 -2.177> #<bodyset-link #X1316f038 LLEG_LINK4  399.144 101.267 543.76 / -0.03 0.228 -0.064> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.039 98.961 504.879 / -0.03 0.228 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(385.672 92.8293 1220.44) :target-centroid-pos #f(385.672 92.8293 1220.44) :fix-limbs-target-coords (#<coordinates #X11620028  0.071 -100.0 3.632 / 1.693e-10 5.796e-19 5.586e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.698909 0.71521 -2.800114e-08 447.895) (-0.71521 0.698909 -8.218205e-19 46.5562) (1.957026e-08 2.002670e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint621928632) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(38.1645 16.987 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.070938 -100.0 3.63169) :rot #2f((1.0 -1.692923e-10 6.741978e-19) (1.692923e-10 1.0 -5.585867e-10) (-5.796334e-19 5.585867e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.685115e-23 4.440892e-16) (0.0 1.0 0.0 0.0) (-1.685115e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.232941e-17 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-1.232941e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.685115e-23 4.440892e-16) (0.0 1.0 0.0 0.0) (-1.685115e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.232941e-17 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-1.232941e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(385.672 92.8293 1220.44) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.685115e-23 4.440892e-16) (0.0 1.0 0.0 0.0) (-1.685115e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.232941e-17 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-1.232941e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(385.672 92.8293 1220.44) :target-centroid-pos #f(385.672 92.8293 1220.44) :fix-limbs-target-coords (list #<coordinates #X11620028  0.071 -100.0 3.632 / 1.693e-10 5.796e-19 5.586e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-55-27-34-77-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-55-27-34-77-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-29.525 -56.4959 -91.0873)/(111.177/1)
;; dif-rot : #f(3.570846e-08 3.915148e-07 0.103699)/(0.103699/0.017453)
;; dif-pos : #f(7.94364 -6.07508 -0.565149)/(10.0164/1)
;; dif-rot : #f(-0.001734 -0.057712 0.121167)/(0.134221/0.017453)
;; cog-dif : #f(-0.608986 -7.94229)/(7.96561/5.0)
;;  coords : #<coordinates #X1325f8e0  462.896 94.489 -91.834 / -0.22 -2.732e-08 6.120e-09>
;;  angles : (#f(38.92 17.9369 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X11bc9500  0.09 -100.0 4.26 / 1.693e-10 5.594e-19 5.585e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.305 -46.864 95.347 / -0.104 -3.926e-07 -1.481e-08> #<cascaded-coords #X12422518 :lleg-end-coords  392.909 106.987 401.143 / -0.121 0.058 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  462.896 94.489 926.666 / -0.22 -2.732e-08 6.120e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  441.04 -3.093 936.166 / -0.104 -2.785e-08 2.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  441.04 -3.093 814.166 / -0.104 -2.785e-08 -0.137> #<bodyset-link #X6f14d58 RLEG_LINK2  440.898 -4.455 804.261 / -0.132 0.204 -0.14> #<bodyset-link #X6f38680 RLEG_LINK3  358.433 -47.081 435.774 / -0.317 0.993 -0.254> #<bodyset-link #X130e0d78 RLEG_LINK4  35.871 -41.416 234.971 / -0.104 -3.926e-07 -0.137> #<bodyset-link #X12a84e10 RLEG_LINK5  35.305 -46.864 195.347 / -0.104 -3.926e-07 -1.481e-08>) (#<bodyset-link #X6ee5ff8 BODY  462.896 94.489 926.666 / -0.22 -2.732e-08 6.120e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  484.751 192.072 936.166 / -0.104 -2.785e-08 2.904e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  484.751 192.072 814.166 / -0.104 -2.785e-08 -0.292> #<bodyset-link #X6fe1bf0 LLEG_LINK2  484.453 189.211 804.589 / 0.258 -0.868 -0.461> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.656 92.081 584.565 / -1.263 1.254 -1.178> #<bodyset-link #X1316f038 LLEG_LINK4  402.238 117.639 539.216 / -0.121 0.058 -0.292> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.652 106.465 500.976 / -0.121 0.058 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.305 -46.864 95.347 / -0.104 -3.926e-07 -1.481e-08> #<cascaded-coords #X12422518 :lleg-end-coords  392.909 106.987 401.143 / -0.121 0.058 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  462.896 94.489 926.666 / -0.22 -2.732e-08 6.120e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  441.04 -3.093 936.166 / -0.104 -2.785e-08 2.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  441.04 -3.093 814.166 / -0.104 -2.785e-08 -0.137> #<bodyset-link #X6f14d58 RLEG_LINK2  440.898 -4.455 804.261 / -0.132 0.204 -0.14> #<bodyset-link #X6f38680 RLEG_LINK3  358.433 -47.081 435.774 / -0.317 0.993 -0.254> #<bodyset-link #X130e0d78 RLEG_LINK4  35.871 -41.416 234.971 / -0.104 -3.926e-07 -0.137> #<bodyset-link #X12a84e10 RLEG_LINK5  35.305 -46.864 195.347 / -0.104 -3.926e-07 -1.481e-08>) (#<bodyset-link #X6ee5ff8 BODY  462.896 94.489 926.666 / -0.22 -2.732e-08 6.120e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  484.751 192.072 936.166 / -0.104 -2.785e-08 2.904e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  484.751 192.072 814.166 / -0.104 -2.785e-08 -0.292> #<bodyset-link #X6fe1bf0 LLEG_LINK2  484.453 189.211 804.589 / 0.258 -0.868 -0.461> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.656 92.081 584.565 / -1.263 1.254 -1.178> #<bodyset-link #X1316f038 LLEG_LINK4  402.238 117.639 539.216 / -0.121 0.058 -0.292> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.652 106.465 500.976 / -0.121 0.058 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(386.536 93.2612 1220.59) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  462.896 94.489 926.666 / -0.22 -2.732e-08 6.120e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.305 -46.864 95.347 / -0.104 -3.926e-07 -1.481e-08> #<cascaded-coords #X12422518 :lleg-end-coords  392.909 106.987 401.143 / -0.121 0.058 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  441.04 -3.093 936.166 / -0.104 -2.785e-08 2.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  441.04 -3.093 814.166 / -0.104 -2.785e-08 -0.137> #<bodyset-link #X6f14d58 RLEG_LINK2  440.898 -4.455 804.261 / -0.132 0.204 -0.14> #<bodyset-link #X6f38680 RLEG_LINK3  358.433 -47.081 435.774 / -0.317 0.993 -0.254> #<bodyset-link #X130e0d78 RLEG_LINK4  35.871 -41.416 234.971 / -0.104 -3.926e-07 -0.137> #<bodyset-link #X12a84e10 RLEG_LINK5  35.305 -46.864 195.347 / -0.104 -3.926e-07 -1.481e-08>) (#<bodyset-link #X1258dac0 LLEG_LINK0  484.751 192.072 936.166 / -0.104 -2.785e-08 2.904e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  484.751 192.072 814.166 / -0.104 -2.785e-08 -0.292> #<bodyset-link #X6fe1bf0 LLEG_LINK2  484.453 189.211 804.589 / 0.258 -0.868 -0.461> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.656 92.081 584.565 / -1.263 1.254 -1.178> #<bodyset-link #X1316f038 LLEG_LINK4  402.238 117.639 539.216 / -0.121 0.058 -0.292> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.652 106.465 500.976 / -0.121 0.058 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(386.536 93.2612 1220.59) :target-centroid-pos #f(386.536 93.2612 1220.59) :fix-limbs-target-coords (#<coordinates #X11bc9500  0.09 -100.0 4.26 / 1.693e-10 5.594e-19 5.585e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.975824 0.218556 -2.800114e-08 462.896) (-0.218556 0.975824 -8.218221e-19 94.4894) (2.732420e-08 6.119807e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint362548320) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(38.92 17.9369 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.090163 -100.0 4.26001) :rot #2f((1.0 -1.692768e-10 6.539337e-19) (1.692768e-10 1.0 -5.585356e-10) (-5.593866e-19 5.585356e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.376674e-24 7.105427e-15) (0.0 1.0 0.0 0.0) (-5.376674e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.338990e-17 5.684342e-14) (-2.775558e-17 1.0 -1.858221e-34 -2.842171e-14) (-1.338990e-17 -1.858221e-34 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.376674e-24 7.105427e-15) (0.0 1.0 0.0 0.0) (-5.376674e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.338990e-17 5.684342e-14) (-2.775558e-17 1.0 -1.858221e-34 -2.842171e-14) (-1.338990e-17 -1.858221e-34 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(386.536 93.2612 1220.59) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.376674e-24 7.105427e-15) (0.0 1.0 0.0 0.0) (-5.376674e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.338990e-17 5.684342e-14) (-2.775558e-17 1.0 -1.858221e-34 -2.842171e-14) (-1.338990e-17 -1.858221e-34 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(386.536 93.2612 1220.59) :target-centroid-pos #f(386.536 93.2612 1220.59) :fix-limbs-target-coords (list #<coordinates #X11bc9500  0.09 -100.0 4.26 / 1.693e-10 5.594e-19 5.585e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-55-62-64-01-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-55-62-64-01-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-111.307 -12.6163 -205.045)/(233.649/1)
;; dif-rot : #f(0.001229 -7.257035e-05 -0.007509)/(0.007609/0.017453)
;; dif-pos : #f(22.6769 1.14527 -0.108075)/(22.7061/1)
;; dif-rot : #f(0.003089 -0.156973 0.011344)/(0.157413/0.017453)
;; cog-dif : #f(0.513049 0.275925)/(0.582541/5.0)
;;  coords : #<coordinates #X1325f8e0  445.389 62.806 -91.834 / -0.551 -2.386e-08 1.465e-08>
;;  angles : (#f(39.7567 18.9891 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X12265620  0.113 -100.0 4.938 / 1.693e-10 5.364e-19 5.585e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  111.335 -86.296 209.959 / 0.008 7.719e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  377.622 99.117 403.787 / -0.012 0.157 -0.004>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  445.389 62.806 926.666 / -0.551 -2.386e-08 1.465e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  393.053 -22.405 936.166 / 0.008 -2.800e-08 -2.105e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  393.053 -22.405 814.166 / 0.008 -2.800e-08 -0.122> #<bodyset-link #X6f14d58 RLEG_LINK2  393.062 -23.619 804.24 / 0.036 -0.23 -0.125> #<bodyset-link #X6f38680 RLEG_LINK3  480.849 -67.84 437.174 / -0.463 1.307 -0.485> #<bodyset-link #X130e0d78 RLEG_LINK4  111.309 -81.319 349.663 / 0.008 7.719e-05 -0.122> #<bodyset-link #X12a84e10 RLEG_LINK5  111.342 -86.173 309.959 / 0.008 7.719e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  445.389 62.806 926.666 / -0.551 -2.386e-08 1.465e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  497.725 148.017 936.166 / 0.012 -2.800e-08 -3.468e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  497.725 148.017 814.166 / 0.012 -2.800e-08 -0.151> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.743 146.514 804.28 / 0.176 -0.82 -0.222> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.326 111.562 551.516 / -1.385 1.418 -1.399> #<bodyset-link #X1316f038 LLEG_LINK4  399.506 105.351 541.605 / -0.012 0.157 -0.153> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.256 99.335 502.557 / -0.012 0.157 -0.004>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  111.335 -86.296 209.959 / 0.008 7.719e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  377.622 99.117 403.787 / -0.012 0.157 -0.004>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  445.389 62.806 926.666 / -0.551 -2.386e-08 1.465e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  393.053 -22.405 936.166 / 0.008 -2.800e-08 -2.105e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  393.053 -22.405 814.166 / 0.008 -2.800e-08 -0.122> #<bodyset-link #X6f14d58 RLEG_LINK2  393.062 -23.619 804.24 / 0.036 -0.23 -0.125> #<bodyset-link #X6f38680 RLEG_LINK3  480.849 -67.84 437.174 / -0.463 1.307 -0.485> #<bodyset-link #X130e0d78 RLEG_LINK4  111.309 -81.319 349.663 / 0.008 7.719e-05 -0.122> #<bodyset-link #X12a84e10 RLEG_LINK5  111.342 -86.173 309.959 / 0.008 7.719e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  445.389 62.806 926.666 / -0.551 -2.386e-08 1.465e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  497.725 148.017 936.166 / 0.012 -2.800e-08 -3.468e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  497.725 148.017 814.166 / 0.012 -2.800e-08 -0.151> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.743 146.514 804.28 / 0.176 -0.82 -0.222> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.326 111.562 551.516 / -1.385 1.418 -1.399> #<bodyset-link #X1316f038 LLEG_LINK4  399.506 105.351 541.605 / -0.012 0.157 -0.153> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.256 99.335 502.557 / -0.012 0.157 -0.004>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(387.348 93.667 1220.74) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  445.389 62.806 926.666 / -0.551 -2.386e-08 1.465e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  111.335 -86.296 209.959 / 0.008 7.719e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  377.622 99.117 403.787 / -0.012 0.157 -0.004>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  393.053 -22.405 936.166 / 0.008 -2.800e-08 -2.105e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  393.053 -22.405 814.166 / 0.008 -2.800e-08 -0.122> #<bodyset-link #X6f14d58 RLEG_LINK2  393.062 -23.619 804.24 / 0.036 -0.23 -0.125> #<bodyset-link #X6f38680 RLEG_LINK3  480.849 -67.84 437.174 / -0.463 1.307 -0.485> #<bodyset-link #X130e0d78 RLEG_LINK4  111.309 -81.319 349.663 / 0.008 7.719e-05 -0.122> #<bodyset-link #X12a84e10 RLEG_LINK5  111.342 -86.173 309.959 / 0.008 7.719e-05 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.725 148.017 936.166 / 0.012 -2.800e-08 -3.468e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  497.725 148.017 814.166 / 0.012 -2.800e-08 -0.151> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.743 146.514 804.28 / 0.176 -0.82 -0.222> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.326 111.562 551.516 / -1.385 1.418 -1.399> #<bodyset-link #X1316f038 LLEG_LINK4  399.506 105.351 541.605 / -0.012 0.157 -0.153> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.256 99.335 502.557 / -0.012 0.157 -0.004>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(387.348 93.667 1220.74) :target-centroid-pos #f(387.348 93.667 1220.74) :fix-limbs-target-coords (#<coordinates #X12265620  0.113 -100.0 4.938 / 1.693e-10 5.364e-19 5.585e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.852111 0.523361 -2.800114e-08 445.389) (-0.523361 0.852111 -8.218238e-19 62.8062) (2.386009e-08 1.465469e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint169821680) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(39.7567 18.9891 0.0 0.0 0.0 -22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.112574 -100.0 4.93785) :rot #2f((1.0 -1.692592e-10 6.308960e-19) (1.692592e-10 1.0 -5.584776e-10) (-5.363686e-19 5.584776e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 0.0) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.728329e-18 0.0) (0.0 1.0 0.0 0.0) (-7.728329e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 0.0) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.728329e-18 0.0) (0.0 1.0 0.0 0.0) (-7.728329e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(387.348 93.667 1220.74) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 0.0) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.728329e-18 0.0) (0.0 1.0 0.0 0.0) (-7.728329e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(387.348 93.667 1220.74) :target-centroid-pos #f(387.348 93.667 1220.74) :fix-limbs-target-coords (list #<coordinates #X12265620  0.113 -100.0 4.938 / 1.693e-10 5.364e-19 5.585e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-55-99-29-11-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-55-99-29-11-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-26.0845 -55.9394 -86.1703)/(105.995/1)
;; dif-rot : #f(3.102022e-09 2.462552e-07 0.106226)/(0.106226/0.017453)
;; dif-pos : #f(8.69356 -6.40943 -0.607248)/(10.8179/1)
;; dif-rot : #f(-0.001884 -0.061742 0.125197)/(0.139606/0.017453)
;; cog-dif : #f(-0.593266 -8.225)/(8.24637/5.0)
;;  coords : #<coordinates #X1325f8e0  465.121 95.897 -91.834 / -0.218 -2.734e-08 6.049e-09>
;;  angles : (#f(40.6473 20.1366 0.0 0.0 0.0 -22.4803) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X12e594e8  0.138 -100.0 5.665 / 1.692e-10 5.104e-19 5.584e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.007 -47.142 91.835 / -0.106 -2.459e-07 1.053e-08> #<cascaded-coords #X12422518 :lleg-end-coords  392.243 107.44 401.261 / -0.125 0.062 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  465.121 95.897 926.666 / -0.218 -2.734e-08 6.049e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  443.518 -1.741 936.166 / -0.106 -2.784e-08 2.969e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  443.518 -1.741 814.166 / -0.106 -2.784e-08 -0.142> #<bodyset-link #X6f14d58 RLEG_LINK2  443.368 -3.145 804.267 / -0.139 0.228 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  351.515 -45.892 438.021 / -0.318 0.974 -0.254> #<bodyset-link #X130e0d78 RLEG_LINK4  32.606 -41.525 231.434 / -0.106 -2.459e-07 -0.142> #<bodyset-link #X12a84e10 RLEG_LINK5  32.007 -47.142 191.835 / -0.106 -2.459e-07 1.053e-08>) (#<bodyset-link #X6ee5ff8 BODY  465.121 95.897 926.666 / -0.218 -2.734e-08 6.049e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  486.724 193.536 936.166 / -0.106 -2.784e-08 2.975e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  486.724 193.536 814.166 / -0.106 -2.784e-08 -0.296> #<bodyset-link #X6fe1bf0 LLEG_LINK2  486.414 190.633 804.602 / 0.256 -0.86 -0.464> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.709 91.377 582.99 / -1.284 1.252 -1.195> #<bodyset-link #X1316f038 LLEG_LINK4  402.187 118.179 539.248 / -0.125 0.062 -0.297> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.385 106.866 501.07 / -0.125 0.062 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.007 -47.142 91.835 / -0.106 -2.459e-07 1.053e-08> #<cascaded-coords #X12422518 :lleg-end-coords  392.243 107.44 401.261 / -0.125 0.062 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  465.121 95.897 926.666 / -0.218 -2.734e-08 6.049e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  443.518 -1.741 936.166 / -0.106 -2.784e-08 2.969e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  443.518 -1.741 814.166 / -0.106 -2.784e-08 -0.142> #<bodyset-link #X6f14d58 RLEG_LINK2  443.368 -3.145 804.267 / -0.139 0.228 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  351.515 -45.892 438.021 / -0.318 0.974 -0.254> #<bodyset-link #X130e0d78 RLEG_LINK4  32.606 -41.525 231.434 / -0.106 -2.459e-07 -0.142> #<bodyset-link #X12a84e10 RLEG_LINK5  32.007 -47.142 191.835 / -0.106 -2.459e-07 1.053e-08>) (#<bodyset-link #X6ee5ff8 BODY  465.121 95.897 926.666 / -0.218 -2.734e-08 6.049e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  486.724 193.536 936.166 / -0.106 -2.784e-08 2.975e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  486.724 193.536 814.166 / -0.106 -2.784e-08 -0.296> #<bodyset-link #X6fe1bf0 LLEG_LINK2  486.414 190.633 804.602 / 0.256 -0.86 -0.464> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.709 91.377 582.99 / -1.284 1.252 -1.195> #<bodyset-link #X1316f038 LLEG_LINK4  402.187 118.179 539.248 / -0.125 0.062 -0.297> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.385 106.866 501.07 / -0.125 0.062 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(388.111 94.0484 1220.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  465.121 95.897 926.666 / -0.218 -2.734e-08 6.049e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.007 -47.142 91.835 / -0.106 -2.459e-07 1.053e-08> #<cascaded-coords #X12422518 :lleg-end-coords  392.243 107.44 401.261 / -0.125 0.062 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  443.518 -1.741 936.166 / -0.106 -2.784e-08 2.969e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  443.518 -1.741 814.166 / -0.106 -2.784e-08 -0.142> #<bodyset-link #X6f14d58 RLEG_LINK2  443.368 -3.145 804.267 / -0.139 0.228 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  351.515 -45.892 438.021 / -0.318 0.974 -0.254> #<bodyset-link #X130e0d78 RLEG_LINK4  32.606 -41.525 231.434 / -0.106 -2.459e-07 -0.142> #<bodyset-link #X12a84e10 RLEG_LINK5  32.007 -47.142 191.835 / -0.106 -2.459e-07 1.053e-08>) (#<bodyset-link #X1258dac0 LLEG_LINK0  486.724 193.536 936.166 / -0.106 -2.784e-08 2.975e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  486.724 193.536 814.166 / -0.106 -2.784e-08 -0.296> #<bodyset-link #X6fe1bf0 LLEG_LINK2  486.414 190.633 804.602 / 0.256 -0.86 -0.464> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.709 91.377 582.99 / -1.284 1.252 -1.195> #<bodyset-link #X1316f038 LLEG_LINK4  402.187 118.179 539.248 / -0.125 0.062 -0.297> #<bodyset-link #X6f6d3c0 LLEG_LINK5  398.385 106.866 501.07 / -0.125 0.062 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(388.111 94.0484 1220.9) :target-centroid-pos #f(388.111 94.0484 1220.9) :fix-limbs-target-coords (#<coordinates #X12e594e8  0.138 -100.0 5.665 / 1.692e-10 5.104e-19 5.584e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.976387 0.21603 -2.800114e-08 465.121) (-0.21603 0.976387 -8.218217e-19 95.8974) (2.733994e-08 6.049100e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint831329856) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(40.6473 20.1366 0.0 0.0 0.0 -22.4803) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.138411 -100.0 5.66507) :rot #2f((1.0 -1.692394e-10 6.049238e-19) (1.692394e-10 1.0 -5.584122e-10) (-5.104185e-19 5.584122e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.901788e-24 0.0) (0.0 1.0 0.0 -7.105427e-15) (-6.901788e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -2.644862e-37 1.219727e-18 0.0) (-2.644862e-37 1.0 4.336809e-19 0.0) (-1.219727e-18 -4.336809e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.901788e-24 0.0) (0.0 1.0 0.0 -7.105427e-15) (-6.901788e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -2.644862e-37 1.219727e-18 0.0) (-2.644862e-37 1.0 4.336809e-19 0.0) (-1.219727e-18 -4.336809e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(388.111 94.0484 1220.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.901788e-24 0.0) (0.0 1.0 0.0 -7.105427e-15) (-6.901788e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -2.644862e-37 1.219727e-18 0.0) (-2.644862e-37 1.0 4.336809e-19 0.0) (-1.219727e-18 -4.336809e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(388.111 94.0484 1220.9) :target-centroid-pos #f(388.111 94.0484 1220.9) :fix-limbs-target-coords (list #<coordinates #X12e594e8  0.138 -100.0 5.665 / 1.692e-10 5.104e-19 5.584e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-56-39-14-84-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-56-39-14-84-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-109.48 -11.6954 -202.018)/(230.074/1)
;; dif-rot : #f(0.001313 -6.001782e-05 -0.006102)/(0.006242/0.017453)
;; dif-pos : #f(23.3059 1.17527 -0.139075)/(23.3359/1)
;; dif-rot : #f(0.003253 -0.16159 0.013549)/(0.16219/0.017453)
;; cog-dif : #f(0.462353 0.187592)/(0.49896/5.0)
;;  coords : #<coordinates #X1325f8e0  447.348 63.947 -91.834 / -0.549 -2.388e-08 1.462e-08>
;;  angles : (#f(41.1935 21.18 0.0 0.0 0.0 -22.222) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X137b42a8  0.168 -100.0 6.441 / 1.692e-10 4.814e-19 5.583e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  109.586 -87.372 208.437 / 0.006 6.402e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  377.021 99.146 404.023 / -0.014 0.162 -0.004>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  447.348 63.947 926.666 / -0.549 -2.388e-08 1.462e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  395.141 -21.344 936.166 / 0.006 -2.800e-08 -1.711e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  395.141 -21.344 814.166 / 0.006 -2.800e-08 -0.126> #<bodyset-link #X6f14d58 RLEG_LINK2  395.149 -22.602 804.246 / 0.034 -0.22 -0.129> #<bodyset-link #X6f38680 RLEG_LINK3  478.903 -68.742 436.474 / -0.475 1.303 -0.496> #<bodyset-link #X130e0d78 RLEG_LINK4  109.563 -82.207 348.119 / 0.006 6.402e-05 -0.126> #<bodyset-link #X12a84e10 RLEG_LINK5  109.591 -87.24 308.437 / 0.006 6.402e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  447.348 63.947 926.666 / -0.549 -2.388e-08 1.462e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  499.554 149.237 936.166 / 0.012 -2.800e-08 -3.227e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  499.554 149.237 814.166 / 0.012 -2.800e-08 -0.155> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.572 147.694 804.286 / 0.177 -0.813 -0.227> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.425 111.172 549.828 / -1.42 1.414 -1.433> #<bodyset-link #X1316f038 LLEG_LINK4  399.553 105.526 541.713 / -0.014 0.162 -0.157> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.111 99.36 502.719 / -0.014 0.162 -0.004>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  109.586 -87.372 208.437 / 0.006 6.402e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  377.021 99.146 404.023 / -0.014 0.162 -0.004>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  447.348 63.947 926.666 / -0.549 -2.388e-08 1.462e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  395.141 -21.344 936.166 / 0.006 -2.800e-08 -1.711e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  395.141 -21.344 814.166 / 0.006 -2.800e-08 -0.126> #<bodyset-link #X6f14d58 RLEG_LINK2  395.149 -22.602 804.246 / 0.034 -0.22 -0.129> #<bodyset-link #X6f38680 RLEG_LINK3  478.903 -68.742 436.474 / -0.475 1.303 -0.496> #<bodyset-link #X130e0d78 RLEG_LINK4  109.563 -82.207 348.119 / 0.006 6.402e-05 -0.126> #<bodyset-link #X12a84e10 RLEG_LINK5  109.591 -87.24 308.437 / 0.006 6.402e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  447.348 63.947 926.666 / -0.549 -2.388e-08 1.462e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  499.554 149.237 936.166 / 0.012 -2.800e-08 -3.227e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  499.554 149.237 814.166 / 0.012 -2.800e-08 -0.155> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.572 147.694 804.286 / 0.177 -0.813 -0.227> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.425 111.172 549.828 / -1.42 1.414 -1.433> #<bodyset-link #X1316f038 LLEG_LINK4  399.553 105.526 541.713 / -0.014 0.162 -0.157> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.111 99.36 502.719 / -0.014 0.162 -0.004>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(388.827 94.4068 1221.07) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  447.348 63.947 926.666 / -0.549 -2.388e-08 1.462e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  109.586 -87.372 208.437 / 0.006 6.402e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  377.021 99.146 404.023 / -0.014 0.162 -0.004>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  395.141 -21.344 936.166 / 0.006 -2.800e-08 -1.711e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  395.141 -21.344 814.166 / 0.006 -2.800e-08 -0.126> #<bodyset-link #X6f14d58 RLEG_LINK2  395.149 -22.602 804.246 / 0.034 -0.22 -0.129> #<bodyset-link #X6f38680 RLEG_LINK3  478.903 -68.742 436.474 / -0.475 1.303 -0.496> #<bodyset-link #X130e0d78 RLEG_LINK4  109.563 -82.207 348.119 / 0.006 6.402e-05 -0.126> #<bodyset-link #X12a84e10 RLEG_LINK5  109.591 -87.24 308.437 / 0.006 6.402e-05 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.554 149.237 936.166 / 0.012 -2.800e-08 -3.227e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  499.554 149.237 814.166 / 0.012 -2.800e-08 -0.155> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.572 147.694 804.286 / 0.177 -0.813 -0.227> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.425 111.172 549.828 / -1.42 1.414 -1.433> #<bodyset-link #X1316f038 LLEG_LINK4  399.553 105.526 541.713 / -0.014 0.162 -0.157> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.111 99.36 502.719 / -0.014 0.162 -0.004>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(388.827 94.4068 1221.07) :target-centroid-pos #f(388.827 94.4068 1221.07) :fix-limbs-target-coords (#<coordinates #X137b42a8  0.168 -100.0 6.441 / 1.692e-10 4.814e-19 5.583e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.852905 0.522065 -2.800114e-08 447.348) (-0.522065 0.852905 -8.218213e-19 63.9468) (2.388233e-08 1.461842e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint829874552) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(41.1935 21.18 0.0 0.0 0.0 -22.222) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.167916 -100.0 6.44148) :rot #2f((1.0 -1.692172e-10 5.758588e-19) (1.692172e-10 1.0 -5.583389e-10) (-4.813784e-19 5.583389e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -8.673617e-19 8.470329e-22 0.0) (8.673617e-19 1.0 3.673420e-40 1.421085e-14) (-8.470329e-22 3.673420e-40 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.321252e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-8.321252e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -8.673617e-19 8.470329e-22 0.0) (8.673617e-19 1.0 3.673420e-40 1.421085e-14) (-8.470329e-22 3.673420e-40 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.321252e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-8.321252e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(388.827 94.4068 1221.07) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -8.673617e-19 8.470329e-22 0.0) (8.673617e-19 1.0 3.673420e-40 1.421085e-14) (-8.470329e-22 3.673420e-40 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.321252e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-8.321252e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(388.827 94.4068 1221.07) :target-centroid-pos #f(388.827 94.4068 1221.07) :fix-limbs-target-coords (list #<coordinates #X137b42a8  0.168 -100.0 6.441 / 1.692e-10 4.814e-19 5.583e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-56-76-15-67-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-56-76-15-67-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-188.644 -17.7857 -346.553)/(394.971/1)
;; dif-rot : #f(0.000841 -0.067102 -0.007729)/(0.067551/0.017453)
;; dif-pos : #f(-3.24245 -0.170749 3.3126)/(4.63853/1)
;; dif-rot : #f(0.000198 -0.03169 -0.013877)/(0.034596/0.017453)
;; cog-dif : #f(25.3515 -0.248147)/(25.3528/5.0)
;;  coords : #<coordinates #X1325f8e0  405.657 56.88 -91.834 / -0.657 -2.217e-08 1.711e-08>
;;  angles : (#f(41.7034 22.2663 0.0 0.0 0.0 -21.8998) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X13b83298  0.201 -100.0 7.267 / 1.692e-10 4.491e-19 5.583e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  211.513 -80.382 340.38 / 0.008 0.067 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  403.147 100.214 396.718 / 0.014 0.032 2.231e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  405.657 56.88 926.666 / -0.657 -2.217e-08 1.711e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  344.562 -22.287 936.166 / 0.018 -2.800e-08 -4.964e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  344.562 -22.287 814.166 / 0.018 -2.800e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  344.588 -23.761 804.276 / 0.148 -0.718 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  598.038 -61.099 523.617 / -0.879 1.382 -0.905> #<bodyset-link #X130e0d78 RLEG_LINK4  220.825 -74.343 479.627 / 0.008 0.067 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  218.218 -80.272 440.155 / 0.008 0.067 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  405.657 56.88 926.666 / -0.657 -2.217e-08 1.711e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  466.752 136.046 936.166 / 0.017 -2.800e-08 -4.857e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  466.752 136.046 814.166 / 0.017 -2.800e-08 -0.109> #<bodyset-link #X6fe1bf0 LLEG_LINK2  466.771 134.959 804.226 / 0.178 -0.972 -0.194> #<bodyset-link #X6f7a6c0 LLEG_LINK3  782.894 117.449 594.083 / -0.596 1.383 -0.622> #<bodyset-link #X1316f038 LLEG_LINK4  407.515 104.626 536.41 / 0.014 0.032 -0.109> #<bodyset-link #X6f6d3c0 LLEG_LINK5  406.316 100.256 496.667 / 0.014 0.032 2.231e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  211.513 -80.382 340.38 / 0.008 0.067 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  403.147 100.214 396.718 / 0.014 0.032 2.231e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  405.657 56.88 926.666 / -0.657 -2.217e-08 1.711e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  344.562 -22.287 936.166 / 0.018 -2.800e-08 -4.964e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  344.562 -22.287 814.166 / 0.018 -2.800e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  344.588 -23.761 804.276 / 0.148 -0.718 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  598.038 -61.099 523.617 / -0.879 1.382 -0.905> #<bodyset-link #X130e0d78 RLEG_LINK4  220.825 -74.343 479.627 / 0.008 0.067 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  218.218 -80.272 440.155 / 0.008 0.067 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  405.657 56.88 926.666 / -0.657 -2.217e-08 1.711e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  466.752 136.046 936.166 / 0.017 -2.800e-08 -4.857e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  466.752 136.046 814.166 / 0.017 -2.800e-08 -0.109> #<bodyset-link #X6fe1bf0 LLEG_LINK2  466.771 134.959 804.226 / 0.178 -0.972 -0.194> #<bodyset-link #X6f7a6c0 LLEG_LINK3  782.894 117.449 594.083 / -0.596 1.383 -0.622> #<bodyset-link #X1316f038 LLEG_LINK4  407.515 104.626 536.41 / 0.014 0.032 -0.109> #<bodyset-link #X6f6d3c0 LLEG_LINK5  406.316 100.256 496.667 / 0.014 0.032 2.231e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(389.501 94.7436 1221.24) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  405.657 56.88 926.666 / -0.657 -2.217e-08 1.711e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  211.513 -80.382 340.38 / 0.008 0.067 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  403.147 100.214 396.718 / 0.014 0.032 2.231e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  344.562 -22.287 936.166 / 0.018 -2.800e-08 -4.964e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  344.562 -22.287 814.166 / 0.018 -2.800e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  344.588 -23.761 804.276 / 0.148 -0.718 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  598.038 -61.099 523.617 / -0.879 1.382 -0.905> #<bodyset-link #X130e0d78 RLEG_LINK4  220.825 -74.343 479.627 / 0.008 0.067 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  218.218 -80.272 440.155 / 0.008 0.067 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  466.752 136.046 936.166 / 0.017 -2.800e-08 -4.857e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  466.752 136.046 814.166 / 0.017 -2.800e-08 -0.109> #<bodyset-link #X6fe1bf0 LLEG_LINK2  466.771 134.959 804.226 / 0.178 -0.972 -0.194> #<bodyset-link #X6f7a6c0 LLEG_LINK3  782.894 117.449 594.083 / -0.596 1.383 -0.622> #<bodyset-link #X1316f038 LLEG_LINK4  407.515 104.626 536.41 / 0.014 0.032 -0.109> #<bodyset-link #X6f6d3c0 LLEG_LINK5  406.316 100.256 496.667 / 0.014 0.032 2.231e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(389.501 94.7436 1221.24) :target-centroid-pos #f(389.501 94.7436 1221.24) :fix-limbs-target-coords (#<coordinates #X13b83298  0.201 -100.0 7.267 / 1.692e-10 4.491e-19 5.583e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.791667 0.610953 -2.800114e-08 405.657) (-0.610953 0.791667 -8.218238e-19 56.8796) (2.216758e-08 1.710737e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint617923840) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(41.7034 22.2663 0.0 0.0 0.0 -21.8998) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.201327 -100.0 7.26689) :rot #2f((1.0 -1.691925e-10 5.435460e-19) (1.691925e-10 1.0 -5.582575e-10) (-4.490931e-19 5.582575e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.351208e-18 -2.842171e-14) (0.0 1.0 0.0 0.0) (4.351208e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.666883e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-2.666883e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.351208e-18 -2.842171e-14) (0.0 1.0 0.0 0.0) (4.351208e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.666883e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-2.666883e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(389.501 94.7436 1221.24) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.351208e-18 -2.842171e-14) (0.0 1.0 0.0 0.0) (4.351208e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.666883e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-2.666883e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(389.501 94.7436 1221.24) :target-centroid-pos #f(389.501 94.7436 1221.24) :fix-limbs-target-coords (list #<coordinates #X13b83298  0.201 -100.0 7.267 / 1.692e-10 4.491e-19 5.583e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-57-22-88-74-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-57-22-88-74-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-188.941 -18.1937 -345.973)/(394.622/1)
;; dif-rot : #f(0.000838 -0.067556 -0.007634)/(0.067991/0.017453)
;; dif-pos : #f(-3.19183 -0.143328 3.36121)/(4.63746/1)
;; dif-rot : #f(0.00021 -0.032922 -0.013686)/(0.035654/0.017453)
;; cog-dif : #f(25.4607 -0.2755)/(25.4622/5.0)
;;  coords : #<coordinates #X1325f8e0  406.201 57.234 -91.834 / -0.657 -2.216e-08 1.711e-08>
;;  angles : (#f(42.1793 23.3959 0.0 0.0 0.0 -21.5152) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X14128e10  0.239 -100.0 8.141 / 1.692e-10 4.134e-19 5.582e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  211.957 -79.992 340.559 / 0.008 0.068 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  403.091 100.185 396.667 / 0.014 0.033 1.568e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  406.201 57.234 926.666 / -0.657 -2.216e-08 1.711e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  345.09 -21.92 936.166 / 0.018 -2.800e-08 -4.956e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  345.09 -21.92 814.166 / 0.018 -2.800e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  345.116 -23.394 804.276 / 0.148 -0.718 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  598.567 -60.742 523.62 / -0.881 1.383 -0.907> #<bodyset-link #X130e0d78 RLEG_LINK4  221.333 -73.952 479.802 / 0.008 0.068 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  218.707 -79.882 440.331 / 0.008 0.068 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  406.201 57.234 926.666 / -0.657 -2.216e-08 1.711e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  467.313 136.388 936.166 / 0.017 -2.800e-08 -4.852e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  467.313 136.388 814.166 / 0.017 -2.800e-08 -0.11> #<bodyset-link #X6fe1bf0 LLEG_LINK2  467.332 135.29 804.227 / 0.179 -0.97 -0.196> #<bodyset-link #X6f7a6c0 LLEG_LINK3  783.082 117.473 593.551 / -0.605 1.383 -0.63> #<bodyset-link #X1316f038 LLEG_LINK4  407.631 104.643 536.349 / 0.014 0.033 -0.11> #<bodyset-link #X6f6d3c0 LLEG_LINK5  406.383 100.229 496.613 / 0.014 0.033 1.568e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  211.957 -79.992 340.559 / 0.008 0.068 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  403.091 100.185 396.667 / 0.014 0.033 1.568e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  406.201 57.234 926.666 / -0.657 -2.216e-08 1.711e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  345.09 -21.92 936.166 / 0.018 -2.800e-08 -4.956e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  345.09 -21.92 814.166 / 0.018 -2.800e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  345.116 -23.394 804.276 / 0.148 -0.718 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  598.567 -60.742 523.62 / -0.881 1.383 -0.907> #<bodyset-link #X130e0d78 RLEG_LINK4  221.333 -73.952 479.802 / 0.008 0.068 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  218.707 -79.882 440.331 / 0.008 0.068 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  406.201 57.234 926.666 / -0.657 -2.216e-08 1.711e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  467.313 136.388 936.166 / 0.017 -2.800e-08 -4.852e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  467.313 136.388 814.166 / 0.017 -2.800e-08 -0.11> #<bodyset-link #X6fe1bf0 LLEG_LINK2  467.332 135.29 804.227 / 0.179 -0.97 -0.196> #<bodyset-link #X6f7a6c0 LLEG_LINK3  783.082 117.473 593.551 / -0.605 1.383 -0.63> #<bodyset-link #X1316f038 LLEG_LINK4  407.631 104.643 536.349 / 0.014 0.033 -0.11> #<bodyset-link #X6f6d3c0 LLEG_LINK5  406.383 100.229 496.613 / 0.014 0.033 1.568e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(390.134 95.0601 1221.41) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  406.201 57.234 926.666 / -0.657 -2.216e-08 1.711e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  211.957 -79.992 340.559 / 0.008 0.068 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  403.091 100.185 396.667 / 0.014 0.033 1.568e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  345.09 -21.92 936.166 / 0.018 -2.800e-08 -4.956e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  345.09 -21.92 814.166 / 0.018 -2.800e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  345.116 -23.394 804.276 / 0.148 -0.718 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  598.567 -60.742 523.62 / -0.881 1.383 -0.907> #<bodyset-link #X130e0d78 RLEG_LINK4  221.333 -73.952 479.802 / 0.008 0.068 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  218.707 -79.882 440.331 / 0.008 0.068 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  467.313 136.388 936.166 / 0.017 -2.800e-08 -4.852e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  467.313 136.388 814.166 / 0.017 -2.800e-08 -0.11> #<bodyset-link #X6fe1bf0 LLEG_LINK2  467.332 135.29 804.227 / 0.179 -0.97 -0.196> #<bodyset-link #X6f7a6c0 LLEG_LINK3  783.082 117.473 593.551 / -0.605 1.383 -0.63> #<bodyset-link #X1316f038 LLEG_LINK4  407.631 104.643 536.349 / 0.014 0.033 -0.11> #<bodyset-link #X6f6d3c0 LLEG_LINK5  406.383 100.229 496.613 / 0.014 0.033 1.568e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(390.134 95.0601 1221.41) :target-centroid-pos #f(390.134 95.0601 1221.41) :fix-limbs-target-coords (#<coordinates #X14128e10  0.239 -100.0 8.141 / 1.692e-10 4.134e-19 5.582e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.791542 0.611114 -2.800114e-08 406.201) (-0.611114 0.791542 -8.218238e-19 57.234) (2.216409e-08 1.711190e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint383144696) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(42.1793 23.3959 0.0 0.0 0.0 -21.5152) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.238883 -100.0 8.1411) :rot #2f((1.0 -1.691653e-10 5.078328e-19) (1.691653e-10 1.0 -5.581675e-10) (-4.134103e-19 5.581675e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.426248e-18 2.842171e-14) (0.0 1.0 0.0 1.421085e-14) (3.426248e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.039578e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (3.039578e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.426248e-18 2.842171e-14) (0.0 1.0 0.0 1.421085e-14) (3.426248e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.039578e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (3.039578e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(390.134 95.0601 1221.41) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.426248e-18 2.842171e-14) (0.0 1.0 0.0 1.421085e-14) (3.426248e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.039578e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (3.039578e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(390.134 95.0601 1221.41) :target-centroid-pos #f(390.134 95.0601 1221.41) :fix-limbs-target-coords (list #<coordinates #X14128e10  0.239 -100.0 8.141 / 1.692e-10 4.134e-19 5.582e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-57-58-60-54-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-57-58-60-54-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-126.041 -1.50985 -277.355)/(304.655/1)
;; dif-rot : #f(0.002308 -0.073914 -0.037151)/(0.082757/0.017453)
;; dif-pos : #f(26.4915 1.23652 -0.612265)/(26.5274/1)
;; dif-rot : #f(0.004427 -0.17189 -0.02757)/(0.174143/0.017453)
;; cog-dif : #f(2.98687 2.10289)/(3.65288/5.0)
;;  coords : #<coordinates #X1325f8e0  440.633 58.546 -91.834 / -0.607 -2.300e-08 1.597e-08>
;;  angles : (#f(42.623 24.5697 0.0 0.0 0.0 -21.0694) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X14514cc0  0.281 -100.0 9.064 / 1.691e-10 3.742e-19 5.581e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  146.3 -92.805 276.349 / 0.037 0.074 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  374.062 98.051 405.269 / 0.027 0.172 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  440.633 58.546 926.666 / -0.607 -2.300e-08 1.597e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  383.591 -23.589 936.166 / 0.047 -2.797e-08 -1.314e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  383.591 -23.589 814.166 / 0.047 -2.797e-08 -0.132> #<bodyset-link #X6f14d58 RLEG_LINK2  383.653 -24.9 804.253 / 0.102 -0.396 -0.143> #<bodyset-link #X6f38680 RLEG_LINK3  533.415 -63.852 457.188 / -0.822 1.399 -0.876> #<bodyset-link #X130e0d78 RLEG_LINK4  156.41 -87.069 415.619 / 0.037 0.074 -0.132> #<bodyset-link #X12a84e10 RLEG_LINK5  153.678 -92.437 376.075 / 0.037 0.074 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  440.633 58.546 926.666 / -0.607 -2.300e-08 1.597e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  497.675 140.682 936.166 / 0.048 -2.797e-08 -1.345e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.675 140.682 814.166 / 0.048 -2.797e-08 -0.118> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.731 139.506 804.236 / 0.174 -0.815 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.327 122.477 547.455 / -1.421 1.452 -1.47> #<bodyset-link #X1316f038 LLEG_LINK4  397.819 103.692 542.923 / 0.027 0.172 -0.12> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.158 98.728 503.795 / 0.027 0.172 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  146.3 -92.805 276.349 / 0.037 0.074 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  374.062 98.051 405.269 / 0.027 0.172 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  440.633 58.546 926.666 / -0.607 -2.300e-08 1.597e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  383.591 -23.589 936.166 / 0.047 -2.797e-08 -1.314e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  383.591 -23.589 814.166 / 0.047 -2.797e-08 -0.132> #<bodyset-link #X6f14d58 RLEG_LINK2  383.653 -24.9 804.253 / 0.102 -0.396 -0.143> #<bodyset-link #X6f38680 RLEG_LINK3  533.415 -63.852 457.188 / -0.822 1.399 -0.876> #<bodyset-link #X130e0d78 RLEG_LINK4  156.41 -87.069 415.619 / 0.037 0.074 -0.132> #<bodyset-link #X12a84e10 RLEG_LINK5  153.678 -92.437 376.075 / 0.037 0.074 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  440.633 58.546 926.666 / -0.607 -2.300e-08 1.597e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  497.675 140.682 936.166 / 0.048 -2.797e-08 -1.345e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.675 140.682 814.166 / 0.048 -2.797e-08 -0.118> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.731 139.506 804.236 / 0.174 -0.815 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.327 122.477 547.455 / -1.421 1.452 -1.47> #<bodyset-link #X1316f038 LLEG_LINK4  397.819 103.692 542.923 / 0.027 0.172 -0.12> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.158 98.728 503.795 / 0.027 0.172 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(390.729 95.3576 1221.59) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  440.633 58.546 926.666 / -0.607 -2.300e-08 1.597e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  146.3 -92.805 276.349 / 0.037 0.074 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  374.062 98.051 405.269 / 0.027 0.172 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  383.591 -23.589 936.166 / 0.047 -2.797e-08 -1.314e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  383.591 -23.589 814.166 / 0.047 -2.797e-08 -0.132> #<bodyset-link #X6f14d58 RLEG_LINK2  383.653 -24.9 804.253 / 0.102 -0.396 -0.143> #<bodyset-link #X6f38680 RLEG_LINK3  533.415 -63.852 457.188 / -0.822 1.399 -0.876> #<bodyset-link #X130e0d78 RLEG_LINK4  156.41 -87.069 415.619 / 0.037 0.074 -0.132> #<bodyset-link #X12a84e10 RLEG_LINK5  153.678 -92.437 376.075 / 0.037 0.074 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.675 140.682 936.166 / 0.048 -2.797e-08 -1.345e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.675 140.682 814.166 / 0.048 -2.797e-08 -0.118> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.731 139.506 804.236 / 0.174 -0.815 -0.172> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.327 122.477 547.455 / -1.421 1.452 -1.47> #<bodyset-link #X1316f038 LLEG_LINK4  397.819 103.692 542.923 / 0.027 0.172 -0.12> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.158 98.728 503.795 / 0.027 0.172 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(390.729 95.3576 1221.59) :target-centroid-pos #f(390.729 95.3576 1221.59) :fix-limbs-target-coords (#<coordinates #X14514cc0  0.281 -100.0 9.064 / 1.691e-10 3.742e-19 5.581e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.821355 0.570418 -2.800114e-08 440.633) (-0.570418 0.821355 -8.218221e-19 58.5463) (2.299886e-08 1.597235e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint792711992) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(42.623 24.5697 0.0 0.0 0.0 -21.0694) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.280821 -100.0 9.06388) :rot #2f((1.0 -1.691353e-10 4.685697e-19) (1.691353e-10 1.0 -5.580686e-10) (-3.741808e-19 5.580686e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.217723e-19 1.421085e-14) (0.0 1.0 0.0 1.421085e-14) (-5.217723e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.539094e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.539094e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.217723e-19 1.421085e-14) (0.0 1.0 0.0 1.421085e-14) (-5.217723e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.539094e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.539094e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(390.729 95.3576 1221.59) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.217723e-19 1.421085e-14) (0.0 1.0 0.0 1.421085e-14) (-5.217723e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.539094e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.539094e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(390.729 95.3576 1221.59) :target-centroid-pos #f(390.729 95.3576 1221.59) :fix-limbs-target-coords (list #<coordinates #X14514cc0  0.281 -100.0 9.064 / 1.691e-10 3.742e-19 5.581e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-57-94-57-30-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-57-94-57-30-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-135.563 -13.2544 -289.225)/(319.693/1)
;; dif-rot : #f(0.001744 -0.083559 -0.02466)/(0.08714/0.017453)
;; dif-pos : #f(25.4174 0.870041 -0.841348)/(25.4462/1)
;; dif-rot : #f(0.003138 -0.168944 -0.014608)/(0.169603/0.017453)
;; cog-dif : #f(2.66069 1.48518)/(3.04713/5.0)
;;  coords : #<coordinates #X1325f8e0  440.185 58.729 -91.834 / -0.614 -2.288e-08 1.614e-08>
;;  angles : (#f(43.0363 25.788 0.0 0.0 0.0 -20.5637) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X15bf0a30  0.327 -100.0 10.035 / 1.691e-10 3.313e-19 5.580e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  159.179 -82.619 286.925 / 0.025 0.084 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  375.116 98.771 405.236 / 0.014 0.169 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  440.185 58.729 926.666 / -0.614 -2.288e-08 1.614e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  382.538 -22.983 936.166 / 0.035 -2.798e-08 -9.743e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  382.538 -22.983 814.166 / 0.035 -2.798e-08 -0.121> #<bodyset-link #X6f14d58 RLEG_LINK2  382.58 -24.186 804.239 / 0.093 -0.444 -0.134> #<bodyset-link #X6f38680 RLEG_LINK3  548.392 -59.669 464.169 / -0.836 1.414 -0.877> #<bodyset-link #X130e0d78 RLEG_LINK4  170.717 -77.431 426.144 / 0.025 0.084 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  167.522 -82.342 386.576 / 0.025 0.084 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  440.185 58.729 926.666 / -0.614 -2.288e-08 1.614e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  497.831 140.442 936.166 / 0.035 -2.798e-08 -9.824e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  497.831 140.442 814.166 / 0.035 -2.798e-08 -0.12> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.873 139.243 804.239 / 0.165 -0.818 -0.176> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.232 118.181 548.591 / -1.412 1.45 -1.448> #<bodyset-link #X1316f038 LLEG_LINK4  398.532 104.169 542.95 / 0.014 0.169 -0.122> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.927 99.206 503.812 / 0.014 0.169 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  159.179 -82.619 286.925 / 0.025 0.084 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  375.116 98.771 405.236 / 0.014 0.169 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  440.185 58.729 926.666 / -0.614 -2.288e-08 1.614e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  382.538 -22.983 936.166 / 0.035 -2.798e-08 -9.743e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  382.538 -22.983 814.166 / 0.035 -2.798e-08 -0.121> #<bodyset-link #X6f14d58 RLEG_LINK2  382.58 -24.186 804.239 / 0.093 -0.444 -0.134> #<bodyset-link #X6f38680 RLEG_LINK3  548.392 -59.669 464.169 / -0.836 1.414 -0.877> #<bodyset-link #X130e0d78 RLEG_LINK4  170.717 -77.431 426.144 / 0.025 0.084 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  167.522 -82.342 386.576 / 0.025 0.084 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  440.185 58.729 926.666 / -0.614 -2.288e-08 1.614e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  497.831 140.442 936.166 / 0.035 -2.798e-08 -9.824e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  497.831 140.442 814.166 / 0.035 -2.798e-08 -0.12> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.873 139.243 804.239 / 0.165 -0.818 -0.176> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.232 118.181 548.591 / -1.412 1.45 -1.448> #<bodyset-link #X1316f038 LLEG_LINK4  398.532 104.169 542.95 / 0.014 0.169 -0.122> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.927 99.206 503.812 / 0.014 0.169 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(391.288 95.6372 1221.77) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  440.185 58.729 926.666 / -0.614 -2.288e-08 1.614e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  159.179 -82.619 286.925 / 0.025 0.084 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  375.116 98.771 405.236 / 0.014 0.169 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  382.538 -22.983 936.166 / 0.035 -2.798e-08 -9.743e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  382.538 -22.983 814.166 / 0.035 -2.798e-08 -0.121> #<bodyset-link #X6f14d58 RLEG_LINK2  382.58 -24.186 804.239 / 0.093 -0.444 -0.134> #<bodyset-link #X6f38680 RLEG_LINK3  548.392 -59.669 464.169 / -0.836 1.414 -0.877> #<bodyset-link #X130e0d78 RLEG_LINK4  170.717 -77.431 426.144 / 0.025 0.084 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  167.522 -82.342 386.576 / 0.025 0.084 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.831 140.442 936.166 / 0.035 -2.798e-08 -9.824e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  497.831 140.442 814.166 / 0.035 -2.798e-08 -0.12> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.873 139.243 804.239 / 0.165 -0.818 -0.176> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.232 118.181 548.591 / -1.412 1.45 -1.448> #<bodyset-link #X1316f038 LLEG_LINK4  398.532 104.169 542.95 / 0.014 0.169 -0.122> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.927 99.206 503.812 / 0.014 0.169 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(391.288 95.6372 1221.77) :target-centroid-pos #f(391.288 95.6372 1221.77) :fix-limbs-target-coords (#<coordinates #X15bf0a30  0.327 -100.0 10.035 / 1.691e-10 3.313e-19 5.580e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.817122 0.576465 -2.800114e-08 440.185) (-0.576465 0.817122 -8.218238e-19 58.7295) (2.288035e-08 1.614167e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint364844856) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(43.0363 25.788 0.0 0.0 0.0 -20.5637) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.327379 -100.0 10.035) :rot #2f((1.0 -1.691025e-10 4.256101e-19) (1.691025e-10 1.0 -5.579604e-10) (-3.312579e-19 5.579604e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -3.469447e-18 9.358020e-18 2.842171e-14) (3.469447e-18 1.0 2.168404e-19 -1.421085e-14) (-9.358020e-18 -2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.944167e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (9.944167e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -3.469447e-18 9.358020e-18 2.842171e-14) (3.469447e-18 1.0 2.168404e-19 -1.421085e-14) (-9.358020e-18 -2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.944167e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (9.944167e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(391.288 95.6372 1221.77) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -3.469447e-18 9.358020e-18 2.842171e-14) (3.469447e-18 1.0 2.168404e-19 -1.421085e-14) (-9.358020e-18 -2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.944167e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (9.944167e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(391.288 95.6372 1221.77) :target-centroid-pos #f(391.288 95.6372 1221.77) :fix-limbs-target-coords (list #<coordinates #X15bf0a30  0.327 -100.0 10.035 / 1.691e-10 3.313e-19 5.580e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-58-29-92-09-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-58-29-92-09-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-271.592 -19.2005 -413.896)/(495.42/1)
;; dif-rot : #f(0.001273 -0.020611 -0.025015)/(0.032437/0.017453)
;; dif-pos : #f(2.32936 -1.12485 -1.97881)/(3.25682/1)
;; dif-rot : #f(-5.619402e-05 0.001208 -0.026991)/(0.027018/0.017453)
;; cog-dif : #f(45.1733 5.06827)/(45.4567/5.0)
;;  coords : #<coordinates #X1325f8e0  383.492 53.224 -91.834 / -0.624 -2.272e-08 1.636e-08>
;;  angles : (#f(43.421 27.0513 0.0 0.0 0.0 -19.9995) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X162196c8  0.379 -100.0 11.054 / 1.691e-10 2.845e-19 5.578e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  279.87 -73.383 419.241 / 0.025 0.021 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  397.653 101.061 402.107 / 0.027 -0.001 3.988e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  383.492 53.224 926.666 / -0.624 -2.272e-08 1.636e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  325.066 -27.932 936.166 / 0.028 -2.799e-08 -7.864e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  325.066 -27.932 814.166 / 0.028 -2.799e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  325.107 -29.41 804.276 / 0.285 -1.04 -0.296> #<bodyset-link #X6f38680 RLEG_LINK3  657.074 -47.59 620.245 / -0.7 1.35 -0.74> #<bodyset-link #X130e0d78 RLEG_LINK4  282.597 -67.299 558.772 / 0.025 0.021 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  281.93 -73.23 519.22 / 0.025 0.021 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  383.492 53.224 926.666 / -0.624 -2.272e-08 1.636e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  441.919 134.38 936.166 / 0.027 -2.799e-08 -7.522e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  441.919 134.38 814.166 / 0.027 -2.799e-08 -0.103> #<bodyset-link #X6fe1bf0 LLEG_LINK2  441.946 133.357 804.219 / 0.2 -1.032 -0.201> #<bodyset-link #X6f7a6c0 LLEG_LINK3  770.232 122.503 613.141 / -0.463 1.356 -0.5> #<bodyset-link #X1316f038 LLEG_LINK4  397.374 105.147 541.897 / 0.027 -0.001 -0.103> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.532 101.054 502.107 / 0.027 -0.001 3.988e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  279.87 -73.383 419.241 / 0.025 0.021 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  397.653 101.061 402.107 / 0.027 -0.001 3.988e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  383.492 53.224 926.666 / -0.624 -2.272e-08 1.636e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  325.066 -27.932 936.166 / 0.028 -2.799e-08 -7.864e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  325.066 -27.932 814.166 / 0.028 -2.799e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  325.107 -29.41 804.276 / 0.285 -1.04 -0.296> #<bodyset-link #X6f38680 RLEG_LINK3  657.074 -47.59 620.245 / -0.7 1.35 -0.74> #<bodyset-link #X130e0d78 RLEG_LINK4  282.597 -67.299 558.772 / 0.025 0.021 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  281.93 -73.23 519.22 / 0.025 0.021 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  383.492 53.224 926.666 / -0.624 -2.272e-08 1.636e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  441.919 134.38 936.166 / 0.027 -2.799e-08 -7.522e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  441.919 134.38 814.166 / 0.027 -2.799e-08 -0.103> #<bodyset-link #X6fe1bf0 LLEG_LINK2  441.946 133.357 804.219 / 0.2 -1.032 -0.201> #<bodyset-link #X6f7a6c0 LLEG_LINK3  770.232 122.503 613.141 / -0.463 1.356 -0.5> #<bodyset-link #X1316f038 LLEG_LINK4  397.374 105.147 541.897 / 0.027 -0.001 -0.103> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.532 101.054 502.107 / 0.027 -0.001 3.988e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(391.814 95.8999 1221.95) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  383.492 53.224 926.666 / -0.624 -2.272e-08 1.636e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  279.87 -73.383 419.241 / 0.025 0.021 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  397.653 101.061 402.107 / 0.027 -0.001 3.988e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  325.066 -27.932 936.166 / 0.028 -2.799e-08 -7.864e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  325.066 -27.932 814.166 / 0.028 -2.799e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  325.107 -29.41 804.276 / 0.285 -1.04 -0.296> #<bodyset-link #X6f38680 RLEG_LINK3  657.074 -47.59 620.245 / -0.7 1.35 -0.74> #<bodyset-link #X130e0d78 RLEG_LINK4  282.597 -67.299 558.772 / 0.025 0.021 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  281.93 -73.23 519.22 / 0.025 0.021 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  441.919 134.38 936.166 / 0.027 -2.799e-08 -7.522e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  441.919 134.38 814.166 / 0.027 -2.799e-08 -0.103> #<bodyset-link #X6fe1bf0 LLEG_LINK2  441.946 133.357 804.219 / 0.2 -1.032 -0.201> #<bodyset-link #X6f7a6c0 LLEG_LINK3  770.232 122.503 613.141 / -0.463 1.356 -0.5> #<bodyset-link #X1316f038 LLEG_LINK4  397.374 105.147 541.897 / 0.027 -0.001 -0.103> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.532 101.054 502.107 / 0.027 -0.001 3.988e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(391.814 95.8999 1221.95) :target-centroid-pos #f(391.814 95.8999 1221.95) :fix-limbs-target-coords (#<coordinates #X162196c8  0.379 -100.0 11.054 / 1.691e-10 2.845e-19 5.578e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.811564 0.584264 -2.800114e-08 383.492) (-0.584264 0.811564 -8.218221e-19 53.2239) (2.272471e-08 1.636006e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint394695920) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(43.421 27.0513 0.0 0.0 0.0 -19.9995) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.37879 -100.0 11.0543) :rot #2f((1.0 -1.690667e-10 3.788101e-19) (1.690667e-10 1.0 -5.578425e-10) (-2.844978e-19 5.578425e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.162129e-18 0.0) (0.0 1.0 0.0 0.0) (-1.162129e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.941823e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.941823e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.162129e-18 0.0) (0.0 1.0 0.0 0.0) (-1.162129e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.941823e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.941823e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(391.814 95.8999 1221.95) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.162129e-18 0.0) (0.0 1.0 0.0 0.0) (-1.162129e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.941823e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.941823e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(391.814 95.8999 1221.95) :target-centroid-pos #f(391.814 95.8999 1221.95) :fix-limbs-target-coords (list #<coordinates #X162196c8  0.379 -100.0 11.054 / 1.691e-10 2.845e-19 5.578e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-58-63-81-99-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-58-63-81-99-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-160.387 -21.2186 -582.151)/(604.214/1)
;; dif-rot : #f(0.013451 -0.252776 -0.07603)/(0.264306/0.017453)
;; dif-pos : #f(32.194 5.84424 -1.17896)/(32.7414/1)
;; dif-rot : #f(0.01528 -0.189836 -0.088377)/(0.209956/0.017453)
;; cog-dif : #f(-3.48745 1.02327)/(3.63447/5.0)
;;  coords : #<coordinates #X1325f8e0  431.955 49.769 -91.834 / -0.719 -2.107e-08 1.844e-08>
;;  angles : (#f(43.7787 28.3601 0.0 0.0 0.0 -19.3778) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X167714c0  0.435 -100.0 12.121 / 1.690e-10 2.338e-19 5.577e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  298.788 -53.761 535.497 / 0.076 0.253 -0.004> #<cascaded-coords #X12422518 :lleg-end-coords  369.266 91.429 407.417 / 0.088 0.19 -0.007>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  431.955 49.769 926.666 / -0.719 -2.107e-08 1.844e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  366.083 -25.47 936.166 / 0.106 -2.784e-08 -2.972e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  366.083 -25.47 814.166 / 0.106 -2.784e-08 -0.117> #<bodyset-link #X6f14d58 RLEG_LINK2  366.207 -26.63 804.235 / 0.351 -1.119 -0.271> #<bodyset-link #X6f38680 RLEG_LINK3  710.533 -8.753 644.485 / -2.003 1.435 -2.106> #<bodyset-link #X130e0d78 RLEG_LINK4  333.268 -45.915 670.756 / 0.076 0.253 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  323.721 -51.476 632.312 / 0.076 0.253 -0.004>) (#<bodyset-link #X6ee5ff8 BODY  431.955 49.769 926.666 / -0.719 -2.107e-08 1.844e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  497.826 125.009 936.166 / 0.101 -2.786e-08 -2.809e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.826 125.009 814.166 / 0.101 -2.786e-08 -0.065> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.891 124.363 804.187 / 0.169 -0.808 -0.094> #<bodyset-link #X6f7a6c0 LLEG_LINK3  773.42 135.067 542.712 / -1.555 1.506 -1.655> #<bodyset-link #X1316f038 LLEG_LINK4  395.33 97.077 544.803 / 0.088 0.19 -0.066> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.043 93.782 505.61 / 0.088 0.19 -0.007>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  298.788 -53.761 535.497 / 0.076 0.253 -0.004> #<cascaded-coords #X12422518 :lleg-end-coords  369.266 91.429 407.417 / 0.088 0.19 -0.007>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  431.955 49.769 926.666 / -0.719 -2.107e-08 1.844e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  366.083 -25.47 936.166 / 0.106 -2.784e-08 -2.972e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  366.083 -25.47 814.166 / 0.106 -2.784e-08 -0.117> #<bodyset-link #X6f14d58 RLEG_LINK2  366.207 -26.63 804.235 / 0.351 -1.119 -0.271> #<bodyset-link #X6f38680 RLEG_LINK3  710.533 -8.753 644.485 / -2.003 1.435 -2.106> #<bodyset-link #X130e0d78 RLEG_LINK4  333.268 -45.915 670.756 / 0.076 0.253 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  323.721 -51.476 632.312 / 0.076 0.253 -0.004>) (#<bodyset-link #X6ee5ff8 BODY  431.955 49.769 926.666 / -0.719 -2.107e-08 1.844e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  497.826 125.009 936.166 / 0.101 -2.786e-08 -2.809e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.826 125.009 814.166 / 0.101 -2.786e-08 -0.065> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.891 124.363 804.187 / 0.169 -0.808 -0.094> #<bodyset-link #X6f7a6c0 LLEG_LINK3  773.42 135.067 542.712 / -1.555 1.506 -1.655> #<bodyset-link #X1316f038 LLEG_LINK4  395.33 97.077 544.803 / 0.088 0.19 -0.066> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.043 93.782 505.61 / 0.088 0.19 -0.007>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(392.308 96.1468 1222.14) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  431.955 49.769 926.666 / -0.719 -2.107e-08 1.844e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  298.788 -53.761 535.497 / 0.076 0.253 -0.004> #<cascaded-coords #X12422518 :lleg-end-coords  369.266 91.429 407.417 / 0.088 0.19 -0.007>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  366.083 -25.47 936.166 / 0.106 -2.784e-08 -2.972e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  366.083 -25.47 814.166 / 0.106 -2.784e-08 -0.117> #<bodyset-link #X6f14d58 RLEG_LINK2  366.207 -26.63 804.235 / 0.351 -1.119 -0.271> #<bodyset-link #X6f38680 RLEG_LINK3  710.533 -8.753 644.485 / -2.003 1.435 -2.106> #<bodyset-link #X130e0d78 RLEG_LINK4  333.268 -45.915 670.756 / 0.076 0.253 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  323.721 -51.476 632.312 / 0.076 0.253 -0.004>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.826 125.009 936.166 / 0.101 -2.786e-08 -2.809e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.826 125.009 814.166 / 0.101 -2.786e-08 -0.065> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.891 124.363 804.187 / 0.169 -0.808 -0.094> #<bodyset-link #X6f7a6c0 LLEG_LINK3  773.42 135.067 542.712 / -1.555 1.506 -1.655> #<bodyset-link #X1316f038 LLEG_LINK4  395.33 97.077 544.803 / 0.088 0.19 -0.066> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.043 93.782 505.61 / 0.088 0.19 -0.007>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(392.308 96.1468 1222.14) :target-centroid-pos #f(392.308 96.1468 1222.14) :fix-limbs-target-coords (#<coordinates #X167714c0  0.435 -100.0 12.121 / 1.690e-10 2.338e-19 5.577e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.752392 0.658715 -2.800114e-08 431.955) (-0.658715 0.752392 -8.218221e-19 49.7693) (2.106785e-08 1.844477e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint328492256) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(43.7787 28.3601 0.0 0.0 0.0 -19.3778) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.43529 -100.0 12.1214) :rot #2f((1.0 -1.690280e-10 3.280285e-19) (1.690280e-10 1.0 -5.577145e-10) (-2.337595e-19 5.577145e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.247407e-35 6.049848e-17 0.0) (5.247407e-35 1.0 -1.734723e-18 1.421085e-14) (-6.049848e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.324139e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (9.324139e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.247407e-35 6.049848e-17 0.0) (5.247407e-35 1.0 -1.734723e-18 1.421085e-14) (-6.049848e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.324139e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (9.324139e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(392.308 96.1468 1222.14) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.247407e-35 6.049848e-17 0.0) (5.247407e-35 1.0 -1.734723e-18 1.421085e-14) (-6.049848e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.324139e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (9.324139e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(392.308 96.1468 1222.14) :target-centroid-pos #f(392.308 96.1468 1222.14) :fix-limbs-target-coords (list #<coordinates #X167714c0  0.435 -100.0 12.121 / 1.690e-10 2.338e-19 5.577e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-58-98-40-04-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-58-98-40-04-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-173.551 -24.1893 -579.023)/(604.957/1)
;; dif-rot : #f(0.011812 -0.239002 -0.070103)/(0.249351/0.017453)
;; dif-pos : #f(31.6985 5.89552 -1.28217)/(32.2676/1)
;; dif-rot : #f(0.015038 -0.18988 -0.080549)/(0.206806/0.017453)
;; cog-dif : #f(-3.94853 0.816661)/(4.0321/5.0)
;;  coords : #<coordinates #X1325f8e0  432.961 50.66 -91.834 / -0.714 -2.116e-08 1.834e-08>
;;  angles : (#f(44.1109 29.7147 0.0 0.0 0.0 -18.6997) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X242e2ec8  0.497 -100.0 13.236 / 1.690e-10 1.789e-19 5.576e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  303.7 -52.48 534.564 / 0.07 0.239 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  369.708 91.663 407.429 / 0.08 0.19 -0.007>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  432.961 50.66 926.666 / -0.714 -2.116e-08 1.834e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  367.455 -24.897 936.166 / 0.099 -2.786e-08 -2.761e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  367.455 -24.897 814.166 / 0.099 -2.786e-08 -0.117> #<bodyset-link #X6f14d58 RLEG_LINK2  367.57 -26.061 804.235 / 0.353 -1.133 -0.279> #<bodyset-link #X6f38680 RLEG_LINK3  714.165 -10.067 649.265 / -1.917 1.441 -2.013> #<bodyset-link #X130e0d78 RLEG_LINK4  336.36 -45.013 670.294 / 0.07 0.239 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  327.312 -50.478 631.716 / 0.07 0.239 -0.003>) (#<bodyset-link #X6ee5ff8 BODY  432.961 50.66 926.666 / -0.714 -2.116e-08 1.834e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  498.467 126.218 936.166 / 0.094 -2.788e-08 -2.621e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.467 126.218 814.166 / 0.094 -2.788e-08 -0.071> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.533 125.514 804.191 / 0.168 -0.807 -0.102> #<bodyset-link #X6f7a6c0 LLEG_LINK3  774.132 132.808 542.672 / -1.556 1.5 -1.65> #<bodyset-link #X1316f038 LLEG_LINK4  395.792 97.392 544.797 / 0.08 0.19 -0.072> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.501 93.918 505.621 / 0.08 0.19 -0.007>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  303.7 -52.48 534.564 / 0.07 0.239 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  369.708 91.663 407.429 / 0.08 0.19 -0.007>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  432.961 50.66 926.666 / -0.714 -2.116e-08 1.834e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  367.455 -24.897 936.166 / 0.099 -2.786e-08 -2.761e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  367.455 -24.897 814.166 / 0.099 -2.786e-08 -0.117> #<bodyset-link #X6f14d58 RLEG_LINK2  367.57 -26.061 804.235 / 0.353 -1.133 -0.279> #<bodyset-link #X6f38680 RLEG_LINK3  714.165 -10.067 649.265 / -1.917 1.441 -2.013> #<bodyset-link #X130e0d78 RLEG_LINK4  336.36 -45.013 670.294 / 0.07 0.239 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  327.312 -50.478 631.716 / 0.07 0.239 -0.003>) (#<bodyset-link #X6ee5ff8 BODY  432.961 50.66 926.666 / -0.714 -2.116e-08 1.834e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  498.467 126.218 936.166 / 0.094 -2.788e-08 -2.621e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.467 126.218 814.166 / 0.094 -2.788e-08 -0.071> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.533 125.514 804.191 / 0.168 -0.807 -0.102> #<bodyset-link #X6f7a6c0 LLEG_LINK3  774.132 132.808 542.672 / -1.556 1.5 -1.65> #<bodyset-link #X1316f038 LLEG_LINK4  395.792 97.392 544.797 / 0.08 0.19 -0.072> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.501 93.918 505.621 / 0.08 0.19 -0.007>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(392.772 96.3789 1222.33) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  432.961 50.66 926.666 / -0.714 -2.116e-08 1.834e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  303.7 -52.48 534.564 / 0.07 0.239 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  369.708 91.663 407.429 / 0.08 0.19 -0.007>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  367.455 -24.897 936.166 / 0.099 -2.786e-08 -2.761e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  367.455 -24.897 814.166 / 0.099 -2.786e-08 -0.117> #<bodyset-link #X6f14d58 RLEG_LINK2  367.57 -26.061 804.235 / 0.353 -1.133 -0.279> #<bodyset-link #X6f38680 RLEG_LINK3  714.165 -10.067 649.265 / -1.917 1.441 -2.013> #<bodyset-link #X130e0d78 RLEG_LINK4  336.36 -45.013 670.294 / 0.07 0.239 -0.121> #<bodyset-link #X12a84e10 RLEG_LINK5  327.312 -50.478 631.716 / 0.07 0.239 -0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.467 126.218 936.166 / 0.094 -2.788e-08 -2.621e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.467 126.218 814.166 / 0.094 -2.788e-08 -0.071> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.533 125.514 804.191 / 0.168 -0.807 -0.102> #<bodyset-link #X6f7a6c0 LLEG_LINK3  774.132 132.808 542.672 / -1.556 1.5 -1.65> #<bodyset-link #X1316f038 LLEG_LINK4  395.792 97.392 544.797 / 0.08 0.19 -0.072> #<bodyset-link #X6f6d3c0 LLEG_LINK5  388.501 93.918 505.621 / 0.08 0.19 -0.007>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(392.772 96.3789 1222.33) :target-centroid-pos #f(392.772 96.3789 1222.33) :fix-limbs-target-coords (#<coordinates #X242e2ec8  0.497 -100.0 13.236 / 1.690e-10 1.789e-19 5.576e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.755574 0.655064 -2.800114e-08 432.961) (-0.655064 0.755574 -8.218221e-19 50.6604) (2.115692e-08 1.834253e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint836817336) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(44.1109 29.7147 0.0 0.0 0.0 -18.6997) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.49711 -100.0 13.2361) :rot #2f((1.0 -1.689860e-10 2.731271e-19) (1.689860e-10 1.0 -5.575762e-10) (-1.789049e-19 5.575762e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.884684e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -2.775558e-17 5.767956e-17 -5.684342e-14) (2.775558e-17 1.0 3.469447e-18 -7.105427e-15) (-5.767956e-17 -3.469447e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.884684e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -2.775558e-17 5.767956e-17 -5.684342e-14) (2.775558e-17 1.0 3.469447e-18 -7.105427e-15) (-5.767956e-17 -3.469447e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(392.772 96.3789 1222.33) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.884684e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -2.775558e-17 5.767956e-17 -5.684342e-14) (2.775558e-17 1.0 3.469447e-18 -7.105427e-15) (-5.767956e-17 -3.469447e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(392.772 96.3789 1222.33) :target-centroid-pos #f(392.772 96.3789 1222.33) :fix-limbs-target-coords (list #<coordinates #X242e2ec8  0.497 -100.0 13.236 / 1.690e-10 1.789e-19 5.576e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-59-34-34-32-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-59-34-34-32-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-1.58237 0.138718 -2.52166)/(2.98025/1)
;; dif-rot : #f(1.578443e-07 2.136871e-06 1.722209e-05)/(1.735487e-05/0.017453)
;; dif-pos : #f(34.5905 0.953256 0.385852)/(34.6058/1)
;; dif-rot : #f(-0.001399 -0.240496 0.037052)/(0.243337/0.017453)
;; cog-dif : #f(-0.557969 0.609248)/(0.826143/5.0)
;;  coords : #<coordinates #X1325f8e0  459.514 54.984 -91.834 / -0.73 -2.086e-08 1.868e-08>
;;  angles : (#f(44.4189 31.1156 0.0 0.0 0.0 -17.9664) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X249410f8  0.564 -100.0 14.398 / 1.689e-10 1.198e-19 5.574e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.147 -100.139 16.92 / -1.722e-05 -2.137e-06 -1.573e-07> #<cascaded-coords #X12422518 :lleg-end-coords  366.316 100.313 407.997 / -0.038 0.24 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  459.514 54.984 926.666 / -0.73 -2.086e-08 1.868e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  392.812 -19.521 936.166 / -1.747e-05 -2.800e-08 4.891e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  392.812 -19.521 814.166 / -1.747e-05 -2.800e-08 -0.115> #<bodyset-link #X6f14d58 RLEG_LINK2  392.812 -20.669 804.233 / -0.068 0.53 -0.134> #<bodyset-link #X6f38680 RLEG_LINK3  199.287 -58.231 479.368 / -0.07 0.541 -0.134> #<bodyset-link #X130e0d78 RLEG_LINK4  2.147 -95.544 156.655 / -1.722e-05 -2.137e-06 -0.115> #<bodyset-link #X12a84e10 RLEG_LINK5  2.147 -100.139 116.92 / -1.722e-05 -2.137e-06 -1.573e-07>) (#<bodyset-link #X6ee5ff8 BODY  459.514 54.984 926.666 / -0.73 -2.086e-08 1.868e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  526.215 129.488 936.166 / -0.013 -2.800e-08 3.538e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  526.215 129.488 814.166 / -0.013 -2.800e-08 -0.101> #<bodyset-link #X6fe1bf0 LLEG_LINK2  526.203 128.475 804.218 / 0.078 -0.725 -0.136> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.085 96.574 522.379 / -2.093 1.455 -2.078> #<bodyset-link #X1316f038 LLEG_LINK4  399.75 103.545 543.757 / -0.038 0.24 -0.105> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.126 99.731 505.12 / -0.038 0.24 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.147 -100.139 16.92 / -1.722e-05 -2.137e-06 -1.573e-07> #<cascaded-coords #X12422518 :lleg-end-coords  366.316 100.313 407.997 / -0.038 0.24 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  459.514 54.984 926.666 / -0.73 -2.086e-08 1.868e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  392.812 -19.521 936.166 / -1.747e-05 -2.800e-08 4.891e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  392.812 -19.521 814.166 / -1.747e-05 -2.800e-08 -0.115> #<bodyset-link #X6f14d58 RLEG_LINK2  392.812 -20.669 804.233 / -0.068 0.53 -0.134> #<bodyset-link #X6f38680 RLEG_LINK3  199.287 -58.231 479.368 / -0.07 0.541 -0.134> #<bodyset-link #X130e0d78 RLEG_LINK4  2.147 -95.544 156.655 / -1.722e-05 -2.137e-06 -0.115> #<bodyset-link #X12a84e10 RLEG_LINK5  2.147 -100.139 116.92 / -1.722e-05 -2.137e-06 -1.573e-07>) (#<bodyset-link #X6ee5ff8 BODY  459.514 54.984 926.666 / -0.73 -2.086e-08 1.868e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  526.215 129.488 936.166 / -0.013 -2.800e-08 3.538e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  526.215 129.488 814.166 / -0.013 -2.800e-08 -0.101> #<bodyset-link #X6fe1bf0 LLEG_LINK2  526.203 128.475 804.218 / 0.078 -0.725 -0.136> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.085 96.574 522.379 / -2.093 1.455 -2.078> #<bodyset-link #X1316f038 LLEG_LINK4  399.75 103.545 543.757 / -0.038 0.24 -0.105> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.126 99.731 505.12 / -0.038 0.24 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(393.208 96.5969 1222.53) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  459.514 54.984 926.666 / -0.73 -2.086e-08 1.868e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.147 -100.139 16.92 / -1.722e-05 -2.137e-06 -1.573e-07> #<cascaded-coords #X12422518 :lleg-end-coords  366.316 100.313 407.997 / -0.038 0.24 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  392.812 -19.521 936.166 / -1.747e-05 -2.800e-08 4.891e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  392.812 -19.521 814.166 / -1.747e-05 -2.800e-08 -0.115> #<bodyset-link #X6f14d58 RLEG_LINK2  392.812 -20.669 804.233 / -0.068 0.53 -0.134> #<bodyset-link #X6f38680 RLEG_LINK3  199.287 -58.231 479.368 / -0.07 0.541 -0.134> #<bodyset-link #X130e0d78 RLEG_LINK4  2.147 -95.544 156.655 / -1.722e-05 -2.137e-06 -0.115> #<bodyset-link #X12a84e10 RLEG_LINK5  2.147 -100.139 116.92 / -1.722e-05 -2.137e-06 -1.573e-07>) (#<bodyset-link #X1258dac0 LLEG_LINK0  526.215 129.488 936.166 / -0.013 -2.800e-08 3.538e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  526.215 129.488 814.166 / -0.013 -2.800e-08 -0.101> #<bodyset-link #X6fe1bf0 LLEG_LINK2  526.203 128.475 804.218 / 0.078 -0.725 -0.136> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.085 96.574 522.379 / -2.093 1.455 -2.078> #<bodyset-link #X1316f038 LLEG_LINK4  399.75 103.545 543.757 / -0.038 0.24 -0.105> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.126 99.731 505.12 / -0.038 0.24 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(393.208 96.5969 1222.53) :target-centroid-pos #f(393.208 96.5969 1222.53) :fix-limbs-target-coords (#<coordinates #X249410f8  0.564 -100.0 14.398 / 1.689e-10 1.198e-19 5.574e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.745042 0.667018 -2.800114e-08 459.514) (-0.667018 0.745042 -8.218238e-19 54.9837) (2.086201e-08 1.867727e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint808148816) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(44.4189 31.1156 0.0 0.0 0.0 -17.9664) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.564483 -100.0 14.3981) :rot #2f((1.0 -1.689409e-10 2.139702e-19) (1.689409e-10 1.0 -5.574271e-10) (-1.197986e-19 5.574271e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.659210e-22 -4.440892e-16) (0.0 1.0 0.0 0.0) (1.659210e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.627687e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (5.627687e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.659210e-22 -4.440892e-16) (0.0 1.0 0.0 0.0) (1.659210e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.627687e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (5.627687e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(393.208 96.5969 1222.53) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.659210e-22 -4.440892e-16) (0.0 1.0 0.0 0.0) (1.659210e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.627687e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (5.627687e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(393.208 96.5969 1222.53) :target-centroid-pos #f(393.208 96.5969 1222.53) :fix-limbs-target-coords (list #<coordinates #X249410f8  0.564 -100.0 14.398 / 1.689e-10 1.198e-19 5.574e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-59-69-05-06-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-44-59-69-05-06-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-18.5961 -32.0497 -43.6015)/(57.2196/1)
;; dif-rot : #f(1.728314e-07 -2.019017e-08 0.047379)/(0.047379/0.017453)
;; dif-pos : #f(13.8777 -3.95799 0.159638)/(14.432/1)
;; dif-rot : #f(-0.005847 -0.097703 0.077623)/(0.124922/0.017453)
;; cog-dif : #f(-0.757912 -3.50307)/(3.58412/5.0)
;;  coords : #<coordinates #X1325f8e0  474.751 95.784 -91.834 / -0.192 -2.749e-08 5.333e-09>
;;  angles : (#f(44.7042 32.5629 0.0 0.0 0.0 -17.1788) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X24b514d8  0.638 -100.0 15.607 / 1.689e-10 5.631e-20 5.573e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  20.731 -68.867 59.209 / -0.047 1.612e-08 -1.727e-07> #<cascaded-coords #X12422518 :lleg-end-coords  386.536 105.018 401.336 / -0.078 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.75 95.784 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.703 -2.385 936.166 / -0.047 -2.797e-08 1.326e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.703 -2.385 814.166 / -0.047 -2.797e-08 -0.132> #<bodyset-link #X6f14d58 RLEG_LINK2  455.641 -3.701 804.253 / -0.108 0.431 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  293.673 -41.462 462.58 / -0.181 0.786 -0.188> #<bodyset-link #X130e0d78 RLEG_LINK4  20.98 -63.605 198.86 / -0.047 1.612e-08 -0.132> #<bodyset-link #X12a84e10 RLEG_LINK5  20.731 -68.867 159.209 / -0.047 1.612e-08 -1.727e-07>) (#<bodyset-link #X6ee5ff8 BODY  474.75 95.784 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.798 193.953 936.166 / -0.048 -2.797e-08 1.343e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.798 193.953 814.166 / -0.048 -2.797e-08 -0.293> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.659 191.069 804.592 / 0.28 -0.818 -0.436> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.579 106.249 569.102 / -1.338 1.267 -1.303> #<bodyset-link #X1316f038 LLEG_LINK4  400.886 115.335 538.955 / -0.078 0.098 -0.294> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.259 104.056 500.858 / -0.078 0.098 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  20.731 -68.867 59.209 / -0.047 1.612e-08 -1.727e-07> #<cascaded-coords #X12422518 :lleg-end-coords  386.536 105.018 401.336 / -0.078 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.75 95.784 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.703 -2.385 936.166 / -0.047 -2.797e-08 1.326e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.703 -2.385 814.166 / -0.047 -2.797e-08 -0.132> #<bodyset-link #X6f14d58 RLEG_LINK2  455.641 -3.701 804.253 / -0.108 0.431 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  293.673 -41.462 462.58 / -0.181 0.786 -0.188> #<bodyset-link #X130e0d78 RLEG_LINK4  20.98 -63.605 198.86 / -0.047 1.612e-08 -0.132> #<bodyset-link #X12a84e10 RLEG_LINK5  20.731 -68.867 159.209 / -0.047 1.612e-08 -1.727e-07>) (#<bodyset-link #X6ee5ff8 BODY  474.75 95.784 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.798 193.953 936.166 / -0.048 -2.797e-08 1.343e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.798 193.953 814.166 / -0.048 -2.797e-08 -0.293> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.659 191.069 804.592 / 0.28 -0.818 -0.436> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.579 106.249 569.102 / -1.338 1.267 -1.303> #<bodyset-link #X1316f038 LLEG_LINK4  400.886 115.335 538.955 / -0.078 0.098 -0.294> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.259 104.056 500.858 / -0.078 0.098 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(393.618 96.8019 1222.73) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.75 95.784 926.666 / -0.192 -2.749e-08 5.333e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  20.731 -68.867 59.209 / -0.047 1.612e-08 -1.727e-07> #<cascaded-coords #X12422518 :lleg-end-coords  386.536 105.018 401.336 / -0.078 0.098 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.703 -2.385 936.166 / -0.047 -2.797e-08 1.326e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.703 -2.385 814.166 / -0.047 -2.797e-08 -0.132> #<bodyset-link #X6f14d58 RLEG_LINK2  455.641 -3.701 804.253 / -0.108 0.431 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  293.673 -41.462 462.58 / -0.181 0.786 -0.188> #<bodyset-link #X130e0d78 RLEG_LINK4  20.98 -63.605 198.86 / -0.047 1.612e-08 -0.132> #<bodyset-link #X12a84e10 RLEG_LINK5  20.731 -68.867 159.209 / -0.047 1.612e-08 -1.727e-07>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.798 193.953 936.166 / -0.048 -2.797e-08 1.343e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.798 193.953 814.166 / -0.048 -2.797e-08 -0.293> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.659 191.069 804.592 / 0.28 -0.818 -0.436> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.579 106.249 569.102 / -1.338 1.267 -1.303> #<bodyset-link #X1316f038 LLEG_LINK4  400.886 115.335 538.955 / -0.078 0.098 -0.294> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.259 104.056 500.858 / -0.078 0.098 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(393.618 96.8019 1222.73) :target-centroid-pos #f(393.618 96.8019 1222.73) :fix-limbs-target-coords (#<coordinates #X24b514d8  0.638 -100.0 15.607 / 1.689e-10 5.631e-20 5.573e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981692 0.190474 -2.800114e-08 474.751) (-0.190474 0.981692 -8.218213e-19 95.7837) (2.748850e-08 5.333487e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint810921720) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(44.7042 32.5629 0.0 0.0 0.0 -17.1788) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.637639 -100.0 15.6072) :rot #2f((1.0 -1.688923e-10 1.504252e-19) (1.688923e-10 1.0 -5.572670e-10) (-5.630777e-20 5.572670e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.271806e-25 0.0) (0.0 1.0 0.0 -1.421085e-14) (8.271806e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.737610e-18 0.0) (0.0 1.0 0.0 0.0) (2.737610e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.271806e-25 0.0) (0.0 1.0 0.0 -1.421085e-14) (8.271806e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.737610e-18 0.0) (0.0 1.0 0.0 0.0) (2.737610e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(393.618 96.8019 1222.73) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.271806e-25 0.0) (0.0 1.0 0.0 -1.421085e-14) (8.271806e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.737610e-18 0.0) (0.0 1.0 0.0 0.0) (2.737610e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(393.618 96.8019 1222.73) :target-centroid-pos #f(393.618 96.8019 1222.73) :fix-limbs-target-coords (list #<coordinates #X24b514d8  0.638 -100.0 15.607 / 1.689e-10 5.631e-20 5.573e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-00-03-73-60-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-00-03-73-60-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-28.7522 -56.6588 -88.1801)/(108.686/1)
;; dif-rot : #f(2.102623e-07 2.153579e-06 0.103205)/(0.103205/0.017453)
;; dif-pos : #f(11.17 -6.58561 -0.777964)/(12.9902/1)
;; dif-rot : #f(-0.001932 -0.075855 0.126797)/(0.147767/0.017453)
;; cog-dif : #f(-0.481915 -8.02044)/(8.0349/5.0)
;;  coords : #<coordinates #X1325f8e0  471.373 99.638 -91.834 / -0.209 -2.739e-08 5.818e-09>
;;  angles : (#f(44.968 34.057 0.0 0.0 0.0 -16.3379) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X25115d30  0.717 -100.0 16.863 / 1.688e-10 -1.170e-20 5.571e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.153 -46.605 105.043 / -0.103 -2.161e-06 -9.830e-08> #<cascaded-coords #X12422518 :lleg-end-coords  389.857 107.938 401.734 / -0.127 0.076 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  471.373 99.638 926.666 / -0.209 -2.739e-08 5.818e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  450.595 1.82 936.166 / -0.103 -2.785e-08 2.885e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  450.595 1.82 814.166 / -0.103 -2.785e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  450.443 0.351 804.276 / -0.136 0.215 -0.152> #<bodyset-link #X6f38680 RLEG_LINK3  363.244 -45.716 437.296 / -0.346 1.014 -0.283> #<bodyset-link #X130e0d78 RLEG_LINK4  35.761 -40.728 244.604 / -0.103 -2.161e-06 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  35.153 -46.605 205.043 / -0.103 -2.161e-06 -9.830e-08>) (#<bodyset-link #X6ee5ff8 BODY  471.373 99.638 926.666 / -0.209 -2.739e-08 5.818e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.151 197.455 936.166 / -0.103 -2.785e-08 2.874e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.151 197.455 814.166 / -0.103 -2.785e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.84 194.441 804.637 / 0.257 -0.837 -0.469> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.936 92.249 577.628 / -1.337 1.246 -1.251> #<bodyset-link #X1316f038 LLEG_LINK4  401.804 118.958 539.445 / -0.127 0.076 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.403 107.265 501.446 / -0.127 0.076 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.153 -46.605 105.043 / -0.103 -2.161e-06 -9.830e-08> #<cascaded-coords #X12422518 :lleg-end-coords  389.857 107.938 401.734 / -0.127 0.076 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  471.373 99.638 926.666 / -0.209 -2.739e-08 5.818e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  450.595 1.82 936.166 / -0.103 -2.785e-08 2.885e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  450.595 1.82 814.166 / -0.103 -2.785e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  450.443 0.351 804.276 / -0.136 0.215 -0.152> #<bodyset-link #X6f38680 RLEG_LINK3  363.244 -45.716 437.296 / -0.346 1.014 -0.283> #<bodyset-link #X130e0d78 RLEG_LINK4  35.761 -40.728 244.604 / -0.103 -2.161e-06 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  35.153 -46.605 205.043 / -0.103 -2.161e-06 -9.830e-08>) (#<bodyset-link #X6ee5ff8 BODY  471.373 99.638 926.666 / -0.209 -2.739e-08 5.818e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.151 197.455 936.166 / -0.103 -2.785e-08 2.874e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.151 197.455 814.166 / -0.103 -2.785e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.84 194.441 804.637 / 0.257 -0.837 -0.469> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.936 92.249 577.628 / -1.337 1.246 -1.251> #<bodyset-link #X1316f038 LLEG_LINK4  401.804 118.958 539.445 / -0.127 0.076 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.403 107.265 501.446 / -0.127 0.076 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(394.003 96.9945 1222.94) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  471.373 99.638 926.666 / -0.209 -2.739e-08 5.818e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.153 -46.605 105.043 / -0.103 -2.161e-06 -9.830e-08> #<cascaded-coords #X12422518 :lleg-end-coords  389.857 107.938 401.734 / -0.127 0.076 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  450.595 1.82 936.166 / -0.103 -2.785e-08 2.885e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  450.595 1.82 814.166 / -0.103 -2.785e-08 -0.148> #<bodyset-link #X6f14d58 RLEG_LINK2  450.443 0.351 804.276 / -0.136 0.215 -0.152> #<bodyset-link #X6f38680 RLEG_LINK3  363.244 -45.716 437.296 / -0.346 1.014 -0.283> #<bodyset-link #X130e0d78 RLEG_LINK4  35.761 -40.728 244.604 / -0.103 -2.161e-06 -0.148> #<bodyset-link #X12a84e10 RLEG_LINK5  35.153 -46.605 205.043 / -0.103 -2.161e-06 -9.830e-08>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.151 197.455 936.166 / -0.103 -2.785e-08 2.874e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.151 197.455 814.166 / -0.103 -2.785e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.84 194.441 804.637 / 0.257 -0.837 -0.469> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.936 92.249 577.628 / -1.337 1.246 -1.251> #<bodyset-link #X1316f038 LLEG_LINK4  401.804 118.958 539.445 / -0.127 0.076 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.403 107.265 501.446 / -0.127 0.076 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(394.003 96.9945 1222.94) :target-centroid-pos #f(394.003 96.9945 1222.94) :fix-limbs-target-coords (#<coordinates #X25115d30  0.717 -100.0 16.863 / 1.688e-10 -1.170e-20 5.571e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.978176 0.207779 -2.800114e-08 471.373) (-0.207779 0.978176 -8.218217e-19 99.6378) (2.739004e-08 5.818058e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint323451208) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(44.968 34.057 0.0 0.0 0.0 -16.3379) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.716805 -100.0 16.863) :rot #2f((1.0 -1.688404e-10 8.236186e-20) (1.688404e-10 1.0 -5.570956e-10) (1.169746e-20 5.570956e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.128520e-23 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (5.128520e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.607859e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (-4.607859e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.128520e-23 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (5.128520e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.607859e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (-4.607859e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(394.003 96.9945 1222.94) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.128520e-23 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (5.128520e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.607859e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (-4.607859e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(394.003 96.9945 1222.94) :target-centroid-pos #f(394.003 96.9945 1222.94) :fix-limbs-target-coords (list #<coordinates #X25115d30  0.717 -100.0 16.863 / 1.688e-10 -1.170e-20 5.571e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-00-50-60-22-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-00-50-60-22-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-84.3187 -15.1371 -160.328)/(181.779/1)
;; dif-rot : #f(0.001221 -5.277237e-05 -0.003149)/(0.003378/0.017453)
;; dif-pos : #f(19.4119 7.64319 -4.73057)/(21.392/1)
;; dif-rot : #f(0.002293 -0.119179 0.004106)/(0.119271/0.017453)
;; cog-dif : #f(-4.63315 2.07161)/(5.0752/5.0)
;;  coords : #<coordinates #X1325f8e0  472.685 93.821 -91.834 / -0.154 -2.767e-08 4.292e-09>
;;  angles : (#f(45.2114 35.5979 0.0 0.0 0.0 -15.4446) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X256c71c0  0.802 -100.0 18.165 / 1.688e-10 -8.434e-20 5.569e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.081 -84.402 178.47 / 0.003 5.469e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.272 92.449 407.156 / -0.004 0.119 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  472.685 93.821 926.666 / -0.154 -2.767e-08 4.292e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.357 -4.997 936.166 / 0.003 -2.800e-08 -8.839e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  457.357 -4.997 814.166 / 0.003 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.361 -6.44 804.271 / -0.0 0.024 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  448.299 -61.279 428.358 / -0.436 1.241 -0.461> #<bodyset-link #X130e0d78 RLEG_LINK4  85.07 -78.509 318.051 / 0.003 5.469e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.086 -84.28 278.47 / 0.003 5.469e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  472.685 93.821 926.666 / -0.154 -2.767e-08 4.292e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  488.013 192.639 936.166 / 0.033 -2.799e-08 -9.350e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.013 192.639 814.166 / 0.033 -2.799e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.114 189.641 804.627 / 0.364 -0.801 -0.446> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.618 124.238 566.116 / -1.339 1.26 -1.382> #<bodyset-link #X1316f038 LLEG_LINK4  397.747 104.718 544.306 / -0.004 0.119 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.162 92.653 506.446 / -0.004 0.119 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.081 -84.402 178.47 / 0.003 5.469e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.272 92.449 407.156 / -0.004 0.119 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  472.685 93.821 926.666 / -0.154 -2.767e-08 4.292e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.357 -4.997 936.166 / 0.003 -2.800e-08 -8.839e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  457.357 -4.997 814.166 / 0.003 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.361 -6.44 804.271 / -0.0 0.024 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  448.299 -61.279 428.358 / -0.436 1.241 -0.461> #<bodyset-link #X130e0d78 RLEG_LINK4  85.07 -78.509 318.051 / 0.003 5.469e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.086 -84.28 278.47 / 0.003 5.469e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  472.685 93.821 926.666 / -0.154 -2.767e-08 4.292e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  488.013 192.639 936.166 / 0.033 -2.799e-08 -9.350e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.013 192.639 814.166 / 0.033 -2.799e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.114 189.641 804.627 / 0.364 -0.801 -0.446> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.618 124.238 566.116 / -1.339 1.26 -1.382> #<bodyset-link #X1316f038 LLEG_LINK4  397.747 104.718 544.306 / -0.004 0.119 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.162 92.653 506.446 / -0.004 0.119 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(394.365 97.1755 1223.15) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  472.685 93.821 926.666 / -0.154 -2.767e-08 4.292e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.081 -84.402 178.47 / 0.003 5.469e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.272 92.449 407.156 / -0.004 0.119 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.357 -4.997 936.166 / 0.003 -2.800e-08 -8.839e-11> #<bodyset-link #X9501ce8 RLEG_LINK1  457.357 -4.997 814.166 / 0.003 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.361 -6.44 804.271 / -0.0 0.024 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  448.299 -61.279 428.358 / -0.436 1.241 -0.461> #<bodyset-link #X130e0d78 RLEG_LINK4  85.07 -78.509 318.051 / 0.003 5.469e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.086 -84.28 278.47 / 0.003 5.469e-05 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  488.013 192.639 936.166 / 0.033 -2.799e-08 -9.350e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.013 192.639 814.166 / 0.033 -2.799e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.114 189.641 804.627 / 0.364 -0.801 -0.446> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.618 124.238 566.116 / -1.339 1.26 -1.382> #<bodyset-link #X1316f038 LLEG_LINK4  397.747 104.718 544.306 / -0.004 0.119 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.162 92.653 506.446 / -0.004 0.119 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(394.365 97.1755 1223.15) :target-centroid-pos #f(394.365 97.1755 1223.15) :fix-limbs-target-coords (#<coordinates #X256c71c0  0.802 -100.0 18.165 / 1.688e-10 -8.434e-20 5.569e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.988182 0.153284 -2.800114e-08 472.685) (-0.153284 0.988182 -8.218226e-19 93.8208) (2.767023e-08 4.292140e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint164863936) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(45.2114 35.5979 0.0 0.0 0.0 -15.4446) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.802211 -100.0 18.1652) :rot #2f((1.0 -1.687848e-10 9.652927e-21) (1.687848e-10 1.0 -5.569124e-10) (8.434435e-20 5.569124e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.582603e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-2.582603e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.582603e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-2.582603e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(394.365 97.1755 1223.15) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.582603e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-2.582603e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(394.365 97.1755 1223.15) :target-centroid-pos #f(394.365 97.1755 1223.15) :fix-limbs-target-coords (list #<coordinates #X256c71c0  0.802 -100.0 18.165 / 1.688e-10 -8.434e-20 5.569e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-00-84-80-81-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-00-84-80-81-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-84.857 -15.2457 -160.541)/(182.227/1)
;; dif-rot : #f(0.001231 -5.552622e-05 -0.003788)/(0.003983/0.017453)
;; dif-pos : #f(19.6119 7.67551 -4.72867)/(21.5847/1)
;; dif-rot : #f(0.002335 -0.120399 0.003725)/(0.120479/0.017453)
;; cog-dif : #f(-4.60666 2.11176)/(5.06762/5.0)
;;  coords : #<coordinates #X1325f8e0  472.978 93.912 -91.834 / -0.154 -2.767e-08 4.307e-09>
;;  angles : (#f(45.4357 37.1861 0.0 0.0 0.0 -14.4998) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X25c135e0  0.894 -100.0 19.514 / 1.687e-10 -1.618e-19 5.567e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.701 -84.235 180.031 / 0.004 5.786e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.085 92.41 407.201 / -0.004 0.12 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  472.978 93.912 926.666 / -0.154 -2.767e-08 4.307e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.596 -4.898 936.166 / 0.004 -2.800e-08 -1.063e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  457.596 -4.898 814.166 / 0.004 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.602 -6.339 804.271 / 0.001 0.022 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  449.396 -61.13 428.331 / -0.441 1.245 -0.467> #<bodyset-link #X130e0d78 RLEG_LINK4  85.687 -78.347 319.613 / 0.004 5.786e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.707 -84.112 280.031 / 0.004 5.786e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  472.978 93.912 926.666 / -0.154 -2.767e-08 4.307e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  488.361 192.722 936.166 / 0.034 -2.798e-08 -9.569e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.361 192.722 814.166 / 0.034 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.463 189.723 804.627 / 0.364 -0.8 -0.445> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.612 124.366 565.674 / -1.343 1.261 -1.386> #<bodyset-link #X1316f038 LLEG_LINK4  397.722 104.693 544.33 / -0.004 0.12 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.096 92.621 506.477 / -0.004 0.12 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.701 -84.235 180.031 / 0.004 5.786e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.085 92.41 407.201 / -0.004 0.12 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  472.978 93.912 926.666 / -0.154 -2.767e-08 4.307e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.596 -4.898 936.166 / 0.004 -2.800e-08 -1.063e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  457.596 -4.898 814.166 / 0.004 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.602 -6.339 804.271 / 0.001 0.022 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  449.396 -61.13 428.331 / -0.441 1.245 -0.467> #<bodyset-link #X130e0d78 RLEG_LINK4  85.687 -78.347 319.613 / 0.004 5.786e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.707 -84.112 280.031 / 0.004 5.786e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  472.978 93.912 926.666 / -0.154 -2.767e-08 4.307e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  488.361 192.722 936.166 / 0.034 -2.798e-08 -9.569e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.361 192.722 814.166 / 0.034 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.463 189.723 804.627 / 0.364 -0.8 -0.445> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.612 124.366 565.674 / -1.343 1.261 -1.386> #<bodyset-link #X1316f038 LLEG_LINK4  397.722 104.693 544.33 / -0.004 0.12 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.096 92.621 506.477 / -0.004 0.12 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(394.705 97.3455 1223.37) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  472.978 93.912 926.666 / -0.154 -2.767e-08 4.307e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.701 -84.235 180.031 / 0.004 5.786e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  381.085 92.41 407.201 / -0.004 0.12 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.596 -4.898 936.166 / 0.004 -2.800e-08 -1.063e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  457.596 -4.898 814.166 / 0.004 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.602 -6.339 804.271 / 0.001 0.022 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  449.396 -61.13 428.331 / -0.441 1.245 -0.467> #<bodyset-link #X130e0d78 RLEG_LINK4  85.687 -78.347 319.613 / 0.004 5.786e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.707 -84.112 280.031 / 0.004 5.786e-05 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  488.361 192.722 936.166 / 0.034 -2.798e-08 -9.569e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.361 192.722 814.166 / 0.034 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.463 189.723 804.627 / 0.364 -0.8 -0.445> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.612 124.366 565.674 / -1.343 1.261 -1.386> #<bodyset-link #X1316f038 LLEG_LINK4  397.722 104.693 544.33 / -0.004 0.12 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.096 92.621 506.477 / -0.004 0.12 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(394.705 97.3455 1223.37) :target-centroid-pos #f(394.705 97.3455 1223.37) :fix-limbs-target-coords (#<coordinates #X25c135e0  0.894 -100.0 19.514 / 1.687e-10 -1.618e-19 5.567e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.988098 0.153823 -2.800114e-08 472.978) (-0.153823 0.988098 -8.218226e-19 93.912) (2.766788e-08 4.307212e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint681879120) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(45.4357 37.1861 0.0 0.0 0.0 -14.4998) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.89408 -100.0 19.5136) :rot #2f((1.0 -1.687257e-10 -6.782629e-20) (1.687257e-10 1.0 -5.567172e-10) (1.617574e-19 5.567172e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 1.421085e-14) (0.0 1.0 0.0 0.0) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.998341e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-4.998341e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 1.421085e-14) (0.0 1.0 0.0 0.0) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.998341e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-4.998341e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(394.705 97.3455 1223.37) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 1.421085e-14) (0.0 1.0 0.0 0.0) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.998341e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-4.998341e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(394.705 97.3455 1223.37) :target-centroid-pos #f(394.705 97.3455 1223.37) :fix-limbs-target-coords (list #<coordinates #X25c135e0  0.894 -100.0 19.514 / 1.687e-10 -1.618e-19 5.567e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-01-19-66-66-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-01-19-66-66-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-85.2327 -15.3076 -160.542)/(182.408/1)
;; dif-rot : #f(0.001245 -5.861806e-05 -0.004405)/(0.004578/0.017453)
;; dif-pos : #f(19.8077 7.7097 -4.72756)/(21.7747/1)
;; dif-rot : #f(0.002386 -0.121588 0.003354)/(0.121658/0.017453)
;; cog-dif : #f(-4.58166 2.14997)/(5.06103/5.0)
;;  coords : #<coordinates #X1325f8e0  473.264 93.998 -91.834 / -0.155 -2.767e-08 4.322e-09>
;;  angles : (#f(45.6417 38.8214 0.0 0.0 0.0 -13.5043) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X25e87cf8  0.993 -100.0 20.908 / 1.687e-10 -2.441e-19 5.565e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.166 -84.117 181.426 / 0.004 6.136e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.901 92.37 407.246 / -0.004 0.122 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.264 93.998 926.666 / -0.155 -2.767e-08 4.322e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.83 -4.804 936.166 / 0.004 -2.800e-08 -1.236e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  457.83 -4.804 814.166 / 0.004 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.836 -6.244 804.271 / 0.001 0.02 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  450.276 -61.004 428.313 / -0.446 1.248 -0.472> #<bodyset-link #X130e0d78 RLEG_LINK4  86.149 -78.231 321.008 / 0.004 6.136e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  86.172 -83.993 281.426 / 0.004 6.136e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.264 93.998 926.666 / -0.155 -2.767e-08 4.322e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  488.698 192.8 936.166 / 0.035 -2.798e-08 -9.782e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.698 192.8 814.166 / 0.035 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.803 189.8 804.627 / 0.364 -0.798 -0.445> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.605 124.489 565.244 / -1.346 1.261 -1.39> #<bodyset-link #X1316f038 LLEG_LINK4  397.697 104.667 544.354 / -0.004 0.122 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.031 92.587 506.508 / -0.004 0.122 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.166 -84.117 181.426 / 0.004 6.136e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.901 92.37 407.246 / -0.004 0.122 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.264 93.998 926.666 / -0.155 -2.767e-08 4.322e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.83 -4.804 936.166 / 0.004 -2.800e-08 -1.236e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  457.83 -4.804 814.166 / 0.004 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.836 -6.244 804.271 / 0.001 0.02 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  450.276 -61.004 428.313 / -0.446 1.248 -0.472> #<bodyset-link #X130e0d78 RLEG_LINK4  86.149 -78.231 321.008 / 0.004 6.136e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  86.172 -83.993 281.426 / 0.004 6.136e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.264 93.998 926.666 / -0.155 -2.767e-08 4.322e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  488.698 192.8 936.166 / 0.035 -2.798e-08 -9.782e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.698 192.8 814.166 / 0.035 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.803 189.8 804.627 / 0.364 -0.798 -0.445> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.605 124.489 565.244 / -1.346 1.261 -1.39> #<bodyset-link #X1316f038 LLEG_LINK4  397.697 104.667 544.354 / -0.004 0.122 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.031 92.587 506.508 / -0.004 0.122 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(395.025 97.5054 1223.59) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.264 93.998 926.666 / -0.155 -2.767e-08 4.322e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.166 -84.117 181.426 / 0.004 6.136e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.901 92.37 407.246 / -0.004 0.122 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.83 -4.804 936.166 / 0.004 -2.800e-08 -1.236e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  457.83 -4.804 814.166 / 0.004 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  457.836 -6.244 804.271 / 0.001 0.02 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  450.276 -61.004 428.313 / -0.446 1.248 -0.472> #<bodyset-link #X130e0d78 RLEG_LINK4  86.149 -78.231 321.008 / 0.004 6.136e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  86.172 -83.993 281.426 / 0.004 6.136e-05 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  488.698 192.8 936.166 / 0.035 -2.798e-08 -9.782e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  488.698 192.8 814.166 / 0.035 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  488.803 189.8 804.627 / 0.364 -0.798 -0.445> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.605 124.489 565.244 / -1.346 1.261 -1.39> #<bodyset-link #X1316f038 LLEG_LINK4  397.697 104.667 544.354 / -0.004 0.122 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.031 92.587 506.508 / -0.004 0.122 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(395.025 97.5054 1223.59) :target-centroid-pos #f(395.025 97.5054 1223.59) :fix-limbs-target-coords (#<coordinates #X25e87cf8  0.993 -100.0 20.908 / 1.687e-10 -2.441e-19 5.565e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.988018 0.15434 -2.800114e-08 473.264) (-0.15434 0.988018 -8.218213e-19 93.9981) (2.766563e-08 4.321684e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint319237168) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(45.6417 38.8214 0.0 0.0 0.0 -13.5043) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.992638 -100.0 20.9077) :rot #2f((1.0 -1.686628e-10 -1.501978e-19) (1.686628e-10 1.0 -5.565096e-10) (2.440586e-19 5.565096e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.541099e-21 -1.421085e-14) (0.0 1.0 0.0 2.842171e-14) (2.541099e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -9.174366e-37 4.230930e-18 5.684342e-14) (-9.174366e-37 1.0 4.336809e-19 -1.421085e-14) (-4.230930e-18 -4.336809e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.541099e-21 -1.421085e-14) (0.0 1.0 0.0 2.842171e-14) (2.541099e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -9.174366e-37 4.230930e-18 5.684342e-14) (-9.174366e-37 1.0 4.336809e-19 -1.421085e-14) (-4.230930e-18 -4.336809e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(395.025 97.5054 1223.59) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.541099e-21 -1.421085e-14) (0.0 1.0 0.0 2.842171e-14) (2.541099e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -9.174366e-37 4.230930e-18 5.684342e-14) (-9.174366e-37 1.0 4.336809e-19 -1.421085e-14) (-4.230930e-18 -4.336809e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(395.025 97.5054 1223.59) :target-centroid-pos #f(395.025 97.5054 1223.59) :fix-limbs-target-coords (list #<coordinates #X25e87cf8  0.993 -100.0 20.908 / 1.687e-10 -2.441e-19 5.565e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-01-54-33-96-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-01-54-33-96-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-85.7276 -15.377 -160.666)/(182.755/1)
;; dif-rot : #f(0.001253 -6.137847e-05 -0.005093)/(0.005245/0.017453)
;; dif-pos : #f(19.9999 7.74521 -4.72423)/(21.9614/1)
;; dif-rot : #f(0.002432 -0.122729 0.002908)/(0.122788/0.017453)
;; cog-dif : #f(-4.55327 2.19305)/(5.05388/5.0)
;;  coords : #<coordinates #X1325f8e0  473.512 94.061 -91.834 / -0.156 -2.766e-08 4.338e-09>
;;  angles : (#f(45.8306 40.5042 0.0 0.0 0.0 -12.4591) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X26465ac8  1.098 -100.0 22.347 / 1.686e-10 -3.314e-19 5.563e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.756 -83.985 182.988 / 0.005 6.457e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.722 92.326 407.288 / -0.003 0.123 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.512 94.061 926.666 / -0.156 -2.766e-08 4.338e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.019 -4.732 936.166 / 0.005 -2.800e-08 -1.429e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.019 -4.732 814.166 / 0.005 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  458.027 -6.171 804.27 / 0.002 0.018 -0.144> #<bodyset-link #X6f38680 RLEG_LINK3  451.327 -60.873 428.288 / -0.451 1.252 -0.477> #<bodyset-link #X130e0d78 RLEG_LINK4  86.735 -78.104 322.572 / 0.005 6.457e-05 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  86.761 -83.86 282.988 / 0.005 6.457e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.512 94.061 926.666 / -0.156 -2.766e-08 4.338e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  489.004 192.853 936.166 / 0.036 -2.798e-08 -1.001e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  489.004 192.853 814.166 / 0.036 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  489.112 189.854 804.628 / 0.364 -0.797 -0.444> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.591 124.629 564.833 / -1.349 1.261 -1.393> #<bodyset-link #X1316f038 LLEG_LINK4  397.669 104.635 544.376 / -0.003 0.123 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.964 92.551 506.536 / -0.003 0.123 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.756 -83.985 182.988 / 0.005 6.457e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.722 92.326 407.288 / -0.003 0.123 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.512 94.061 926.666 / -0.156 -2.766e-08 4.338e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.019 -4.732 936.166 / 0.005 -2.800e-08 -1.429e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.019 -4.732 814.166 / 0.005 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  458.027 -6.171 804.27 / 0.002 0.018 -0.144> #<bodyset-link #X6f38680 RLEG_LINK3  451.327 -60.873 428.288 / -0.451 1.252 -0.477> #<bodyset-link #X130e0d78 RLEG_LINK4  86.735 -78.104 322.572 / 0.005 6.457e-05 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  86.761 -83.86 282.988 / 0.005 6.457e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.512 94.061 926.666 / -0.156 -2.766e-08 4.338e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  489.004 192.853 936.166 / 0.036 -2.798e-08 -1.001e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  489.004 192.853 814.166 / 0.036 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  489.112 189.854 804.628 / 0.364 -0.797 -0.444> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.591 124.629 564.833 / -1.349 1.261 -1.393> #<bodyset-link #X1316f038 LLEG_LINK4  397.669 104.635 544.376 / -0.003 0.123 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.964 92.551 506.536 / -0.003 0.123 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(395.325 97.6556 1223.81) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.512 94.061 926.666 / -0.156 -2.766e-08 4.338e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.756 -83.985 182.988 / 0.005 6.457e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.722 92.326 407.288 / -0.003 0.123 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.019 -4.732 936.166 / 0.005 -2.800e-08 -1.429e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.019 -4.732 814.166 / 0.005 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  458.027 -6.171 804.27 / 0.002 0.018 -0.144> #<bodyset-link #X6f38680 RLEG_LINK3  451.327 -60.873 428.288 / -0.451 1.252 -0.477> #<bodyset-link #X130e0d78 RLEG_LINK4  86.735 -78.104 322.572 / 0.005 6.457e-05 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  86.761 -83.86 282.988 / 0.005 6.457e-05 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  489.004 192.853 936.166 / 0.036 -2.798e-08 -1.001e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  489.004 192.853 814.166 / 0.036 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  489.112 189.854 804.628 / 0.364 -0.797 -0.444> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.591 124.629 564.833 / -1.349 1.261 -1.393> #<bodyset-link #X1316f038 LLEG_LINK4  397.669 104.635 544.376 / -0.003 0.123 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.964 92.551 506.536 / -0.003 0.123 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(395.325 97.6556 1223.81) :target-centroid-pos #f(395.325 97.6556 1223.81) :fix-limbs-target-coords (#<coordinates #X26465ac8  1.098 -100.0 22.347 / 1.686e-10 -3.314e-19 5.563e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.987926 0.154926 -2.800114e-08 473.512) (-0.154926 0.987926 -8.218226e-19 94.0608) (2.766306e-08 4.338103e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint339487192) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(45.8306 40.5042 0.0 0.0 0.0 -12.4591) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(1.09811 -100.0 22.3472) :rot #2f((1.0 -1.685961e-10 -2.375808e-19) (1.685961e-10 1.0 -5.562895e-10) (3.313671e-19 5.562895e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.964615e-21 0.0) (0.0 1.0 0.0 0.0) (-2.964615e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.454391e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (6.454391e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.964615e-21 0.0) (0.0 1.0 0.0 0.0) (-2.964615e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.454391e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (6.454391e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(395.325 97.6556 1223.81) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.964615e-21 0.0) (0.0 1.0 0.0 0.0) (-2.964615e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.454391e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (6.454391e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(395.325 97.6556 1223.81) :target-centroid-pos #f(395.325 97.6556 1223.81) :fix-limbs-target-coords (list #<coordinates #X26465ac8  1.098 -100.0 22.347 / 1.686e-10 -3.314e-19 5.563e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-01-90-34-91-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-01-90-34-91-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-85.8462 -15.3533 -160.317)/(182.502/1)
;; dif-rot : #f(0.001272 -6.462780e-05 -0.005662)/(0.005803/0.017453)
;; dif-pos : #f(20.1845 7.78115 -4.7239)/(22.1421/1)
;; dif-rot : #f(0.002494 -0.123844 0.002561)/(0.123896/0.017453)
;; cog-dif : #f(-4.531 2.22741)/(5.0489/5.0)
;;  coords : #<coordinates #X1325f8e0  473.779 94.139 -91.834 / -0.156 -2.766e-08 4.351e-09>
;;  angles : (#f(46.0032 42.2343 0.0 0.0 0.0 -11.3648) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2699f330  1.211 -100.0 23.832 / 1.685e-10 -4.238e-19 5.561e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.978 -83.957 184.123 / 0.006 6.823e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.549 92.285 407.333 / -0.003 0.124 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.779 94.139 926.666 / -0.156 -2.766e-08 4.351e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.239 -4.647 936.166 / 0.006 -2.800e-08 -1.588e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.239 -4.647 814.166 / 0.006 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  458.247 -6.086 804.27 / 0.003 0.017 -0.144> #<bodyset-link #X6f38680 RLEG_LINK3  451.873 -60.797 428.284 / -0.456 1.255 -0.482> #<bodyset-link #X130e0d78 RLEG_LINK4  86.955 -78.074 323.707 / 0.006 6.823e-05 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  86.984 -83.83 284.123 / 0.006 6.823e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.779 94.139 926.666 / -0.156 -2.766e-08 4.351e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  489.319 192.924 936.166 / 0.036 -2.798e-08 -1.021e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  489.319 192.924 814.166 / 0.036 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  489.429 189.923 804.628 / 0.364 -0.796 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.582 124.74 564.431 / -1.352 1.261 -1.397> #<bodyset-link #X1316f038 LLEG_LINK4  397.645 104.607 544.4 / -0.003 0.124 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.902 92.517 506.567 / -0.003 0.124 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.978 -83.957 184.123 / 0.006 6.823e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.549 92.285 407.333 / -0.003 0.124 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.779 94.139 926.666 / -0.156 -2.766e-08 4.351e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.239 -4.647 936.166 / 0.006 -2.800e-08 -1.588e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.239 -4.647 814.166 / 0.006 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  458.247 -6.086 804.27 / 0.003 0.017 -0.144> #<bodyset-link #X6f38680 RLEG_LINK3  451.873 -60.797 428.284 / -0.456 1.255 -0.482> #<bodyset-link #X130e0d78 RLEG_LINK4  86.955 -78.074 323.707 / 0.006 6.823e-05 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  86.984 -83.83 284.123 / 0.006 6.823e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.779 94.139 926.666 / -0.156 -2.766e-08 4.351e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  489.319 192.924 936.166 / 0.036 -2.798e-08 -1.021e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  489.319 192.924 814.166 / 0.036 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  489.429 189.923 804.628 / 0.364 -0.796 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.582 124.74 564.431 / -1.352 1.261 -1.397> #<bodyset-link #X1316f038 LLEG_LINK4  397.645 104.607 544.4 / -0.003 0.124 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.902 92.517 506.567 / -0.003 0.124 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(395.608 97.7968 1224.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.779 94.139 926.666 / -0.156 -2.766e-08 4.351e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  86.978 -83.957 184.123 / 0.006 6.823e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.549 92.285 407.333 / -0.003 0.124 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.239 -4.647 936.166 / 0.006 -2.800e-08 -1.588e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.239 -4.647 814.166 / 0.006 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  458.247 -6.086 804.27 / 0.003 0.017 -0.144> #<bodyset-link #X6f38680 RLEG_LINK3  451.873 -60.797 428.284 / -0.456 1.255 -0.482> #<bodyset-link #X130e0d78 RLEG_LINK4  86.955 -78.074 323.707 / 0.006 6.823e-05 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  86.984 -83.83 284.123 / 0.006 6.823e-05 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  489.319 192.924 936.166 / 0.036 -2.798e-08 -1.021e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  489.319 192.924 814.166 / 0.036 -2.798e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  489.429 189.923 804.628 / 0.364 -0.796 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.582 124.74 564.431 / -1.352 1.261 -1.397> #<bodyset-link #X1316f038 LLEG_LINK4  397.645 104.607 544.4 / -0.003 0.124 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.902 92.517 506.567 / -0.003 0.124 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(395.608 97.7968 1224.04) :target-centroid-pos #f(395.608 97.7968 1224.04) :fix-limbs-target-coords (#<coordinates #X2699f330  1.211 -100.0 23.832 / 1.685e-10 -4.238e-19 5.561e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.987851 0.155402 -2.800114e-08 473.779) (-0.155402 0.987851 -8.218213e-19 94.1386) (2.766096e-08 4.351433e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint297006528) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.0032 42.2343 0.0 0.0 0.0 -11.3648) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(1.21071 -100.0 23.8319) :rot #2f((1.0 -1.685254e-10 -3.300920e-19) (1.685254e-10 1.0 -5.560564e-10) (4.237993e-19 5.560564e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.541099e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (2.541099e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.173176e-18 0.0) (0.0 1.0 0.0 0.0) (-6.173176e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.541099e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (2.541099e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.173176e-18 0.0) (0.0 1.0 0.0 0.0) (-6.173176e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(395.608 97.7968 1224.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.541099e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (2.541099e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.173176e-18 0.0) (0.0 1.0 0.0 0.0) (-6.173176e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(395.608 97.7968 1224.04) :target-centroid-pos #f(395.608 97.7968 1224.04) :fix-limbs-target-coords (list #<coordinates #X2699f330  1.211 -100.0 23.832 / 1.685e-10 -4.238e-19 5.561e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-02-25-00-57-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-02-25-00-57-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-27.1659 -55.7048 -83.6786)/(104.13/1)
;; dif-rot : #f(4.252149e-07 3.895913e-06 0.101667)/(0.101667/0.017453)
;; dif-pos : #f(12.0376 -6.55557 -0.860455)/(13.7339/1)
;; dif-rot : #f(-0.001808 -0.080933 0.1269)/(0.150523/0.017453)
;; cog-dif : #f(-0.451127 -7.93668)/(7.94949/5.0)
;;  coords : #<coordinates #X1325f8e0  473.552 100.853 -91.834 / -0.206 -2.741e-08 5.740e-09>
;;  angles : (#f(46.1604 44.012 0.0 0.0 0.0 -10.2223) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X26bd37a0  1.331 -100.0 25.361 / 1.685e-10 -5.215e-19 5.558e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.01 -47.34 109.04 / -0.102 -3.911e-06 -2.261e-07> #<cascaded-coords #X12422518 :lleg-end-coords  389.011 108.018 401.939 / -0.127 0.081 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.552 100.853 926.666 / -0.206 -2.741e-08 5.740e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  453.052 2.976 936.166 / -0.102 -2.786e-08 2.842e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  453.052 2.976 814.166 / -0.102 -2.786e-08 -0.152> #<bodyset-link #X6f14d58 RLEG_LINK2  452.898 1.472 804.281 / -0.136 0.219 -0.156> #<bodyset-link #X6f38680 RLEG_LINK3  364.108 -45.827 437.84 / -0.355 1.023 -0.295> #<bodyset-link #X130e0d78 RLEG_LINK4  34.623 -41.321 248.58 / -0.102 -3.911e-06 -0.152> #<bodyset-link #X12a84e10 RLEG_LINK5  34.009 -47.34 209.04 / -0.102 -3.911e-06 -2.261e-07>) (#<bodyset-link #X6ee5ff8 BODY  473.552 100.853 926.666 / -0.206 -2.741e-08 5.740e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.052 198.729 936.166 / -0.101 -2.786e-08 2.823e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.052 198.729 814.166 / -0.101 -2.786e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.743 195.677 804.648 / 0.258 -0.828 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.013 92.625 575.736 / -1.355 1.244 -1.27> #<bodyset-link #X1316f038 LLEG_LINK4  401.671 119.145 539.547 / -0.127 0.081 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.062 107.325 501.612 / -0.127 0.081 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.01 -47.34 109.04 / -0.102 -3.911e-06 -2.261e-07> #<cascaded-coords #X12422518 :lleg-end-coords  389.011 108.018 401.939 / -0.127 0.081 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.552 100.853 926.666 / -0.206 -2.741e-08 5.740e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  453.052 2.976 936.166 / -0.102 -2.786e-08 2.842e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  453.052 2.976 814.166 / -0.102 -2.786e-08 -0.152> #<bodyset-link #X6f14d58 RLEG_LINK2  452.898 1.472 804.281 / -0.136 0.219 -0.156> #<bodyset-link #X6f38680 RLEG_LINK3  364.108 -45.827 437.84 / -0.355 1.023 -0.295> #<bodyset-link #X130e0d78 RLEG_LINK4  34.623 -41.321 248.58 / -0.102 -3.911e-06 -0.152> #<bodyset-link #X12a84e10 RLEG_LINK5  34.009 -47.34 209.04 / -0.102 -3.911e-06 -2.261e-07>) (#<bodyset-link #X6ee5ff8 BODY  473.552 100.853 926.666 / -0.206 -2.741e-08 5.740e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.052 198.729 936.166 / -0.101 -2.786e-08 2.823e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.052 198.729 814.166 / -0.101 -2.786e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.743 195.677 804.648 / 0.258 -0.828 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.013 92.625 575.736 / -1.355 1.244 -1.27> #<bodyset-link #X1316f038 LLEG_LINK4  401.671 119.145 539.547 / -0.127 0.081 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.062 107.325 501.612 / -0.127 0.081 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(395.873 97.9295 1224.27) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.552 100.853 926.666 / -0.206 -2.741e-08 5.740e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.01 -47.34 109.04 / -0.102 -3.911e-06 -2.261e-07> #<cascaded-coords #X12422518 :lleg-end-coords  389.011 108.018 401.939 / -0.127 0.081 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  453.052 2.976 936.166 / -0.102 -2.786e-08 2.842e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  453.052 2.976 814.166 / -0.102 -2.786e-08 -0.152> #<bodyset-link #X6f14d58 RLEG_LINK2  452.898 1.472 804.281 / -0.136 0.219 -0.156> #<bodyset-link #X6f38680 RLEG_LINK3  364.108 -45.827 437.84 / -0.355 1.023 -0.295> #<bodyset-link #X130e0d78 RLEG_LINK4  34.623 -41.321 248.58 / -0.102 -3.911e-06 -0.152> #<bodyset-link #X12a84e10 RLEG_LINK5  34.009 -47.34 209.04 / -0.102 -3.911e-06 -2.261e-07>) (#<bodyset-link #X1258dac0 LLEG_LINK0  494.052 198.729 936.166 / -0.101 -2.786e-08 2.823e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.052 198.729 814.166 / -0.101 -2.786e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.743 195.677 804.648 / 0.258 -0.828 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.013 92.625 575.736 / -1.355 1.244 -1.27> #<bodyset-link #X1316f038 LLEG_LINK4  401.671 119.145 539.547 / -0.127 0.081 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.062 107.325 501.612 / -0.127 0.081 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(395.873 97.9295 1224.27) :target-centroid-pos #f(395.873 97.9295 1224.27) :fix-limbs-target-coords (#<coordinates #X26bd37a0  1.331 -100.0 25.361 / 1.685e-10 -5.215e-19 5.558e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.978762 0.205001 -2.800114e-08 473.552) (-0.205001 0.978762 -8.218226e-19 100.853) (2.740645e-08 5.740259e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint817722568) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.1604 44.012 0.0 0.0 0.0 -10.2223) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(1.33066 -100.0 25.3612) :rot #2f((1.0 -1.684508e-10 -4.278455e-19) (1.684508e-10 1.0 -5.558101e-10) (5.214694e-19 5.558101e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -8.238719e-22 0.0) (-2.775558e-17 1.0 1.058791e-22 0.0) (8.238719e-22 -1.058791e-22 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -6.640738e-18 5.684342e-14) (-2.775558e-17 1.0 -8.673617e-19 0.0) (6.640738e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -8.238719e-22 0.0) (-2.775558e-17 1.0 1.058791e-22 0.0) (8.238719e-22 -1.058791e-22 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -6.640738e-18 5.684342e-14) (-2.775558e-17 1.0 -8.673617e-19 0.0) (6.640738e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(395.873 97.9295 1224.27) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -8.238719e-22 0.0) (-2.775558e-17 1.0 1.058791e-22 0.0) (8.238719e-22 -1.058791e-22 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -6.640738e-18 5.684342e-14) (-2.775558e-17 1.0 -8.673617e-19 0.0) (6.640738e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(395.873 97.9295 1224.27) :target-centroid-pos #f(395.873 97.9295 1224.27) :fix-limbs-target-coords (list #<coordinates #X26bd37a0  1.331 -100.0 25.361 / 1.685e-10 -5.215e-19 5.558e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-02-60-34-49-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-02-60-34-49-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-84.2739 -15.0506 -157.446)/(179.215/1)
;; dif-rot : #f(0.001363 -7.819820e-05 -0.006332)/(0.006478/0.017453)
;; dif-pos : #f(20.5414 7.86359 -4.74323)/(22.5007/1)
;; dif-rot : #f(0.002712 -0.126079 0.002267)/(0.126129/0.017453)
;; cog-dif : #f(-4.51442 2.25963)/(5.04836/5.0)
;;  coords : #<coordinates #X1325f8e0  474.45 94.379 -91.834 / -0.156 -2.766e-08 4.360e-09>
;;  angles : (#f(46.303 45.8371 0.0 0.0 0.0 -9.03228) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X27187828  1.458 -100.0 26.935 / 1.684e-10 -6.245e-19 5.556e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.647 -84.201 184.353 / 0.006 8.251e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.216 92.199 407.442 / -0.002 0.126 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.45 94.379 926.666 / -0.156 -2.766e-08 4.360e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.88 -4.402 936.166 / 0.006 -2.800e-08 -1.776e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.88 -4.402 814.166 / 0.006 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  458.89 -5.845 804.271 / 0.003 0.023 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  450.572 -60.742 428.349 / -0.457 1.255 -0.484> #<bodyset-link #X130e0d78 RLEG_LINK4  85.621 -78.291 323.934 / 0.006 8.251e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.654 -84.065 284.353 / 0.006 8.251e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  474.45 94.379 926.666 / -0.156 -2.766e-08 4.360e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  490.019 193.159 936.166 / 0.038 -2.798e-08 -1.051e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  490.019 193.159 814.166 / 0.038 -2.798e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  490.132 190.154 804.629 / 0.363 -0.793 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.587 124.851 563.634 / -1.359 1.261 -1.405> #<bodyset-link #X1316f038 LLEG_LINK4  397.613 104.57 544.463 / -0.002 0.126 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.791 92.455 506.648 / -0.002 0.126 -0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.647 -84.201 184.353 / 0.006 8.251e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.216 92.199 407.442 / -0.002 0.126 -0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.45 94.379 926.666 / -0.156 -2.766e-08 4.360e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.88 -4.402 936.166 / 0.006 -2.800e-08 -1.776e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.88 -4.402 814.166 / 0.006 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  458.89 -5.845 804.271 / 0.003 0.023 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  450.572 -60.742 428.349 / -0.457 1.255 -0.484> #<bodyset-link #X130e0d78 RLEG_LINK4  85.621 -78.291 323.934 / 0.006 8.251e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.654 -84.065 284.353 / 0.006 8.251e-05 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  474.45 94.379 926.666 / -0.156 -2.766e-08 4.360e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  490.019 193.159 936.166 / 0.038 -2.798e-08 -1.051e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  490.019 193.159 814.166 / 0.038 -2.798e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  490.132 190.154 804.629 / 0.363 -0.793 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.587 124.851 563.634 / -1.359 1.261 -1.405> #<bodyset-link #X1316f038 LLEG_LINK4  397.613 104.57 544.463 / -0.002 0.126 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.791 92.455 506.648 / -0.002 0.126 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.122 98.0542 1224.51) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.45 94.379 926.666 / -0.156 -2.766e-08 4.360e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  85.647 -84.201 184.353 / 0.006 8.251e-05 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  380.216 92.199 407.442 / -0.002 0.126 -0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.88 -4.402 936.166 / 0.006 -2.800e-08 -1.776e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  458.88 -4.402 814.166 / 0.006 -2.800e-08 -0.145> #<bodyset-link #X6f14d58 RLEG_LINK2  458.89 -5.845 804.271 / 0.003 0.023 -0.145> #<bodyset-link #X6f38680 RLEG_LINK3  450.572 -60.742 428.349 / -0.457 1.255 -0.484> #<bodyset-link #X130e0d78 RLEG_LINK4  85.621 -78.291 323.934 / 0.006 8.251e-05 -0.145> #<bodyset-link #X12a84e10 RLEG_LINK5  85.654 -84.065 284.353 / 0.006 8.251e-05 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  490.019 193.159 936.166 / 0.038 -2.798e-08 -1.051e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  490.019 193.159 814.166 / 0.038 -2.798e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  490.132 190.154 804.629 / 0.363 -0.793 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.587 124.851 563.634 / -1.359 1.261 -1.405> #<bodyset-link #X1316f038 LLEG_LINK4  397.613 104.57 544.463 / -0.002 0.126 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.791 92.455 506.648 / -0.002 0.126 -0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(396.122 98.0542 1224.51) :target-centroid-pos #f(396.122 98.0542 1224.51) :fix-limbs-target-coords (#<coordinates #X27187828  1.458 -100.0 26.935 / 1.684e-10 -6.245e-19 5.556e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.987805 0.155693 -2.800114e-08 474.45) (-0.155693 0.987805 -8.218221e-19 94.3788) (2.765968e-08 4.359583e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint786816144) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.303 45.8371 0.0 0.0 0.0 -9.03228) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(1.45817 -100.0 26.9349) :rot #2f((1.0 -1.683720e-10 -5.309525e-19) (1.683720e-10 1.0 -5.555503e-10) (6.244885e-19 5.555503e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.470329e-22 0.0) (0.0 1.0 0.0 0.0) (8.470329e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.906050e-18 0.0) (0.0 1.0 0.0 0.0) (9.906050e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.470329e-22 0.0) (0.0 1.0 0.0 0.0) (8.470329e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.906050e-18 0.0) (0.0 1.0 0.0 0.0) (9.906050e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.122 98.0542 1224.51) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.470329e-22 0.0) (0.0 1.0 0.0 0.0) (8.470329e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.906050e-18 0.0) (0.0 1.0 0.0 0.0) (9.906050e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(396.122 98.0542 1224.51) :target-centroid-pos #f(396.122 98.0542 1224.51) :fix-limbs-target-coords (list #<coordinates #X27187828  1.458 -100.0 26.935 / 1.684e-10 -6.245e-19 5.556e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-02-93-59-11-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-02-93-59-11-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-1.38258 -0.73606 -1.31876)/(2.04754/1)
;; dif-rot : #f(2.507264e-07 2.192397e-06 1.096442e-05)/(1.118428e-05/0.017453)
;; dif-pos : #f(32.4708 1.20772 0.47724)/(32.4968/1)
;; dif-rot : #f(-0.000885 -0.226775 0.048016)/(0.231804/0.017453)
;; cog-dif : #f(-0.57783 0.414348)/(0.711036/5.0)
;;  coords : #<coordinates #X1325f8e0  469.64 65.764 -91.834 / -0.589 -2.329e-08 1.555e-08>
;;  angles : (#f(46.4318 47.7096 0.0 0.0 0.0 -7.79546) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X27721a98  1.593 -100.0 28.552 / 1.683e-10 -7.330e-19 5.553e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.976 -99.264 29.871 / -1.096e-05 -2.192e-06 -2.502e-07> #<cascaded-coords #X12422518 :lleg-end-coords  368.247 100.339 406.97 / -0.049 0.227 -0.005>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  469.64 65.764 926.666 / -0.589 -2.329e-08 1.555e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  414.12 -17.408 936.166 / -1.122e-05 -2.800e-08 3.143e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  414.12 -17.408 814.166 / -1.122e-05 -2.800e-08 -0.119> #<bodyset-link #X6f14d58 RLEG_LINK2  414.12 -18.596 804.237 / -0.075 0.562 -0.141> #<bodyset-link #X6f38680 RLEG_LINK3  210.292 -56.687 485.799 / -0.077 0.572 -0.142> #<bodyset-link #X130e0d78 RLEG_LINK4  2.976 -94.513 169.588 / -1.096e-05 -2.192e-06 -0.119> #<bodyset-link #X12a84e10 RLEG_LINK5  2.976 -99.264 129.871 / -1.096e-05 -2.192e-06 -2.502e-07>) (#<bodyset-link #X6ee5ff8 BODY  469.64 65.764 926.666 / -0.589 -2.329e-08 1.555e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  525.16 148.935 936.166 / -0.011 -2.800e-08 3.077e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  525.16 148.935 814.166 / -0.011 -2.800e-08 -0.162> #<bodyset-link #X6fe1bf0 LLEG_LINK2  525.143 147.32 804.298 / 0.134 -0.723 -0.217> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.468 98.991 526.12 / -1.851 1.403 -1.837> #<bodyset-link #X1316f038 LLEG_LINK4  399.899 105.9 542.848 / -0.049 0.227 -0.167> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.72 99.709 504.41 / -0.049 0.227 -0.005>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.976 -99.264 29.871 / -1.096e-05 -2.192e-06 -2.502e-07> #<cascaded-coords #X12422518 :lleg-end-coords  368.247 100.339 406.97 / -0.049 0.227 -0.005>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  469.64 65.764 926.666 / -0.589 -2.329e-08 1.555e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  414.12 -17.408 936.166 / -1.122e-05 -2.800e-08 3.143e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  414.12 -17.408 814.166 / -1.122e-05 -2.800e-08 -0.119> #<bodyset-link #X6f14d58 RLEG_LINK2  414.12 -18.596 804.237 / -0.075 0.562 -0.141> #<bodyset-link #X6f38680 RLEG_LINK3  210.292 -56.687 485.799 / -0.077 0.572 -0.142> #<bodyset-link #X130e0d78 RLEG_LINK4  2.976 -94.513 169.588 / -1.096e-05 -2.192e-06 -0.119> #<bodyset-link #X12a84e10 RLEG_LINK5  2.976 -99.264 129.871 / -1.096e-05 -2.192e-06 -2.502e-07>) (#<bodyset-link #X6ee5ff8 BODY  469.64 65.764 926.666 / -0.589 -2.329e-08 1.555e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  525.16 148.935 936.166 / -0.011 -2.800e-08 3.077e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  525.16 148.935 814.166 / -0.011 -2.800e-08 -0.162> #<bodyset-link #X6fe1bf0 LLEG_LINK2  525.143 147.32 804.298 / 0.134 -0.723 -0.217> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.468 98.991 526.12 / -1.851 1.403 -1.837> #<bodyset-link #X1316f038 LLEG_LINK4  399.899 105.9 542.848 / -0.049 0.227 -0.167> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.72 99.709 504.41 / -0.049 0.227 -0.005>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.357 98.1713 1224.75) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  469.64 65.764 926.666 / -0.589 -2.329e-08 1.555e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.976 -99.264 29.871 / -1.096e-05 -2.192e-06 -2.502e-07> #<cascaded-coords #X12422518 :lleg-end-coords  368.247 100.339 406.97 / -0.049 0.227 -0.005>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  414.12 -17.408 936.166 / -1.122e-05 -2.800e-08 3.143e-13> #<bodyset-link #X9501ce8 RLEG_LINK1  414.12 -17.408 814.166 / -1.122e-05 -2.800e-08 -0.119> #<bodyset-link #X6f14d58 RLEG_LINK2  414.12 -18.596 804.237 / -0.075 0.562 -0.141> #<bodyset-link #X6f38680 RLEG_LINK3  210.292 -56.687 485.799 / -0.077 0.572 -0.142> #<bodyset-link #X130e0d78 RLEG_LINK4  2.976 -94.513 169.588 / -1.096e-05 -2.192e-06 -0.119> #<bodyset-link #X12a84e10 RLEG_LINK5  2.976 -99.264 129.871 / -1.096e-05 -2.192e-06 -2.502e-07>) (#<bodyset-link #X1258dac0 LLEG_LINK0  525.16 148.935 936.166 / -0.011 -2.800e-08 3.077e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  525.16 148.935 814.166 / -0.011 -2.800e-08 -0.162> #<bodyset-link #X6fe1bf0 LLEG_LINK2  525.143 147.32 804.298 / 0.134 -0.723 -0.217> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.468 98.991 526.12 / -1.851 1.403 -1.837> #<bodyset-link #X1316f038 LLEG_LINK4  399.899 105.9 542.848 / -0.049 0.227 -0.167> #<bodyset-link #X6f6d3c0 LLEG_LINK5  390.72 99.709 504.41 / -0.049 0.227 -0.005>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(396.357 98.1713 1224.75) :target-centroid-pos #f(396.357 98.1713 1224.75) :fix-limbs-target-coords (#<coordinates #X27721a98  1.593 -100.0 28.552 / 1.683e-10 -7.330e-19 5.553e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.831717 0.5552 -2.800114e-08 469.64) (-0.5552 0.831717 -8.218221e-19 65.7637) (2.328903e-08 1.554622e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint790729920) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.4318 47.7096 0.0 0.0 0.0 -7.79546) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(1.59347 -100.0 28.5525) :rot #2f((1.0 -1.682891e-10 -6.395221e-19) (1.682891e-10 1.0 -5.552768e-10) (7.329653e-19 5.552768e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.405019e-23 0.0) (0.0 1.0 0.0 -1.421085e-14) (-9.405019e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.177566e-18 0.0) (0.0 1.0 0.0 0.0) (4.177566e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.405019e-23 0.0) (0.0 1.0 0.0 -1.421085e-14) (-9.405019e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.177566e-18 0.0) (0.0 1.0 0.0 0.0) (4.177566e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.357 98.1713 1224.75) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.405019e-23 0.0) (0.0 1.0 0.0 -1.421085e-14) (-9.405019e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.177566e-18 0.0) (0.0 1.0 0.0 0.0) (4.177566e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(396.357 98.1713 1224.75) :target-centroid-pos #f(396.357 98.1713 1224.75) :fix-limbs-target-coords (list #<coordinates #X27721a98  1.593 -100.0 28.552 / 1.683e-10 -7.330e-19 5.553e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-03-28-68-20-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-03-28-68-20-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-285.911 -37.7114 -399.205)/(492.475/1)
;; dif-rot : #f(7.829520e-05 -0.018112 -0.012828)/(0.022194/0.017453)
;; dif-pos : #f(-3.28127 0.187474 0.635155)/(3.34743/1)
;; dif-rot : #f(2.559406e-06 -0.001873 -0.013898)/(0.014024/0.017453)
;; cog-dif : #f(39.4255 0.358231)/(39.4271/5.0)
;;  coords : #<coordinates #X1325f8e0  394.169 60.89 -91.834 / -0.621 -2.277e-08 1.630e-08>
;;  angles : (#f(46.5474 49.6296 0.0 0.0 0.0 -6.51254) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X27c809e0  1.737 -100.0 30.214 / 1.682e-10 -8.470e-19 5.550e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  294.323 -58.547 424.176 / 0.013 0.018 3.788e-05> #<cascaded-coords #X12422518 :lleg-end-coords  403.297 99.858 399.49 / 0.014 0.002 1.045e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  394.169 60.89 926.666 / -0.621 -2.277e-08 1.630e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  335.972 -20.431 936.166 / 0.015 -2.800e-08 -4.248e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  335.972 -20.431 814.166 / 0.015 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  335.992 -21.713 804.249 / 0.25 -1.064 -0.267> #<bodyset-link #X6f38680 RLEG_LINK3  671.341 -39.614 626.428 / -0.635 1.36 -0.661> #<bodyset-link #X130e0d78 RLEG_LINK4  296.787 -53.39 563.823 / 0.013 0.018 -0.129> #<bodyset-link #X12a84e10 RLEG_LINK5  296.134 -58.528 524.16 / 0.013 0.018 3.788e-05>) (#<bodyset-link #X6ee5ff8 BODY  394.169 60.89 926.666 / -0.621 -2.277e-08 1.630e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  452.366 142.212 936.166 / 0.014 -2.800e-08 -3.961e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  452.366 142.212 814.166 / 0.014 -2.800e-08 -0.132> #<bodyset-link #X6fe1bf0 LLEG_LINK2  452.384 140.899 804.253 / 0.226 -1.008 -0.249> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.955 119.482 607.797 / -0.602 1.346 -0.628> #<bodyset-link #X1316f038 LLEG_LINK4  403.485 105.109 539.144 / 0.014 0.002 -0.132> #<bodyset-link #X6f6d3c0 LLEG_LINK5  403.484 99.86 499.49 / 0.014 0.002 1.045e-05>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  294.323 -58.547 424.176 / 0.013 0.018 3.788e-05> #<cascaded-coords #X12422518 :lleg-end-coords  403.297 99.858 399.49 / 0.014 0.002 1.045e-05>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  394.169 60.89 926.666 / -0.621 -2.277e-08 1.630e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  335.972 -20.431 936.166 / 0.015 -2.800e-08 -4.248e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  335.972 -20.431 814.166 / 0.015 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  335.992 -21.713 804.249 / 0.25 -1.064 -0.267> #<bodyset-link #X6f38680 RLEG_LINK3  671.341 -39.614 626.428 / -0.635 1.36 -0.661> #<bodyset-link #X130e0d78 RLEG_LINK4  296.787 -53.39 563.823 / 0.013 0.018 -0.129> #<bodyset-link #X12a84e10 RLEG_LINK5  296.134 -58.528 524.16 / 0.013 0.018 3.788e-05>) (#<bodyset-link #X6ee5ff8 BODY  394.169 60.89 926.666 / -0.621 -2.277e-08 1.630e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  452.366 142.212 936.166 / 0.014 -2.800e-08 -3.961e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  452.366 142.212 814.166 / 0.014 -2.800e-08 -0.132> #<bodyset-link #X6fe1bf0 LLEG_LINK2  452.384 140.899 804.253 / 0.226 -1.008 -0.249> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.955 119.482 607.797 / -0.602 1.346 -0.628> #<bodyset-link #X1316f038 LLEG_LINK4  403.485 105.109 539.144 / 0.014 0.002 -0.132> #<bodyset-link #X6f6d3c0 LLEG_LINK5  403.484 99.86 499.49 / 0.014 0.002 1.045e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.577 98.2815 1225.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  394.169 60.89 926.666 / -0.621 -2.277e-08 1.630e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  294.323 -58.547 424.176 / 0.013 0.018 3.788e-05> #<cascaded-coords #X12422518 :lleg-end-coords  403.297 99.858 399.49 / 0.014 0.002 1.045e-05>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  335.972 -20.431 936.166 / 0.015 -2.800e-08 -4.248e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  335.972 -20.431 814.166 / 0.015 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  335.992 -21.713 804.249 / 0.25 -1.064 -0.267> #<bodyset-link #X6f38680 RLEG_LINK3  671.341 -39.614 626.428 / -0.635 1.36 -0.661> #<bodyset-link #X130e0d78 RLEG_LINK4  296.787 -53.39 563.823 / 0.013 0.018 -0.129> #<bodyset-link #X12a84e10 RLEG_LINK5  296.134 -58.528 524.16 / 0.013 0.018 3.788e-05>) (#<bodyset-link #X1258dac0 LLEG_LINK0  452.366 142.212 936.166 / 0.014 -2.800e-08 -3.961e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  452.366 142.212 814.166 / 0.014 -2.800e-08 -0.132> #<bodyset-link #X6fe1bf0 LLEG_LINK2  452.384 140.899 804.253 / 0.226 -1.008 -0.249> #<bodyset-link #X6f7a6c0 LLEG_LINK3  776.955 119.482 607.797 / -0.602 1.346 -0.628> #<bodyset-link #X1316f038 LLEG_LINK4  403.485 105.109 539.144 / 0.014 0.002 -0.132> #<bodyset-link #X6f6d3c0 LLEG_LINK5  403.484 99.86 499.49 / 0.014 0.002 1.045e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(396.577 98.2815 1225.0) :target-centroid-pos #f(396.577 98.2815 1225.0) :fix-limbs-target-coords (#<coordinates #X27c809e0  1.737 -100.0 30.214 / 1.682e-10 -8.470e-19 5.550e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.813213 0.581966 -2.800114e-08 394.169) (-0.581966 0.813213 -8.218221e-19 60.8902) (2.277089e-08 1.629571e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint824654360) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.5474 49.6296 0.0 0.0 0.0 -6.51254) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(1.73677 -100.0 30.2136) :rot #2f((1.0 -1.682020e-10 -7.536602e-19) (1.682020e-10 1.0 -5.549892e-10) (8.470060e-19 5.549892e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.431062e-18 5.684342e-14) (0.0 1.0 0.0 7.105427e-15) (1.431062e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.226770e-21 1.136868e-13) (0.0 1.0 0.0 -1.421085e-14) (-2.226770e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.431062e-18 5.684342e-14) (0.0 1.0 0.0 7.105427e-15) (1.431062e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.226770e-21 1.136868e-13) (0.0 1.0 0.0 -1.421085e-14) (-2.226770e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.577 98.2815 1225.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.431062e-18 5.684342e-14) (0.0 1.0 0.0 7.105427e-15) (1.431062e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.226770e-21 1.136868e-13) (0.0 1.0 0.0 -1.421085e-14) (-2.226770e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(396.577 98.2815 1225.0) :target-centroid-pos #f(396.577 98.2815 1225.0) :fix-limbs-target-coords (list #<coordinates #X27c809e0  1.737 -100.0 30.214 / 1.682e-10 -8.470e-19 5.550e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-03-74-89-52-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-03-74-89-52-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-320.539 -63.2628 -480.465)/(581.028/1)
;; dif-rot : #f(0.001494 -0.010952 0.011225)/(0.015754/0.017453)
;; dif-pos : #f(-3.46102 -0.552712 -5.80559)/(6.78152/1)
;; dif-rot : #f(0.000684 -0.002203 0.00865)/(0.008952/0.017453)
;; cog-dif : #f(39.7928 7.14557)/(40.4292/5.0)
;;  coords : #<coordinates #X1325f8e0  392.19 53.698 -91.834 / -0.608 -2.298e-08 1.600e-08>
;;  angles : (#f(46.6507 51.5969 0.0 0.0 0.0 -5.18421) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X281d4db0  1.888 -100.0 31.918 / 1.681e-10 -9.667e-19 5.547e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  328.363 -39.653 508.747 / -0.011 0.011 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  403.493 100.527 405.929 / -0.009 0.002 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  392.19 53.698 926.666 / -0.608 -2.298e-08 1.600e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  335.046 -28.366 936.166 / -0.011 -2.800e-08 2.978e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  335.046 -28.366 814.166 / -0.011 -2.800e-08 -0.054> #<bodyset-link #X6f14d58 RLEG_LINK2  335.04 -28.911 804.181 / 0.209 -1.326 -0.227> #<bodyset-link #X6f38680 RLEG_LINK3  704.187 -37.732 714.442 / -0.311 1.388 -0.305> #<bodyset-link #X130e0d78 RLEG_LINK4  329.921 -37.337 648.679 / -0.011 0.011 -0.054> #<bodyset-link #X12a84e10 RLEG_LINK5  329.459 -39.51 608.741 / -0.011 0.011 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  392.19 53.698 926.666 / -0.608 -2.298e-08 1.600e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  449.335 135.762 936.166 / -0.008 -2.800e-08 2.351e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  449.335 135.762 814.166 / -0.008 -2.800e-08 -0.115> #<bodyset-link #X6fe1bf0 LLEG_LINK2  449.325 134.616 804.232 / 0.186 -1.032 -0.225> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.552 109.959 614.341 / -0.563 1.355 -0.565> #<bodyset-link #X1316f038 LLEG_LINK4  403.84 105.176 545.665 / -0.009 0.002 -0.115> #<bodyset-link #X6f6d3c0 LLEG_LINK5  403.713 100.594 505.929 / -0.009 0.002 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  328.363 -39.653 508.747 / -0.011 0.011 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  403.493 100.527 405.929 / -0.009 0.002 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  392.19 53.698 926.666 / -0.608 -2.298e-08 1.600e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  335.046 -28.366 936.166 / -0.011 -2.800e-08 2.978e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  335.046 -28.366 814.166 / -0.011 -2.800e-08 -0.054> #<bodyset-link #X6f14d58 RLEG_LINK2  335.04 -28.911 804.181 / 0.209 -1.326 -0.227> #<bodyset-link #X6f38680 RLEG_LINK3  704.187 -37.732 714.442 / -0.311 1.388 -0.305> #<bodyset-link #X130e0d78 RLEG_LINK4  329.921 -37.337 648.679 / -0.011 0.011 -0.054> #<bodyset-link #X12a84e10 RLEG_LINK5  329.459 -39.51 608.741 / -0.011 0.011 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  392.19 53.698 926.666 / -0.608 -2.298e-08 1.600e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  449.335 135.762 936.166 / -0.008 -2.800e-08 2.351e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  449.335 135.762 814.166 / -0.008 -2.800e-08 -0.115> #<bodyset-link #X6fe1bf0 LLEG_LINK2  449.325 134.616 804.232 / 0.186 -1.032 -0.225> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.552 109.959 614.341 / -0.563 1.355 -0.565> #<bodyset-link #X1316f038 LLEG_LINK4  403.84 105.176 545.665 / -0.009 0.002 -0.115> #<bodyset-link #X6f6d3c0 LLEG_LINK5  403.713 100.594 505.929 / -0.009 0.002 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.784 98.385 1225.25) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  392.19 53.698 926.666 / -0.608 -2.298e-08 1.600e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  328.363 -39.653 508.747 / -0.011 0.011 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  403.493 100.527 405.929 / -0.009 0.002 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  335.046 -28.366 936.166 / -0.011 -2.800e-08 2.978e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  335.046 -28.366 814.166 / -0.011 -2.800e-08 -0.054> #<bodyset-link #X6f14d58 RLEG_LINK2  335.04 -28.911 804.181 / 0.209 -1.326 -0.227> #<bodyset-link #X6f38680 RLEG_LINK3  704.187 -37.732 714.442 / -0.311 1.388 -0.305> #<bodyset-link #X130e0d78 RLEG_LINK4  329.921 -37.337 648.679 / -0.011 0.011 -0.054> #<bodyset-link #X12a84e10 RLEG_LINK5  329.459 -39.51 608.741 / -0.011 0.011 -0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  449.335 135.762 936.166 / -0.008 -2.800e-08 2.351e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  449.335 135.762 814.166 / -0.008 -2.800e-08 -0.115> #<bodyset-link #X6fe1bf0 LLEG_LINK2  449.325 134.616 804.232 / 0.186 -1.032 -0.225> #<bodyset-link #X6f7a6c0 LLEG_LINK3  777.552 109.959 614.341 / -0.563 1.355 -0.565> #<bodyset-link #X1316f038 LLEG_LINK4  403.84 105.176 545.665 / -0.009 0.002 -0.115> #<bodyset-link #X6f6d3c0 LLEG_LINK5  403.713 100.594 505.929 / -0.009 0.002 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(396.784 98.385 1225.25) :target-centroid-pos #f(396.784 98.385 1225.25) :fix-limbs-target-coords (#<coordinates #X281d4db0  1.888 -100.0 31.918 / 1.681e-10 -9.667e-19 5.547e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.820642 0.571442 -2.800114e-08 392.19) (-0.571442 0.820642 -8.218221e-19 53.6978) (2.297892e-08 1.600104e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint131875848) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.6507 51.5969 0.0 0.0 0.0 -5.18421) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(1.88827 -100.0 31.9179) :rot #2f((1.0 -1.681105e-10 -8.734706e-19) (1.681105e-10 1.0 -5.546873e-10) (9.667142e-19 5.546873e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.015938e-19 0.0) (0.0 1.0 0.0 7.105427e-15) (-2.015938e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.486769e-20 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-9.486769e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.015938e-19 0.0) (0.0 1.0 0.0 7.105427e-15) (-2.015938e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.486769e-20 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-9.486769e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.784 98.385 1225.25) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.015938e-19 0.0) (0.0 1.0 0.0 7.105427e-15) (-2.015938e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.486769e-20 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-9.486769e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(396.784 98.385 1225.25) :target-centroid-pos #f(396.784 98.385 1225.25) :fix-limbs-target-coords (list #<coordinates #X281d4db0  1.888 -100.0 31.918 / 1.681e-10 -9.667e-19 5.547e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-04-10-10-83-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-04-10-10-83-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-246.763 -68.958 -551.108)/(607.756/1)
;; dif-rot : #f(-7.352421e-16 -0.180679 0.022606)/(0.182087/0.017453)
;; dif-pos : #f(24.024 -0.378733 -2.1806)/(24.1257/1)
;; dif-rot : #f(-1.351456e-05 -0.168225 0.028981)/(0.170703/0.017453)
;; cog-dif : #f(-9.88294 -4.25849)/(10.7614/5.0)
;;  coords : #<coordinates #X1325f8e0  448.785 69.742 -91.834 / -0.562 -2.369e-08 1.493e-08>
;;  angles : (#f(46.7421 53.6114 0.0 0.0 0.0 -3.81112) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X28430d00  2.048 -100.0 33.665 / 1.680e-10 -1.092e-18 5.544e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  345.306 -37.729 531.323 / -0.023 0.181 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  376.715 101.066 406.302 / -0.029 0.168 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  448.785 69.742 926.666 / -0.562 -2.369e-08 1.493e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  395.458 -14.853 936.166 / 3.671e-09 -2.800e-08 -1.020e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  395.458 -14.853 814.166 / 3.671e-09 -2.800e-08 -0.124> #<bodyset-link #X6f14d58 RLEG_LINK2  395.458 -16.094 804.244 / 0.315 -1.187 -0.338> #<bodyset-link #X6f38680 RLEG_LINK3  750.516 -32.904 669.887 / -1.546 1.446 -1.546> #<bodyset-link #X130e0d78 RLEG_LINK4  370.518 -33.049 668.73 / -0.023 0.181 -0.127> #<bodyset-link #X12a84e10 RLEG_LINK5  363.274 -37.933 629.696 / -0.023 0.181 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  448.785 69.742 926.666 / -0.562 -2.369e-08 1.493e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  502.112 154.337 936.166 / 0.0 -2.800e-08 -3.435e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  502.112 154.337 814.166 / 0.0 -2.800e-08 -0.171> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.112 152.632 804.313 / 0.181 -0.805 -0.249> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.211 108.523 549.136 / -1.486 1.399 -1.488> #<bodyset-link #X1316f038 LLEG_LINK4  400.251 107.542 543.732 / -0.029 0.168 -0.174> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.456 100.822 504.891 / -0.029 0.168 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  345.306 -37.729 531.323 / -0.023 0.181 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  376.715 101.066 406.302 / -0.029 0.168 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  448.785 69.742 926.666 / -0.562 -2.369e-08 1.493e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  395.458 -14.853 936.166 / 3.671e-09 -2.800e-08 -1.020e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  395.458 -14.853 814.166 / 3.671e-09 -2.800e-08 -0.124> #<bodyset-link #X6f14d58 RLEG_LINK2  395.458 -16.094 804.244 / 0.315 -1.187 -0.338> #<bodyset-link #X6f38680 RLEG_LINK3  750.516 -32.904 669.887 / -1.546 1.446 -1.546> #<bodyset-link #X130e0d78 RLEG_LINK4  370.518 -33.049 668.73 / -0.023 0.181 -0.127> #<bodyset-link #X12a84e10 RLEG_LINK5  363.274 -37.933 629.696 / -0.023 0.181 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  448.785 69.742 926.666 / -0.562 -2.369e-08 1.493e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  502.112 154.337 936.166 / 0.0 -2.800e-08 -3.435e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  502.112 154.337 814.166 / 0.0 -2.800e-08 -0.171> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.112 152.632 804.313 / 0.181 -0.805 -0.249> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.211 108.523 549.136 / -1.486 1.399 -1.488> #<bodyset-link #X1316f038 LLEG_LINK4  400.251 107.542 543.732 / -0.029 0.168 -0.174> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.456 100.822 504.891 / -0.029 0.168 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.979 98.4822 1225.5) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  448.785 69.742 926.666 / -0.562 -2.369e-08 1.493e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  345.306 -37.729 531.323 / -0.023 0.181 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  376.715 101.066 406.302 / -0.029 0.168 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  395.458 -14.853 936.166 / 3.671e-09 -2.800e-08 -1.020e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  395.458 -14.853 814.166 / 3.671e-09 -2.800e-08 -0.124> #<bodyset-link #X6f14d58 RLEG_LINK2  395.458 -16.094 804.244 / 0.315 -1.187 -0.338> #<bodyset-link #X6f38680 RLEG_LINK3  750.516 -32.904 669.887 / -1.546 1.446 -1.546> #<bodyset-link #X130e0d78 RLEG_LINK4  370.518 -33.049 668.73 / -0.023 0.181 -0.127> #<bodyset-link #X12a84e10 RLEG_LINK5  363.274 -37.933 629.696 / -0.023 0.181 -0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  502.112 154.337 936.166 / 0.0 -2.800e-08 -3.435e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  502.112 154.337 814.166 / 0.0 -2.800e-08 -0.171> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.112 152.632 804.313 / 0.181 -0.805 -0.249> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.211 108.523 549.136 / -1.486 1.399 -1.488> #<bodyset-link #X1316f038 LLEG_LINK4  400.251 107.542 543.732 / -0.029 0.168 -0.174> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.456 100.822 504.891 / -0.029 0.168 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(396.979 98.4822 1225.5) :target-centroid-pos #f(396.979 98.4822 1225.5) :fix-limbs-target-coords (#<coordinates #X28430d00  2.048 -100.0 33.665 / 1.680e-10 -1.092e-18 5.544e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.845947 0.533268 -2.800114e-08 448.785) (-0.533268 0.845947 -8.218221e-19 69.7419) (2.368747e-08 1.493210e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint640097080) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.7421 53.6114 0.0 0.0 0.0 -3.81112) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(2.04819 -100.0 33.6649) :rot #2f((1.0 -1.680146e-10 -9.990544e-19) (1.680146e-10 1.0 -5.543709e-10) (1.092191e-18 5.543709e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.156313e-18 -5.684342e-14) (0.0 1.0 0.0 3.552714e-15) (6.156313e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.010087e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.010087e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.156313e-18 -5.684342e-14) (0.0 1.0 0.0 3.552714e-15) (6.156313e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.010087e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.010087e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(396.979 98.4822 1225.5) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.156313e-18 -5.684342e-14) (0.0 1.0 0.0 3.552714e-15) (6.156313e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.010087e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (1.010087e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(396.979 98.4822 1225.5) :target-centroid-pos #f(396.979 98.4822 1225.5) :fix-limbs-target-coords (list #<coordinates #X28430d00  2.048 -100.0 33.665 / 1.680e-10 -1.092e-18 5.544e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-04-45-68-26-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-04-45-68-26-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-313.094 -65.7672 -476.402)/(573.857/1)
;; dif-rot : #f(0.002275 -0.006888 0.015911)/(0.017487/0.017453)
;; dif-pos : #f(-6.64173 1.8098 -2.85557)/(7.45266/1)
;; dif-rot : #f(0.001198 -0.004844 0.016398)/(0.017141/0.017453)
;; cog-dif : #f(38.2101 6.60662)/(38.777/5.0)
;;  coords : #<coordinates #X1325f8e0  389.955 48.613 -91.834 / -0.708 -2.127e-08 1.821e-08>
;;  angles : (#f(46.8224 55.673 0.0 0.0 0.0 -2.39392) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2897bb00  2.217 -100.0 35.454 / 1.679e-10 -1.224e-18 5.540e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  319.6 -38.167 509.539 / -0.016 0.007 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  406.639 98.085 402.957 / -0.016 0.005 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  389.955 48.613 926.666 / -0.708 -2.127e-08 1.821e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  324.925 -27.354 936.166 / -0.016 -2.800e-08 4.357e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  324.925 -27.354 814.166 / -0.016 -2.800e-08 -0.052> #<bodyset-link #X6f14d58 RLEG_LINK2  324.917 -27.874 804.18 / 0.201 -1.333 -0.222> #<bodyset-link #X6f38680 RLEG_LINK3  694.585 -38.182 716.777 / -0.297 1.385 -0.286> #<bodyset-link #X130e0d78 RLEG_LINK4  320.598 -35.868 649.481 / -0.016 0.007 -0.052> #<bodyset-link #X12a84e10 RLEG_LINK5  320.29 -37.945 609.536 / -0.016 0.007 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  389.955 48.613 926.666 / -0.708 -2.127e-08 1.821e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  454.986 124.581 936.166 / -0.016 -2.800e-08 4.474e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  454.986 124.581 814.166 / -0.016 -2.800e-08 -0.087> #<bodyset-link #X6fe1bf0 LLEG_LINK2  454.972 123.712 804.204 / 0.129 -1.028 -0.169> #<bodyset-link #X6f7a6c0 LLEG_LINK3  781.261 101.619 610.691 / -0.461 1.371 -0.453> #<bodyset-link #X1316f038 LLEG_LINK4  407.374 101.672 542.804 / -0.016 0.005 -0.087> #<bodyset-link #X6f6d3c0 LLEG_LINK5  407.124 98.201 502.956 / -0.016 0.005 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  319.6 -38.167 509.539 / -0.016 0.007 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  406.639 98.085 402.957 / -0.016 0.005 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  389.955 48.613 926.666 / -0.708 -2.127e-08 1.821e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  324.925 -27.354 936.166 / -0.016 -2.800e-08 4.357e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  324.925 -27.354 814.166 / -0.016 -2.800e-08 -0.052> #<bodyset-link #X6f14d58 RLEG_LINK2  324.917 -27.874 804.18 / 0.201 -1.333 -0.222> #<bodyset-link #X6f38680 RLEG_LINK3  694.585 -38.182 716.777 / -0.297 1.385 -0.286> #<bodyset-link #X130e0d78 RLEG_LINK4  320.598 -35.868 649.481 / -0.016 0.007 -0.052> #<bodyset-link #X12a84e10 RLEG_LINK5  320.29 -37.945 609.536 / -0.016 0.007 -0.002>) (#<bodyset-link #X6ee5ff8 BODY  389.955 48.613 926.666 / -0.708 -2.127e-08 1.821e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  454.986 124.581 936.166 / -0.016 -2.800e-08 4.474e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  454.986 124.581 814.166 / -0.016 -2.800e-08 -0.087> #<bodyset-link #X6fe1bf0 LLEG_LINK2  454.972 123.712 804.204 / 0.129 -1.028 -0.169> #<bodyset-link #X6f7a6c0 LLEG_LINK3  781.261 101.619 610.691 / -0.461 1.371 -0.453> #<bodyset-link #X1316f038 LLEG_LINK4  407.374 101.672 542.804 / -0.016 0.005 -0.087> #<bodyset-link #X6f6d3c0 LLEG_LINK5  407.124 98.201 502.956 / -0.016 0.005 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.161 98.5736 1225.76) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  389.955 48.613 926.666 / -0.708 -2.127e-08 1.821e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  319.6 -38.167 509.539 / -0.016 0.007 -0.002> #<cascaded-coords #X12422518 :lleg-end-coords  406.639 98.085 402.957 / -0.016 0.005 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  324.925 -27.354 936.166 / -0.016 -2.800e-08 4.357e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  324.925 -27.354 814.166 / -0.016 -2.800e-08 -0.052> #<bodyset-link #X6f14d58 RLEG_LINK2  324.917 -27.874 804.18 / 0.201 -1.333 -0.222> #<bodyset-link #X6f38680 RLEG_LINK3  694.585 -38.182 716.777 / -0.297 1.385 -0.286> #<bodyset-link #X130e0d78 RLEG_LINK4  320.598 -35.868 649.481 / -0.016 0.007 -0.052> #<bodyset-link #X12a84e10 RLEG_LINK5  320.29 -37.945 609.536 / -0.016 0.007 -0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  454.986 124.581 936.166 / -0.016 -2.800e-08 4.474e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  454.986 124.581 814.166 / -0.016 -2.800e-08 -0.087> #<bodyset-link #X6fe1bf0 LLEG_LINK2  454.972 123.712 804.204 / 0.129 -1.028 -0.169> #<bodyset-link #X6f7a6c0 LLEG_LINK3  781.261 101.619 610.691 / -0.461 1.371 -0.453> #<bodyset-link #X1316f038 LLEG_LINK4  407.374 101.672 542.804 / -0.016 0.005 -0.087> #<bodyset-link #X6f6d3c0 LLEG_LINK5  407.124 98.201 502.956 / -0.016 0.005 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(397.161 98.5736 1225.76) :target-centroid-pos #f(397.161 98.5736 1225.76) :fix-limbs-target-coords (#<coordinates #X2897bb00  2.217 -100.0 35.454 / 1.679e-10 -1.224e-18 5.540e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.759673 0.650305 -2.800114e-08 389.955) (-0.650305 0.759673 -8.218205e-19 48.6135) (2.127171e-08 1.820928e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint224625624) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.8224 55.673 0.0 0.0 0.0 -2.39392) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(2.21674 -100.0 35.4542) :rot #2f((1.0 -1.679142e-10 -1.130510e-18) (1.679142e-10 1.0 -5.540397e-10) (1.223534e-18 5.540397e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.084202e-19 -5.684342e-14) (0.0 1.0 0.0 7.105427e-15) (-1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.302927e-19 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (4.302927e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.084202e-19 -5.684342e-14) (0.0 1.0 0.0 7.105427e-15) (-1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.302927e-19 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (4.302927e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.161 98.5736 1225.76) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.084202e-19 -5.684342e-14) (0.0 1.0 0.0 7.105427e-15) (-1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.302927e-19 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (4.302927e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(397.161 98.5736 1225.76) :target-centroid-pos #f(397.161 98.5736 1225.76) :fix-limbs-target-coords (list #<coordinates #X2897bb00  2.217 -100.0 35.454 / 1.679e-10 -1.224e-18 5.540e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-04-81-40-57-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-04-81-40-57-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-308.824 -68.1262 -474.503)/(570.234/1)
;; dif-rot : #f(0.002959 -0.00447 0.019499)/(0.020223/0.017453)
;; dif-pos : #f(-8.30036 3.86768 -1.1754)/(9.23236/1)
;; dif-rot : #f(0.001421 -0.006717 0.02041)/(0.021534/0.017453)
;; cog-dif : #f(36.876 6.54922)/(37.4531/5.0)
;;  coords : #<coordinates #X1325f8e0  388.632 45.405 -91.834 / -0.769 -2.012e-08 1.947e-08>
;;  angles : (#f(46.892 57.7816 0.0 0.0 0.0 -0.933245) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X28ecdb60  2.394 -100.0 37.285 / 1.678e-10 -1.361e-18 5.537e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  314.619 -36.527 510.205 / -0.02 0.004 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  408.242 95.965 401.257 / -0.02 0.007 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  388.632 45.405 926.666 / -0.769 -2.012e-08 1.947e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  319.085 -26.451 936.166 / -0.019 -2.800e-08 5.401e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  319.085 -26.451 814.166 / -0.019 -2.800e-08 -0.048> #<bodyset-link #X6f14d58 RLEG_LINK2  319.076 -26.934 804.178 / 0.186 -1.338 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  689.09 -38.222 718.374 / -0.278 1.384 -0.263> #<bodyset-link #X130e0d78 RLEG_LINK4  315.284 -34.308 650.157 / -0.02 0.004 -0.048> #<bodyset-link #X12a84e10 RLEG_LINK5  315.069 -36.236 610.204 / -0.02 0.004 -0.003>) (#<bodyset-link #X6ee5ff8 BODY  388.632 45.405 926.666 / -0.769 -2.012e-08 1.947e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  458.179 117.26 936.166 / -0.02 -2.800e-08 5.583e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  458.179 117.26 814.166 / -0.02 -2.800e-08 -0.071> #<bodyset-link #X6fe1bf0 LLEG_LINK2  458.165 116.555 804.191 / 0.097 -1.024 -0.136> #<bodyset-link #X6f7a6c0 LLEG_LINK3  783.227 96.219 608.433 / -0.393 1.379 -0.379> #<bodyset-link #X1316f038 LLEG_LINK4  409.24 98.917 541.154 / -0.02 0.007 -0.071> #<bodyset-link #X6f6d3c0 LLEG_LINK5  408.915 96.101 501.254 / -0.02 0.007 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  314.619 -36.527 510.205 / -0.02 0.004 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  408.242 95.965 401.257 / -0.02 0.007 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  388.632 45.405 926.666 / -0.769 -2.012e-08 1.947e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  319.085 -26.451 936.166 / -0.019 -2.800e-08 5.401e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  319.085 -26.451 814.166 / -0.019 -2.800e-08 -0.048> #<bodyset-link #X6f14d58 RLEG_LINK2  319.076 -26.934 804.178 / 0.186 -1.338 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  689.09 -38.222 718.374 / -0.278 1.384 -0.263> #<bodyset-link #X130e0d78 RLEG_LINK4  315.284 -34.308 650.157 / -0.02 0.004 -0.048> #<bodyset-link #X12a84e10 RLEG_LINK5  315.069 -36.236 610.204 / -0.02 0.004 -0.003>) (#<bodyset-link #X6ee5ff8 BODY  388.632 45.405 926.666 / -0.769 -2.012e-08 1.947e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  458.179 117.26 936.166 / -0.02 -2.800e-08 5.583e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  458.179 117.26 814.166 / -0.02 -2.800e-08 -0.071> #<bodyset-link #X6fe1bf0 LLEG_LINK2  458.165 116.555 804.191 / 0.097 -1.024 -0.136> #<bodyset-link #X6f7a6c0 LLEG_LINK3  783.227 96.219 608.433 / -0.393 1.379 -0.379> #<bodyset-link #X1316f038 LLEG_LINK4  409.24 98.917 541.154 / -0.02 0.007 -0.071> #<bodyset-link #X6f6d3c0 LLEG_LINK5  408.915 96.101 501.254 / -0.02 0.007 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.333 98.6595 1226.03) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  388.632 45.405 926.666 / -0.769 -2.012e-08 1.947e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  314.619 -36.527 510.205 / -0.02 0.004 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  408.242 95.965 401.257 / -0.02 0.007 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  319.085 -26.451 936.166 / -0.019 -2.800e-08 5.401e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  319.085 -26.451 814.166 / -0.019 -2.800e-08 -0.048> #<bodyset-link #X6f14d58 RLEG_LINK2  319.076 -26.934 804.178 / 0.186 -1.338 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  689.09 -38.222 718.374 / -0.278 1.384 -0.263> #<bodyset-link #X130e0d78 RLEG_LINK4  315.284 -34.308 650.157 / -0.02 0.004 -0.048> #<bodyset-link #X12a84e10 RLEG_LINK5  315.069 -36.236 610.204 / -0.02 0.004 -0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  458.179 117.26 936.166 / -0.02 -2.800e-08 5.583e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  458.179 117.26 814.166 / -0.02 -2.800e-08 -0.071> #<bodyset-link #X6fe1bf0 LLEG_LINK2  458.165 116.555 804.191 / 0.097 -1.024 -0.136> #<bodyset-link #X6f7a6c0 LLEG_LINK3  783.227 96.219 608.433 / -0.393 1.379 -0.379> #<bodyset-link #X1316f038 LLEG_LINK4  409.24 98.917 541.154 / -0.02 0.007 -0.071> #<bodyset-link #X6f6d3c0 LLEG_LINK5  408.915 96.101 501.254 / -0.02 0.007 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(397.333 98.6595 1226.03) :target-centroid-pos #f(397.333 98.6595 1226.03) :fix-limbs-target-coords (#<coordinates #X28ecdb60  2.394 -100.0 37.285 / 1.678e-10 -1.361e-18 5.537e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.718556 0.695469 -2.800114e-08 388.632) (-0.695469 0.718556 -8.218221e-19 45.4048) (2.012039e-08 1.947393e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint317479296) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.892 57.7816 0.0 0.0 0.0 -0.933245) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(2.39411 -100.0 37.2853) :rot #2f((1.0 -1.678093e-10 -1.267934e-18) (1.678093e-10 1.0 -5.536935e-10) (1.360841e-18 5.536935e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 6.938894e-18 1.341700e-18 0.0) (-6.938894e-18 1.0 8.673617e-19 -3.552714e-15) (-1.341700e-18 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.948176e-19 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.948176e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 6.938894e-18 1.341700e-18 0.0) (-6.938894e-18 1.0 8.673617e-19 -3.552714e-15) (-1.341700e-18 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.948176e-19 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.948176e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.333 98.6595 1226.03) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 6.938894e-18 1.341700e-18 0.0) (-6.938894e-18 1.0 8.673617e-19 -3.552714e-15) (-1.341700e-18 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.948176e-19 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.948176e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(397.333 98.6595 1226.03) :target-centroid-pos #f(397.333 98.6595 1226.03) :fix-limbs-target-coords (list #<coordinates #X28ecdb60  2.394 -100.0 37.285 / 1.678e-10 -1.361e-18 5.537e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-05-16-68-92-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-05-16-68-92-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-304.935 -71.0898 -472.813)/(567.09/1)
;; dif-rot : #f(0.003896 -0.002206 0.023985)/(0.024399/0.017453)
;; dif-pos : #f(-9.59337 6.35496 0.319762)/(11.5118/1)
;; dif-rot : #f(0.001574 -0.008602 0.023809)/(0.025364/0.017453)
;; cog-dif : #f(35.4726 6.62385)/(36.0857/5.0)
;;  coords : #<coordinates #X1325f8e0  387.371 42.441 -91.834 / -0.826 -1.897e-08 2.060e-08>
;;  angles : (#f(46.9515 59.9369 0.0 0.0 0.0 0.570291) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2d5b2c50  2.581 -100.0 39.158 / 1.677e-10 -1.504e-18 5.533e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  310.197 -34.416 511.029 / -0.024 0.002 -0.004> #<cascaded-coords #X12422518 :lleg-end-coords  409.45 93.418 399.74 / -0.024 0.009 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  387.371 42.441 926.666 / -0.826 -1.897e-08 2.060e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  313.814 -25.305 936.166 / -0.024 -2.799e-08 6.690e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  313.814 -25.305 814.166 / -0.024 -2.799e-08 -0.043> #<bodyset-link #X6f14d58 RLEG_LINK2  313.804 -25.738 804.176 / 0.164 -1.343 -0.193> #<bodyset-link #X6f38680 RLEG_LINK3  684.17 -38.235 720.076 / -0.254 1.383 -0.234> #<bodyset-link #X130e0d78 RLEG_LINK4  310.55 -32.3 650.99 / -0.024 0.002 -0.043> #<bodyset-link #X12a84e10 RLEG_LINK5  310.422 -34.029 611.028 / -0.024 0.002 -0.004>) (#<bodyset-link #X6ee5ff8 BODY  387.371 42.441 926.666 / -0.826 -1.897e-08 2.060e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  460.927 110.186 936.166 / -0.023 -2.799e-08 6.532e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  460.927 110.186 814.166 / -0.023 -2.799e-08 -0.057> #<bodyset-link #X6fe1bf0 LLEG_LINK2  460.914 109.621 804.182 / 0.069 -1.02 -0.108> #<bodyset-link #X6f7a6c0 LLEG_LINK3  784.787 90.861 606.309 / -0.33 1.385 -0.312> #<bodyset-link #X1316f038 LLEG_LINK4  410.709 95.817 539.671 / -0.024 0.009 -0.057> #<bodyset-link #X6f6d3c0 LLEG_LINK5  410.312 93.565 499.736 / -0.024 0.009 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  310.197 -34.416 511.029 / -0.024 0.002 -0.004> #<cascaded-coords #X12422518 :lleg-end-coords  409.45 93.418 399.74 / -0.024 0.009 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  387.371 42.441 926.666 / -0.826 -1.897e-08 2.060e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  313.814 -25.305 936.166 / -0.024 -2.799e-08 6.690e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  313.814 -25.305 814.166 / -0.024 -2.799e-08 -0.043> #<bodyset-link #X6f14d58 RLEG_LINK2  313.804 -25.738 804.176 / 0.164 -1.343 -0.193> #<bodyset-link #X6f38680 RLEG_LINK3  684.17 -38.235 720.076 / -0.254 1.383 -0.234> #<bodyset-link #X130e0d78 RLEG_LINK4  310.55 -32.3 650.99 / -0.024 0.002 -0.043> #<bodyset-link #X12a84e10 RLEG_LINK5  310.422 -34.029 611.028 / -0.024 0.002 -0.004>) (#<bodyset-link #X6ee5ff8 BODY  387.371 42.441 926.666 / -0.826 -1.897e-08 2.060e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  460.927 110.186 936.166 / -0.023 -2.799e-08 6.532e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  460.927 110.186 814.166 / -0.023 -2.799e-08 -0.057> #<bodyset-link #X6fe1bf0 LLEG_LINK2  460.914 109.621 804.182 / 0.069 -1.02 -0.108> #<bodyset-link #X6f7a6c0 LLEG_LINK3  784.787 90.861 606.309 / -0.33 1.385 -0.312> #<bodyset-link #X1316f038 LLEG_LINK4  410.709 95.817 539.671 / -0.024 0.009 -0.057> #<bodyset-link #X6f6d3c0 LLEG_LINK5  410.312 93.565 499.736 / -0.024 0.009 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.495 98.7402 1226.29) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  387.371 42.441 926.666 / -0.826 -1.897e-08 2.060e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  310.197 -34.416 511.029 / -0.024 0.002 -0.004> #<cascaded-coords #X12422518 :lleg-end-coords  409.45 93.418 399.74 / -0.024 0.009 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  313.814 -25.305 936.166 / -0.024 -2.799e-08 6.690e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  313.814 -25.305 814.166 / -0.024 -2.799e-08 -0.043> #<bodyset-link #X6f14d58 RLEG_LINK2  313.804 -25.738 804.176 / 0.164 -1.343 -0.193> #<bodyset-link #X6f38680 RLEG_LINK3  684.17 -38.235 720.076 / -0.254 1.383 -0.234> #<bodyset-link #X130e0d78 RLEG_LINK4  310.55 -32.3 650.99 / -0.024 0.002 -0.043> #<bodyset-link #X12a84e10 RLEG_LINK5  310.422 -34.029 611.028 / -0.024 0.002 -0.004>) (#<bodyset-link #X1258dac0 LLEG_LINK0  460.927 110.186 936.166 / -0.023 -2.799e-08 6.532e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  460.927 110.186 814.166 / -0.023 -2.799e-08 -0.057> #<bodyset-link #X6fe1bf0 LLEG_LINK2  460.914 109.621 804.182 / 0.069 -1.02 -0.108> #<bodyset-link #X6f7a6c0 LLEG_LINK3  784.787 90.861 606.309 / -0.33 1.385 -0.312> #<bodyset-link #X1316f038 LLEG_LINK4  410.709 95.817 539.671 / -0.024 0.009 -0.057> #<bodyset-link #X6f6d3c0 LLEG_LINK5  410.312 93.565 499.736 / -0.024 0.009 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(397.495 98.7402 1226.29) :target-centroid-pos #f(397.495 98.7402 1226.29) :fix-limbs-target-coords (#<coordinates #X2d5b2c50  2.581 -100.0 39.158 / 1.677e-10 -1.504e-18 5.533e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.677457 0.735563 -2.800114e-08 387.371) (-0.735563 0.677457 -8.218205e-19 42.4405) (1.896955e-08 2.059660e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint167075264) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(46.9515 59.9369 0.0 0.0 0.0 0.570291) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(2.58052 -100.0 39.1578) :rot #2f((1.0 -1.676997e-10 -1.411419e-18) (1.676997e-10 1.0 -5.533320e-10) (1.504203e-18 5.533320e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.098637e-20 0.0) (0.0 1.0 0.0 1.421085e-14) (-6.098637e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.098637e-20 0.0) (0.0 1.0 0.0 1.421085e-14) (-6.098637e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.495 98.7402 1226.29) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.098637e-20 0.0) (0.0 1.0 0.0 1.421085e-14) (-6.098637e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(397.495 98.7402 1226.29) :target-centroid-pos #f(397.495 98.7402 1226.29) :fix-limbs-target-coords (list #<coordinates #X2d5b2c50  2.581 -100.0 39.158 / 1.677e-10 -1.504e-18 5.533e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-05-52-27-49-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-05-52-27-49-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-153.561 -74.2237 -572.471)/(597.339/1)
;; dif-rot : #f(-2.818618e-15 -0.306969 0.0398)/(0.309539/0.017453)
;; dif-pos : #f(22.0133 -0.416071 -1.92615)/(22.1013/1)
;; dif-rot : #f(-1.981652e-05 -0.154156 0.031524)/(0.157346/0.017453)
;; cog-dif : #f(-10.5398 -4.13572)/(11.3221/5.0)
;;  coords : #<coordinates #X1325f8e0  454.563 76.478 -91.834 / -0.469 -2.498e-08 1.265e-08>
;;  angles : (#f(47.0013 62.1387 0.0 0.0 0.0 2.11608) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2dac2890  2.776 -100.0 41.071 / 1.676e-10 -1.654e-18 5.530e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  324.884 -35.318 539.946 / -0.041 0.307 -0.006> #<cascaded-coords #X12422518 :lleg-end-coords  378.582 101.102 405.413 / -0.032 0.154 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  454.563 76.478 926.666 / -0.469 -2.498e-08 1.265e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  409.376 -12.73 936.166 / 3.798e-09 -2.800e-08 -1.055e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  409.376 -12.73 814.166 / 3.798e-09 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  409.376 -14.016 804.249 / 0.236 -1.064 -0.268> #<bodyset-link #X6f38680 RLEG_LINK3  744.343 -37.087 626.303 / -2.342 1.392 -2.334> #<bodyset-link #X130e0d78 RLEG_LINK4  367.278 -31.026 673.055 / -0.041 0.307 -0.135> #<bodyset-link #X12a84e10 RLEG_LINK5  355.094 -35.924 635.272 / -0.041 0.307 -0.006>) (#<bodyset-link #X6ee5ff8 BODY  454.563 76.478 926.666 / -0.469 -2.498e-08 1.265e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  499.75 165.687 936.166 / 0.001 -2.800e-08 -1.936e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  499.75 165.687 814.166 / 0.001 -2.800e-08 -0.206> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.751 163.642 804.378 / 0.22 -0.807 -0.3> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.054 111.354 553.188 / -1.436 1.363 -1.439> #<bodyset-link #X1316f038 LLEG_LINK4  400.201 108.941 542.897 / -0.032 0.154 -0.208> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.934 100.858 504.227 / -0.032 0.154 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  324.884 -35.318 539.946 / -0.041 0.307 -0.006> #<cascaded-coords #X12422518 :lleg-end-coords  378.582 101.102 405.413 / -0.032 0.154 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  454.563 76.478 926.666 / -0.469 -2.498e-08 1.265e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  409.376 -12.73 936.166 / 3.798e-09 -2.800e-08 -1.055e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  409.376 -12.73 814.166 / 3.798e-09 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  409.376 -14.016 804.249 / 0.236 -1.064 -0.268> #<bodyset-link #X6f38680 RLEG_LINK3  744.343 -37.087 626.303 / -2.342 1.392 -2.334> #<bodyset-link #X130e0d78 RLEG_LINK4  367.278 -31.026 673.055 / -0.041 0.307 -0.135> #<bodyset-link #X12a84e10 RLEG_LINK5  355.094 -35.924 635.272 / -0.041 0.307 -0.006>) (#<bodyset-link #X6ee5ff8 BODY  454.563 76.478 926.666 / -0.469 -2.498e-08 1.265e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  499.75 165.687 936.166 / 0.001 -2.800e-08 -1.936e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  499.75 165.687 814.166 / 0.001 -2.800e-08 -0.206> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.751 163.642 804.378 / 0.22 -0.807 -0.3> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.054 111.354 553.188 / -1.436 1.363 -1.439> #<bodyset-link #X1316f038 LLEG_LINK4  400.201 108.941 542.897 / -0.032 0.154 -0.208> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.934 100.858 504.227 / -0.032 0.154 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.646 98.8161 1226.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  454.563 76.478 926.666 / -0.469 -2.498e-08 1.265e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  324.884 -35.318 539.946 / -0.041 0.307 -0.006> #<cascaded-coords #X12422518 :lleg-end-coords  378.582 101.102 405.413 / -0.032 0.154 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  409.376 -12.73 936.166 / 3.798e-09 -2.800e-08 -1.055e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  409.376 -12.73 814.166 / 3.798e-09 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  409.376 -14.016 804.249 / 0.236 -1.064 -0.268> #<bodyset-link #X6f38680 RLEG_LINK3  744.343 -37.087 626.303 / -2.342 1.392 -2.334> #<bodyset-link #X130e0d78 RLEG_LINK4  367.278 -31.026 673.055 / -0.041 0.307 -0.135> #<bodyset-link #X12a84e10 RLEG_LINK5  355.094 -35.924 635.272 / -0.041 0.307 -0.006>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.75 165.687 936.166 / 0.001 -2.800e-08 -1.936e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  499.75 165.687 814.166 / 0.001 -2.800e-08 -0.206> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.751 163.642 804.378 / 0.22 -0.807 -0.3> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.054 111.354 553.188 / -1.436 1.363 -1.439> #<bodyset-link #X1316f038 LLEG_LINK4  400.201 108.941 542.897 / -0.032 0.154 -0.208> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.934 100.858 504.227 / -0.032 0.154 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(397.646 98.8161 1226.57) :target-centroid-pos #f(397.646 98.8161 1226.57) :fix-limbs-target-coords (#<coordinates #X2dac2890  2.776 -100.0 41.071 / 1.676e-10 -1.654e-18 5.530e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.892084 0.45187 -2.800114e-08 454.563) (-0.45187 0.892084 -8.218221e-19 76.4784) (2.497937e-08 1.265286e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint800631536) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.0013 62.1387 0.0 0.0 0.0 2.11608) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(2.77616 -100.0 41.0712) :rot #2f((1.0 -1.675855e-10 -1.561057e-18) (1.675855e-10 1.0 -5.529549e-10) (1.653713e-18 5.529549e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.091419e-17 0.0) (0.0 1.0 0.0 3.552714e-15) (-2.091419e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.082831e-17 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.082831e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.091419e-17 0.0) (0.0 1.0 0.0 3.552714e-15) (-2.091419e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.082831e-17 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.082831e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.646 98.8161 1226.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.091419e-17 0.0) (0.0 1.0 0.0 3.552714e-15) (-2.091419e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.082831e-17 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.082831e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(397.646 98.8161 1226.57) :target-centroid-pos #f(397.646 98.8161 1226.57) :fix-limbs-target-coords (list #<coordinates #X2dac2890  2.776 -100.0 41.071 / 1.676e-10 -1.654e-18 5.530e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-05-89-13-31-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-05-89-13-31-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-121.095 -75.6534 -577.423)/(594.815/1)
;; dif-rot : #f(-2.929248e-15 -0.34872 0.045689)/(0.3517/0.017453)
;; dif-pos : #f(21.4756 -0.411587 -1.83527)/(21.5578/1)
;; dif-rot : #f(-1.756488e-05 -0.150408 0.032021)/(0.153778/0.017453)
;; cog-dif : #f(-10.6655 -4.08772)/(11.422/5.0)
;;  coords : #<coordinates #X1325f8e0  455.991 78.151 -91.834 / -0.446 -2.526e-08 1.208e-08>
;;  angles : (#f(47.0421 64.3869 0.0 0.0 0.0 3.70353) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2df67d00  2.981 -100.0 43.025 / 1.675e-10 -1.809e-18 5.526e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  317.283 -34.397 543.74 / -0.048 0.349 -0.008> #<cascaded-coords #X12422518 :lleg-end-coords  379.08 101.092 405.162 / -0.032 0.15 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  455.991 78.151 926.666 / -0.446 -2.526e-08 1.208e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  412.856 -12.068 936.166 / 3.836e-09 -2.800e-08 -1.066e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  412.856 -12.068 814.166 / 3.836e-09 -2.800e-08 -0.13> #<bodyset-link #X6f14d58 RLEG_LINK2  412.856 -13.367 804.251 / 0.216 -1.023 -0.252> #<bodyset-link #X6f38680 RLEG_LINK3  739.962 -38.491 612.495 / -2.484 1.36 -2.473> #<bodyset-link #X130e0d78 RLEG_LINK4  365.22 -30.307 674.956 / -0.048 0.349 -0.139> #<bodyset-link #X12a84e10 RLEG_LINK5  351.44 -35.185 637.722 / -0.048 0.349 -0.008>) (#<bodyset-link #X6ee5ff8 BODY  455.991 78.151 926.666 / -0.446 -2.526e-08 1.208e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  499.125 168.37 936.166 / 0.001 -2.800e-08 -1.950e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  499.125 168.37 814.166 / 0.001 -2.800e-08 -0.214> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.126 166.245 804.395 / 0.23 -0.807 -0.312> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.001 112.04 554.253 / -1.424 1.354 -1.428> #<bodyset-link #X1316f038 LLEG_LINK4  400.188 109.254 542.658 / -0.032 0.15 -0.217> #<bodyset-link #X6f6d3c0 LLEG_LINK5  394.062 100.85 504.033 / -0.032 0.15 -0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  317.283 -34.397 543.74 / -0.048 0.349 -0.008> #<cascaded-coords #X12422518 :lleg-end-coords  379.08 101.092 405.162 / -0.032 0.15 -0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  455.991 78.151 926.666 / -0.446 -2.526e-08 1.208e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  412.856 -12.068 936.166 / 3.836e-09 -2.800e-08 -1.066e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  412.856 -12.068 814.166 / 3.836e-09 -2.800e-08 -0.13> #<bodyset-link #X6f14d58 RLEG_LINK2  412.856 -13.367 804.251 / 0.216 -1.023 -0.252> #<bodyset-link #X6f38680 RLEG_LINK3  739.962 -38.491 612.495 / -2.484 1.36 -2.473> #<bodyset-link #X130e0d78 RLEG_LINK4  365.22 -30.307 674.956 / -0.048 0.349 -0.139> #<bodyset-link #X12a84e10 RLEG_LINK5  351.44 -35.185 637.722 / -0.048 0.349 -0.008>) (#<bodyset-link #X6ee5ff8 BODY  455.991 78.151 926.666 / -0.446 -2.526e-08 1.208e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  499.125 168.37 936.166 / 0.001 -2.800e-08 -1.950e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  499.125 168.37 814.166 / 0.001 -2.800e-08 -0.214> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.126 166.245 804.395 / 0.23 -0.807 -0.312> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.001 112.04 554.253 / -1.424 1.354 -1.428> #<bodyset-link #X1316f038 LLEG_LINK4  400.188 109.254 542.658 / -0.032 0.15 -0.217> #<bodyset-link #X6f6d3c0 LLEG_LINK5  394.062 100.85 504.033 / -0.032 0.15 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.789 98.8874 1226.85) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  455.991 78.151 926.666 / -0.446 -2.526e-08 1.208e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  317.283 -34.397 543.74 / -0.048 0.349 -0.008> #<cascaded-coords #X12422518 :lleg-end-coords  379.08 101.092 405.162 / -0.032 0.15 -0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  412.856 -12.068 936.166 / 3.836e-09 -2.800e-08 -1.066e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  412.856 -12.068 814.166 / 3.836e-09 -2.800e-08 -0.13> #<bodyset-link #X6f14d58 RLEG_LINK2  412.856 -13.367 804.251 / 0.216 -1.023 -0.252> #<bodyset-link #X6f38680 RLEG_LINK3  739.962 -38.491 612.495 / -2.484 1.36 -2.473> #<bodyset-link #X130e0d78 RLEG_LINK4  365.22 -30.307 674.956 / -0.048 0.349 -0.139> #<bodyset-link #X12a84e10 RLEG_LINK5  351.44 -35.185 637.722 / -0.048 0.349 -0.008>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.125 168.37 936.166 / 0.001 -2.800e-08 -1.950e-11> #<bodyset-link #X6fe7740 LLEG_LINK1  499.125 168.37 814.166 / 0.001 -2.800e-08 -0.214> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.126 166.245 804.395 / 0.23 -0.807 -0.312> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.001 112.04 554.253 / -1.424 1.354 -1.428> #<bodyset-link #X1316f038 LLEG_LINK4  400.188 109.254 542.658 / -0.032 0.15 -0.217> #<bodyset-link #X6f6d3c0 LLEG_LINK5  394.062 100.85 504.033 / -0.032 0.15 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(397.789 98.8874 1226.85) :target-centroid-pos #f(397.789 98.8874 1226.85) :fix-limbs-target-coords (#<coordinates #X2df67d00  2.981 -100.0 43.025 / 1.675e-10 -1.809e-18 5.526e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.902188 0.431343 -2.800114e-08 455.991) (-0.431343 0.902188 -8.218213e-19 78.151) (2.526229e-08 1.207811e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint766840528) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.0421 64.3869 0.0 0.0 0.0 3.70353) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(2.98123 -100.0 43.0251) :rot #2f((1.0 -1.674664e-10 -1.716935e-18) (1.674664e-10 1.0 -5.525622e-10) (1.809459e-18 5.525622e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.794102e-18 -2.842171e-14) (0.0 1.0 0.0 1.065814e-14) (-8.794102e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.225815e-17 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (1.225815e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.794102e-18 -2.842171e-14) (0.0 1.0 0.0 1.065814e-14) (-8.794102e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.225815e-17 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (1.225815e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.789 98.8874 1226.85) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.794102e-18 -2.842171e-14) (0.0 1.0 0.0 1.065814e-14) (-8.794102e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.225815e-17 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (1.225815e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(397.789 98.8874 1226.85) :target-centroid-pos #f(397.789 98.8874 1226.85) :fix-limbs-target-coords (list #<coordinates #X2df67d00  2.981 -100.0 43.025 / 1.675e-10 -1.809e-18 5.526e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-06-23-39-21-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-06-23-39-21-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-0.219951 -0.389939 -0.105331)/(0.459919/1)
;; dif-rot : #f(-4.184654e-08 7.855285e-08 1.367657e-06)/(1.370550e-06/0.017453)
;; dif-pos : #f(27.3505 0.506533 0.412098)/(27.3583/1)
;; dif-rot : #f(-0.000176 -0.192872 0.048442)/(0.198863/0.017453)
;; cog-dif : #f(-0.066123 0.090843)/(0.11236/5.0)
;;  coords : #<coordinates #X1325f8e0  476.949 78.563 -91.834 / -0.418 -2.558e-08 1.138e-08>
;;  angles : (#f(47.0741 66.6811 0.0 0.0 0.0 5.33206) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2e463810  3.196 -100.0 45.019 / 1.673e-10 -1.972e-18 5.522e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.416 -99.61 45.124 / -1.367e-06 -7.855e-08 4.240e-08> #<cascaded-coords #X12422518 :lleg-end-coords  373.099 100.812 404.97 / -0.049 0.193 -0.005>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.949 78.563 926.666 / -0.418 -2.558e-08 1.138e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  436.311 -12.807 936.166 / -1.374e-06 -2.800e-08 3.848e-14> #<bodyset-link #X9501ce8 RLEG_LINK1  436.311 -12.807 814.166 / -1.374e-06 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  436.311 -14.094 804.25 / -0.088 0.595 -0.156> #<bodyset-link #X6f38680 RLEG_LINK3  221.423 -54.418 493.449 / -0.09 0.605 -0.157> #<bodyset-link #X130e0d78 RLEG_LINK4  3.416 -94.463 184.792 / -1.367e-06 -7.855e-08 -0.129> #<bodyset-link #X12a84e10 RLEG_LINK5  3.416 -99.61 145.124 / -1.367e-06 -7.855e-08 4.240e-08>) (#<bodyset-link #X6ee5ff8 BODY  476.949 78.563 926.666 / -0.418 -2.558e-08 1.138e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  517.587 169.934 936.166 / -0.005 -2.800e-08 1.385e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  517.587 169.934 814.166 / -0.005 -2.800e-08 -0.222> #<bodyset-link #X6fe1bf0 LLEG_LINK2  517.576 167.732 804.412 / 0.203 -0.741 -0.303> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.119 105.997 536.718 / -1.633 1.348 -1.626> #<bodyset-link #X1316f038 LLEG_LINK4  400.159 108.927 541.374 / -0.049 0.193 -0.226> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.259 100.329 503.116 / -0.049 0.193 -0.005>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.416 -99.61 45.124 / -1.367e-06 -7.855e-08 4.240e-08> #<cascaded-coords #X12422518 :lleg-end-coords  373.099 100.812 404.97 / -0.049 0.193 -0.005>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.949 78.563 926.666 / -0.418 -2.558e-08 1.138e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  436.311 -12.807 936.166 / -1.374e-06 -2.800e-08 3.848e-14> #<bodyset-link #X9501ce8 RLEG_LINK1  436.311 -12.807 814.166 / -1.374e-06 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  436.311 -14.094 804.25 / -0.088 0.595 -0.156> #<bodyset-link #X6f38680 RLEG_LINK3  221.423 -54.418 493.449 / -0.09 0.605 -0.157> #<bodyset-link #X130e0d78 RLEG_LINK4  3.416 -94.463 184.792 / -1.367e-06 -7.855e-08 -0.129> #<bodyset-link #X12a84e10 RLEG_LINK5  3.416 -99.61 145.124 / -1.367e-06 -7.855e-08 4.240e-08>) (#<bodyset-link #X6ee5ff8 BODY  476.949 78.563 926.666 / -0.418 -2.558e-08 1.138e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  517.587 169.934 936.166 / -0.005 -2.800e-08 1.385e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  517.587 169.934 814.166 / -0.005 -2.800e-08 -0.222> #<bodyset-link #X6fe1bf0 LLEG_LINK2  517.576 167.732 804.412 / 0.203 -0.741 -0.303> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.119 105.997 536.718 / -1.633 1.348 -1.626> #<bodyset-link #X1316f038 LLEG_LINK4  400.159 108.927 541.374 / -0.049 0.193 -0.226> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.259 100.329 503.116 / -0.049 0.193 -0.005>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.923 98.9544 1227.13) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.949 78.563 926.666 / -0.418 -2.558e-08 1.138e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.416 -99.61 45.124 / -1.367e-06 -7.855e-08 4.240e-08> #<cascaded-coords #X12422518 :lleg-end-coords  373.099 100.812 404.97 / -0.049 0.193 -0.005>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  436.311 -12.807 936.166 / -1.374e-06 -2.800e-08 3.848e-14> #<bodyset-link #X9501ce8 RLEG_LINK1  436.311 -12.807 814.166 / -1.374e-06 -2.800e-08 -0.129> #<bodyset-link #X6f14d58 RLEG_LINK2  436.311 -14.094 804.25 / -0.088 0.595 -0.156> #<bodyset-link #X6f38680 RLEG_LINK3  221.423 -54.418 493.449 / -0.09 0.605 -0.157> #<bodyset-link #X130e0d78 RLEG_LINK4  3.416 -94.463 184.792 / -1.367e-06 -7.855e-08 -0.129> #<bodyset-link #X12a84e10 RLEG_LINK5  3.416 -99.61 145.124 / -1.367e-06 -7.855e-08 4.240e-08>) (#<bodyset-link #X1258dac0 LLEG_LINK0  517.587 169.934 936.166 / -0.005 -2.800e-08 1.385e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  517.587 169.934 814.166 / -0.005 -2.800e-08 -0.222> #<bodyset-link #X6fe1bf0 LLEG_LINK2  517.576 167.732 804.412 / 0.203 -0.741 -0.303> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.119 105.997 536.718 / -1.633 1.348 -1.626> #<bodyset-link #X1316f038 LLEG_LINK4  400.159 108.927 541.374 / -0.049 0.193 -0.226> #<bodyset-link #X6f6d3c0 LLEG_LINK5  392.259 100.329 503.116 / -0.049 0.193 -0.005>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(397.923 98.9544 1227.13) :target-centroid-pos #f(397.923 98.9544 1227.13) :fix-limbs-target-coords (#<coordinates #X2e463810  3.196 -100.0 45.019 / 1.673e-10 -1.972e-18 5.522e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.913705 0.406378 -2.800114e-08 476.949) (-0.406378 0.913705 -8.218213e-19 78.5634) (2.558478e-08 1.137905e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint770623048) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.0741 66.6811 0.0 0.0 0.0 5.33206) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(3.19593 -100.0 45.019) :rot #2f((1.0 -1.673426e-10 -1.879141e-18) (1.673426e-10 1.0 -5.521535e-10) (1.971527e-18 5.521535e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.544001e-24 0.0) (0.0 1.0 0.0 0.0) (-2.544001e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.551108e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (4.551108e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.544001e-24 0.0) (0.0 1.0 0.0 0.0) (-2.544001e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.551108e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (4.551108e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(397.923 98.9544 1227.13) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.544001e-24 0.0) (0.0 1.0 0.0 0.0) (-2.544001e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.551108e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (4.551108e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(397.923 98.9544 1227.13) :target-centroid-pos #f(397.923 98.9544 1227.13) :fix-limbs-target-coords (list #<coordinates #X2e463810  3.196 -100.0 45.019 / 1.673e-10 -1.972e-18 5.522e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-06-58-69-36-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-06-58-69-36-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-96.7897 -0.024498 -172.944)/(198.186/1)
;; dif-rot : #f(0.003065 -0.000211 -0.028525)/(0.02869/0.017453)
;; dif-pos : #f(29.1803 3.05499 -0.09175)/(29.34/1)
;; dif-rot : #f(0.007906 -0.197513 -0.003174)/(0.197696/0.017453)
;; cog-dif : #f(1.22005 1.36803)/(1.83304/5.0)
;;  coords : #<coordinates #X1325f8e0  457.347 67.392 -91.834 / -0.56 -2.373e-08 1.486e-08>
;;  angles : (#f(47.0979 69.0212 0.0 0.0 0.0 7.00108) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2e89c8f8  3.42 -100.0 47.052 / 1.672e-10 -2.140e-18 5.517e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  100.199 -96.685 219.97 / 0.029 0.0 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  371.431 96.877 405.971 / 0.002 0.198 -0.008>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  457.347 67.392 926.666 / -0.56 -2.373e-08 1.486e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  404.265 -17.357 936.166 / 0.029 -2.799e-08 -7.996e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  404.265 -17.357 814.166 / 0.029 -2.799e-08 -0.141> #<bodyset-link #X6f14d58 RLEG_LINK2  404.305 -18.765 804.266 / 0.054 -0.174 -0.143> #<bodyset-link #X6f38680 RLEG_LINK3  472.135 -69.548 433.834 / -0.582 1.328 -0.624> #<bodyset-link #X130e0d78 RLEG_LINK4  100.065 -90.746 359.571 / 0.029 0.0 -0.141> #<bodyset-link #X12a84e10 RLEG_LINK5  100.216 -96.378 319.97 / 0.029 0.0 -0.003>) (#<bodyset-link #X6ee5ff8 BODY  457.347 67.392 926.666 / -0.56 -2.373e-08 1.486e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  510.429 152.14 936.166 / 0.035 -2.798e-08 -9.758e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  510.429 152.14 814.166 / 0.035 -2.798e-08 -0.161> #<bodyset-link #X6fe1bf0 LLEG_LINK2  510.484 150.542 804.295 / 0.191 -0.765 -0.224> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.54 116.568 537.102 / -1.629 1.409 -1.663> #<bodyset-link #X1316f038 LLEG_LINK4  398.782 104.237 542.72 / 0.002 0.198 -0.164> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.053 97.693 504.023 / 0.002 0.198 -0.008>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  100.199 -96.685 219.97 / 0.029 0.0 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  371.431 96.877 405.971 / 0.002 0.198 -0.008>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  457.347 67.392 926.666 / -0.56 -2.373e-08 1.486e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  404.265 -17.357 936.166 / 0.029 -2.799e-08 -7.996e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  404.265 -17.357 814.166 / 0.029 -2.799e-08 -0.141> #<bodyset-link #X6f14d58 RLEG_LINK2  404.305 -18.765 804.266 / 0.054 -0.174 -0.143> #<bodyset-link #X6f38680 RLEG_LINK3  472.135 -69.548 433.834 / -0.582 1.328 -0.624> #<bodyset-link #X130e0d78 RLEG_LINK4  100.065 -90.746 359.571 / 0.029 0.0 -0.141> #<bodyset-link #X12a84e10 RLEG_LINK5  100.216 -96.378 319.97 / 0.029 0.0 -0.003>) (#<bodyset-link #X6ee5ff8 BODY  457.347 67.392 926.666 / -0.56 -2.373e-08 1.486e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  510.429 152.14 936.166 / 0.035 -2.798e-08 -9.758e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  510.429 152.14 814.166 / 0.035 -2.798e-08 -0.161> #<bodyset-link #X6fe1bf0 LLEG_LINK2  510.484 150.542 804.295 / 0.191 -0.765 -0.224> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.54 116.568 537.102 / -1.629 1.409 -1.663> #<bodyset-link #X1316f038 LLEG_LINK4  398.782 104.237 542.72 / 0.002 0.198 -0.164> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.053 97.693 504.023 / 0.002 0.198 -0.008>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.049 99.0174 1227.42) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  457.347 67.392 926.666 / -0.56 -2.373e-08 1.486e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  100.199 -96.685 219.97 / 0.029 0.0 -0.003> #<cascaded-coords #X12422518 :lleg-end-coords  371.431 96.877 405.971 / 0.002 0.198 -0.008>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  404.265 -17.357 936.166 / 0.029 -2.799e-08 -7.996e-10> #<bodyset-link #X9501ce8 RLEG_LINK1  404.265 -17.357 814.166 / 0.029 -2.799e-08 -0.141> #<bodyset-link #X6f14d58 RLEG_LINK2  404.305 -18.765 804.266 / 0.054 -0.174 -0.143> #<bodyset-link #X6f38680 RLEG_LINK3  472.135 -69.548 433.834 / -0.582 1.328 -0.624> #<bodyset-link #X130e0d78 RLEG_LINK4  100.065 -90.746 359.571 / 0.029 0.0 -0.141> #<bodyset-link #X12a84e10 RLEG_LINK5  100.216 -96.378 319.97 / 0.029 0.0 -0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  510.429 152.14 936.166 / 0.035 -2.798e-08 -9.758e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  510.429 152.14 814.166 / 0.035 -2.798e-08 -0.161> #<bodyset-link #X6fe1bf0 LLEG_LINK2  510.484 150.542 804.295 / 0.191 -0.765 -0.224> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.54 116.568 537.102 / -1.629 1.409 -1.663> #<bodyset-link #X1316f038 LLEG_LINK4  398.782 104.237 542.72 / 0.002 0.198 -0.164> #<bodyset-link #X6f6d3c0 LLEG_LINK5  391.053 97.693 504.023 / 0.002 0.198 -0.008>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.049 99.0174 1227.42) :target-centroid-pos #f(398.049 99.0174 1227.42) :fix-limbs-target-coords (#<coordinates #X2e89c8f8  3.42 -100.0 47.052 / 1.672e-10 -2.140e-18 5.517e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.847486 0.530818 -2.800114e-08 457.347) (-0.530818 0.847486 -8.218213e-19 67.3917) (2.373057e-08 1.486351e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint803025200) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.0979 69.0212 0.0 0.0 0.0 7.00108) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(3.42045 -100.0 47.0523) :rot #2f((1.0 -1.672138e-10 -2.047758e-18) (1.672138e-10 1.0 -5.517287e-10) (2.139999e-18 5.517287e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.421085e-14) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.025602e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (3.025602e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.421085e-14) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.025602e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (3.025602e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.049 99.0174 1227.42) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.421085e-14) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.025602e-18 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (3.025602e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.049 99.0174 1227.42) :target-centroid-pos #f(398.049 99.0174 1227.42) :fix-limbs-target-coords (list #<coordinates #X2e89c8f8  3.42 -100.0 47.052 / 1.672e-10 -2.140e-18 5.517e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-07-06-53-53-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-07-06-53-53-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-247.998 -78.1461 -495.408)/(559.499/1)
;; dif-rot : #f(0.008298 -0.091687 0.046538)/(0.103156/0.017453)
;; dif-pos : #f(-2.80778 8.75397 -0.103909)/(9.19383/1)
;; dif-rot : #f(0.000796 -0.03194 0.022284)/(0.038953/0.017453)
;; cog-dif : #f(31.7145 1.8015)/(31.7656/5.0)
;;  coords : #<coordinates #X1325f8e0  396.347 51.965 -91.834 / -0.761 -2.028e-08 1.931e-08>
;;  angles : (#f(47.1138 71.4068 0.0 0.0 0.0 8.71002) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2ee98d00  3.655 -100.0 49.125 / 1.671e-10 -2.315e-18 5.513e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  299.382 -30.509 518.971 / -0.047 0.091 -0.01> #<cascaded-coords #X12422518 :lleg-end-coords  402.628 91.186 400.156 / -0.022 0.032 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  396.347 51.965 926.666 / -0.761 -2.028e-08 1.931e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  327.4 -20.466 936.166 / -0.042 -2.798e-08 1.183e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  327.4 -20.466 814.166 / -0.042 -2.798e-08 -0.052> #<bodyset-link #X6f14d58 RLEG_LINK2  327.378 -20.987 804.18 / 0.128 -1.271 -0.178> #<bodyset-link #X6f38680 RLEG_LINK3  690.374 -42.107 693.783 / -0.549 1.464 -0.51> #<bodyset-link #X130e0d78 RLEG_LINK4  312.296 -27.973 658.326 / -0.047 0.091 -0.052> #<bodyset-link #X12a84e10 RLEG_LINK5  308.554 -29.893 618.547 / -0.047 0.091 -0.01>) (#<bodyset-link #X6ee5ff8 BODY  396.347 51.965 926.666 / -0.761 -2.028e-08 1.931e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  465.294 124.397 936.166 / -0.019 -2.800e-08 5.269e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  465.294 124.397 814.166 / -0.019 -2.800e-08 -0.109> #<bodyset-link #X6fe1bf0 LLEG_LINK2  465.274 123.312 804.225 / 0.146 -0.983 -0.197> #<bodyset-link #X6f7a6c0 LLEG_LINK3  782.799 94.76 597.434 / -0.632 1.383 -0.621> #<bodyset-link #X1316f038 LLEG_LINK4  407.188 95.543 539.848 / -0.022 0.032 -0.109> #<bodyset-link #X6f6d3c0 LLEG_LINK5  405.822 91.23 500.105 / -0.022 0.032 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  299.382 -30.509 518.971 / -0.047 0.091 -0.01> #<cascaded-coords #X12422518 :lleg-end-coords  402.628 91.186 400.156 / -0.022 0.032 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  396.347 51.965 926.666 / -0.761 -2.028e-08 1.931e-08> #<bodyset-link #X6f7a4c8 RLEG_LINK0  327.4 -20.466 936.166 / -0.042 -2.798e-08 1.183e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  327.4 -20.466 814.166 / -0.042 -2.798e-08 -0.052> #<bodyset-link #X6f14d58 RLEG_LINK2  327.378 -20.987 804.18 / 0.128 -1.271 -0.178> #<bodyset-link #X6f38680 RLEG_LINK3  690.374 -42.107 693.783 / -0.549 1.464 -0.51> #<bodyset-link #X130e0d78 RLEG_LINK4  312.296 -27.973 658.326 / -0.047 0.091 -0.052> #<bodyset-link #X12a84e10 RLEG_LINK5  308.554 -29.893 618.547 / -0.047 0.091 -0.01>) (#<bodyset-link #X6ee5ff8 BODY  396.347 51.965 926.666 / -0.761 -2.028e-08 1.931e-08> #<bodyset-link #X1258dac0 LLEG_LINK0  465.294 124.397 936.166 / -0.019 -2.800e-08 5.269e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  465.294 124.397 814.166 / -0.019 -2.800e-08 -0.109> #<bodyset-link #X6fe1bf0 LLEG_LINK2  465.274 123.312 804.225 / 0.146 -0.983 -0.197> #<bodyset-link #X6f7a6c0 LLEG_LINK3  782.799 94.76 597.434 / -0.632 1.383 -0.621> #<bodyset-link #X1316f038 LLEG_LINK4  407.188 95.543 539.848 / -0.022 0.032 -0.109> #<bodyset-link #X6f6d3c0 LLEG_LINK5  405.822 91.23 500.105 / -0.022 0.032 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.167 99.0765 1227.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  396.347 51.965 926.666 / -0.761 -2.028e-08 1.931e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  299.382 -30.509 518.971 / -0.047 0.091 -0.01> #<cascaded-coords #X12422518 :lleg-end-coords  402.628 91.186 400.156 / -0.022 0.032 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  327.4 -20.466 936.166 / -0.042 -2.798e-08 1.183e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  327.4 -20.466 814.166 / -0.042 -2.798e-08 -0.052> #<bodyset-link #X6f14d58 RLEG_LINK2  327.378 -20.987 804.18 / 0.128 -1.271 -0.178> #<bodyset-link #X6f38680 RLEG_LINK3  690.374 -42.107 693.783 / -0.549 1.464 -0.51> #<bodyset-link #X130e0d78 RLEG_LINK4  312.296 -27.973 658.326 / -0.047 0.091 -0.052> #<bodyset-link #X12a84e10 RLEG_LINK5  308.554 -29.893 618.547 / -0.047 0.091 -0.01>) (#<bodyset-link #X1258dac0 LLEG_LINK0  465.294 124.397 936.166 / -0.019 -2.800e-08 5.269e-10> #<bodyset-link #X6fe7740 LLEG_LINK1  465.294 124.397 814.166 / -0.019 -2.800e-08 -0.109> #<bodyset-link #X6fe1bf0 LLEG_LINK2  465.274 123.312 804.225 / 0.146 -0.983 -0.197> #<bodyset-link #X6f7a6c0 LLEG_LINK3  782.799 94.76 597.434 / -0.632 1.383 -0.621> #<bodyset-link #X1316f038 LLEG_LINK4  407.188 95.543 539.848 / -0.022 0.032 -0.109> #<bodyset-link #X6f6d3c0 LLEG_LINK5  405.822 91.23 500.105 / -0.022 0.032 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.167 99.0765 1227.71) :target-centroid-pos #f(398.167 99.0765 1227.71) :fix-limbs-target-coords (#<coordinates #X2ee98d00  3.655 -100.0 49.125 / 1.671e-10 -2.315e-18 5.513e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.724313 0.689471 -2.800114e-08 396.347) (-0.689471 0.724313 -8.218254e-19 51.9654) (2.028159e-08 1.930598e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint131275448) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.1138 71.4068 0.0 0.0 0.0 8.71002) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(3.65498 -100.0 49.1246) :rot #2f((1.0 -1.670801e-10 -2.222867e-18) (1.670801e-10 1.0 -5.512875e-10) (2.314959e-18 5.512875e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 1.136868e-13) (0.0 1.0 0.0 3.552714e-15) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.371692e-20 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (2.371692e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 1.136868e-13) (0.0 1.0 0.0 3.552714e-15) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.371692e-20 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (2.371692e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.167 99.0765 1227.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 1.136868e-13) (0.0 1.0 0.0 3.552714e-15) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.371692e-20 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (2.371692e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.167 99.0765 1227.71) :target-centroid-pos #f(398.167 99.0765 1227.71) :fix-limbs-target-coords (list #<coordinates #X2ee98d00  3.655 -100.0 49.125 / 1.671e-10 -2.315e-18 5.513e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-07-41-89-52-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-07-41-89-52-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-0.000678 -0.000128 -0.000943)/(0.001168/1)
;; dif-rot : #f(6.687129e-16 -8.686272e-16 9.261286e-16)/(1.435062e-15/0.017453)
;; dif-pos : #f(24.9541 -0.002251 -0.000464)/(24.9541/1)
;; dif-rot : #f(-7.963870e-06 -0.176715 0.043836)/(0.182071/0.017453)
;; cog-dif : #f(0.207129 -0.011065)/(0.207425/5.0)
;;  coords : #<coordinates #X1325f8e0  478.915 83.893 -91.834 / -0.348 -2.632e-08 9.550e-09>
;;  angles : (#f(47.1221 73.8376 0.0 0.0 0.0 10.4583) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2f2ce500  3.9 -100.0 51.235 / 1.669e-10 -2.496e-18 5.508e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.9 -100.0 51.236 / 1.669e-10 8.661e-16 5.508e-10> #<cascaded-coords #X12422518 :lleg-end-coords  375.473 101.09 404.517 / -0.044 0.177 -0.004>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.915 83.893 926.666 / -0.348 -2.632e-08 9.550e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  444.809 -10.111 936.166 / 3.964e-09 -2.800e-08 -1.102e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  444.809 -10.111 814.166 / 3.964e-09 -2.800e-08 -0.135> #<bodyset-link #X6f14d58 RLEG_LINK2  444.809 -11.455 804.257 / -0.094 0.604 -0.164> #<bodyset-link #X6f38680 RLEG_LINK3  227.024 -53.296 495.681 / -0.097 0.621 -0.166> #<bodyset-link #X130e0d78 RLEG_LINK4  3.9 -94.625 190.874 / 1.669e-10 8.661e-16 -0.135> #<bodyset-link #X12a84e10 RLEG_LINK5  3.9 -100.0 151.236 / 1.669e-10 8.661e-16 5.508e-10>) (#<bodyset-link #X6ee5ff8 BODY  478.915 83.893 926.666 / -0.348 -2.632e-08 9.550e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  513.02 177.897 936.166 / -1.127e-06 -2.800e-08 3.155e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  513.02 177.897 814.166 / -1.127e-06 -2.800e-08 -0.243> #<bodyset-link #X6fe1bf0 LLEG_LINK2  513.02 175.49 804.461 / 0.234 -0.751 -0.336> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.288 110.456 542.28 / -1.558 1.328 -1.558> #<bodyset-link #X1316f038 LLEG_LINK4  400.289 110.174 541.142 / -0.044 0.177 -0.247> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.047 100.703 502.96 / -0.044 0.177 -0.004>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.9 -100.0 51.236 / 1.669e-10 8.661e-16 5.508e-10> #<cascaded-coords #X12422518 :lleg-end-coords  375.473 101.09 404.517 / -0.044 0.177 -0.004>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.915 83.893 926.666 / -0.348 -2.632e-08 9.550e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  444.809 -10.111 936.166 / 3.964e-09 -2.800e-08 -1.102e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  444.809 -10.111 814.166 / 3.964e-09 -2.800e-08 -0.135> #<bodyset-link #X6f14d58 RLEG_LINK2  444.809 -11.455 804.257 / -0.094 0.604 -0.164> #<bodyset-link #X6f38680 RLEG_LINK3  227.024 -53.296 495.681 / -0.097 0.621 -0.166> #<bodyset-link #X130e0d78 RLEG_LINK4  3.9 -94.625 190.874 / 1.669e-10 8.661e-16 -0.135> #<bodyset-link #X12a84e10 RLEG_LINK5  3.9 -100.0 151.236 / 1.669e-10 8.661e-16 5.508e-10>) (#<bodyset-link #X6ee5ff8 BODY  478.915 83.893 926.666 / -0.348 -2.632e-08 9.550e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  513.02 177.897 936.166 / -1.127e-06 -2.800e-08 3.155e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  513.02 177.897 814.166 / -1.127e-06 -2.800e-08 -0.243> #<bodyset-link #X6fe1bf0 LLEG_LINK2  513.02 175.49 804.461 / 0.234 -0.751 -0.336> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.288 110.456 542.28 / -1.558 1.328 -1.558> #<bodyset-link #X1316f038 LLEG_LINK4  400.289 110.174 541.142 / -0.044 0.177 -0.247> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.047 100.703 502.96 / -0.044 0.177 -0.004>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.278 99.1321 1228.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.915 83.893 926.666 / -0.348 -2.632e-08 9.550e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.9 -100.0 51.236 / 1.669e-10 8.661e-16 5.508e-10> #<cascaded-coords #X12422518 :lleg-end-coords  375.473 101.09 404.517 / -0.044 0.177 -0.004>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  444.809 -10.111 936.166 / 3.964e-09 -2.800e-08 -1.102e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  444.809 -10.111 814.166 / 3.964e-09 -2.800e-08 -0.135> #<bodyset-link #X6f14d58 RLEG_LINK2  444.809 -11.455 804.257 / -0.094 0.604 -0.164> #<bodyset-link #X6f38680 RLEG_LINK3  227.024 -53.296 495.681 / -0.097 0.621 -0.166> #<bodyset-link #X130e0d78 RLEG_LINK4  3.9 -94.625 190.874 / 1.669e-10 8.661e-16 -0.135> #<bodyset-link #X12a84e10 RLEG_LINK5  3.9 -100.0 151.236 / 1.669e-10 8.661e-16 5.508e-10>) (#<bodyset-link #X1258dac0 LLEG_LINK0  513.02 177.897 936.166 / -1.127e-06 -2.800e-08 3.155e-14> #<bodyset-link #X6fe7740 LLEG_LINK1  513.02 177.897 814.166 / -1.127e-06 -2.800e-08 -0.243> #<bodyset-link #X6fe1bf0 LLEG_LINK2  513.02 175.49 804.461 / 0.234 -0.751 -0.336> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.288 110.456 542.28 / -1.558 1.328 -1.558> #<bodyset-link #X1316f038 LLEG_LINK4  400.289 110.174 541.142 / -0.044 0.177 -0.247> #<bodyset-link #X6f6d3c0 LLEG_LINK5  393.047 100.703 502.96 / -0.044 0.177 -0.004>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.278 99.1321 1228.0) :target-centroid-pos #f(398.278 99.1321 1228.0) :fix-limbs-target-coords (#<coordinates #X2f2ce500  3.9 -100.0 51.235 / 1.669e-10 -2.496e-18 5.508e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.940043 0.341057 -2.800114e-08 478.915) (-0.341057 0.940043 -8.218238e-19 83.8932) (2.632227e-08 9.549972e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint397081544) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.1221 73.8376 0.0 0.0 0.0 10.4583) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(3.89972 -100.0 51.2354) :rot #2f((1.0 -1.669414e-10 -2.404547e-18) (1.669414e-10 1.0 -5.508297e-10) (2.496484e-18 5.508297e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.346303e-32 0.0) (0.0 1.0 0.0 0.0) (-3.346303e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.275450e-18 0.0) (0.0 1.0 0.0 0.0) (-3.275450e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.346303e-32 0.0) (0.0 1.0 0.0 0.0) (-3.346303e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.275450e-18 0.0) (0.0 1.0 0.0 0.0) (-3.275450e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.278 99.1321 1228.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.346303e-32 0.0) (0.0 1.0 0.0 0.0) (-3.346303e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.275450e-18 0.0) (0.0 1.0 0.0 0.0) (-3.275450e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.278 99.1321 1228.0) :target-centroid-pos #f(398.278 99.1321 1228.0) :fix-limbs-target-coords (list #<coordinates #X2f2ce500  3.9 -100.0 51.235 / 1.669e-10 -2.496e-18 5.508e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-07-76-82-27-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-07-76-82-27-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-17.7525 -50.8942 -62.4524)/(82.4965/1)
;; dif-rot : #f(1.530184e-06 1.253802e-05 0.096593)/(0.096593/0.017453)
;; dif-pos : #f(13.4731 -6.13161 -1.07141)/(14.8414/1)
;; dif-rot : #f(-0.001137 -0.089883 0.124443)/(0.153513/0.017453)
;; cog-dif : #f(-0.419822 -7.64605)/(7.65756/5.0)
;;  coords : #<coordinates #X1325f8e0  476.937 102.441 -91.834 / -0.202 -2.743e-08 5.618e-09>
;;  angles : (#f(47.1233 76.3133 0.0 0.0 0.0 12.2454) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2f7e9a68  4.155 -100.0 53.384 / 1.668e-10 -2.685e-18 5.504e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.732 -51.055 115.837 / -0.097 -1.259e-05 -9.222e-07> #<cascaded-coords #X12422518 :lleg-end-coords  387.556 107.746 402.378 / -0.125 0.09 -0.004>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.937 102.441 926.666 / -0.202 -2.743e-08 5.618e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.872 4.475 936.166 / -0.097 -2.787e-08 2.701e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.872 4.475 814.166 / -0.097 -2.787e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  456.718 2.886 804.295 / -0.137 0.242 -0.165> #<bodyset-link #X6f38680 RLEG_LINK3  359.23 -46.791 440.388 / -0.371 1.033 -0.317> #<bodyset-link #X130e0d78 RLEG_LINK4  27.346 -44.699 255.324 / -0.097 -1.259e-05 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  26.731 -51.055 215.837 / -0.097 -1.259e-05 -9.222e-07>) (#<bodyset-link #X6ee5ff8 BODY  476.937 102.441 926.666 / -0.202 -2.743e-08 5.618e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.001 200.408 936.166 / -0.095 -2.787e-08 2.662e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.001 200.408 814.166 / -0.095 -2.787e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.705 197.303 804.665 / 0.26 -0.815 -0.472> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.182 93.793 572.518 / -1.382 1.241 -1.301> #<bodyset-link #X1316f038 LLEG_LINK4  401.437 119.078 539.811 / -0.125 0.09 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.502 107.075 501.975 / -0.125 0.09 -0.004>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.732 -51.055 115.837 / -0.097 -1.259e-05 -9.222e-07> #<cascaded-coords #X12422518 :lleg-end-coords  387.556 107.746 402.378 / -0.125 0.09 -0.004>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.937 102.441 926.666 / -0.202 -2.743e-08 5.618e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.872 4.475 936.166 / -0.097 -2.787e-08 2.701e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.872 4.475 814.166 / -0.097 -2.787e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  456.718 2.886 804.295 / -0.137 0.242 -0.165> #<bodyset-link #X6f38680 RLEG_LINK3  359.23 -46.791 440.388 / -0.371 1.033 -0.317> #<bodyset-link #X130e0d78 RLEG_LINK4  27.346 -44.699 255.324 / -0.097 -1.259e-05 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  26.731 -51.055 215.837 / -0.097 -1.259e-05 -9.222e-07>) (#<bodyset-link #X6ee5ff8 BODY  476.937 102.441 926.666 / -0.202 -2.743e-08 5.618e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.001 200.408 936.166 / -0.095 -2.787e-08 2.662e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.001 200.408 814.166 / -0.095 -2.787e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.705 197.303 804.665 / 0.26 -0.815 -0.472> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.182 93.793 572.518 / -1.382 1.241 -1.301> #<bodyset-link #X1316f038 LLEG_LINK4  401.437 119.078 539.811 / -0.125 0.09 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.502 107.075 501.975 / -0.125 0.09 -0.004>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.383 99.1844 1228.3) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.937 102.441 926.666 / -0.202 -2.743e-08 5.618e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.732 -51.055 115.837 / -0.097 -1.259e-05 -9.222e-07> #<cascaded-coords #X12422518 :lleg-end-coords  387.556 107.746 402.378 / -0.125 0.09 -0.004>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.872 4.475 936.166 / -0.097 -2.787e-08 2.701e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.872 4.475 814.166 / -0.097 -2.787e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  456.718 2.886 804.295 / -0.137 0.242 -0.165> #<bodyset-link #X6f38680 RLEG_LINK3  359.23 -46.791 440.388 / -0.371 1.033 -0.317> #<bodyset-link #X130e0d78 RLEG_LINK4  27.346 -44.699 255.324 / -0.097 -1.259e-05 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  26.731 -51.055 215.837 / -0.097 -1.259e-05 -9.222e-07>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.001 200.408 936.166 / -0.095 -2.787e-08 2.662e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.001 200.408 814.166 / -0.095 -2.787e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.705 197.303 804.665 / 0.26 -0.815 -0.472> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.182 93.793 572.518 / -1.382 1.241 -1.301> #<bodyset-link #X1316f038 LLEG_LINK4  401.437 119.078 539.811 / -0.125 0.09 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.502 107.075 501.975 / -0.125 0.09 -0.004>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.383 99.1844 1228.3) :target-centroid-pos #f(398.383 99.1844 1228.3) :fix-limbs-target-coords (#<coordinates #X2f7e9a68  4.155 -100.0 53.384 / 1.668e-10 -2.685e-18 5.504e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.979664 0.200644 -2.800114e-08 476.937) (-0.200644 0.979664 -8.218226e-19 102.441) (2.743172e-08 5.618254e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint829182432) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.1233 76.3133 0.0 0.0 0.0 12.2454) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.15484 -100.0 53.3842) :rot #2f((1.0 -1.667976e-10 -2.592874e-18) (1.667976e-10 1.0 -5.503553e-10) (2.684650e-18 5.503553e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.764560e-22 3.552714e-15) (0.0 1.0 0.0 -7.105427e-15) (4.764560e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.868244e-18 0.0) (0.0 1.0 0.0 0.0) (5.868244e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.764560e-22 3.552714e-15) (0.0 1.0 0.0 -7.105427e-15) (4.764560e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.868244e-18 0.0) (0.0 1.0 0.0 0.0) (5.868244e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.383 99.1844 1228.3) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.764560e-22 3.552714e-15) (0.0 1.0 0.0 -7.105427e-15) (4.764560e-22 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.868244e-18 0.0) (0.0 1.0 0.0 0.0) (5.868244e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.383 99.1844 1228.3) :target-centroid-pos #f(398.383 99.1844 1228.3) :fix-limbs-target-coords (list #<coordinates #X2f7e9a68  4.155 -100.0 53.384 / 1.668e-10 -2.685e-18 5.504e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-08-11-84-91-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-08-11-84-91-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(148.078 -40.6309 -43.6338)/(159.631/1)
;; dif-rot : #f(-0.010475 -0.287958 0.115929)/(0.310594/0.017453)
;; dif-pos : #f(17.8221 -6.81879 0.231128)/(19.0834/1)
;; dif-rot : #f(-0.007751 -0.123538 0.111783)/(0.166785/0.017453)
;; cog-dif : #f(2.06411 -6.63037)/(6.94423/5.0)
;;  coords : #<coordinates #X1325f8e0  484.554 98.497 -91.834 / -0.222 -2.731e-08 6.161e-09>
;;  angles : (#f(47.1176 78.8336 0.0 0.0 0.0 14.0708) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2fd2ed70  4.421 -100.0 55.57 / 1.666e-10 -2.880e-18 5.499e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -119.548 -44.144 139.2 / -0.118 0.288 -0.007> #<cascaded-coords #X12422518 :lleg-end-coords  383.172 108.754 402.107 / -0.112 0.124 0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  484.554 98.497 926.666 / -0.222 -2.731e-08 6.161e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.551 0.948 936.166 / -0.073 -2.793e-08 2.034e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.551 0.948 814.166 / -0.073 -2.793e-08 -0.151> #<bodyset-link #X6f14d58 RLEG_LINK2  462.442 -0.549 804.28 / -0.222 0.774 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  191.523 -21.24 538.621 / -0.222 0.774 -0.211> #<bodyset-link #X130e0d78 RLEG_LINK4  -79.397 -41.931 272.963 / -0.118 0.288 -0.157> #<bodyset-link #X12a84e10 RLEG_LINK5  -91.273 -46.831 235.082 / -0.118 0.288 -0.007>) (#<bodyset-link #X6ee5ff8 BODY  484.554 98.497 926.666 / -0.222 -2.731e-08 6.161e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  506.557 196.046 936.166 / -0.073 -2.793e-08 2.055e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  506.557 196.046 814.166 / -0.073 -2.793e-08 -0.3> #<bodyset-link #X6fe1bf0 LLEG_LINK2  506.341 193.102 804.612 / 0.238 -0.782 -0.429> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.285 96.977 559.429 / -1.458 1.266 -1.393> #<bodyset-link #X1316f038 LLEG_LINK4  401.437 118.594 539.239 / -0.112 0.124 -0.302> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.426 107.294 501.342 / -0.112 0.124 0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -119.548 -44.144 139.2 / -0.118 0.288 -0.007> #<cascaded-coords #X12422518 :lleg-end-coords  383.172 108.754 402.107 / -0.112 0.124 0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  484.554 98.497 926.666 / -0.222 -2.731e-08 6.161e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.551 0.948 936.166 / -0.073 -2.793e-08 2.034e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.551 0.948 814.166 / -0.073 -2.793e-08 -0.151> #<bodyset-link #X6f14d58 RLEG_LINK2  462.442 -0.549 804.28 / -0.222 0.774 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  191.523 -21.24 538.621 / -0.222 0.774 -0.211> #<bodyset-link #X130e0d78 RLEG_LINK4  -79.397 -41.931 272.963 / -0.118 0.288 -0.157> #<bodyset-link #X12a84e10 RLEG_LINK5  -91.273 -46.831 235.082 / -0.118 0.288 -0.007>) (#<bodyset-link #X6ee5ff8 BODY  484.554 98.497 926.666 / -0.222 -2.731e-08 6.161e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  506.557 196.046 936.166 / -0.073 -2.793e-08 2.055e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  506.557 196.046 814.166 / -0.073 -2.793e-08 -0.3> #<bodyset-link #X6fe1bf0 LLEG_LINK2  506.341 193.102 804.612 / 0.238 -0.782 -0.429> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.285 96.977 559.429 / -1.458 1.266 -1.393> #<bodyset-link #X1316f038 LLEG_LINK4  401.437 118.594 539.239 / -0.112 0.124 -0.302> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.426 107.294 501.342 / -0.112 0.124 0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.481 99.2335 1228.61) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  484.554 98.497 926.666 / -0.222 -2.731e-08 6.161e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -119.548 -44.144 139.2 / -0.118 0.288 -0.007> #<cascaded-coords #X12422518 :lleg-end-coords  383.172 108.754 402.107 / -0.112 0.124 0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.551 0.948 936.166 / -0.073 -2.793e-08 2.034e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.551 0.948 814.166 / -0.073 -2.793e-08 -0.151> #<bodyset-link #X6f14d58 RLEG_LINK2  462.442 -0.549 804.28 / -0.222 0.774 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  191.523 -21.24 538.621 / -0.222 0.774 -0.211> #<bodyset-link #X130e0d78 RLEG_LINK4  -79.397 -41.931 272.963 / -0.118 0.288 -0.157> #<bodyset-link #X12a84e10 RLEG_LINK5  -91.273 -46.831 235.082 / -0.118 0.288 -0.007>) (#<bodyset-link #X1258dac0 LLEG_LINK0  506.557 196.046 936.166 / -0.073 -2.793e-08 2.055e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  506.557 196.046 814.166 / -0.073 -2.793e-08 -0.3> #<bodyset-link #X6fe1bf0 LLEG_LINK2  506.341 193.102 804.612 / 0.238 -0.782 -0.429> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.285 96.977 559.429 / -1.458 1.266 -1.393> #<bodyset-link #X1316f038 LLEG_LINK4  401.437 118.594 539.239 / -0.112 0.124 -0.302> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.426 107.294 501.342 / -0.112 0.124 0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.481 99.2335 1228.61) :target-centroid-pos #f(398.481 99.2335 1228.61) :fix-limbs-target-coords (#<coordinates #X2fd2ed70  4.421 -100.0 55.57 / 1.666e-10 -2.880e-18 5.499e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.975493 0.220029 -2.800114e-08 484.554) (-0.220029 0.975493 -8.218230e-19 98.4969) (2.731492e-08 6.161064e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint292301384) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.1176 78.8336 0.0 0.0 0.0 14.0708) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.42053 -100.0 55.5703) :rot #2f((1.0 -1.666486e-10 -2.787922e-18) (1.666486e-10 1.0 -5.498638e-10) (2.879532e-18 5.498638e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.914676e-18 0.0) (0.0 1.0 0.0 0.0) (-7.914676e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.577867e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.577867e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.914676e-18 0.0) (0.0 1.0 0.0 0.0) (-7.914676e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.577867e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.577867e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.481 99.2335 1228.61) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.914676e-18 0.0) (0.0 1.0 0.0 0.0) (-7.914676e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.577867e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.577867e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.481 99.2335 1228.61) :target-centroid-pos #f(398.481 99.2335 1228.61) :fix-limbs-target-coords (list #<coordinates #X2fd2ed70  4.421 -100.0 55.57 / 1.666e-10 -2.880e-18 5.499e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-08-46-53-67-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-08-46-53-67-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-11.5381 -34.0014 -34.0971)/(49.516/1)
;; dif-rot : #f(-9.353766e-06 -2.320372e-05 0.057419)/(0.057419/0.017453)
;; dif-pos : #f(14.8314 -5.04666 0.113274)/(15.6669/1)
;; dif-rot : #f(-0.005835 -0.103051 0.089898)/(0.136877/0.017453)
;; cog-dif : #f(-0.625297 -4.44824)/(4.49198/5.0)
;;  coords : #<coordinates #X1325f8e0  479.068 100.006 -91.834 / -0.19 -2.750e-08 5.277e-09>
;;  angles : (#f(47.1053 81.398 0.0 0.0 0.0 15.9339) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X302c3528  4.697 -100.0 57.793 / 1.665e-10 -3.081e-18 5.494e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.168 -66.717 91.89 / -0.057 2.346e-05 8.683e-06> #<cascaded-coords #X12422518 :lleg-end-coords  385.763 106.352 401.552 / -0.09 0.103 0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.068 100.006 926.666 / -0.19 -2.750e-08 5.277e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.223 1.798 936.166 / -0.057 -2.795e-08 1.607e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.223 1.798 814.166 / -0.057 -2.795e-08 -0.15> #<bodyset-link #X6f14d58 RLEG_LINK2  460.138 0.31 804.278 / -0.111 0.342 -0.159> #<bodyset-link #X6f38680 RLEG_LINK3  328.445 -45.476 450.78 / -0.262 0.932 -0.253> #<bodyset-link #X130e0d78 RLEG_LINK4  18.513 -60.768 231.444 / -0.057 2.346e-05 -0.15> #<bodyset-link #X12a84e10 RLEG_LINK5  18.17 -66.718 191.89 / -0.057 2.346e-05 8.683e-06>) (#<bodyset-link #X6ee5ff8 BODY  479.068 100.006 926.666 / -0.19 -2.750e-08 5.277e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.913 198.214 936.166 / -0.057 -2.796e-08 1.604e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.913 198.214 814.166 / -0.057 -2.796e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.741 195.216 804.628 / 0.275 -0.804 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.762 104.042 566.822 / -1.377 1.257 -1.331> #<bodyset-link #X1316f038 LLEG_LINK4  401.006 116.983 538.951 / -0.09 0.103 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.01 105.308 501.02 / -0.09 0.103 0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.168 -66.717 91.89 / -0.057 2.346e-05 8.683e-06> #<cascaded-coords #X12422518 :lleg-end-coords  385.763 106.352 401.552 / -0.09 0.103 0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.068 100.006 926.666 / -0.19 -2.750e-08 5.277e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.223 1.798 936.166 / -0.057 -2.795e-08 1.607e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.223 1.798 814.166 / -0.057 -2.795e-08 -0.15> #<bodyset-link #X6f14d58 RLEG_LINK2  460.138 0.31 804.278 / -0.111 0.342 -0.159> #<bodyset-link #X6f38680 RLEG_LINK3  328.445 -45.476 450.78 / -0.262 0.932 -0.253> #<bodyset-link #X130e0d78 RLEG_LINK4  18.513 -60.768 231.444 / -0.057 2.346e-05 -0.15> #<bodyset-link #X12a84e10 RLEG_LINK5  18.17 -66.718 191.89 / -0.057 2.346e-05 8.683e-06>) (#<bodyset-link #X6ee5ff8 BODY  479.068 100.006 926.666 / -0.19 -2.750e-08 5.277e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.913 198.214 936.166 / -0.057 -2.796e-08 1.604e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.913 198.214 814.166 / -0.057 -2.796e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.741 195.216 804.628 / 0.275 -0.804 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.762 104.042 566.822 / -1.377 1.257 -1.331> #<bodyset-link #X1316f038 LLEG_LINK4  401.006 116.983 538.951 / -0.09 0.103 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.01 105.308 501.02 / -0.09 0.103 0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.574 99.2797 1228.92) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.068 100.006 926.666 / -0.19 -2.750e-08 5.277e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.168 -66.717 91.89 / -0.057 2.346e-05 8.683e-06> #<cascaded-coords #X12422518 :lleg-end-coords  385.763 106.352 401.552 / -0.09 0.103 0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.223 1.798 936.166 / -0.057 -2.795e-08 1.607e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.223 1.798 814.166 / -0.057 -2.795e-08 -0.15> #<bodyset-link #X6f14d58 RLEG_LINK2  460.138 0.31 804.278 / -0.111 0.342 -0.159> #<bodyset-link #X6f38680 RLEG_LINK3  328.445 -45.476 450.78 / -0.262 0.932 -0.253> #<bodyset-link #X130e0d78 RLEG_LINK4  18.513 -60.768 231.444 / -0.057 2.346e-05 -0.15> #<bodyset-link #X12a84e10 RLEG_LINK5  18.17 -66.718 191.89 / -0.057 2.346e-05 8.683e-06>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.913 198.214 936.166 / -0.057 -2.796e-08 1.604e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.913 198.214 814.166 / -0.057 -2.796e-08 -0.305> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.741 195.216 804.628 / 0.275 -0.804 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.762 104.042 566.822 / -1.377 1.257 -1.331> #<bodyset-link #X1316f038 LLEG_LINK4  401.006 116.983 538.951 / -0.09 0.103 -0.307> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.01 105.308 501.02 / -0.09 0.103 0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.574 99.2797 1228.92) :target-centroid-pos #f(398.574 99.2797 1228.92) :fix-limbs-target-coords (#<coordinates #X302c3528  4.697 -100.0 57.793 / 1.665e-10 -3.081e-18 5.494e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982083 0.188449 -2.800114e-08 479.068) (-0.188449 0.982083 -8.218217e-19 100.006) (2.749944e-08 5.276794e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint124512648) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.1053 81.398 0.0 0.0 0.0 15.9339) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.69698 -100.0 57.7934) :rot #2f((1.0 -1.664945e-10 -2.989764e-18) (1.664945e-10 1.0 -5.493553e-10) (3.081202e-18 5.493553e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.111731e-21 -3.552714e-15) (0.0 1.0 0.0 -1.421085e-14) (1.111731e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.770490e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (4.770490e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.111731e-21 -3.552714e-15) (0.0 1.0 0.0 -1.421085e-14) (1.111731e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.770490e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (4.770490e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.574 99.2797 1228.92) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.111731e-21 -3.552714e-15) (0.0 1.0 0.0 -1.421085e-14) (1.111731e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.770490e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (4.770490e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.574 99.2797 1228.92) :target-centroid-pos #f(398.574 99.2797 1228.92) :fix-limbs-target-coords (list #<coordinates #X302c3528  4.697 -100.0 57.793 / 1.665e-10 -3.081e-18 5.494e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-08-81-45-18-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-08-81-45-18-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-0.220232 -0.088711 -0.001013)/(0.237429/1)
;; dif-rot : #f(4.301145e-10 6.089657e-12 -8.210456e-13)/(4.301584e-10/0.017453)
;; dif-pos : #f(21.0554 -0.648404 -0.003901)/(21.0653/1)
;; dif-rot : #f(-0.002303 -0.149051 0.041938)/(0.154855/0.017453)
;; cog-dif : #f(0.1352 -0.01037)/(0.135597/5.0)
;;  coords : #<coordinates #X1325f8e0  481.559 91.677 -91.834 / -0.245 -2.716e-08 6.802e-09>
;;  angles : (#f(47.0868 84.0062 0.0 0.0 0.0 17.8341) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X30870508  4.984 -100.0 60.053 / 1.663e-10 -3.290e-18 5.488e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  5.205 -99.911 60.054 / 1.672e-10 -6.090e-12 1.187e-10> #<cascaded-coords #X12422518 :lleg-end-coords  379.238 101.524 403.261 / -0.042 0.149 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.559 91.677 926.666 / -0.245 -2.716e-08 6.802e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.266 -5.327 936.166 / 4.215e-09 -2.800e-08 -1.172e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  457.266 -5.327 814.166 / 4.215e-09 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  457.266 -6.758 804.269 / -0.104 0.623 -0.177> #<bodyset-link #X6f38680 RLEG_LINK3  233.125 -50.673 500.572 / -0.107 0.636 -0.179> #<bodyset-link #X130e0d78 RLEG_LINK4  5.205 -94.187 199.642 / 1.672e-10 -6.090e-12 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  5.205 -99.911 160.054 / 1.672e-10 -6.090e-12 1.187e-10>) (#<bodyset-link #X6ee5ff8 BODY  481.559 91.677 926.666 / -0.245 -2.716e-08 6.802e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  505.852 188.682 936.166 / 0.0 -2.800e-08 -3.803e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  505.852 188.682 814.166 / 0.0 -2.800e-08 -0.274> #<bodyset-link #X6fe1bf0 LLEG_LINK2  505.852 185.976 804.539 / 0.275 -0.768 -0.386> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.073 114.84 551.276 / -1.459 1.295 -1.463> #<bodyset-link #X1316f038 LLEG_LINK4  400.248 111.675 540.2 / -0.042 0.149 -0.277> #<bodyset-link #X6f6d3c0 LLEG_LINK5  394.079 100.982 502.153 / -0.042 0.149 -0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  5.205 -99.911 60.054 / 1.672e-10 -6.090e-12 1.187e-10> #<cascaded-coords #X12422518 :lleg-end-coords  379.238 101.524 403.261 / -0.042 0.149 -0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.559 91.677 926.666 / -0.245 -2.716e-08 6.802e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.266 -5.327 936.166 / 4.215e-09 -2.800e-08 -1.172e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  457.266 -5.327 814.166 / 4.215e-09 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  457.266 -6.758 804.269 / -0.104 0.623 -0.177> #<bodyset-link #X6f38680 RLEG_LINK3  233.125 -50.673 500.572 / -0.107 0.636 -0.179> #<bodyset-link #X130e0d78 RLEG_LINK4  5.205 -94.187 199.642 / 1.672e-10 -6.090e-12 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  5.205 -99.911 160.054 / 1.672e-10 -6.090e-12 1.187e-10>) (#<bodyset-link #X6ee5ff8 BODY  481.559 91.677 926.666 / -0.245 -2.716e-08 6.802e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  505.852 188.682 936.166 / 0.0 -2.800e-08 -3.803e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  505.852 188.682 814.166 / 0.0 -2.800e-08 -0.274> #<bodyset-link #X6fe1bf0 LLEG_LINK2  505.852 185.976 804.539 / 0.275 -0.768 -0.386> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.073 114.84 551.276 / -1.459 1.295 -1.463> #<bodyset-link #X1316f038 LLEG_LINK4  400.248 111.675 540.2 / -0.042 0.149 -0.277> #<bodyset-link #X6f6d3c0 LLEG_LINK5  394.079 100.982 502.153 / -0.042 0.149 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.66 99.323 1229.23) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.559 91.677 926.666 / -0.245 -2.716e-08 6.802e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  5.205 -99.911 60.054 / 1.672e-10 -6.090e-12 1.187e-10> #<cascaded-coords #X12422518 :lleg-end-coords  379.238 101.524 403.261 / -0.042 0.149 -0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.266 -5.327 936.166 / 4.215e-09 -2.800e-08 -1.172e-16> #<bodyset-link #X9501ce8 RLEG_LINK1  457.266 -5.327 814.166 / 4.215e-09 -2.800e-08 -0.144> #<bodyset-link #X6f14d58 RLEG_LINK2  457.266 -6.758 804.269 / -0.104 0.623 -0.177> #<bodyset-link #X6f38680 RLEG_LINK3  233.125 -50.673 500.572 / -0.107 0.636 -0.179> #<bodyset-link #X130e0d78 RLEG_LINK4  5.205 -94.187 199.642 / 1.672e-10 -6.090e-12 -0.144> #<bodyset-link #X12a84e10 RLEG_LINK5  5.205 -99.911 160.054 / 1.672e-10 -6.090e-12 1.187e-10>) (#<bodyset-link #X1258dac0 LLEG_LINK0  505.852 188.682 936.166 / 0.0 -2.800e-08 -3.803e-12> #<bodyset-link #X6fe7740 LLEG_LINK1  505.852 188.682 814.166 / 0.0 -2.800e-08 -0.274> #<bodyset-link #X6fe1bf0 LLEG_LINK2  505.852 185.976 804.539 / 0.275 -0.768 -0.386> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.073 114.84 551.276 / -1.459 1.295 -1.463> #<bodyset-link #X1316f038 LLEG_LINK4  400.248 111.675 540.2 / -0.042 0.149 -0.277> #<bodyset-link #X6f6d3c0 LLEG_LINK5  394.079 100.982 502.153 / -0.042 0.149 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.66 99.323 1229.23) :target-centroid-pos #f(398.66 99.323 1229.23) :fix-limbs-target-coords (#<coordinates #X30870508  4.984 -100.0 60.053 / 1.663e-10 -3.290e-18 5.488e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.970045 0.242926 -2.800114e-08 481.559) (-0.242926 0.970045 -8.218213e-19 91.6772) (2.716236e-08 6.802202e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint782210560) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.0868 84.0062 0.0 0.0 0.0 17.8341) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.98436 -100.0 60.0527) :rot #2f((1.0 -1.663351e-10 -3.198468e-18) (1.663351e-10 1.0 -5.488294e-10) (3.289728e-18 5.488294e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.706764e-28 0.0) (0.0 1.0 0.0 0.0) (-2.706764e-28 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.264155e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (7.264155e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.706764e-28 0.0) (0.0 1.0 0.0 0.0) (-2.706764e-28 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.264155e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (7.264155e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.66 99.323 1229.23) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.706764e-28 0.0) (0.0 1.0 0.0 0.0) (-2.706764e-28 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.264155e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (7.264155e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.66 99.323 1229.23) :target-centroid-pos #f(398.66 99.323 1229.23) :fix-limbs-target-coords (list #<coordinates #X30870508  4.984 -100.0 60.053 / 1.663e-10 -3.290e-18 5.488e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-09-17-15-09-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-09-17-15-09-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(2.18666 -43.5433 -24.8235)/(50.1698/1)
;; dif-rot : #f(-1.557399e-06 7.073819e-07 0.08014)/(0.08014/0.017453)
;; dif-pos : #f(14.565 -6.90959 -0.107121)/(16.1212/1)
;; dif-rot : #f(-0.006032 -0.100371 0.110902)/(0.149699/0.017453)
;; cog-dif : #f(-0.606132 -6.33902)/(6.36794/5.0)
;;  coords : #<coordinates #X1325f8e0  480.397 101.544 -91.834 / -0.193 -2.748e-08 5.367e-09>
;;  angles : (#f(47.0624 86.6578 0.0 0.0 0.0 19.771) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X30d3e940  5.283 -100.0 62.348 / 1.662e-10 -3.505e-18 5.483e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.589 -56.421 87.171 / -0.08 -6.442e-07 1.585e-06> #<cascaded-coords #X12422518 :lleg-end-coords  386.388 108.471 401.702 / -0.111 0.1 0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.397 101.544 926.666 / -0.193 -2.748e-08 5.367e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.23 3.398 936.166 / -0.08 -2.791e-08 2.242e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.23 3.398 814.166 / -0.08 -2.791e-08 -0.152> #<bodyset-link #X6f14d58 RLEG_LINK2  461.109 1.889 804.282 / -0.145 0.4 -0.165> #<bodyset-link #X6f38680 RLEG_LINK3  307.509 -38.809 459.1 / -0.27 0.889 -0.243> #<bodyset-link #X130e0d78 RLEG_LINK4  7.074 -50.386 226.71 / -0.08 -6.442e-07 -0.152> #<bodyset-link #X12a84e10 RLEG_LINK5  6.589 -56.422 187.171 / -0.08 -6.442e-07 1.585e-06>) (#<bodyset-link #X6ee5ff8 BODY  480.397 101.544 926.666 / -0.193 -2.748e-08 5.367e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.563 199.69 936.166 / -0.079 -2.791e-08 2.201e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.563 199.69 814.166 / -0.079 -2.791e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.323 196.651 804.643 / 0.26 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.857 98.488 567.863 / -1.394 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.508 119.074 539.081 / -0.111 0.1 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.354 107.314 501.198 / -0.111 0.1 0.0>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.589 -56.421 87.171 / -0.08 -6.442e-07 1.585e-06> #<cascaded-coords #X12422518 :lleg-end-coords  386.388 108.471 401.702 / -0.111 0.1 0.0>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.397 101.544 926.666 / -0.193 -2.748e-08 5.367e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.23 3.398 936.166 / -0.08 -2.791e-08 2.242e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.23 3.398 814.166 / -0.08 -2.791e-08 -0.152> #<bodyset-link #X6f14d58 RLEG_LINK2  461.109 1.889 804.282 / -0.145 0.4 -0.165> #<bodyset-link #X6f38680 RLEG_LINK3  307.509 -38.809 459.1 / -0.27 0.889 -0.243> #<bodyset-link #X130e0d78 RLEG_LINK4  7.074 -50.386 226.71 / -0.08 -6.442e-07 -0.152> #<bodyset-link #X12a84e10 RLEG_LINK5  6.589 -56.422 187.171 / -0.08 -6.442e-07 1.585e-06>) (#<bodyset-link #X6ee5ff8 BODY  480.397 101.544 926.666 / -0.193 -2.748e-08 5.367e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.563 199.69 936.166 / -0.079 -2.791e-08 2.201e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.563 199.69 814.166 / -0.079 -2.791e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.323 196.651 804.643 / 0.26 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.857 98.488 567.863 / -1.394 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.508 119.074 539.081 / -0.111 0.1 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.354 107.314 501.198 / -0.111 0.1 0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.742 99.3638 1229.55) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.397 101.544 926.666 / -0.193 -2.748e-08 5.367e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.589 -56.421 87.171 / -0.08 -6.442e-07 1.585e-06> #<cascaded-coords #X12422518 :lleg-end-coords  386.388 108.471 401.702 / -0.111 0.1 0.0>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.23 3.398 936.166 / -0.08 -2.791e-08 2.242e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.23 3.398 814.166 / -0.08 -2.791e-08 -0.152> #<bodyset-link #X6f14d58 RLEG_LINK2  461.109 1.889 804.282 / -0.145 0.4 -0.165> #<bodyset-link #X6f38680 RLEG_LINK3  307.509 -38.809 459.1 / -0.27 0.889 -0.243> #<bodyset-link #X130e0d78 RLEG_LINK4  7.074 -50.386 226.71 / -0.08 -6.442e-07 -0.152> #<bodyset-link #X12a84e10 RLEG_LINK5  6.589 -56.422 187.171 / -0.08 -6.442e-07 1.585e-06>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.563 199.69 936.166 / -0.079 -2.791e-08 2.201e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.563 199.69 814.166 / -0.079 -2.791e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.323 196.651 804.643 / 0.26 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.857 98.488 567.863 / -1.394 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.508 119.074 539.081 / -0.111 0.1 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.354 107.314 501.198 / -0.111 0.1 0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.742 99.3638 1229.55) :target-centroid-pos #f(398.742 99.3638 1229.55) :fix-limbs-target-coords (#<coordinates #X30d3e940  5.283 -100.0 62.348 / 1.662e-10 -3.505e-18 5.483e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981461 0.191664 -2.800114e-08 480.397) (-0.191664 0.981461 -8.218217e-19 101.544) (2.748202e-08 5.366799e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint675232104) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.0624 86.6578 0.0 0.0 0.0 19.771) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(5.28285 -100.0 62.3479) :rot #2f((1.0 -1.661705e-10 -3.414102e-18) (1.661705e-10 1.0 -5.482862e-10) (3.505178e-18 5.482862e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.970467e-23 0.0) (0.0 1.0 0.0 -7.105427e-15) (-3.970467e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.125742e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (6.125742e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.970467e-23 0.0) (0.0 1.0 0.0 -7.105427e-15) (-3.970467e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.125742e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (6.125742e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.742 99.3638 1229.55) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.970467e-23 0.0) (0.0 1.0 0.0 -7.105427e-15) (-3.970467e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.125742e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (6.125742e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.742 99.3638 1229.55) :target-centroid-pos #f(398.742 99.3638 1229.55) :fix-limbs-target-coords (list #<coordinates #X30d3e940  5.283 -100.0 62.348 / 1.662e-10 -3.505e-18 5.483e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-09-52-00-64-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-09-52-00-64-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(5.37668 -30.0652 -5.91774)/(31.1102/1)
;; dif-rot : #f(1.801819e-08 3.668876e-08 0.063208)/(0.063208/0.017453)
;; dif-pos : #f(15.4259 -6.24116 0.13915)/(16.6412/1)
;; dif-rot : #f(-0.007816 -0.107581 0.09773)/(0.145554/0.017453)
;; cog-dif : #f(-0.380552 -5.13214)/(5.14623/5.0)
;;  coords : #<coordinates #X1325f8e0  481.993 100.924 -91.834 / -0.187 -2.751e-08 5.215e-09>
;;  angles : (#f(47.0321 89.3524 0.0 0.0 0.0 21.7439) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X31346680  5.593 -100.0 64.678 / 1.660e-10 -3.728e-18 5.477e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.126 -69.655 70.596 / -0.063 -3.720e-08 -1.630e-08> #<cascaded-coords #X12422518 :lleg-end-coords  385.346 107.709 401.668 / -0.098 0.108 0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.993 100.924 926.666 / -0.187 -2.751e-08 5.215e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.367 2.673 936.166 / -0.063 -2.795e-08 1.769e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.367 2.673 814.166 / -0.063 -2.795e-08 -0.156> #<bodyset-link #X6f14d58 RLEG_LINK2  463.269 1.121 804.288 / -0.154 0.523 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  268.404 -37.643 480.367 / -0.212 0.755 -0.215> #<bodyset-link #X130e0d78 RLEG_LINK4  2.519 -63.447 210.109 / -0.063 -3.720e-08 -0.156> #<bodyset-link #X12a84e10 RLEG_LINK5  2.126 -69.655 170.596 / -0.063 -3.720e-08 -1.630e-08>) (#<bodyset-link #X6ee5ff8 BODY  481.993 100.924 926.666 / -0.187 -2.751e-08 5.215e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.618 199.174 936.166 / -0.063 -2.794e-08 1.774e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.618 199.174 814.166 / -0.063 -2.794e-08 -0.307> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.426 196.159 804.634 / 0.267 -0.797 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.07 102.339 565.057 / -1.4 1.256 -1.347> #<bodyset-link #X1316f038 LLEG_LINK4  401.294 118.101 538.975 / -0.098 0.108 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.028 106.405 501.088 / -0.098 0.108 0.003>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.126 -69.655 70.596 / -0.063 -3.720e-08 -1.630e-08> #<cascaded-coords #X12422518 :lleg-end-coords  385.346 107.709 401.668 / -0.098 0.108 0.003>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.993 100.924 926.666 / -0.187 -2.751e-08 5.215e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.367 2.673 936.166 / -0.063 -2.795e-08 1.769e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.367 2.673 814.166 / -0.063 -2.795e-08 -0.156> #<bodyset-link #X6f14d58 RLEG_LINK2  463.269 1.121 804.288 / -0.154 0.523 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  268.404 -37.643 480.367 / -0.212 0.755 -0.215> #<bodyset-link #X130e0d78 RLEG_LINK4  2.519 -63.447 210.109 / -0.063 -3.720e-08 -0.156> #<bodyset-link #X12a84e10 RLEG_LINK5  2.126 -69.655 170.596 / -0.063 -3.720e-08 -1.630e-08>) (#<bodyset-link #X6ee5ff8 BODY  481.993 100.924 926.666 / -0.187 -2.751e-08 5.215e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.618 199.174 936.166 / -0.063 -2.794e-08 1.774e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.618 199.174 814.166 / -0.063 -2.794e-08 -0.307> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.426 196.159 804.634 / 0.267 -0.797 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.07 102.339 565.057 / -1.4 1.256 -1.347> #<bodyset-link #X1316f038 LLEG_LINK4  401.294 118.101 538.975 / -0.098 0.108 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.028 106.405 501.088 / -0.098 0.108 0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.818 99.4021 1229.88) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.993 100.924 926.666 / -0.187 -2.751e-08 5.215e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.126 -69.655 70.596 / -0.063 -3.720e-08 -1.630e-08> #<cascaded-coords #X12422518 :lleg-end-coords  385.346 107.709 401.668 / -0.098 0.108 0.003>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  463.367 2.673 936.166 / -0.063 -2.795e-08 1.769e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.367 2.673 814.166 / -0.063 -2.795e-08 -0.156> #<bodyset-link #X6f14d58 RLEG_LINK2  463.269 1.121 804.288 / -0.154 0.523 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  268.404 -37.643 480.367 / -0.212 0.755 -0.215> #<bodyset-link #X130e0d78 RLEG_LINK4  2.519 -63.447 210.109 / -0.063 -3.720e-08 -0.156> #<bodyset-link #X12a84e10 RLEG_LINK5  2.126 -69.655 170.596 / -0.063 -3.720e-08 -1.630e-08>) (#<bodyset-link #X1258dac0 LLEG_LINK0  500.618 199.174 936.166 / -0.063 -2.794e-08 1.774e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.618 199.174 814.166 / -0.063 -2.794e-08 -0.307> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.426 196.159 804.634 / 0.267 -0.797 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.07 102.339 565.057 / -1.4 1.256 -1.347> #<bodyset-link #X1316f038 LLEG_LINK4  401.294 118.101 538.975 / -0.098 0.108 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.028 106.405 501.088 / -0.098 0.108 0.003>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.818 99.4021 1229.88) :target-centroid-pos #f(398.818 99.4021 1229.88) :fix-limbs-target-coords (#<coordinates #X31346680  5.593 -100.0 64.678 / 1.660e-10 -3.728e-18 5.477e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982502 0.186251 -2.800114e-08 481.993) (-0.186251 0.982502 -8.218221e-19 100.924) (2.751118e-08 5.215252e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint678961688) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(47.0321 89.3524 0.0 0.0 0.0 21.7439) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(5.59261 -100.0 64.6782) :rot #2f((1.0 -1.660005e-10 -3.636730e-18) (1.660005e-10 1.0 -5.477252e-10) (3.727616e-18 5.477252e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.137373e-24 0.0) (0.0 1.0 0.0 1.421085e-14) (1.137373e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.589415e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (-7.589415e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.137373e-24 0.0) (0.0 1.0 0.0 1.421085e-14) (1.137373e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.589415e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (-7.589415e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.818 99.4021 1229.88) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.137373e-24 0.0) (0.0 1.0 0.0 1.421085e-14) (1.137373e-24 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.589415e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (-7.589415e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.818 99.4021 1229.88) :target-centroid-pos #f(398.818 99.4021 1229.88) :fix-limbs-target-coords (list #<coordinates #X31346680  5.593 -100.0 64.678 / 1.660e-10 -3.728e-18 5.477e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-09-86-39-17-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-09-86-39-17-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.1497 -32.3018 -1.77654)/(34.5568/1)
;; dif-rot : #f(-2.664469e-09 -1.799336e-09 0.067752)/(0.067752/0.017453)
;; dif-pos : #f(16.214 -6.60024 0.107916)/(17.5063/1)
;; dif-rot : #f(-0.007582 -0.112433 0.103624)/(0.15309/0.017453)
;; cog-dif : #f(-0.192827 -5.65924)/(5.66252/5.0)
;;  coords : #<coordinates #X1325f8e0  483.17 100.612 -91.834 / -0.196 -2.747e-08 5.450e-09>
;;  angles : (#f(44.5185 87.234 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X31a2e510  5.914 -100.0 67.043 / 1.658e-10 -3.957e-18 5.471e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.021 -66.95 68.82 / -0.068 1.925e-09 3.147e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.661 108.233 401.858 / -0.104 0.113 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  483.17 100.612 926.666 / -0.196 -2.747e-08 5.450e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.708 2.524 936.166 / -0.068 -2.794e-08 1.896e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.708 2.524 814.166 / -0.068 -2.794e-08 -0.155> #<bodyset-link #X6f14d58 RLEG_LINK2  463.603 0.981 804.287 / -0.18 0.62 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  237.358 -31.281 500.688 / -0.192 0.669 -0.198> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.603 -60.78 208.339 / -0.068 1.925e-09 -0.155> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.021 -66.95 168.82 / -0.068 1.925e-09 3.147e-09>) (#<bodyset-link #X6ee5ff8 BODY  483.17 100.612 926.666 / -0.196 -2.747e-08 5.450e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  502.633 198.699 936.166 / -0.068 -2.794e-08 1.900e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  502.633 198.699 814.166 / -0.068 -2.794e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.428 195.695 804.631 / 0.258 -0.792 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.13 100.432 563.369 / -1.419 1.258 -1.362> #<bodyset-link #X1316f038 LLEG_LINK4  401.337 118.512 539.101 / -0.104 0.113 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.822 106.896 501.224 / -0.104 0.113 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.021 -66.95 68.82 / -0.068 1.925e-09 3.147e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.661 108.233 401.858 / -0.104 0.113 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  483.17 100.612 926.666 / -0.196 -2.747e-08 5.450e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.708 2.524 936.166 / -0.068 -2.794e-08 1.896e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.708 2.524 814.166 / -0.068 -2.794e-08 -0.155> #<bodyset-link #X6f14d58 RLEG_LINK2  463.603 0.981 804.287 / -0.18 0.62 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  237.358 -31.281 500.688 / -0.192 0.669 -0.198> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.603 -60.78 208.339 / -0.068 1.925e-09 -0.155> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.021 -66.95 168.82 / -0.068 1.925e-09 3.147e-09>) (#<bodyset-link #X6ee5ff8 BODY  483.17 100.612 926.666 / -0.196 -2.747e-08 5.450e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  502.633 198.699 936.166 / -0.068 -2.794e-08 1.900e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  502.633 198.699 814.166 / -0.068 -2.794e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.428 195.695 804.631 / 0.258 -0.792 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.13 100.432 563.369 / -1.419 1.258 -1.362> #<bodyset-link #X1316f038 LLEG_LINK4  401.337 118.512 539.101 / -0.104 0.113 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.822 106.896 501.224 / -0.104 0.113 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.89 99.4381 1230.21) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  483.17 100.612 926.666 / -0.196 -2.747e-08 5.450e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.021 -66.95 68.82 / -0.068 1.925e-09 3.147e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.661 108.233 401.858 / -0.104 0.113 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  463.708 2.524 936.166 / -0.068 -2.794e-08 1.896e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.708 2.524 814.166 / -0.068 -2.794e-08 -0.155> #<bodyset-link #X6f14d58 RLEG_LINK2  463.603 0.981 804.287 / -0.18 0.62 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  237.358 -31.281 500.688 / -0.192 0.669 -0.198> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.603 -60.78 208.339 / -0.068 1.925e-09 -0.155> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.021 -66.95 168.82 / -0.068 1.925e-09 3.147e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  502.633 198.699 936.166 / -0.068 -2.794e-08 1.900e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  502.633 198.699 814.166 / -0.068 -2.794e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.428 195.695 804.631 / 0.258 -0.792 -0.443> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.13 100.432 563.369 / -1.419 1.258 -1.362> #<bodyset-link #X1316f038 LLEG_LINK4  401.337 118.512 539.101 / -0.104 0.113 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.822 106.896 501.224 / -0.104 0.113 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.89 99.4381 1230.21) :target-centroid-pos #f(398.89 99.4381 1230.21) :fix-limbs-target-coords (#<coordinates #X31a2e510  5.914 -100.0 67.043 / 1.658e-10 -3.957e-18 5.471e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.980878 0.194626 -2.800114e-08 483.17) (-0.194626 0.980878 -8.218221e-19 100.612) (2.746569e-08 5.449744e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint772442912) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(44.5185 87.234 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(5.91383 -100.0 67.0432) :rot #2f((1.0 -1.658251e-10 -3.866415e-18) (1.658251e-10 1.0 -5.471465e-10) (3.957105e-18 5.471465e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.584939e-26 6.661338e-16) (0.0 1.0 0.0 0.0) (-2.584939e-26 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.505213e-19 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-6.505213e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.584939e-26 6.661338e-16) (0.0 1.0 0.0 0.0) (-2.584939e-26 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.505213e-19 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-6.505213e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.89 99.4381 1230.21) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.584939e-26 6.661338e-16) (0.0 1.0 0.0 0.0) (-2.584939e-26 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.505213e-19 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-6.505213e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.89 99.4381 1230.21) :target-centroid-pos #f(398.89 99.4381 1230.21) :fix-limbs-target-coords (list #<coordinates #X31a2e510  5.914 -100.0 67.043 / 1.658e-10 -3.957e-18 5.471e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-10-34-36-89-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-10-34-36-89-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(11.4574 -27.3602 -0.019158)/(29.6623/1)
;; dif-rot : #f(-1.610848e-09 3.144300e-11 0.057528)/(0.057528/0.017453)
;; dif-pos : #f(16.5704 -5.68921 0.008061)/(17.5199/1)
;; dif-rot : #f(-0.006669 -0.116004 0.093776)/(0.149316/0.017453)
;; cog-dif : #f(-0.132066 -4.82575)/(4.82755/5.0)
;;  coords : #<coordinates #X1325f8e0  482.857 99.802 -91.834 / -0.198 -2.745e-08 5.506e-09>
;;  angles : (#f(40.9561 82.7478 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X7952c18  6.247 -100.0 69.442 / 1.656e-10 -4.194e-18 5.465e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.619 -72.026 69.461 / -0.058 4.632e-11 2.157e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.161 107.206 402.05 / -0.094 0.116 0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.857 99.802 926.666 / -0.198 -2.745e-08 5.506e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.194 1.755 936.166 / -0.058 -2.795e-08 1.610e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.194 1.755 814.166 / -0.058 -2.795e-08 -0.155> #<bodyset-link #X6f14d58 RLEG_LINK2  463.105 0.217 804.286 / -0.164 0.597 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  244.362 -35.383 495.605 / -0.187 0.692 -0.201> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.264 -65.876 208.984 / -0.058 4.632e-11 -0.155> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.619 -72.026 169.461 / -0.058 4.632e-11 2.157e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.857 99.802 926.666 / -0.198 -2.745e-08 5.506e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  502.52 197.85 936.166 / -0.057 -2.796e-08 1.604e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  502.52 197.85 814.166 / -0.057 -2.796e-08 -0.303> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.349 194.87 804.622 / 0.263 -0.79 -0.438> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.239 103.006 562.262 / -1.418 1.261 -1.371> #<bodyset-link #X1316f038 LLEG_LINK4  401.214 117.552 539.271 / -0.094 0.116 -0.305> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.687 105.999 501.377 / -0.094 0.116 0.001>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.619 -72.026 69.461 / -0.058 4.632e-11 2.157e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.161 107.206 402.05 / -0.094 0.116 0.001>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.857 99.802 926.666 / -0.198 -2.745e-08 5.506e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.194 1.755 936.166 / -0.058 -2.795e-08 1.610e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.194 1.755 814.166 / -0.058 -2.795e-08 -0.155> #<bodyset-link #X6f14d58 RLEG_LINK2  463.105 0.217 804.286 / -0.164 0.597 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  244.362 -35.383 495.605 / -0.187 0.692 -0.201> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.264 -65.876 208.984 / -0.058 4.632e-11 -0.155> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.619 -72.026 169.461 / -0.058 4.632e-11 2.157e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.857 99.802 926.666 / -0.198 -2.745e-08 5.506e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  502.52 197.85 936.166 / -0.057 -2.796e-08 1.604e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  502.52 197.85 814.166 / -0.057 -2.796e-08 -0.303> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.349 194.87 804.622 / 0.263 -0.79 -0.438> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.239 103.006 562.262 / -1.418 1.261 -1.371> #<bodyset-link #X1316f038 LLEG_LINK4  401.214 117.552 539.271 / -0.094 0.116 -0.305> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.687 105.999 501.377 / -0.094 0.116 0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.958 99.472 1230.54) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  482.857 99.802 926.666 / -0.198 -2.745e-08 5.506e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.619 -72.026 69.461 / -0.058 4.632e-11 2.157e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.161 107.206 402.05 / -0.094 0.116 0.001>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  463.194 1.755 936.166 / -0.058 -2.795e-08 1.610e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.194 1.755 814.166 / -0.058 -2.795e-08 -0.155> #<bodyset-link #X6f14d58 RLEG_LINK2  463.105 0.217 804.286 / -0.164 0.597 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  244.362 -35.383 495.605 / -0.187 0.692 -0.201> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.264 -65.876 208.984 / -0.058 4.632e-11 -0.155> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.619 -72.026 169.461 / -0.058 4.632e-11 2.157e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  502.52 197.85 936.166 / -0.057 -2.796e-08 1.604e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  502.52 197.85 814.166 / -0.057 -2.796e-08 -0.303> #<bodyset-link #X6fe1bf0 LLEG_LINK2  502.349 194.87 804.622 / 0.263 -0.79 -0.438> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.239 103.006 562.262 / -1.418 1.261 -1.371> #<bodyset-link #X1316f038 LLEG_LINK4  401.214 117.552 539.271 / -0.094 0.116 -0.305> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.687 105.999 501.377 / -0.094 0.116 0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(398.958 99.472 1230.54) :target-centroid-pos #f(398.958 99.472 1230.54) :fix-limbs-target-coords (#<coordinates #X7952c18  6.247 -100.0 69.442 / 1.656e-10 -4.194e-18 5.465e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.980477 0.196633 -2.800114e-08 482.857) (-0.196633 0.980477 -8.218217e-19 99.8022) (2.745448e-08 5.505946e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint118764672) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(40.9561 82.7478 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(6.24667 -100.0 69.4422) :rot #2f((1.0 -1.656443e-10 -4.103217e-18) (1.656443e-10 1.0 -5.465499e-10) (4.193704e-18 5.465499e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.110223e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.637851e-18 0.0) (0.0 1.0 0.0 0.0) (-5.637851e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.110223e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.637851e-18 0.0) (0.0 1.0 0.0 0.0) (-5.637851e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(398.958 99.472 1230.54) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.110223e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.637851e-18 0.0) (0.0 1.0 0.0 0.0) (-5.637851e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(398.958 99.472 1230.54) :target-centroid-pos #f(398.958 99.472 1230.54) :fix-limbs-target-coords (list #<coordinates #X7952c18  6.247 -100.0 69.442 / 1.656e-10 -4.194e-18 5.465e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-10-70-64-14-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-10-70-64-14-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.9121 -30.6148 3.782664e-07)/(33.2263/1)
;; dif-rot : #f(-1.804498e-09 3.518384e-11 0.064444)/(0.064444/0.017453)
;; dif-pos : #f(16.0054 -6.31979 0.029155)/(17.2079/1)
;; dif-rot : #f(-0.007177 -0.111421 0.09973)/(0.149707/0.017453)
;; cog-dif : #f(-0.135836 -5.3958)/(5.39751/5.0)
;;  coords : #<coordinates #X1325f8e0  482.658 100.735 -91.834 / -0.194 -2.748e-08 5.388e-09>
;;  angles : (#f(37.8658 78.8561 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X99a2680  6.591 -100.0 71.875 / 1.655e-10 -4.437e-18 5.459e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.322 -68.617 71.875 / -0.064 5.812e-11 2.349e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.815 107.872 401.895 / -0.1 0.112 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.658 100.735 926.666 / -0.194 -2.748e-08 5.388e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.416 2.604 936.166 / -0.064 -2.794e-08 1.803e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.416 2.604 814.166 / -0.064 -2.794e-08 -0.156> #<bodyset-link #X6f14d58 RLEG_LINK2  463.316 1.051 804.288 / -0.165 0.568 -0.186> #<bodyset-link #X6f38680 RLEG_LINK3  253.659 -35.129 489.431 / -0.205 0.726 -0.21> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.921 -62.405 211.387 / -0.064 5.812e-11 -0.156> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.322 -68.617 171.875 / -0.064 5.812e-11 2.349e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.658 100.735 926.666 / -0.194 -2.748e-08 5.388e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  501.899 198.866 936.166 / -0.064 -2.794e-08 1.800e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.899 198.866 814.166 / -0.064 -2.794e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  501.705 195.859 804.631 / 0.262 -0.793 -0.444> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.147 101.657 563.807 / -1.413 1.257 -1.359> #<bodyset-link #X1316f038 LLEG_LINK4  401.311 118.249 539.152 / -0.1 0.112 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.879 106.603 501.273 / -0.1 0.112 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.322 -68.617 71.875 / -0.064 5.812e-11 2.349e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.815 107.872 401.895 / -0.1 0.112 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.658 100.735 926.666 / -0.194 -2.748e-08 5.388e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.416 2.604 936.166 / -0.064 -2.794e-08 1.803e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.416 2.604 814.166 / -0.064 -2.794e-08 -0.156> #<bodyset-link #X6f14d58 RLEG_LINK2  463.316 1.051 804.288 / -0.165 0.568 -0.186> #<bodyset-link #X6f38680 RLEG_LINK3  253.659 -35.129 489.431 / -0.205 0.726 -0.21> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.921 -62.405 211.387 / -0.064 5.812e-11 -0.156> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.322 -68.617 171.875 / -0.064 5.812e-11 2.349e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.658 100.735 926.666 / -0.194 -2.748e-08 5.388e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  501.899 198.866 936.166 / -0.064 -2.794e-08 1.800e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.899 198.866 814.166 / -0.064 -2.794e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  501.705 195.859 804.631 / 0.262 -0.793 -0.444> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.147 101.657 563.807 / -1.413 1.257 -1.359> #<bodyset-link #X1316f038 LLEG_LINK4  401.311 118.249 539.152 / -0.1 0.112 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.879 106.603 501.273 / -0.1 0.112 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.022 99.5038 1230.88) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  482.658 100.735 926.666 / -0.194 -2.748e-08 5.388e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.322 -68.617 71.875 / -0.064 5.812e-11 2.349e-09> #<cascaded-coords #X12422518 :lleg-end-coords  384.815 107.872 401.895 / -0.1 0.112 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  463.416 2.604 936.166 / -0.064 -2.794e-08 1.803e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.416 2.604 814.166 / -0.064 -2.794e-08 -0.156> #<bodyset-link #X6f14d58 RLEG_LINK2  463.316 1.051 804.288 / -0.165 0.568 -0.186> #<bodyset-link #X6f38680 RLEG_LINK3  253.659 -35.129 489.431 / -0.205 0.726 -0.21> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.921 -62.405 211.387 / -0.064 5.812e-11 -0.156> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.322 -68.617 171.875 / -0.064 5.812e-11 2.349e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  501.899 198.866 936.166 / -0.064 -2.794e-08 1.800e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.899 198.866 814.166 / -0.064 -2.794e-08 -0.306> #<bodyset-link #X6fe1bf0 LLEG_LINK2  501.705 195.859 804.631 / 0.262 -0.793 -0.444> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.147 101.657 563.807 / -1.413 1.257 -1.359> #<bodyset-link #X1316f038 LLEG_LINK4  401.311 118.249 539.152 / -0.1 0.112 -0.308> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.879 106.603 501.273 / -0.1 0.112 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.022 99.5038 1230.88) :target-centroid-pos #f(399.022 99.5038 1230.88) :fix-limbs-target-coords (#<coordinates #X99a2680  6.591 -100.0 71.875 / 1.655e-10 -4.437e-18 5.459e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981314 0.192416 -2.800114e-08 482.658) (-0.192416 0.981314 -8.218217e-19 100.735) (2.747790e-08 5.387854e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint300231736) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(37.8658 78.8561 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(6.59129 -100.0 71.8747) :rot #2f((1.0 -1.654580e-10 -4.347193e-18) (1.654580e-10 1.0 -5.459352e-10) (4.437472e-18 5.459352e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.345529e-51 1.292470e-26 -1.249001e-16) (5.345529e-51 1.0 -8.271806e-25 0.0) (-1.292470e-26 8.271806e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.523657e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.523657e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.345529e-51 1.292470e-26 -1.249001e-16) (5.345529e-51 1.0 -8.271806e-25 0.0) (-1.292470e-26 8.271806e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.523657e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.523657e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.022 99.5038 1230.88) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.345529e-51 1.292470e-26 -1.249001e-16) (5.345529e-51 1.0 -8.271806e-25 0.0) (-1.292470e-26 8.271806e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.523657e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.523657e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.022 99.5038 1230.88) :target-centroid-pos #f(399.022 99.5038 1230.88) :fix-limbs-target-coords (list #<coordinates #X99a2680  6.591 -100.0 71.875 / 1.655e-10 -4.437e-18 5.459e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-11-05-57-30-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-11-05-57-30-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.3565 -31.5676 3.912110e-07)/(34.2769/1)
;; dif-rot : #f(-1.863222e-09 3.628447e-11 0.066541)/(0.066541/0.017453)
;; dif-pos : #f(15.7282 -6.48846 0.032746)/(17.014/1)
;; dif-rot : #f(-0.007267 -0.109255 0.101298)/(0.149167/0.017453)
;; cog-dif : #f(-0.133598 -5.55156)/(5.55317/5.0)
;;  coords : #<coordinates #X1325f8e0  482.425 101.123 -91.834 / -0.192 -2.749e-08 5.330e-09>
;;  angles : (#f(35.1607 75.4499 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #Xd62cd08  6.948 -100.0 74.34 / 1.653e-10 -4.688e-18 5.453e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.28 -67.614 74.34 / -0.067 6.197e-11 2.407e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.114 108.037 401.828 / -0.101 0.109 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.425 101.123 926.666 / -0.192 -2.749e-08 5.330e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.39 2.952 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.39 2.952 814.166 / -0.067 -2.794e-08 -0.157> #<bodyset-link #X6f14d58 RLEG_LINK2  463.285 1.389 804.29 / -0.162 0.542 -0.184> #<bodyset-link #X6f38680 RLEG_LINK3  262.027 -36.101 484.15 / -0.216 0.755 -0.217> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.863 -61.361 213.846 / -0.067 6.197e-11 -0.157> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.28 -67.614 174.34 / -0.067 6.197e-11 2.407e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.425 101.123 926.666 / -0.192 -2.749e-08 5.330e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  501.461 199.295 936.166 / -0.066 -2.794e-08 1.858e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.461 199.295 814.166 / -0.066 -2.794e-08 -0.307> #<bodyset-link #X6fe1bf0 LLEG_LINK2  501.26 196.276 804.635 / 0.263 -0.795 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.095 101.352 564.55 / -1.408 1.256 -1.353> #<bodyset-link #X1316f038 LLEG_LINK4  401.334 118.451 539.104 / -0.101 0.109 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.962 106.76 501.229 / -0.101 0.109 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.28 -67.614 74.34 / -0.067 6.197e-11 2.407e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.114 108.037 401.828 / -0.101 0.109 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.425 101.123 926.666 / -0.192 -2.749e-08 5.330e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.39 2.952 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.39 2.952 814.166 / -0.067 -2.794e-08 -0.157> #<bodyset-link #X6f14d58 RLEG_LINK2  463.285 1.389 804.29 / -0.162 0.542 -0.184> #<bodyset-link #X6f38680 RLEG_LINK3  262.027 -36.101 484.15 / -0.216 0.755 -0.217> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.863 -61.361 213.846 / -0.067 6.197e-11 -0.157> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.28 -67.614 174.34 / -0.067 6.197e-11 2.407e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.425 101.123 926.666 / -0.192 -2.749e-08 5.330e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  501.461 199.295 936.166 / -0.066 -2.794e-08 1.858e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.461 199.295 814.166 / -0.066 -2.794e-08 -0.307> #<bodyset-link #X6fe1bf0 LLEG_LINK2  501.26 196.276 804.635 / 0.263 -0.795 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.095 101.352 564.55 / -1.408 1.256 -1.353> #<bodyset-link #X1316f038 LLEG_LINK4  401.334 118.451 539.104 / -0.101 0.109 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.962 106.76 501.229 / -0.101 0.109 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.082 99.5336 1231.22) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  482.425 101.123 926.666 / -0.192 -2.749e-08 5.330e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.28 -67.614 74.34 / -0.067 6.197e-11 2.407e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.114 108.037 401.828 / -0.101 0.109 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  463.39 2.952 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.39 2.952 814.166 / -0.067 -2.794e-08 -0.157> #<bodyset-link #X6f14d58 RLEG_LINK2  463.285 1.389 804.29 / -0.162 0.542 -0.184> #<bodyset-link #X6f38680 RLEG_LINK3  262.027 -36.101 484.15 / -0.216 0.755 -0.217> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.863 -61.361 213.846 / -0.067 6.197e-11 -0.157> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.28 -67.614 174.34 / -0.067 6.197e-11 2.407e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  501.461 199.295 936.166 / -0.066 -2.794e-08 1.858e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.461 199.295 814.166 / -0.066 -2.794e-08 -0.307> #<bodyset-link #X6fe1bf0 LLEG_LINK2  501.26 196.276 804.635 / 0.263 -0.795 -0.447> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.095 101.352 564.55 / -1.408 1.256 -1.353> #<bodyset-link #X1316f038 LLEG_LINK4  401.334 118.451 539.104 / -0.101 0.109 -0.309> #<bodyset-link #X6f6d3c0 LLEG_LINK5  395.962 106.76 501.229 / -0.101 0.109 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.082 99.5336 1231.22) :target-centroid-pos #f(399.082 99.5336 1231.22) :fix-limbs-target-coords (#<coordinates #Xd62cd08  6.948 -100.0 74.34 / 1.653e-10 -4.688e-18 5.453e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981715 0.190357 -2.800114e-08 482.425) (-0.190357 0.981715 -8.218221e-19 101.123) (2.748914e-08 5.330216e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint781343768) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(35.1607 75.4499 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(6.94785 -100.0 74.34) :rot #2f((1.0 -1.652661e-10 -4.598400e-18) (1.652661e-10 1.0 -5.453023e-10) (4.688465e-18 5.453023e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.885781e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.843144e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.843144e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.885781e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.843144e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.843144e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.082 99.5336 1231.22) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.885781e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.843144e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (1.843144e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.082 99.5336 1231.22) :target-centroid-pos #f(399.082 99.5336 1231.22) :fix-limbs-target-coords (list #<coordinates #Xd62cd08  6.948 -100.0 74.34 / 1.653e-10 -4.688e-18 5.453e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-11-40-10-48-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-11-40-10-48-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.5417 -31.9351 3.965772e-07)/(34.6876/1)
;; dif-rot : #f(-1.887330e-09 3.671057e-11 0.067402)/(0.067402/0.017453)
;; dif-pos : #f(15.5676 -6.54593 0.034324)/(16.8879/1)
;; dif-rot : #f(-0.007279 -0.108021 0.101842)/(0.148638/0.017453)
;; cog-dif : #f(-0.130883 -5.60525)/(5.60677/5.0)
;;  coords : #<coordinates #X1325f8e0  482.214 101.317 -91.834 / -0.191 -2.749e-08 5.307e-09>
;;  angles : (#f(32.7743 72.4451 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X118c31b8  7.317 -100.0 76.838 / 1.651e-10 -4.947e-18 5.447e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.044 -67.225 76.838 / -0.067 6.358e-11 2.431e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.281 108.086 401.79 / -0.102 0.108 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.214 101.317 926.666 / -0.191 -2.749e-08 5.307e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.262 3.13 936.166 / -0.067 -2.794e-08 1.886e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.262 3.13 814.166 / -0.067 -2.794e-08 -0.158> #<bodyset-link #X6f14d58 RLEG_LINK2  463.156 1.558 804.291 / -0.159 0.519 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  269.117 -37.213 479.875 / -0.226 0.78 -0.223> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.619 -60.938 216.338 / -0.067 6.358e-11 -0.158> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.044 -67.225 176.838 / -0.067 6.358e-11 2.431e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.214 101.317 926.666 / -0.191 -2.749e-08 5.307e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  501.165 199.505 936.166 / -0.067 -2.794e-08 1.883e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.165 199.505 814.166 / -0.067 -2.794e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.961 196.481 804.637 / 0.263 -0.796 -0.448> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.062 101.264 564.978 / -1.406 1.255 -1.35> #<bodyset-link #X1316f038 LLEG_LINK4  401.339 118.527 539.077 / -0.102 0.108 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.006 106.811 501.205 / -0.102 0.108 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.044 -67.225 76.838 / -0.067 6.358e-11 2.431e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.281 108.086 401.79 / -0.102 0.108 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.214 101.317 926.666 / -0.191 -2.749e-08 5.307e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.262 3.13 936.166 / -0.067 -2.794e-08 1.886e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.262 3.13 814.166 / -0.067 -2.794e-08 -0.158> #<bodyset-link #X6f14d58 RLEG_LINK2  463.156 1.558 804.291 / -0.159 0.519 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  269.117 -37.213 479.875 / -0.226 0.78 -0.223> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.619 -60.938 216.338 / -0.067 6.358e-11 -0.158> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.044 -67.225 176.838 / -0.067 6.358e-11 2.431e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.214 101.317 926.666 / -0.191 -2.749e-08 5.307e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  501.165 199.505 936.166 / -0.067 -2.794e-08 1.883e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.165 199.505 814.166 / -0.067 -2.794e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.961 196.481 804.637 / 0.263 -0.796 -0.448> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.062 101.264 564.978 / -1.406 1.255 -1.35> #<bodyset-link #X1316f038 LLEG_LINK4  401.339 118.527 539.077 / -0.102 0.108 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.006 106.811 501.205 / -0.102 0.108 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.138 99.5617 1231.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  482.214 101.317 926.666 / -0.191 -2.749e-08 5.307e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -4.044 -67.225 76.838 / -0.067 6.358e-11 2.431e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.281 108.086 401.79 / -0.102 0.108 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  463.262 3.13 936.166 / -0.067 -2.794e-08 1.886e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.262 3.13 814.166 / -0.067 -2.794e-08 -0.158> #<bodyset-link #X6f14d58 RLEG_LINK2  463.156 1.558 804.291 / -0.159 0.519 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  269.117 -37.213 479.875 / -0.226 0.78 -0.223> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.619 -60.938 216.338 / -0.067 6.358e-11 -0.158> #<bodyset-link #X12a84e10 RLEG_LINK5  -4.044 -67.225 176.838 / -0.067 6.358e-11 2.431e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  501.165 199.505 936.166 / -0.067 -2.794e-08 1.883e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  501.165 199.505 814.166 / -0.067 -2.794e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.961 196.481 804.637 / 0.263 -0.796 -0.448> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.062 101.264 564.978 / -1.406 1.255 -1.35> #<bodyset-link #X1316f038 LLEG_LINK4  401.339 118.527 539.077 / -0.102 0.108 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.006 106.811 501.205 / -0.102 0.108 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.138 99.5617 1231.57) :target-centroid-pos #f(399.138 99.5617 1231.57) :fix-limbs-target-coords (#<coordinates #X118c31b8  7.317 -100.0 76.838 / 1.651e-10 -4.947e-18 5.447e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981878 0.189512 -2.800114e-08 482.214) (-0.189512 0.981878 -8.218217e-19 101.317) (2.749372e-08 5.306546e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint829080264) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(32.7743 72.4451 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(7.31652 -100.0 76.8376) :rot #2f((1.0 -1.650688e-10 -4.856891e-18) (1.650688e-10 1.0 -5.446510e-10) (4.946735e-18 5.446510e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 0.0) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 0.0) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.138 99.5617 1231.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 0.0) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.138 99.5617 1231.57) :target-centroid-pos #f(399.138 99.5617 1231.57) :fix-limbs-target-coords (list #<coordinates #X118c31b8  7.317 -100.0 76.838 / 1.651e-10 -4.947e-18 5.447e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-11-77-17-92-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-11-77-17-92-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.6346 -32.0962 3.992450e-07)/(34.8721/1)
;; dif-rot : #f(-1.899178e-09 3.689543e-11 0.067825)/(0.067825/0.017453)
;; dif-pos : #f(15.4548 -6.56586 0.035174)/(16.7917/1)
;; dif-rot : #f(-0.007267 -0.107164 0.102038)/(0.148151/0.017453)
;; cog-dif : #f(-0.128307 -5.6241)/(5.62556/5.0)
;;  coords : #<coordinates #X1325f8e0  482.026 101.439 -91.834 / -0.19 -2.750e-08 5.295e-09>
;;  angles : (#f(30.6543 69.7758 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X11d9f490  7.697 -100.0 79.367 / 1.649e-10 -5.212e-18 5.440e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.731 -67.054 79.367 / -0.068 6.438e-11 2.442e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.395 108.097 401.764 / -0.102 0.107 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.026 101.439 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.116 3.244 936.166 / -0.068 -2.794e-08 1.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.116 3.244 814.166 / -0.068 -2.794e-08 -0.159> #<bodyset-link #X6f14d58 RLEG_LINK2  463.009 1.664 804.292 / -0.156 0.5 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  275.283 -38.287 476.325 / -0.234 0.801 -0.23> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.301 -60.736 218.862 / -0.068 6.438e-11 -0.159> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.731 -67.054 179.367 / -0.068 6.438e-11 2.442e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.026 101.439 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.935 199.635 936.166 / -0.068 -2.794e-08 1.894e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.935 199.635 814.166 / -0.068 -2.794e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.73 196.607 804.638 / 0.264 -0.797 -0.449> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.038 101.248 565.277 / -1.404 1.254 -1.347> #<bodyset-link #X1316f038 LLEG_LINK4  401.339 118.559 539.06 / -0.102 0.107 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.035 106.827 501.188 / -0.102 0.107 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.731 -67.054 79.367 / -0.068 6.438e-11 2.442e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.395 108.097 401.764 / -0.102 0.107 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  482.026 101.439 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  463.116 3.244 936.166 / -0.068 -2.794e-08 1.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.116 3.244 814.166 / -0.068 -2.794e-08 -0.159> #<bodyset-link #X6f14d58 RLEG_LINK2  463.009 1.664 804.292 / -0.156 0.5 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  275.283 -38.287 476.325 / -0.234 0.801 -0.23> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.301 -60.736 218.862 / -0.068 6.438e-11 -0.159> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.731 -67.054 179.367 / -0.068 6.438e-11 2.442e-09>) (#<bodyset-link #X6ee5ff8 BODY  482.026 101.439 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.935 199.635 936.166 / -0.068 -2.794e-08 1.894e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.935 199.635 814.166 / -0.068 -2.794e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.73 196.607 804.638 / 0.264 -0.797 -0.449> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.038 101.248 565.277 / -1.404 1.254 -1.347> #<bodyset-link #X1316f038 LLEG_LINK4  401.339 118.559 539.06 / -0.102 0.107 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.035 106.827 501.188 / -0.102 0.107 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.19 99.5881 1231.92) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  482.026 101.439 926.666 / -0.19 -2.750e-08 5.295e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.731 -67.054 79.367 / -0.068 6.438e-11 2.442e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.395 108.097 401.764 / -0.102 0.107 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  463.116 3.244 936.166 / -0.068 -2.794e-08 1.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  463.116 3.244 814.166 / -0.068 -2.794e-08 -0.159> #<bodyset-link #X6f14d58 RLEG_LINK2  463.009 1.664 804.292 / -0.156 0.5 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  275.283 -38.287 476.325 / -0.234 0.801 -0.23> #<bodyset-link #X130e0d78 RLEG_LINK4  -3.301 -60.736 218.862 / -0.068 6.438e-11 -0.159> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.731 -67.054 179.367 / -0.068 6.438e-11 2.442e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  500.935 199.635 936.166 / -0.068 -2.794e-08 1.894e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.935 199.635 814.166 / -0.068 -2.794e-08 -0.308> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.73 196.607 804.638 / 0.264 -0.797 -0.449> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.038 101.248 565.277 / -1.404 1.254 -1.347> #<bodyset-link #X1316f038 LLEG_LINK4  401.339 118.559 539.06 / -0.102 0.107 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.035 106.827 501.188 / -0.102 0.107 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.19 99.5881 1231.92) :target-centroid-pos #f(399.19 99.5881 1231.92) :fix-limbs-target-coords (#<coordinates #X11d9f490  7.697 -100.0 79.367 / 1.649e-10 -5.212e-18 5.440e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981959 0.189096 -2.800114e-08 482.026) (-0.189096 0.981959 -8.218217e-19 101.439) (2.749596e-08 5.294914e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint805406240) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(30.6543 69.7758 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(7.69744 -100.0 79.3668) :rot #2f((1.0 -1.648658e-10 -5.122717e-18) (1.648658e-10 1.0 -5.439813e-10) (5.212334e-18 5.439813e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 8.881784e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.873136e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (2.873136e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 8.881784e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.873136e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (2.873136e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.19 99.5881 1231.92) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 8.881784e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.873136e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (2.873136e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.19 99.5881 1231.92) :target-centroid-pos #f(399.19 99.5881 1231.92) :fix-limbs-target-coords (list #<coordinates #X11d9f490  7.697 -100.0 79.367 / 1.649e-10 -5.212e-18 5.440e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-12-11-35-60-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-12-11-35-60-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.6855 -32.1635 4.006828e-07)/(34.954/1)
;; dif-rot : #f(-1.905453e-09 3.697066e-11 0.068049)/(0.068049/0.017453)
;; dif-pos : #f(15.3664 -6.5695 0.035687)/(16.7118/1)
;; dif-rot : #f(-0.007246 -0.1065 0.102083)/(0.147701/0.017453)
;; cog-dif : #f(-0.125914 -5.62777)/(5.62918/5.0)
;;  coords : #<coordinates #X1325f8e0  481.856 101.527 -91.834 / -0.19 -2.750e-08 5.289e-09>
;;  angles : (#f(28.7593 67.39 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1260b2d0  8.091 -100.0 81.927 / 1.647e-10 -5.485e-18 5.433e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.376 -66.98 81.927 / -0.068 6.481e-11 2.447e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.482 108.093 401.744 / -0.102 0.107 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.856 101.527 926.666 / -0.19 -2.750e-08 5.289e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.968 3.327 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.968 3.327 814.166 / -0.068 -2.794e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  462.86 1.74 804.294 / -0.153 0.483 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  280.8 -39.302 473.281 / -0.242 0.821 -0.236> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.943 -60.633 221.418 / -0.068 6.481e-11 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.376 -66.98 181.927 / -0.068 6.481e-11 2.447e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.856 101.527 926.666 / -0.19 -2.750e-08 5.289e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.743 199.727 936.166 / -0.068 -2.794e-08 1.901e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.743 199.727 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.537 196.696 804.639 / 0.265 -0.797 -0.45> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.018 101.263 565.509 / -1.402 1.254 -1.345> #<bodyset-link #X1316f038 LLEG_LINK4  401.336 118.571 539.046 / -0.102 0.107 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.056 106.828 501.175 / -0.102 0.107 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.376 -66.98 81.927 / -0.068 6.481e-11 2.447e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.482 108.093 401.744 / -0.102 0.107 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.856 101.527 926.666 / -0.19 -2.750e-08 5.289e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.968 3.327 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.968 3.327 814.166 / -0.068 -2.794e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  462.86 1.74 804.294 / -0.153 0.483 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  280.8 -39.302 473.281 / -0.242 0.821 -0.236> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.943 -60.633 221.418 / -0.068 6.481e-11 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.376 -66.98 181.927 / -0.068 6.481e-11 2.447e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.856 101.527 926.666 / -0.19 -2.750e-08 5.289e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.743 199.727 936.166 / -0.068 -2.794e-08 1.901e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.743 199.727 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.537 196.696 804.639 / 0.265 -0.797 -0.45> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.018 101.263 565.509 / -1.402 1.254 -1.345> #<bodyset-link #X1316f038 LLEG_LINK4  401.336 118.571 539.046 / -0.102 0.107 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.056 106.828 501.175 / -0.102 0.107 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.24 99.6129 1232.27) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.856 101.527 926.666 / -0.19 -2.750e-08 5.289e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -3.376 -66.98 81.927 / -0.068 6.481e-11 2.447e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.482 108.093 401.744 / -0.102 0.107 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.968 3.327 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.968 3.327 814.166 / -0.068 -2.794e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  462.86 1.74 804.294 / -0.153 0.483 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  280.8 -39.302 473.281 / -0.242 0.821 -0.236> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.943 -60.633 221.418 / -0.068 6.481e-11 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  -3.376 -66.98 181.927 / -0.068 6.481e-11 2.447e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  500.743 199.727 936.166 / -0.068 -2.794e-08 1.901e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.743 199.727 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.537 196.696 804.639 / 0.265 -0.797 -0.45> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.018 101.263 565.509 / -1.402 1.254 -1.345> #<bodyset-link #X1316f038 LLEG_LINK4  401.336 118.571 539.046 / -0.102 0.107 -0.31> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.056 106.828 501.175 / -0.102 0.107 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.24 99.6129 1232.27) :target-centroid-pos #f(399.24 99.6129 1232.27) :fix-limbs-target-coords (#<coordinates #X1260b2d0  8.091 -100.0 81.927 / 1.647e-10 -5.485e-18 5.433e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982001 0.188876 -2.800114e-08 481.856) (-0.188876 0.982001 -8.218209e-19 101.527) (2.749714e-08 5.288751e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint685568240) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(28.7593 67.39 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(8.09078 -100.0 81.927) :rot #2f((1.0 -1.646572e-10 -5.395926e-18) (1.646572e-10 1.0 -5.432929e-10) (5.485310e-18 5.432929e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -2.220446e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -2.220446e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.24 99.6129 1232.27) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -2.220446e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.24 99.6129 1232.27) :target-centroid-pos #f(399.24 99.6129 1232.27) :fix-limbs-target-coords (list #<coordinates #X1260b2d0  8.091 -100.0 81.927 / 1.647e-10 -5.485e-18 5.433e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-12-48-14-39-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-12-48-14-39-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.7136 -32.1805 4.014571e-07)/(34.9806/1)
;; dif-rot : #f(-1.908743e-09 3.698595e-11 0.068167)/(0.068167/0.017453)
;; dif-pos : #f(15.2925 -6.5648 0.036015)/(16.6421/1)
;; dif-rot : #f(-0.007221 -0.105949 0.102049)/(0.14728/0.017453)
;; cog-dif : #f(-0.123683 -5.62366)/(5.62502/5.0)
;;  coords : #<coordinates #X1325f8e0  481.699 101.595 -91.834 / -0.19 -2.750e-08 5.286e-09>
;;  angles : (#f(27.0559 65.2457 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X135bb130  8.497 -100.0 84.518 / 1.644e-10 -5.766e-18 5.426e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.993 -66.96 84.518 / -0.068 6.503e-11 2.450e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.553 108.08 401.727 / -0.102 0.106 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.699 101.595 926.666 / -0.19 -2.750e-08 5.286e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.822 3.392 936.166 / -0.068 -2.794e-08 1.907e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.822 3.392 814.166 / -0.068 -2.794e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  462.714 1.798 804.295 / -0.15 0.468 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  285.839 -40.264 470.609 / -0.249 0.839 -0.241> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.558 -60.584 224.004 / -0.068 6.503e-11 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.993 -66.96 184.518 / -0.068 6.503e-11 2.450e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.699 101.595 926.666 / -0.19 -2.750e-08 5.286e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.575 199.797 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.575 199.797 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.368 196.764 804.64 / 0.265 -0.798 -0.45> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.001 101.293 565.703 / -1.4 1.254 -1.344> #<bodyset-link #X1316f038 LLEG_LINK4  401.332 118.574 539.035 / -0.102 0.106 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.073 106.821 501.164 / -0.102 0.106 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.993 -66.96 84.518 / -0.068 6.503e-11 2.450e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.553 108.08 401.727 / -0.102 0.106 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.699 101.595 926.666 / -0.19 -2.750e-08 5.286e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.822 3.392 936.166 / -0.068 -2.794e-08 1.907e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.822 3.392 814.166 / -0.068 -2.794e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  462.714 1.798 804.295 / -0.15 0.468 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  285.839 -40.264 470.609 / -0.249 0.839 -0.241> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.558 -60.584 224.004 / -0.068 6.503e-11 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.993 -66.96 184.518 / -0.068 6.503e-11 2.450e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.699 101.595 926.666 / -0.19 -2.750e-08 5.286e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.575 199.797 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.575 199.797 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.368 196.764 804.64 / 0.265 -0.798 -0.45> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.001 101.293 565.703 / -1.4 1.254 -1.344> #<bodyset-link #X1316f038 LLEG_LINK4  401.332 118.574 539.035 / -0.102 0.106 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.073 106.821 501.164 / -0.102 0.106 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.287 99.6362 1232.63) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.699 101.595 926.666 / -0.19 -2.750e-08 5.286e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.993 -66.96 84.518 / -0.068 6.503e-11 2.450e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.553 108.08 401.727 / -0.102 0.106 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.822 3.392 936.166 / -0.068 -2.794e-08 1.907e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.822 3.392 814.166 / -0.068 -2.794e-08 -0.16> #<bodyset-link #X6f14d58 RLEG_LINK2  462.714 1.798 804.295 / -0.15 0.468 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  285.839 -40.264 470.609 / -0.249 0.839 -0.241> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.558 -60.584 224.004 / -0.068 6.503e-11 -0.16> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.993 -66.96 184.518 / -0.068 6.503e-11 2.450e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  500.575 199.797 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.575 199.797 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.368 196.764 804.64 / 0.265 -0.798 -0.45> #<bodyset-link #X6f7a6c0 LLEG_LINK3  780.001 101.293 565.703 / -1.4 1.254 -1.344> #<bodyset-link #X1316f038 LLEG_LINK4  401.332 118.574 539.035 / -0.102 0.106 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.073 106.821 501.164 / -0.102 0.106 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.287 99.6362 1232.63) :target-centroid-pos #f(399.287 99.6362 1232.63) :fix-limbs-target-coords (#<coordinates #X135bb130  8.497 -100.0 84.518 / 1.644e-10 -5.766e-18 5.426e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982023 0.188761 -2.800114e-08 481.699) (-0.188761 0.982023 -8.218221e-19 101.595) (2.749777e-08 5.285520e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint647384024) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(27.0559 65.2457 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(8.49668 -100.0 84.5176) :rot #2f((1.0 -1.644429e-10 -5.676567e-18) (1.644429e-10 1.0 -5.425858e-10) (5.765711e-18 5.425858e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 2.220446e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.336809e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-4.336809e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 2.220446e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.336809e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-4.336809e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.287 99.6362 1232.63) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 2.220446e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.336809e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-4.336809e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.287 99.6362 1232.63) :target-centroid-pos #f(399.287 99.6362 1232.63) :fix-limbs-target-coords (list #<coordinates #X135bb130  8.497 -100.0 84.518 / 1.644e-10 -5.766e-18 5.426e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-12-82-77-37-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-12-82-77-37-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.7281 -32.1672 4.018325e-07)/(34.9741/1)
;; dif-rot : #f(-1.910247e-09 3.696609e-11 0.06822)/(0.06822/0.017453)
;; dif-pos : #f(15.2281 -6.55534 0.036229)/(16.5791/1)
;; dif-rot : #f(-0.007194 -0.105472 0.10197)/(0.146881/0.017453)
;; cog-dif : #f(-0.121587 -5.61511)/(5.61643/5.0)
;;  coords : #<coordinates #X1325f8e0  481.551 101.65 -91.834 / -0.19 -2.750e-08 5.284e-09>
;;  angles : (#f(25.5173 63.3088 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X13b26aa8  8.915 -100.0 87.138 / 1.642e-10 -6.054e-18 5.419e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.588 -66.972 87.138 / -0.068 6.513e-11 2.451e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.614 108.063 401.713 / -0.102 0.106 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.551 101.65 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.681 3.446 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.681 3.446 814.166 / -0.068 -2.794e-08 -0.161> #<bodyset-link #X6f14d58 RLEG_LINK2  462.571 1.845 804.296 / -0.148 0.454 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  290.512 -41.18 468.224 / -0.257 0.856 -0.247> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.15 -60.566 226.619 / -0.068 6.513e-11 -0.161> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.588 -66.972 187.138 / -0.068 6.513e-11 2.451e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.551 101.65 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.422 199.853 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.422 199.853 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.215 196.819 804.64 / 0.266 -0.798 -0.451> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.986 101.331 565.871 / -1.399 1.253 -1.343> #<bodyset-link #X1316f038 LLEG_LINK4  401.328 118.57 539.026 / -0.102 0.106 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.087 106.809 501.155 / -0.102 0.106 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.588 -66.972 87.138 / -0.068 6.513e-11 2.451e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.614 108.063 401.713 / -0.102 0.106 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.551 101.65 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.681 3.446 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.681 3.446 814.166 / -0.068 -2.794e-08 -0.161> #<bodyset-link #X6f14d58 RLEG_LINK2  462.571 1.845 804.296 / -0.148 0.454 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  290.512 -41.18 468.224 / -0.257 0.856 -0.247> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.15 -60.566 226.619 / -0.068 6.513e-11 -0.161> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.588 -66.972 187.138 / -0.068 6.513e-11 2.451e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.551 101.65 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.422 199.853 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.422 199.853 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.215 196.819 804.64 / 0.266 -0.798 -0.451> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.986 101.331 565.871 / -1.399 1.253 -1.343> #<bodyset-link #X1316f038 LLEG_LINK4  401.328 118.57 539.026 / -0.102 0.106 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.087 106.809 501.155 / -0.102 0.106 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.331 99.6581 1233.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.551 101.65 926.666 / -0.19 -2.750e-08 5.284e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.588 -66.972 87.138 / -0.068 6.513e-11 2.451e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.614 108.063 401.713 / -0.102 0.106 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.681 3.446 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.681 3.446 814.166 / -0.068 -2.794e-08 -0.161> #<bodyset-link #X6f14d58 RLEG_LINK2  462.571 1.845 804.296 / -0.148 0.454 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  290.512 -41.18 468.224 / -0.257 0.856 -0.247> #<bodyset-link #X130e0d78 RLEG_LINK4  -2.15 -60.566 226.619 / -0.068 6.513e-11 -0.161> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.588 -66.972 187.138 / -0.068 6.513e-11 2.451e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  500.422 199.853 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.422 199.853 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.215 196.819 804.64 / 0.266 -0.798 -0.451> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.986 101.331 565.871 / -1.399 1.253 -1.343> #<bodyset-link #X1316f038 LLEG_LINK4  401.328 118.57 539.026 / -0.102 0.106 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.087 106.809 501.155 / -0.102 0.106 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.331 99.6581 1233.0) :target-centroid-pos #f(399.331 99.6581 1233.0) :fix-limbs-target-coords (#<coordinates #X13b26aa8  8.915 -100.0 87.138 / 1.642e-10 -6.054e-18 5.419e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982033 0.188708 -2.800114e-08 481.551) (-0.188708 0.982033 -8.218221e-19 101.65) (2.749805e-08 5.284044e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint649703160) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(25.5173 63.3088 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(8.91529 -100.0 87.1379) :rot #2f((1.0 -1.642229e-10 -5.964683e-18) (1.642229e-10 1.0 -5.418599e-10) (6.053582e-18 5.418599e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -2.584939e-26 6.661338e-16) (-1.387779e-17 1.0 -4.138932e-25 0.0) (2.584939e-26 4.138932e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.366801e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.366801e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -2.584939e-26 6.661338e-16) (-1.387779e-17 1.0 -4.138932e-25 0.0) (2.584939e-26 4.138932e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.366801e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.366801e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.331 99.6581 1233.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -2.584939e-26 6.661338e-16) (-1.387779e-17 1.0 -4.138932e-25 0.0) (2.584939e-26 4.138932e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.366801e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.366801e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.331 99.6581 1233.0) :target-centroid-pos #f(399.331 99.6581 1233.0) :fix-limbs-target-coords (list #<coordinates #X13b26aa8  8.915 -100.0 87.138 / 1.642e-10 -6.054e-18 5.419e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-13-18-24-02-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-13-18-24-02-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.7337 -32.1341 4.019474e-07)/(34.9459/1)
;; dif-rot : #f(-1.910592e-09 3.692123e-11 0.068233)/(0.068233/0.017453)
;; dif-pos : #f(15.1703 -6.54291 0.036366)/(16.5211/1)
;; dif-rot : #f(-0.007167 -0.105046 0.101863)/(0.146499/0.017453)
;; cog-dif : #f(-0.119603 -5.60385)/(5.60512/5.0)
;;  coords : #<coordinates #X1325f8e0  481.412 101.696 -91.834 / -0.19 -2.750e-08 5.284e-09>
;;  angles : (#f(24.121 61.5515 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X140aac18  9.347 -100.0 89.787 / 1.640e-10 -6.349e-18 5.411e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.164 -67.004 89.787 / -0.068 6.516e-11 2.450e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.669 108.043 401.7 / -0.102 0.105 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.412 101.696 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.542 3.492 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.542 3.492 814.166 / -0.068 -2.794e-08 -0.162> #<bodyset-link #X6f14d58 RLEG_LINK2  462.432 1.884 804.297 / -0.145 0.44 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  294.892 -42.059 466.067 / -0.264 0.871 -0.253> #<bodyset-link #X130e0d78 RLEG_LINK4  -1.724 -60.569 229.264 / -0.068 6.516e-11 -0.162> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.164 -67.004 189.787 / -0.068 6.516e-11 2.450e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.412 101.696 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.281 199.9 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.281 199.9 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.074 196.864 804.641 / 0.266 -0.799 -0.451> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.972 101.375 566.022 / -1.398 1.253 -1.341> #<bodyset-link #X1316f038 LLEG_LINK4  401.323 118.563 539.018 / -0.102 0.105 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.099 106.795 501.147 / -0.102 0.105 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.164 -67.004 89.787 / -0.068 6.516e-11 2.450e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.669 108.043 401.7 / -0.102 0.105 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.412 101.696 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.542 3.492 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.542 3.492 814.166 / -0.068 -2.794e-08 -0.162> #<bodyset-link #X6f14d58 RLEG_LINK2  462.432 1.884 804.297 / -0.145 0.44 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  294.892 -42.059 466.067 / -0.264 0.871 -0.253> #<bodyset-link #X130e0d78 RLEG_LINK4  -1.724 -60.569 229.264 / -0.068 6.516e-11 -0.162> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.164 -67.004 189.787 / -0.068 6.516e-11 2.450e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.412 101.696 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.281 199.9 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.281 199.9 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.074 196.864 804.641 / 0.266 -0.799 -0.451> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.972 101.375 566.022 / -1.398 1.253 -1.341> #<bodyset-link #X1316f038 LLEG_LINK4  401.323 118.563 539.018 / -0.102 0.105 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.099 106.795 501.147 / -0.102 0.105 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.372 99.6787 1233.37) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.412 101.696 926.666 / -0.19 -2.750e-08 5.284e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -2.164 -67.004 89.787 / -0.068 6.516e-11 2.450e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.669 108.043 401.7 / -0.102 0.105 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.542 3.492 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.542 3.492 814.166 / -0.068 -2.794e-08 -0.162> #<bodyset-link #X6f14d58 RLEG_LINK2  462.432 1.884 804.297 / -0.145 0.44 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  294.892 -42.059 466.067 / -0.264 0.871 -0.253> #<bodyset-link #X130e0d78 RLEG_LINK4  -1.724 -60.569 229.264 / -0.068 6.516e-11 -0.162> #<bodyset-link #X12a84e10 RLEG_LINK5  -2.164 -67.004 189.787 / -0.068 6.516e-11 2.450e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  500.281 199.9 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.281 199.9 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  500.074 196.864 804.641 / 0.266 -0.799 -0.451> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.972 101.375 566.022 / -1.398 1.253 -1.341> #<bodyset-link #X1316f038 LLEG_LINK4  401.323 118.563 539.018 / -0.102 0.105 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.099 106.795 501.147 / -0.102 0.105 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.372 99.6787 1233.37) :target-centroid-pos #f(399.372 99.6787 1233.37) :fix-limbs-target-coords (#<coordinates #X140aac18  9.347 -100.0 89.787 / 1.640e-10 -6.349e-18 5.411e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982036 0.188696 -2.800114e-08 481.412) (-0.188696 0.982036 -8.218217e-19 101.696) (2.749811e-08 5.283705e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint669544256) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(24.121 61.5515 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(9.34675 -100.0 89.7873) :rot #2f((1.0 -1.639971e-10 -6.260317e-18) (1.639971e-10 1.0 -5.411151e-10) (6.348963e-18 5.411151e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.505213e-19 0.0) (0.0 1.0 0.0 0.0) (6.505213e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.505213e-19 0.0) (0.0 1.0 0.0 0.0) (6.505213e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.372 99.6787 1233.37) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.505213e-19 0.0) (0.0 1.0 0.0 0.0) (6.505213e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.372 99.6787 1233.37) :target-centroid-pos #f(399.372 99.6787 1233.37) :fix-limbs-target-coords (list #<coordinates #X140aac18  9.347 -100.0 89.787 / 1.640e-10 -6.349e-18 5.411e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-13-66-20-36-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-13-66-20-36-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.7332 -32.0872 4.018832e-07)/(34.9025/1)
;; dif-rot : #f(-1.910141e-09 3.686012e-11 0.068217)/(0.068217/0.017453)
;; dif-pos : #f(15.1173 -6.52854 0.036448)/(16.4668/1)
;; dif-rot : #f(-0.007139 -0.104658 0.101736)/(0.146132/0.017453)
;; cog-dif : #f(-0.117715 -5.59081)/(5.59205/5.0)
;;  coords : #<coordinates #X1325f8e0  481.278 101.736 -91.834 / -0.19 -2.750e-08 5.284e-09>
;;  angles : (#f(22.8489 59.9503 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1462ed40  9.791 -100.0 92.465 / 1.638e-10 -6.652e-18 5.404e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -1.723 -67.051 92.465 / -0.068 6.513e-11 2.449e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.718 108.022 401.689 / -0.102 0.105 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.278 101.736 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.406 3.532 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.406 3.532 814.166 / -0.068 -2.794e-08 -0.163> #<bodyset-link #X6f14d58 RLEG_LINK2  462.296 1.916 804.298 / -0.143 0.428 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  299.032 -42.905 464.099 / -0.271 0.887 -0.259> #<bodyset-link #X130e0d78 RLEG_LINK4  -1.281 -60.587 231.937 / -0.068 6.513e-11 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  -1.723 -67.051 192.465 / -0.068 6.513e-11 2.449e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.278 101.736 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.149 199.939 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.149 199.939 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.942 196.902 804.641 / 0.266 -0.799 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.96 101.421 566.16 / -1.397 1.253 -1.34> #<bodyset-link #X1316f038 LLEG_LINK4  401.318 118.553 539.011 / -0.102 0.105 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.11 106.779 501.14 / -0.102 0.105 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -1.723 -67.051 92.465 / -0.068 6.513e-11 2.449e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.718 108.022 401.689 / -0.102 0.105 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.278 101.736 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.406 3.532 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.406 3.532 814.166 / -0.068 -2.794e-08 -0.163> #<bodyset-link #X6f14d58 RLEG_LINK2  462.296 1.916 804.298 / -0.143 0.428 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  299.032 -42.905 464.099 / -0.271 0.887 -0.259> #<bodyset-link #X130e0d78 RLEG_LINK4  -1.281 -60.587 231.937 / -0.068 6.513e-11 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  -1.723 -67.051 192.465 / -0.068 6.513e-11 2.449e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.278 101.736 926.666 / -0.19 -2.750e-08 5.284e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.149 199.939 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.149 199.939 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.942 196.902 804.641 / 0.266 -0.799 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.96 101.421 566.16 / -1.397 1.253 -1.34> #<bodyset-link #X1316f038 LLEG_LINK4  401.318 118.553 539.011 / -0.102 0.105 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.11 106.779 501.14 / -0.102 0.105 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.41 99.6981 1233.74) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.278 101.736 926.666 / -0.19 -2.750e-08 5.284e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -1.723 -67.051 92.465 / -0.068 6.513e-11 2.449e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.718 108.022 401.689 / -0.102 0.105 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.406 3.532 936.166 / -0.068 -2.794e-08 1.909e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.406 3.532 814.166 / -0.068 -2.794e-08 -0.163> #<bodyset-link #X6f14d58 RLEG_LINK2  462.296 1.916 804.298 / -0.143 0.428 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  299.032 -42.905 464.099 / -0.271 0.887 -0.259> #<bodyset-link #X130e0d78 RLEG_LINK4  -1.281 -60.587 231.937 / -0.068 6.513e-11 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  -1.723 -67.051 192.465 / -0.068 6.513e-11 2.449e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  500.149 199.939 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.149 199.939 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.942 196.902 804.641 / 0.266 -0.799 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.96 101.421 566.16 / -1.397 1.253 -1.34> #<bodyset-link #X1316f038 LLEG_LINK4  401.318 118.553 539.011 / -0.102 0.105 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.11 106.779 501.14 / -0.102 0.105 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.41 99.6981 1233.74) :target-centroid-pos #f(399.41 99.6981 1233.74) :fix-limbs-target-coords (#<coordinates #X1462ed40  9.791 -100.0 92.465 / 1.638e-10 -6.652e-18 5.404e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982033 0.188712 -2.800114e-08 481.278) (-0.188712 0.982033 -8.218217e-19 101.736) (2.749803e-08 5.284147e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint117142344) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(22.8489 59.9503 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(9.7912 -100.0 92.4651) :rot #2f((1.0 -1.637656e-10 -6.563509e-18) (1.637656e-10 1.0 -5.403512e-10) (6.651897e-18 5.403512e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -2.584939e-26 0.0) (-2.775558e-17 1.0 -4.132874e-25 -1.421085e-14) (2.584939e-26 4.132874e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.692061e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.692061e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -2.584939e-26 0.0) (-2.775558e-17 1.0 -4.132874e-25 -1.421085e-14) (2.584939e-26 4.132874e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.692061e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.692061e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.41 99.6981 1233.74) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -2.584939e-26 0.0) (-2.775558e-17 1.0 -4.132874e-25 -1.421085e-14) (2.584939e-26 4.132874e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.692061e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.692061e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.41 99.6981 1233.74) :target-centroid-pos #f(399.41 99.6981 1233.74) :fix-limbs-target-coords (list #<coordinates #X1462ed40  9.791 -100.0 92.465 / 1.638e-10 -6.652e-18 5.404e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-14-02-32-74-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-14-02-32-74-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.7282 -32.0301 4.016883e-07)/(34.8482/1)
;; dif-rot : #f(-1.909119e-09 3.678798e-11 0.06818)/(0.06818/0.017453)
;; dif-pos : #f(15.0679 -6.51281 0.036489)/(16.4152/1)
;; dif-rot : #f(-0.00711 -0.104298 0.101597)/(0.145776/0.017453)
;; cog-dif : #f(-0.115907 -5.57658)/(5.57779/5.0)
;;  coords : #<coordinates #X1325f8e0  481.148 101.77 -91.834 / -0.19 -2.750e-08 5.285e-09>
;;  angles : (#f(21.6854 58.4861 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X15d392e0  10.249 -100.0 95.171 / 1.635e-10 -6.962e-18 5.396e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -1.265 -67.109 95.171 / -0.068 6.506e-11 2.447e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.764 107.999 401.678 / -0.102 0.104 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.148 101.77 926.666 / -0.19 -2.750e-08 5.285e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.273 3.568 936.166 / -0.068 -2.794e-08 1.908e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.273 3.568 814.166 / -0.068 -2.794e-08 -0.163> #<bodyset-link #X6f14d58 RLEG_LINK2  462.163 1.944 804.3 / -0.141 0.416 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  302.971 -43.725 462.287 / -0.278 0.901 -0.265> #<bodyset-link #X130e0d78 RLEG_LINK4  -0.822 -60.615 234.638 / -0.068 6.506e-11 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  -1.265 -67.109 195.171 / -0.068 6.506e-11 2.447e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.148 101.77 926.666 / -0.19 -2.750e-08 5.285e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.023 199.973 936.166 / -0.068 -2.794e-08 1.905e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.023 199.973 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.816 196.935 804.641 / 0.267 -0.799 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.948 101.47 566.288 / -1.396 1.253 -1.339> #<bodyset-link #X1316f038 LLEG_LINK4  401.313 118.542 539.004 / -0.102 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.121 106.762 501.133 / -0.102 0.104 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -1.265 -67.109 95.171 / -0.068 6.506e-11 2.447e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.764 107.999 401.678 / -0.102 0.104 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.148 101.77 926.666 / -0.19 -2.750e-08 5.285e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.273 3.568 936.166 / -0.068 -2.794e-08 1.908e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.273 3.568 814.166 / -0.068 -2.794e-08 -0.163> #<bodyset-link #X6f14d58 RLEG_LINK2  462.163 1.944 804.3 / -0.141 0.416 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  302.971 -43.725 462.287 / -0.278 0.901 -0.265> #<bodyset-link #X130e0d78 RLEG_LINK4  -0.822 -60.615 234.638 / -0.068 6.506e-11 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  -1.265 -67.109 195.171 / -0.068 6.506e-11 2.447e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.148 101.77 926.666 / -0.19 -2.750e-08 5.285e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  500.023 199.973 936.166 / -0.068 -2.794e-08 1.905e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.023 199.973 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.816 196.935 804.641 / 0.267 -0.799 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.948 101.47 566.288 / -1.396 1.253 -1.339> #<bodyset-link #X1316f038 LLEG_LINK4  401.313 118.542 539.004 / -0.102 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.121 106.762 501.133 / -0.102 0.104 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.447 99.7162 1234.12) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.148 101.77 926.666 / -0.19 -2.750e-08 5.285e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -1.265 -67.109 95.171 / -0.068 6.506e-11 2.447e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.764 107.999 401.678 / -0.102 0.104 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.273 3.568 936.166 / -0.068 -2.794e-08 1.908e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.273 3.568 814.166 / -0.068 -2.794e-08 -0.163> #<bodyset-link #X6f14d58 RLEG_LINK2  462.163 1.944 804.3 / -0.141 0.416 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  302.971 -43.725 462.287 / -0.278 0.901 -0.265> #<bodyset-link #X130e0d78 RLEG_LINK4  -0.822 -60.615 234.638 / -0.068 6.506e-11 -0.163> #<bodyset-link #X12a84e10 RLEG_LINK5  -1.265 -67.109 195.171 / -0.068 6.506e-11 2.447e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  500.023 199.973 936.166 / -0.068 -2.794e-08 1.905e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  500.023 199.973 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.816 196.935 804.641 / 0.267 -0.799 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.948 101.47 566.288 / -1.396 1.253 -1.339> #<bodyset-link #X1316f038 LLEG_LINK4  401.313 118.542 539.004 / -0.102 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.121 106.762 501.133 / -0.102 0.104 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.447 99.7162 1234.12) :target-centroid-pos #f(399.447 99.7162 1234.12) :fix-limbs-target-coords (#<coordinates #X15d392e0  10.249 -100.0 95.171 / 1.635e-10 -6.962e-18 5.396e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982026 0.188748 -2.800114e-08 481.148) (-0.188748 0.982026 -8.218221e-19 101.77) (2.749784e-08 5.285151e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint791984376) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(21.6854 58.4861 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(10.2488 -100.0 95.1707) :rot #2f((1.0 -1.635283e-10 -6.874298e-18) (1.635283e-10 1.0 -5.395681e-10) (6.962421e-18 5.395681e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -4.440892e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.469447e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (3.469447e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -4.440892e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.469447e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (3.469447e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.447 99.7162 1234.12) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -4.440892e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.469447e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (3.469447e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.447 99.7162 1234.12) :target-centroid-pos #f(399.447 99.7162 1234.12) :fix-limbs-target-coords (list #<coordinates #X15d392e0  10.249 -100.0 95.171 / 1.635e-10 -6.962e-18 5.396e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-14-39-33-69-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-14-39-33-69-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.7199 -31.9654 4.013958e-07)/(34.7854/1)
;; dif-rot : #f(-1.907670e-09 3.670483e-11 0.068128)/(0.068128/0.017453)
;; dif-pos : #f(15.0213 -6.49612 0.036496)/(16.3659/1)
;; dif-rot : #f(-0.007082 -0.10396 0.101447)/(0.145429/0.017453)
;; cog-dif : #f(-0.11417 -5.56152)/(5.56269/5.0)
;;  coords : #<coordinates #X1325f8e0  481.023 101.801 -91.834 / -0.19 -2.750e-08 5.287e-09>
;;  angles : (#f(20.6176 57.1425 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X162a62a0  10.72 -100.0 97.903 / 1.633e-10 -7.281e-18 5.388e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -0.792 -67.175 97.903 / -0.068 6.496e-11 2.445e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.806 107.976 401.668 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.023 101.801 926.666 / -0.19 -2.750e-08 5.287e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.143 3.599 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.143 3.599 814.166 / -0.068 -2.794e-08 -0.164> #<bodyset-link #X6f14d58 RLEG_LINK2  462.031 1.968 804.301 / -0.139 0.405 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  306.737 -44.523 460.612 / -0.285 0.915 -0.271> #<bodyset-link #X130e0d78 RLEG_LINK4  -0.347 -60.65 237.365 / -0.068 6.496e-11 -0.164> #<bodyset-link #X12a84e10 RLEG_LINK5  -0.792 -67.175 197.903 / -0.068 6.496e-11 2.445e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.023 101.801 926.666 / -0.19 -2.750e-08 5.287e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.902 200.003 936.166 / -0.068 -2.794e-08 1.903e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.902 200.003 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.695 196.964 804.641 / 0.267 -0.8 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.937 101.52 566.408 / -1.394 1.252 -1.338> #<bodyset-link #X1316f038 LLEG_LINK4  401.308 118.529 538.998 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.13 106.744 501.126 / -0.101 0.104 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -0.792 -67.175 97.903 / -0.068 6.496e-11 2.445e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.806 107.976 401.668 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  481.023 101.801 926.666 / -0.19 -2.750e-08 5.287e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.143 3.599 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.143 3.599 814.166 / -0.068 -2.794e-08 -0.164> #<bodyset-link #X6f14d58 RLEG_LINK2  462.031 1.968 804.301 / -0.139 0.405 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  306.737 -44.523 460.612 / -0.285 0.915 -0.271> #<bodyset-link #X130e0d78 RLEG_LINK4  -0.347 -60.65 237.365 / -0.068 6.496e-11 -0.164> #<bodyset-link #X12a84e10 RLEG_LINK5  -0.792 -67.175 197.903 / -0.068 6.496e-11 2.445e-09>) (#<bodyset-link #X6ee5ff8 BODY  481.023 101.801 926.666 / -0.19 -2.750e-08 5.287e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.902 200.003 936.166 / -0.068 -2.794e-08 1.903e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.902 200.003 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.695 196.964 804.641 / 0.267 -0.8 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.937 101.52 566.408 / -1.394 1.252 -1.338> #<bodyset-link #X1316f038 LLEG_LINK4  401.308 118.529 538.998 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.13 106.744 501.126 / -0.101 0.104 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.481 99.7333 1234.51) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  481.023 101.801 926.666 / -0.19 -2.750e-08 5.287e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -0.792 -67.175 97.903 / -0.068 6.496e-11 2.445e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.806 107.976 401.668 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.143 3.599 936.166 / -0.068 -2.794e-08 1.906e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.143 3.599 814.166 / -0.068 -2.794e-08 -0.164> #<bodyset-link #X6f14d58 RLEG_LINK2  462.031 1.968 804.301 / -0.139 0.405 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  306.737 -44.523 460.612 / -0.285 0.915 -0.271> #<bodyset-link #X130e0d78 RLEG_LINK4  -0.347 -60.65 237.365 / -0.068 6.496e-11 -0.164> #<bodyset-link #X12a84e10 RLEG_LINK5  -0.792 -67.175 197.903 / -0.068 6.496e-11 2.445e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.902 200.003 936.166 / -0.068 -2.794e-08 1.903e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.902 200.003 814.166 / -0.068 -2.794e-08 -0.309> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.695 196.964 804.641 / 0.267 -0.8 -0.452> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.937 101.52 566.408 / -1.394 1.252 -1.338> #<bodyset-link #X1316f038 LLEG_LINK4  401.308 118.529 538.998 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.13 106.744 501.126 / -0.101 0.104 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.481 99.7333 1234.51) :target-centroid-pos #f(399.481 99.7333 1234.51) :fix-limbs-target-coords (#<coordinates #X162a62a0  10.72 -100.0 97.903 / 1.633e-10 -7.281e-18 5.388e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982016 0.188799 -2.800114e-08 481.023) (-0.188799 0.982016 -8.218226e-19 101.801) (2.749756e-08 5.286574e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint659931072) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(20.6176 57.1425 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(10.7196 -100.0 97.9035) :rot #2f((1.0 -1.632851e-10 -7.192720e-18) (1.632851e-10 1.0 -5.387658e-10) (7.280571e-18 5.387658e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -4.440892e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.179952e-18 0.0) (0.0 1.0 0.0 0.0) (-6.179952e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -4.440892e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.179952e-18 0.0) (0.0 1.0 0.0 0.0) (-6.179952e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.481 99.7333 1234.51) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -4.440892e-16) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.179952e-18 0.0) (0.0 1.0 0.0 0.0) (-6.179952e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.481 99.7333 1234.51) :target-centroid-pos #f(399.481 99.7333 1234.51) :fix-limbs-target-coords (list #<coordinates #X162a62a0  10.72 -100.0 97.903 / 1.633e-10 -7.281e-18 5.388e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-14-73-14-18-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-14-73-14-18-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.709 -31.8945 4.010268e-07)/(34.716/1)
;; dif-rot : #f(-1.905892e-09 3.661469e-11 0.068065)/(0.068065/0.017453)
;; dif-pos : #f(14.977 -6.4787 0.036478)/(16.3183/1)
;; dif-rot : #f(-0.007054 -0.10364 0.10129)/(0.145089/0.017453)
;; cog-dif : #f(-0.112494 -5.54586)/(5.54701/5.0)
;;  coords : #<coordinates #X1325f8e0  480.9 101.828 -91.834 / -0.19 -2.750e-08 5.288e-09>
;;  angles : (#f(20.068 56.4522 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X16fbc498  11.204 -100.0 100.663 / 1.630e-10 -7.606e-18 5.379e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -0.304 -67.247 100.663 / -0.068 6.484e-11 2.442e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.847 107.952 401.659 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.9 101.828 926.666 / -0.19 -2.750e-08 5.288e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.014 3.628 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.014 3.628 814.166 / -0.068 -2.794e-08 -0.165> #<bodyset-link #X6f14d58 RLEG_LINK2  461.902 1.989 804.302 / -0.137 0.394 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  310.354 -45.3 459.053 / -0.292 0.928 -0.278> #<bodyset-link #X130e0d78 RLEG_LINK4  0.143 -60.692 240.119 / -0.068 6.484e-11 -0.165> #<bodyset-link #X12a84e10 RLEG_LINK5  -0.304 -67.247 200.663 / -0.068 6.484e-11 2.442e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.9 101.828 926.666 / -0.19 -2.750e-08 5.288e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.786 200.029 936.166 / -0.068 -2.794e-08 1.901e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.786 200.029 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.579 196.989 804.642 / 0.268 -0.8 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.926 101.571 566.522 / -1.393 1.252 -1.337> #<bodyset-link #X1316f038 LLEG_LINK4  401.303 118.515 538.993 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.139 106.725 501.12 / -0.101 0.104 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -0.304 -67.247 100.663 / -0.068 6.484e-11 2.442e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.847 107.952 401.659 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.9 101.828 926.666 / -0.19 -2.750e-08 5.288e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  462.014 3.628 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.014 3.628 814.166 / -0.068 -2.794e-08 -0.165> #<bodyset-link #X6f14d58 RLEG_LINK2  461.902 1.989 804.302 / -0.137 0.394 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  310.354 -45.3 459.053 / -0.292 0.928 -0.278> #<bodyset-link #X130e0d78 RLEG_LINK4  0.143 -60.692 240.119 / -0.068 6.484e-11 -0.165> #<bodyset-link #X12a84e10 RLEG_LINK5  -0.304 -67.247 200.663 / -0.068 6.484e-11 2.442e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.9 101.828 926.666 / -0.19 -2.750e-08 5.288e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.786 200.029 936.166 / -0.068 -2.794e-08 1.901e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.786 200.029 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.579 196.989 804.642 / 0.268 -0.8 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.926 101.571 566.522 / -1.393 1.252 -1.337> #<bodyset-link #X1316f038 LLEG_LINK4  401.303 118.515 538.993 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.139 106.725 501.12 / -0.101 0.104 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.513 99.7494 1234.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.9 101.828 926.666 / -0.19 -2.750e-08 5.288e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  -0.304 -67.247 100.663 / -0.068 6.484e-11 2.442e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.847 107.952 401.659 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  462.014 3.628 936.166 / -0.068 -2.794e-08 1.904e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  462.014 3.628 814.166 / -0.068 -2.794e-08 -0.165> #<bodyset-link #X6f14d58 RLEG_LINK2  461.902 1.989 804.302 / -0.137 0.394 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  310.354 -45.3 459.053 / -0.292 0.928 -0.278> #<bodyset-link #X130e0d78 RLEG_LINK4  0.143 -60.692 240.119 / -0.068 6.484e-11 -0.165> #<bodyset-link #X12a84e10 RLEG_LINK5  -0.304 -67.247 200.663 / -0.068 6.484e-11 2.442e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.786 200.029 936.166 / -0.068 -2.794e-08 1.901e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.786 200.029 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.579 196.989 804.642 / 0.268 -0.8 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.926 101.571 566.522 / -1.393 1.252 -1.337> #<bodyset-link #X1316f038 LLEG_LINK4  401.303 118.515 538.993 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.139 106.725 501.12 / -0.101 0.104 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.513 99.7494 1234.9) :target-centroid-pos #f(399.513 99.7494 1234.9) :fix-limbs-target-coords (#<coordinates #X16fbc498  11.204 -100.0 100.663 / 1.630e-10 -7.606e-18 5.379e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982004 0.188861 -2.800114e-08 480.9) (-0.188861 0.982004 -8.218217e-19 101.828) (2.749723e-08 5.288319e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint787741688) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(20.068 56.4522 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(11.2039 -100.0 100.663) :rot #2f((1.0 -1.630361e-10 -7.518809e-18) (1.630361e-10 1.0 -5.379443e-10) (7.606381e-18 5.379443e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.198396e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (3.198396e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.198396e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (3.198396e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.513 99.7494 1234.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.198396e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (3.198396e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.513 99.7494 1234.9) :target-centroid-pos #f(399.513 99.7494 1234.9) :fix-limbs-target-coords (list #<coordinates #X16fbc498  11.204 -100.0 100.663 / 1.630e-10 -7.606e-18 5.379e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-15-08-01-29-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-15-08-01-29-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.6961 -31.8187 4.005964e-07)/(34.6412/1)
;; dif-rot : #f(-1.903857e-09 3.651953e-11 0.067992)/(0.067992/0.017453)
;; dif-pos : #f(14.9345 -6.46074 0.036438)/(16.2721/1)
;; dif-rot : #f(-0.007026 -0.103334 0.101128)/(0.144756/0.017453)
;; cog-dif : #f(-0.110872 -5.52977)/(5.53088/5.0)
;;  coords : #<coordinates #X1325f8e0  480.779 101.853 -91.834 / -0.19 -2.750e-08 5.290e-09>
;;  angles : (#f(20.0538 56.437 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2479cf38  11.702 -100.0 103.448 / 1.628e-10 -7.940e-18 5.371e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.199 -67.324 103.448 / -0.068 6.470e-11 2.439e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.885 107.928 401.65 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.779 101.853 926.666 / -0.19 -2.750e-08 5.290e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.886 3.654 936.166 / -0.068 -2.794e-08 1.902e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.886 3.654 814.166 / -0.068 -2.794e-08 -0.166> #<bodyset-link #X6f14d58 RLEG_LINK2  461.774 2.007 804.303 / -0.136 0.384 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  313.839 -46.061 457.598 / -0.3 0.941 -0.284> #<bodyset-link #X130e0d78 RLEG_LINK4  0.647 -60.739 242.899 / -0.068 6.470e-11 -0.166> #<bodyset-link #X12a84e10 RLEG_LINK5  0.199 -67.324 203.448 / -0.068 6.470e-11 2.439e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.779 101.853 926.666 / -0.19 -2.750e-08 5.290e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.673 200.052 936.166 / -0.068 -2.794e-08 1.899e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.673 200.052 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.466 197.012 804.642 / 0.268 -0.8 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.916 101.623 566.631 / -1.392 1.252 -1.336> #<bodyset-link #X1316f038 LLEG_LINK4  401.298 118.5 538.987 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.147 106.706 501.114 / -0.101 0.104 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.199 -67.324 103.448 / -0.068 6.470e-11 2.439e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.885 107.928 401.65 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.779 101.853 926.666 / -0.19 -2.750e-08 5.290e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.886 3.654 936.166 / -0.068 -2.794e-08 1.902e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.886 3.654 814.166 / -0.068 -2.794e-08 -0.166> #<bodyset-link #X6f14d58 RLEG_LINK2  461.774 2.007 804.303 / -0.136 0.384 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  313.839 -46.061 457.598 / -0.3 0.941 -0.284> #<bodyset-link #X130e0d78 RLEG_LINK4  0.647 -60.739 242.899 / -0.068 6.470e-11 -0.166> #<bodyset-link #X12a84e10 RLEG_LINK5  0.199 -67.324 203.448 / -0.068 6.470e-11 2.439e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.779 101.853 926.666 / -0.19 -2.750e-08 5.290e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.673 200.052 936.166 / -0.068 -2.794e-08 1.899e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.673 200.052 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.466 197.012 804.642 / 0.268 -0.8 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.916 101.623 566.631 / -1.392 1.252 -1.336> #<bodyset-link #X1316f038 LLEG_LINK4  401.298 118.5 538.987 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.147 106.706 501.114 / -0.101 0.104 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.543 99.7645 1235.29) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.779 101.853 926.666 / -0.19 -2.750e-08 5.290e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.199 -67.324 103.448 / -0.068 6.470e-11 2.439e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.885 107.928 401.65 / -0.101 0.104 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.886 3.654 936.166 / -0.068 -2.794e-08 1.902e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.886 3.654 814.166 / -0.068 -2.794e-08 -0.166> #<bodyset-link #X6f14d58 RLEG_LINK2  461.774 2.007 804.303 / -0.136 0.384 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  313.839 -46.061 457.598 / -0.3 0.941 -0.284> #<bodyset-link #X130e0d78 RLEG_LINK4  0.647 -60.739 242.899 / -0.068 6.470e-11 -0.166> #<bodyset-link #X12a84e10 RLEG_LINK5  0.199 -67.324 203.448 / -0.068 6.470e-11 2.439e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.673 200.052 936.166 / -0.068 -2.794e-08 1.899e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.673 200.052 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.466 197.012 804.642 / 0.268 -0.8 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.916 101.623 566.631 / -1.392 1.252 -1.336> #<bodyset-link #X1316f038 LLEG_LINK4  401.298 118.5 538.987 / -0.101 0.104 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.147 106.706 501.114 / -0.101 0.104 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.543 99.7645 1235.29) :target-centroid-pos #f(399.543 99.7645 1235.29) :fix-limbs-target-coords (#<coordinates #X2479cf38  11.702 -100.0 103.448 / 1.628e-10 -7.940e-18 5.371e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.98199 0.188932 -2.800114e-08 480.779) (-0.188932 0.98199 -8.218226e-19 101.853) (2.749684e-08 5.290318e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint771173504) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(20.0538 56.437 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(11.7016 -100.0 103.448) :rot #2f((1.0 -1.627812e-10 -7.852596e-18) (1.627812e-10 1.0 -5.371033e-10) (7.939884e-18 5.371033e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -8.881784e-16) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.475221e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-5.475221e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -8.881784e-16) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.475221e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-5.475221e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.543 99.7645 1235.29) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -8.881784e-16) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.475221e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-5.475221e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.543 99.7645 1235.29) :target-centroid-pos #f(399.543 99.7645 1235.29) :fix-limbs-target-coords (list #<coordinates #X2479cf38  11.702 -100.0 103.448 / 1.628e-10 -7.940e-18 5.371e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-15-42-83-63-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-15-42-83-63-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.6815 -31.7387 4.001177e-07)/(34.562/1)
;; dif-rot : #f(-1.901613e-09 3.641760e-11 0.067912)/(0.067912/0.017453)
;; dif-pos : #f(14.8934 -6.44235 0.036379)/(16.2271/1)
;; dif-rot : #f(-0.006997 -0.10304 0.10096)/(0.144427/0.017453)
;; cog-dif : #f(-0.109297 -5.51336)/(5.51444/5.0)
;;  coords : #<coordinates #X1325f8e0  480.661 101.875 -91.834 / -0.19 -2.750e-08 5.293e-09>
;;  angles : (#f(20.0386 56.4207 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X24e82328  12.213 -100.0 106.258 / 1.625e-10 -8.281e-18 5.362e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.717 -67.406 106.258 / -0.068 6.455e-11 2.436e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.922 107.903 401.641 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.661 101.875 926.666 / -0.19 -2.750e-08 5.293e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.76 3.677 936.166 / -0.068 -2.794e-08 1.900e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.76 3.677 814.166 / -0.068 -2.794e-08 -0.167> #<bodyset-link #X6f14d58 RLEG_LINK2  461.647 2.023 804.305 / -0.134 0.374 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  317.206 -46.808 456.235 / -0.307 0.954 -0.291> #<bodyset-link #X130e0d78 RLEG_LINK4  1.167 -60.789 245.704 / -0.068 6.455e-11 -0.167> #<bodyset-link #X12a84e10 RLEG_LINK5  0.717 -67.406 206.258 / -0.068 6.455e-11 2.436e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.661 101.875 926.666 / -0.19 -2.750e-08 5.293e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.562 200.072 936.166 / -0.068 -2.794e-08 1.897e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.562 200.072 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.356 197.031 804.642 / 0.268 -0.801 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.906 101.676 566.737 / -1.391 1.252 -1.336> #<bodyset-link #X1316f038 LLEG_LINK4  401.294 118.485 538.982 / -0.101 0.103 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.155 106.686 501.109 / -0.101 0.103 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.717 -67.406 106.258 / -0.068 6.455e-11 2.436e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.922 107.903 401.641 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.661 101.875 926.666 / -0.19 -2.750e-08 5.293e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.76 3.677 936.166 / -0.068 -2.794e-08 1.900e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.76 3.677 814.166 / -0.068 -2.794e-08 -0.167> #<bodyset-link #X6f14d58 RLEG_LINK2  461.647 2.023 804.305 / -0.134 0.374 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  317.206 -46.808 456.235 / -0.307 0.954 -0.291> #<bodyset-link #X130e0d78 RLEG_LINK4  1.167 -60.789 245.704 / -0.068 6.455e-11 -0.167> #<bodyset-link #X12a84e10 RLEG_LINK5  0.717 -67.406 206.258 / -0.068 6.455e-11 2.436e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.661 101.875 926.666 / -0.19 -2.750e-08 5.293e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.562 200.072 936.166 / -0.068 -2.794e-08 1.897e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.562 200.072 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.356 197.031 804.642 / 0.268 -0.801 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.906 101.676 566.737 / -1.391 1.252 -1.336> #<bodyset-link #X1316f038 LLEG_LINK4  401.294 118.485 538.982 / -0.101 0.103 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.155 106.686 501.109 / -0.101 0.103 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.572 99.7787 1235.69) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.661 101.875 926.666 / -0.19 -2.750e-08 5.293e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  0.717 -67.406 106.258 / -0.068 6.455e-11 2.436e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.922 107.903 401.641 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.76 3.677 936.166 / -0.068 -2.794e-08 1.900e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.76 3.677 814.166 / -0.068 -2.794e-08 -0.167> #<bodyset-link #X6f14d58 RLEG_LINK2  461.647 2.023 804.305 / -0.134 0.374 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  317.206 -46.808 456.235 / -0.307 0.954 -0.291> #<bodyset-link #X130e0d78 RLEG_LINK4  1.167 -60.789 245.704 / -0.068 6.455e-11 -0.167> #<bodyset-link #X12a84e10 RLEG_LINK5  0.717 -67.406 206.258 / -0.068 6.455e-11 2.436e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.562 200.072 936.166 / -0.068 -2.794e-08 1.897e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.562 200.072 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.356 197.031 804.642 / 0.268 -0.801 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.906 101.676 566.737 / -1.391 1.252 -1.336> #<bodyset-link #X1316f038 LLEG_LINK4  401.294 118.485 538.982 / -0.101 0.103 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.155 106.686 501.109 / -0.101 0.103 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.572 99.7787 1235.69) :target-centroid-pos #f(399.572 99.7787 1235.69) :fix-limbs-target-coords (#<coordinates #X24e82328  12.213 -100.0 106.258 / 1.625e-10 -8.281e-18 5.362e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981975 0.189011 -2.800114e-08 480.661) (-0.189011 0.981975 -8.218221e-19 101.875) (2.749642e-08 5.292522e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint656869528) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(20.0386 56.4207 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(12.213 -100.0 106.258) :rot #2f((1.0 -1.625205e-10 -8.194113e-18) (1.625205e-10 1.0 -5.362428e-10) (8.281109e-18 5.362428e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.463673e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (1.463673e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.463673e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (1.463673e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.572 99.7787 1235.69) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.463673e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (1.463673e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.572 99.7787 1235.69) :target-centroid-pos #f(399.572 99.7787 1235.69) :fix-limbs-target-coords (list #<coordinates #X24e82328  12.213 -100.0 106.258 / 1.625e-10 -8.281e-18 5.362e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-15-77-81-27-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-15-77-81-27-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.6655 -31.6552 3.995980e-07)/(34.4789/1)
;; dif-rot : #f(-1.899199e-09 3.631194e-11 0.067826)/(0.067826/0.017453)
;; dif-pos : #f(14.8536 -6.42363 0.036304)/(16.1832/1)
;; dif-rot : #f(-0.006969 -0.102756 0.10079)/(0.144104/0.017453)
;; cog-dif : #f(-0.107764 -5.4967)/(5.49776/5.0)
;;  coords : #<coordinates #X1325f8e0  480.544 101.894 -91.834 / -0.19 -2.750e-08 5.295e-09>
;;  angles : (#f(20.0226 56.4032 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2551ee30  12.738 -100.0 109.092 / 1.623e-10 -8.630e-18 5.354e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  1.249 -67.491 109.092 / -0.068 6.438e-11 2.433e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.958 107.878 401.633 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.544 101.894 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.635 3.699 936.166 / -0.068 -2.794e-08 1.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.635 3.699 814.166 / -0.068 -2.794e-08 -0.167> #<bodyset-link #X6f14d58 RLEG_LINK2  461.522 2.036 804.306 / -0.132 0.364 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  320.469 -47.541 454.955 / -0.315 0.966 -0.298> #<bodyset-link #X130e0d78 RLEG_LINK4  1.701 -60.843 248.533 / -0.068 6.438e-11 -0.167> #<bodyset-link #X12a84e10 RLEG_LINK5  1.249 -67.491 209.092 / -0.068 6.438e-11 2.433e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.544 101.894 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.454 200.09 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.454 200.09 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.248 197.049 804.642 / 0.269 -0.801 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.896 101.728 566.839 / -1.39 1.252 -1.335> #<bodyset-link #X1316f038 LLEG_LINK4  401.289 118.469 538.977 / -0.101 0.103 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.163 106.666 501.103 / -0.101 0.103 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  1.249 -67.491 109.092 / -0.068 6.438e-11 2.433e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.958 107.878 401.633 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.544 101.894 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.635 3.699 936.166 / -0.068 -2.794e-08 1.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.635 3.699 814.166 / -0.068 -2.794e-08 -0.167> #<bodyset-link #X6f14d58 RLEG_LINK2  461.522 2.036 804.306 / -0.132 0.364 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  320.469 -47.541 454.955 / -0.315 0.966 -0.298> #<bodyset-link #X130e0d78 RLEG_LINK4  1.701 -60.843 248.533 / -0.068 6.438e-11 -0.167> #<bodyset-link #X12a84e10 RLEG_LINK5  1.249 -67.491 209.092 / -0.068 6.438e-11 2.433e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.544 101.894 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.454 200.09 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.454 200.09 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.248 197.049 804.642 / 0.269 -0.801 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.896 101.728 566.839 / -1.39 1.252 -1.335> #<bodyset-link #X1316f038 LLEG_LINK4  401.289 118.469 538.977 / -0.101 0.103 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.163 106.666 501.103 / -0.101 0.103 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.598 99.792 1236.09) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.544 101.894 926.666 / -0.19 -2.750e-08 5.295e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  1.249 -67.491 109.092 / -0.068 6.438e-11 2.433e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.958 107.878 401.633 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.635 3.699 936.166 / -0.068 -2.794e-08 1.898e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.635 3.699 814.166 / -0.068 -2.794e-08 -0.167> #<bodyset-link #X6f14d58 RLEG_LINK2  461.522 2.036 804.306 / -0.132 0.364 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  320.469 -47.541 454.955 / -0.315 0.966 -0.298> #<bodyset-link #X130e0d78 RLEG_LINK4  1.701 -60.843 248.533 / -0.068 6.438e-11 -0.167> #<bodyset-link #X12a84e10 RLEG_LINK5  1.249 -67.491 209.092 / -0.068 6.438e-11 2.433e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.454 200.09 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.454 200.09 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.248 197.049 804.642 / 0.269 -0.801 -0.453> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.896 101.728 566.839 / -1.39 1.252 -1.335> #<bodyset-link #X1316f038 LLEG_LINK4  401.289 118.469 538.977 / -0.101 0.103 -0.311> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.163 106.666 501.103 / -0.101 0.103 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.598 99.792 1236.09) :target-centroid-pos #f(399.598 99.792 1236.09) :fix-limbs-target-coords (#<coordinates #X2551ee30  12.738 -100.0 109.092 / 1.623e-10 -8.630e-18 5.354e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981959 0.189096 -2.800114e-08 480.544) (-0.189096 0.981959 -8.218226e-19 101.894) (2.749596e-08 5.294892e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint616125024) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(20.0226 56.4032 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(12.7382 -100.0 109.092) :rot #2f((1.0 -1.622538e-10 -8.543386e-18) (1.622538e-10 1.0 -5.353628e-10) (8.630084e-18 5.353628e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.493665e-18 0.0) (0.0 1.0 0.0 0.0) (-2.493665e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.493665e-18 0.0) (0.0 1.0 0.0 0.0) (-2.493665e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.598 99.792 1236.09) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.493665e-18 0.0) (0.0 1.0 0.0 0.0) (-2.493665e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.598 99.792 1236.09) :target-centroid-pos #f(399.598 99.792 1236.09) :fix-limbs-target-coords (list #<coordinates #X2551ee30  12.738 -100.0 109.092 / 1.623e-10 -8.630e-18 5.354e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-16-12-78-58-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-16-12-78-58-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.6484 -31.5686 3.990438e-07)/(34.3926/1)
;; dif-rot : #f(-1.896643e-09 3.620268e-11 0.067734)/(0.067734/0.017453)
;; dif-pos : #f(14.8149 -6.40463 0.036216)/(16.14/1)
;; dif-rot : #f(-0.006941 -0.10248 0.100615)/(0.143784/0.017453)
;; cog-dif : #f(-0.106269 -5.47986)/(5.48089/5.0)
;;  coords : #<coordinates #X1325f8e0  480.429 101.912 -91.834 / -0.19 -2.750e-08 5.297e-09>
;;  angles : (#f(20.0057 56.3847 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2ec0f4e8  13.277 -100.0 111.95 / 1.620e-10 -8.987e-18 5.345e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  1.797 -67.58 111.95 / -0.068 6.421e-11 2.430e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.993 107.853 401.625 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.429 101.912 926.666 / -0.19 -2.750e-08 5.297e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.511 3.718 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.511 3.718 814.166 / -0.068 -2.794e-08 -0.168> #<bodyset-link #X6f14d58 RLEG_LINK2  461.397 2.048 804.307 / -0.131 0.355 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  323.636 -48.264 453.75 / -0.323 0.979 -0.305> #<bodyset-link #X130e0d78 RLEG_LINK4  2.25 -60.9 251.385 / -0.068 6.421e-11 -0.168> #<bodyset-link #X12a84e10 RLEG_LINK5  1.797 -67.58 211.95 / -0.068 6.421e-11 2.430e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.429 101.912 926.666 / -0.19 -2.750e-08 5.297e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.348 200.107 936.166 / -0.068 -2.794e-08 1.892e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.348 200.107 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.142 197.065 804.642 / 0.269 -0.801 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.887 101.781 566.938 / -1.389 1.252 -1.334> #<bodyset-link #X1316f038 LLEG_LINK4  401.284 118.452 538.973 / -0.101 0.103 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.17 106.646 501.098 / -0.101 0.103 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  1.797 -67.58 111.95 / -0.068 6.421e-11 2.430e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.993 107.853 401.625 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.429 101.912 926.666 / -0.19 -2.750e-08 5.297e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.511 3.718 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.511 3.718 814.166 / -0.068 -2.794e-08 -0.168> #<bodyset-link #X6f14d58 RLEG_LINK2  461.397 2.048 804.307 / -0.131 0.355 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  323.636 -48.264 453.75 / -0.323 0.979 -0.305> #<bodyset-link #X130e0d78 RLEG_LINK4  2.25 -60.9 251.385 / -0.068 6.421e-11 -0.168> #<bodyset-link #X12a84e10 RLEG_LINK5  1.797 -67.58 211.95 / -0.068 6.421e-11 2.430e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.429 101.912 926.666 / -0.19 -2.750e-08 5.297e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.348 200.107 936.166 / -0.068 -2.794e-08 1.892e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.348 200.107 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.142 197.065 804.642 / 0.269 -0.801 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.887 101.781 566.938 / -1.389 1.252 -1.334> #<bodyset-link #X1316f038 LLEG_LINK4  401.284 118.452 538.973 / -0.101 0.103 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.17 106.646 501.098 / -0.101 0.103 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.623 99.8045 1236.49) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.429 101.912 926.666 / -0.19 -2.750e-08 5.297e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  1.797 -67.58 111.95 / -0.068 6.421e-11 2.430e-09> #<cascaded-coords #X12422518 :lleg-end-coords  385.993 107.853 401.625 / -0.101 0.103 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.511 3.718 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.511 3.718 814.166 / -0.068 -2.794e-08 -0.168> #<bodyset-link #X6f14d58 RLEG_LINK2  461.397 2.048 804.307 / -0.131 0.355 -0.179> #<bodyset-link #X6f38680 RLEG_LINK3  323.636 -48.264 453.75 / -0.323 0.979 -0.305> #<bodyset-link #X130e0d78 RLEG_LINK4  2.25 -60.9 251.385 / -0.068 6.421e-11 -0.168> #<bodyset-link #X12a84e10 RLEG_LINK5  1.797 -67.58 211.95 / -0.068 6.421e-11 2.430e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.348 200.107 936.166 / -0.068 -2.794e-08 1.892e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.348 200.107 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.142 197.065 804.642 / 0.269 -0.801 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.887 101.781 566.938 / -1.389 1.252 -1.334> #<bodyset-link #X1316f038 LLEG_LINK4  401.284 118.452 538.973 / -0.101 0.103 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.17 106.646 501.098 / -0.101 0.103 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.623 99.8045 1236.49) :target-centroid-pos #f(399.623 99.8045 1236.49) :fix-limbs-target-coords (#<coordinates #X2ec0f4e8  13.277 -100.0 111.95 / 1.620e-10 -8.987e-18 5.345e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981941 0.189185 -2.800114e-08 480.429) (-0.189185 0.981941 -8.218217e-19 101.912) (2.749548e-08 5.297402e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint615345104) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(20.0057 56.3847 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(13.2772 -100.0 111.95) :rot #2f((1.0 -1.619811e-10 -8.900441e-18) (1.619811e-10 1.0 -5.344632e-10) (8.986834e-18 5.344632e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 8.881784e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.722053e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 8.881784e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.722053e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.623 99.8045 1236.49) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 8.881784e-16) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.722053e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.623 99.8045 1236.49) :target-centroid-pos #f(399.623 99.8045 1236.49) :fix-limbs-target-coords (list #<coordinates #X2ec0f4e8  13.277 -100.0 111.95 / 1.620e-10 -8.987e-18 5.345e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-16-48-70-52-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-16-48-70-52-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.6303 -31.4792 3.984603e-07)/(34.3034/1)
;; dif-rot : #f(-1.893967e-09 3.608892e-11 0.067639)/(0.067639/0.017453)
;; dif-pos : #f(14.777 -6.38541 0.036116)/(16.0976/1)
;; dif-rot : #f(-0.006913 -0.102211 0.100439)/(0.143467/0.017453)
;; cog-dif : #f(-0.104808 -5.46289)/(5.4639/5.0)
;;  coords : #<coordinates #X1325f8e0  480.315 101.929 -91.834 / -0.19 -2.749e-08 5.300e-09>
;;  angles : (#f(19.9881 56.3653 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X17f9a038  13.83 -100.0 114.831 / 1.617e-10 -9.351e-18 5.335e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.359 -67.672 114.831 / -0.068 6.403e-11 2.426e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.026 107.827 401.617 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.315 101.929 926.666 / -0.19 -2.749e-08 5.300e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.387 3.736 936.166 / -0.068 -2.794e-08 1.893e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.387 3.736 814.166 / -0.068 -2.794e-08 -0.169> #<bodyset-link #X6f14d58 RLEG_LINK2  461.274 2.058 804.309 / -0.129 0.346 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  326.716 -48.977 452.614 / -0.331 0.99 -0.312> #<bodyset-link #X130e0d78 RLEG_LINK4  2.813 -60.959 254.261 / -0.068 6.403e-11 -0.169> #<bodyset-link #X12a84e10 RLEG_LINK5  2.359 -67.672 214.831 / -0.068 6.403e-11 2.426e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.315 101.929 926.666 / -0.19 -2.749e-08 5.300e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.243 200.121 936.166 / -0.068 -2.794e-08 1.890e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.243 200.121 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.037 197.079 804.643 / 0.269 -0.801 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.877 101.835 567.035 / -1.389 1.252 -1.333> #<bodyset-link #X1316f038 LLEG_LINK4  401.279 118.435 538.968 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.178 106.626 501.093 / -0.1 0.102 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.359 -67.672 114.831 / -0.068 6.403e-11 2.426e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.026 107.827 401.617 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.315 101.929 926.666 / -0.19 -2.749e-08 5.300e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.387 3.736 936.166 / -0.068 -2.794e-08 1.893e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.387 3.736 814.166 / -0.068 -2.794e-08 -0.169> #<bodyset-link #X6f14d58 RLEG_LINK2  461.274 2.058 804.309 / -0.129 0.346 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  326.716 -48.977 452.614 / -0.331 0.99 -0.312> #<bodyset-link #X130e0d78 RLEG_LINK4  2.813 -60.959 254.261 / -0.068 6.403e-11 -0.169> #<bodyset-link #X12a84e10 RLEG_LINK5  2.359 -67.672 214.831 / -0.068 6.403e-11 2.426e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.315 101.929 926.666 / -0.19 -2.749e-08 5.300e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.243 200.121 936.166 / -0.068 -2.794e-08 1.890e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.243 200.121 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.037 197.079 804.643 / 0.269 -0.801 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.877 101.835 567.035 / -1.389 1.252 -1.333> #<bodyset-link #X1316f038 LLEG_LINK4  401.279 118.435 538.968 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.178 106.626 501.093 / -0.1 0.102 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.647 99.8163 1236.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.315 101.929 926.666 / -0.19 -2.749e-08 5.300e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.359 -67.672 114.831 / -0.068 6.403e-11 2.426e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.026 107.827 401.617 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.387 3.736 936.166 / -0.068 -2.794e-08 1.893e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.387 3.736 814.166 / -0.068 -2.794e-08 -0.169> #<bodyset-link #X6f14d58 RLEG_LINK2  461.274 2.058 804.309 / -0.129 0.346 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  326.716 -48.977 452.614 / -0.331 0.99 -0.312> #<bodyset-link #X130e0d78 RLEG_LINK4  2.813 -60.959 254.261 / -0.068 6.403e-11 -0.169> #<bodyset-link #X12a84e10 RLEG_LINK5  2.359 -67.672 214.831 / -0.068 6.403e-11 2.426e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.243 200.121 936.166 / -0.068 -2.794e-08 1.890e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.243 200.121 814.166 / -0.068 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  499.037 197.079 804.643 / 0.269 -0.801 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.877 101.835 567.035 / -1.389 1.252 -1.333> #<bodyset-link #X1316f038 LLEG_LINK4  401.279 118.435 538.968 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.178 106.626 501.093 / -0.1 0.102 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.647 99.8163 1236.9) :target-centroid-pos #f(399.647 99.8163 1236.9) :fix-limbs-target-coords (#<coordinates #X17f9a038  13.83 -100.0 114.831 / 1.617e-10 -9.351e-18 5.335e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981923 0.189279 -2.800114e-08 480.315) (-0.189279 0.981923 -8.218221e-19 101.929) (2.749497e-08 5.300030e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint627345384) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.9881 56.3653 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(13.8303 -100.0 114.831) :rot #2f((1.0 -1.617025e-10 -9.265303e-18) (1.617025e-10 1.0 -5.335439e-10) (9.351385e-18 5.335439e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 2.249720e-17 -5.684342e-14) (-1.387779e-17 1.0 -1.734723e-18 0.0) (-2.249720e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 2.249720e-17 -5.684342e-14) (-1.387779e-17 1.0 -1.734723e-18 0.0) (-2.249720e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.647 99.8163 1236.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 2.249720e-17 -5.684342e-14) (-1.387779e-17 1.0 -1.734723e-18 0.0) (-2.249720e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.647 99.8163 1236.9) :target-centroid-pos #f(399.647 99.8163 1236.9) :fix-limbs-target-coords (list #<coordinates #X17f9a038  13.83 -100.0 114.831 / 1.617e-10 -9.351e-18 5.335e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-16-84-56-21-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-16-84-56-21-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.6114 -31.3874 3.978524e-07)/(34.2117/1)
;; dif-rot : #f(-1.891189e-09 3.597307e-11 0.06754)/(0.06754/0.017453)
;; dif-pos : #f(14.7398 -6.366 0.036005)/(16.0558/1)
;; dif-rot : #f(-0.006885 -0.101948 0.10026)/(0.143154/0.017453)
;; cog-dif : #f(-0.103378 -5.44581)/(5.44679/5.0)
;;  coords : #<coordinates #X1325f8e0  480.202 101.943 -91.834 / -0.191 -2.749e-08 5.303e-09>
;;  angles : (#f(19.9697 56.3449 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X17ecd670  14.397 -100.0 117.734 / 1.614e-10 -9.724e-18 5.326e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.935 -67.766 117.734 / -0.068 6.384e-11 2.422e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.059 107.802 401.609 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.202 101.943 926.666 / -0.191 -2.749e-08 5.303e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.265 3.753 936.166 / -0.068 -2.794e-08 1.890e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.265 3.753 814.166 / -0.068 -2.794e-08 -0.17> #<bodyset-link #X6f14d58 RLEG_LINK2  461.151 2.066 804.31 / -0.128 0.337 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  329.716 -49.681 451.54 / -0.339 1.002 -0.319> #<bodyset-link #X130e0d78 RLEG_LINK4  3.392 -61.02 257.159 / -0.068 6.384e-11 -0.17> #<bodyset-link #X12a84e10 RLEG_LINK5  2.935 -67.766 217.734 / -0.068 6.384e-11 2.422e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.202 101.943 926.666 / -0.191 -2.749e-08 5.303e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.14 200.134 936.166 / -0.067 -2.794e-08 1.887e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.14 200.134 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.934 197.091 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.868 101.888 567.13 / -1.388 1.252 -1.332> #<bodyset-link #X1316f038 LLEG_LINK4  401.274 118.418 538.964 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.185 106.606 501.088 / -0.1 0.102 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.935 -67.766 117.734 / -0.068 6.384e-11 2.422e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.059 107.802 401.609 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.202 101.943 926.666 / -0.191 -2.749e-08 5.303e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.265 3.753 936.166 / -0.068 -2.794e-08 1.890e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.265 3.753 814.166 / -0.068 -2.794e-08 -0.17> #<bodyset-link #X6f14d58 RLEG_LINK2  461.151 2.066 804.31 / -0.128 0.337 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  329.716 -49.681 451.54 / -0.339 1.002 -0.319> #<bodyset-link #X130e0d78 RLEG_LINK4  3.392 -61.02 257.159 / -0.068 6.384e-11 -0.17> #<bodyset-link #X12a84e10 RLEG_LINK5  2.935 -67.766 217.734 / -0.068 6.384e-11 2.422e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.202 101.943 926.666 / -0.191 -2.749e-08 5.303e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.14 200.134 936.166 / -0.067 -2.794e-08 1.887e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.14 200.134 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.934 197.091 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.868 101.888 567.13 / -1.388 1.252 -1.332> #<bodyset-link #X1316f038 LLEG_LINK4  401.274 118.418 538.964 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.185 106.606 501.088 / -0.1 0.102 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.669 99.8273 1237.32) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.202 101.943 926.666 / -0.191 -2.749e-08 5.303e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  2.935 -67.766 117.734 / -0.068 6.384e-11 2.422e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.059 107.802 401.609 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.265 3.753 936.166 / -0.068 -2.794e-08 1.890e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.265 3.753 814.166 / -0.068 -2.794e-08 -0.17> #<bodyset-link #X6f14d58 RLEG_LINK2  461.151 2.066 804.31 / -0.128 0.337 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  329.716 -49.681 451.54 / -0.339 1.002 -0.319> #<bodyset-link #X130e0d78 RLEG_LINK4  3.392 -61.02 257.159 / -0.068 6.384e-11 -0.17> #<bodyset-link #X12a84e10 RLEG_LINK5  2.935 -67.766 217.734 / -0.068 6.384e-11 2.422e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.14 200.134 936.166 / -0.067 -2.794e-08 1.887e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.14 200.134 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.934 197.091 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.868 101.888 567.13 / -1.388 1.252 -1.332> #<bodyset-link #X1316f038 LLEG_LINK4  401.274 118.418 538.964 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.185 106.606 501.088 / -0.1 0.102 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.669 99.8273 1237.32) :target-centroid-pos #f(399.669 99.8273 1237.32) :fix-limbs-target-coords (#<coordinates #X17ecd670  14.397 -100.0 117.734 / 1.614e-10 -9.724e-18 5.326e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981905 0.189376 -2.800114e-08 480.202) (-0.189376 0.981905 -8.218213e-19 101.943) (2.749445e-08 5.302758e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint299024816) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.9697 56.3449 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(14.3974 -100.0 117.734) :rot #2f((1.0 -1.614179e-10 -9.637994e-18) (1.614179e-10 1.0 -5.326049e-10) (9.723757e-18 5.326049e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-20 5.684342e-14) (0.0 1.0 0.0 0.0) (5.421011e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-20 5.684342e-14) (0.0 1.0 0.0 0.0) (5.421011e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.669 99.8273 1237.32) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-20 5.684342e-14) (0.0 1.0 0.0 0.0) (5.421011e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.669 99.8273 1237.32) :target-centroid-pos #f(399.669 99.8273 1237.32) :fix-limbs-target-coords (list #<coordinates #X17ecd670  14.397 -100.0 117.734 / 1.614e-10 -9.724e-18 5.326e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-17-30-90-73-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-17-30-90-73-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.5918 -31.2934 3.972223e-07)/(34.1177/1)
;; dif-rot : #f(-1.888323e-09 3.585320e-11 0.067437)/(0.067437/0.017453)
;; dif-pos : #f(14.7034 -6.34645 0.035886)/(16.0146/1)
;; dif-rot : #f(-0.006858 -0.101691 0.100079)/(0.142842/0.017453)
;; cog-dif : #f(-0.101975 -5.42866)/(5.42962/5.0)
;;  coords : #<coordinates #X1325f8e0  480.09 101.957 -91.834 / -0.191 -2.749e-08 5.306e-09>
;;  angles : (#f(19.9507 56.3237 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2864a598  14.979 -100.0 120.659 / 1.611e-10 -1.010e-17 5.316e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.527 -67.862 120.659 / -0.067 6.365e-11 2.419e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.092 107.776 401.602 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.09 101.957 926.666 / -0.191 -2.749e-08 5.306e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.142 3.768 936.166 / -0.067 -2.794e-08 1.887e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.142 3.768 814.166 / -0.067 -2.794e-08 -0.171> #<bodyset-link #X6f14d58 RLEG_LINK2  461.028 2.074 804.312 / -0.126 0.329 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  332.642 -50.378 450.524 / -0.347 1.013 -0.327> #<bodyset-link #X130e0d78 RLEG_LINK4  3.985 -61.083 260.078 / -0.067 6.365e-11 -0.171> #<bodyset-link #X12a84e10 RLEG_LINK5  3.527 -67.862 220.659 / -0.067 6.365e-11 2.419e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.09 101.957 926.666 / -0.191 -2.749e-08 5.306e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.038 200.145 936.166 / -0.067 -2.794e-08 1.884e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.038 200.145 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.833 197.102 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.859 101.942 567.223 / -1.387 1.251 -1.332> #<bodyset-link #X1316f038 LLEG_LINK4  401.27 118.4 538.96 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.192 106.585 501.083 / -0.1 0.102 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.527 -67.862 120.659 / -0.067 6.365e-11 2.419e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.092 107.776 401.602 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  480.09 101.957 926.666 / -0.191 -2.749e-08 5.306e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.142 3.768 936.166 / -0.067 -2.794e-08 1.887e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.142 3.768 814.166 / -0.067 -2.794e-08 -0.171> #<bodyset-link #X6f14d58 RLEG_LINK2  461.028 2.074 804.312 / -0.126 0.329 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  332.642 -50.378 450.524 / -0.347 1.013 -0.327> #<bodyset-link #X130e0d78 RLEG_LINK4  3.985 -61.083 260.078 / -0.067 6.365e-11 -0.171> #<bodyset-link #X12a84e10 RLEG_LINK5  3.527 -67.862 220.659 / -0.067 6.365e-11 2.419e-09>) (#<bodyset-link #X6ee5ff8 BODY  480.09 101.957 926.666 / -0.191 -2.749e-08 5.306e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  499.038 200.145 936.166 / -0.067 -2.794e-08 1.884e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.038 200.145 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.833 197.102 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.859 101.942 567.223 / -1.387 1.251 -1.332> #<bodyset-link #X1316f038 LLEG_LINK4  401.27 118.4 538.96 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.192 106.585 501.083 / -0.1 0.102 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.69 99.8377 1237.74) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  480.09 101.957 926.666 / -0.191 -2.749e-08 5.306e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  3.527 -67.862 120.659 / -0.067 6.365e-11 2.419e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.092 107.776 401.602 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.142 3.768 936.166 / -0.067 -2.794e-08 1.887e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.142 3.768 814.166 / -0.067 -2.794e-08 -0.171> #<bodyset-link #X6f14d58 RLEG_LINK2  461.028 2.074 804.312 / -0.126 0.329 -0.18> #<bodyset-link #X6f38680 RLEG_LINK3  332.642 -50.378 450.524 / -0.347 1.013 -0.327> #<bodyset-link #X130e0d78 RLEG_LINK4  3.985 -61.083 260.078 / -0.067 6.365e-11 -0.171> #<bodyset-link #X12a84e10 RLEG_LINK5  3.527 -67.862 220.659 / -0.067 6.365e-11 2.419e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  499.038 200.145 936.166 / -0.067 -2.794e-08 1.884e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  499.038 200.145 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.833 197.102 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.859 101.942 567.223 / -1.387 1.251 -1.332> #<bodyset-link #X1316f038 LLEG_LINK4  401.27 118.4 538.96 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.192 106.585 501.083 / -0.1 0.102 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.69 99.8377 1237.74) :target-centroid-pos #f(399.69 99.8377 1237.74) :fix-limbs-target-coords (#<coordinates #X2864a598  14.979 -100.0 120.659 / 1.611e-10 -1.010e-17 5.316e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981885 0.189477 -2.800114e-08 480.09) (-0.189477 0.981885 -8.218217e-19 101.957) (2.749390e-08 5.305571e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint626251424) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.9507 56.3237 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(14.9788 -100.0 120.659) :rot #2f((1.0 -1.611273e-10 -1.001853e-17) (1.611273e-10 1.0 -5.316462e-10) (1.010397e-17 5.316462e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 -2.842171e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (5.421011e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 -2.842171e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (5.421011e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.69 99.8377 1237.74) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 -2.842171e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (5.421011e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.69 99.8377 1237.74) :target-centroid-pos #f(399.69 99.8377 1237.74) :fix-limbs-target-coords (list #<coordinates #X2864a598  14.979 -100.0 120.659 / 1.611e-10 -1.010e-17 5.316e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-17-65-82-07-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-17-65-82-07-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.5715 -31.1974 3.965730e-07)/(34.0215/1)
;; dif-rot : #f(-1.885381e-09 3.573138e-11 0.067332)/(0.067332/0.017453)
;; dif-pos : #f(14.6674 -6.32676 0.035758)/(15.9738/1)
;; dif-rot : #f(-0.00683 -0.101438 0.099896)/(0.142533/0.017453)
;; cog-dif : #f(-0.100598 -5.41145)/(5.41239/5.0)
;;  coords : #<coordinates #X1325f8e0  479.979 101.969 -91.834 / -0.191 -2.749e-08 5.308e-09>
;;  angles : (#f(19.9311 56.3018 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X281db188  15.574 -100.0 123.604 / 1.608e-10 -1.049e-17 5.307e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.133 -67.96 123.604 / -0.067 6.345e-11 2.415e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.124 107.751 401.595 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.979 101.969 926.666 / -0.191 -2.749e-08 5.308e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.021 3.783 936.166 / -0.067 -2.794e-08 1.884e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.021 3.783 814.166 / -0.067 -2.794e-08 -0.172> #<bodyset-link #X6f14d58 RLEG_LINK2  460.906 2.079 804.313 / -0.125 0.321 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  335.499 -51.068 449.562 / -0.356 1.024 -0.335> #<bodyset-link #X130e0d78 RLEG_LINK4  4.592 -61.147 263.017 / -0.067 6.345e-11 -0.172> #<bodyset-link #X12a84e10 RLEG_LINK5  4.133 -67.96 223.604 / -0.067 6.345e-11 2.415e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.979 101.969 926.666 / -0.191 -2.749e-08 5.308e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.937 200.156 936.166 / -0.067 -2.794e-08 1.881e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.937 200.156 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.732 197.112 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.851 101.996 567.314 / -1.386 1.251 -1.331> #<bodyset-link #X1316f038 LLEG_LINK4  401.265 118.383 538.956 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.199 106.564 501.079 / -0.1 0.102 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.133 -67.96 123.604 / -0.067 6.345e-11 2.415e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.124 107.751 401.595 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.979 101.969 926.666 / -0.191 -2.749e-08 5.308e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  461.021 3.783 936.166 / -0.067 -2.794e-08 1.884e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.021 3.783 814.166 / -0.067 -2.794e-08 -0.172> #<bodyset-link #X6f14d58 RLEG_LINK2  460.906 2.079 804.313 / -0.125 0.321 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  335.499 -51.068 449.562 / -0.356 1.024 -0.335> #<bodyset-link #X130e0d78 RLEG_LINK4  4.592 -61.147 263.017 / -0.067 6.345e-11 -0.172> #<bodyset-link #X12a84e10 RLEG_LINK5  4.133 -67.96 223.604 / -0.067 6.345e-11 2.415e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.979 101.969 926.666 / -0.191 -2.749e-08 5.308e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.937 200.156 936.166 / -0.067 -2.794e-08 1.881e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.937 200.156 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.732 197.112 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.851 101.996 567.314 / -1.386 1.251 -1.331> #<bodyset-link #X1316f038 LLEG_LINK4  401.265 118.383 538.956 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.199 106.564 501.079 / -0.1 0.102 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.709 99.8475 1238.16) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.979 101.969 926.666 / -0.191 -2.749e-08 5.308e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.133 -67.96 123.604 / -0.067 6.345e-11 2.415e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.124 107.751 401.595 / -0.1 0.102 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  461.021 3.783 936.166 / -0.067 -2.794e-08 1.884e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  461.021 3.783 814.166 / -0.067 -2.794e-08 -0.172> #<bodyset-link #X6f14d58 RLEG_LINK2  460.906 2.079 804.313 / -0.125 0.321 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  335.499 -51.068 449.562 / -0.356 1.024 -0.335> #<bodyset-link #X130e0d78 RLEG_LINK4  4.592 -61.147 263.017 / -0.067 6.345e-11 -0.172> #<bodyset-link #X12a84e10 RLEG_LINK5  4.133 -67.96 223.604 / -0.067 6.345e-11 2.415e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.937 200.156 936.166 / -0.067 -2.794e-08 1.881e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.937 200.156 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.732 197.112 804.643 / 0.27 -0.802 -0.454> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.851 101.996 567.314 / -1.386 1.251 -1.331> #<bodyset-link #X1316f038 LLEG_LINK4  401.265 118.383 538.956 / -0.1 0.102 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.199 106.564 501.079 / -0.1 0.102 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.709 99.8475 1238.16) :target-centroid-pos #f(399.709 99.8475 1238.16) :fix-limbs-target-coords (#<coordinates #X281db188  15.574 -100.0 123.604 / 1.608e-10 -1.049e-17 5.307e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981865 0.18958 -2.800114e-08 479.979) (-0.18958 0.981865 -8.218217e-19 101.969) (2.749335e-08 5.308460e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint609205904) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.9311 56.3018 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(15.5745 -100.0 123.604) :rot #2f((1.0 -1.608308e-10 -1.040694e-17) (1.608308e-10 1.0 -5.306676e-10) (1.049204e-17 5.306676e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 2.862294e-17 0.0) (-2.775558e-17 1.0 -2.602085e-18 0.0) (-2.862294e-17 2.602085e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 2.862294e-17 0.0) (-2.775558e-17 1.0 -2.602085e-18 0.0) (-2.862294e-17 2.602085e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.709 99.8475 1238.16) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 2.862294e-17 0.0) (-2.775558e-17 1.0 -2.602085e-18 0.0) (-2.862294e-17 2.602085e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.709 99.8475 1238.16) :target-centroid-pos #f(399.709 99.8475 1238.16) :fix-limbs-target-coords (list #<coordinates #X281db188  15.574 -100.0 123.604 / 1.608e-10 -1.049e-17 5.307e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-18-01-19-56-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-18-01-19-56-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.5507 -31.0995 3.959061e-07)/(33.9234/1)
;; dif-rot : #f(-1.882372e-09 3.560729e-11 0.067225)/(0.067225/0.017453)
;; dif-pos : #f(14.632 -6.30697 0.035622)/(15.9335/1)
;; dif-rot : #f(-0.006802 -0.101189 0.099712)/(0.142226/0.017453)
;; cog-dif : #f(-0.099242 -5.39421)/(5.39512/5.0)
;;  coords : #<coordinates #X1325f8e0  479.868 101.98 -91.834 / -0.191 -2.749e-08 5.311e-09>
;;  angles : (#f(19.9109 56.2791 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2596edd0  16.185 -100.0 126.57 / 1.605e-10 -1.089e-17 5.297e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.754 -68.06 126.57 / -0.067 6.325e-11 2.411e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.155 107.725 401.587 / -0.1 0.101 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.868 101.98 926.666 / -0.191 -2.749e-08 5.311e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.9 3.796 936.166 / -0.067 -2.794e-08 1.881e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.9 3.796 814.166 / -0.067 -2.794e-08 -0.172> #<bodyset-link #X6f14d58 RLEG_LINK2  460.784 2.084 804.315 / -0.124 0.313 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  338.293 -51.752 448.65 / -0.365 1.035 -0.343> #<bodyset-link #X130e0d78 RLEG_LINK4  5.215 -61.213 265.977 / -0.067 6.325e-11 -0.172> #<bodyset-link #X12a84e10 RLEG_LINK5  4.754 -68.06 226.57 / -0.067 6.325e-11 2.411e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.868 101.98 926.666 / -0.191 -2.749e-08 5.311e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.837 200.165 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.837 200.165 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.632 197.121 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.842 102.05 567.404 / -1.385 1.251 -1.33> #<bodyset-link #X1316f038 LLEG_LINK4  401.26 118.364 538.952 / -0.1 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.206 106.543 501.074 / -0.1 0.101 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.754 -68.06 126.57 / -0.067 6.325e-11 2.411e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.155 107.725 401.587 / -0.1 0.101 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.868 101.98 926.666 / -0.191 -2.749e-08 5.311e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.9 3.796 936.166 / -0.067 -2.794e-08 1.881e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.9 3.796 814.166 / -0.067 -2.794e-08 -0.172> #<bodyset-link #X6f14d58 RLEG_LINK2  460.784 2.084 804.315 / -0.124 0.313 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  338.293 -51.752 448.65 / -0.365 1.035 -0.343> #<bodyset-link #X130e0d78 RLEG_LINK4  5.215 -61.213 265.977 / -0.067 6.325e-11 -0.172> #<bodyset-link #X12a84e10 RLEG_LINK5  4.754 -68.06 226.57 / -0.067 6.325e-11 2.411e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.868 101.98 926.666 / -0.191 -2.749e-08 5.311e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.837 200.165 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.837 200.165 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.632 197.121 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.842 102.05 567.404 / -1.385 1.251 -1.33> #<bodyset-link #X1316f038 LLEG_LINK4  401.26 118.364 538.952 / -0.1 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.206 106.543 501.074 / -0.1 0.101 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.728 99.8567 1238.59) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.868 101.98 926.666 / -0.191 -2.749e-08 5.311e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  4.754 -68.06 126.57 / -0.067 6.325e-11 2.411e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.155 107.725 401.587 / -0.1 0.101 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.9 3.796 936.166 / -0.067 -2.794e-08 1.881e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.9 3.796 814.166 / -0.067 -2.794e-08 -0.172> #<bodyset-link #X6f14d58 RLEG_LINK2  460.784 2.084 804.315 / -0.124 0.313 -0.181> #<bodyset-link #X6f38680 RLEG_LINK3  338.293 -51.752 448.65 / -0.365 1.035 -0.343> #<bodyset-link #X130e0d78 RLEG_LINK4  5.215 -61.213 265.977 / -0.067 6.325e-11 -0.172> #<bodyset-link #X12a84e10 RLEG_LINK5  4.754 -68.06 226.57 / -0.067 6.325e-11 2.411e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.837 200.165 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.837 200.165 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.632 197.121 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.842 102.05 567.404 / -1.385 1.251 -1.33> #<bodyset-link #X1316f038 LLEG_LINK4  401.26 118.364 538.952 / -0.1 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.206 106.543 501.074 / -0.1 0.101 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.728 99.8567 1238.59) :target-centroid-pos #f(399.728 99.8567 1238.59) :fix-limbs-target-coords (#<coordinates #X2596edd0  16.185 -100.0 126.57 / 1.605e-10 -1.089e-17 5.297e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981845 0.189686 -2.800114e-08 479.868) (-0.189686 0.981845 -8.218226e-19 101.98) (2.749278e-08 5.311414e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint675549096) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.9109 56.2791 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(16.1846 -100.0 126.57) :rot #2f((1.0 -1.605282e-10 -1.080322e-17) (1.605282e-10 1.0 -5.296691e-10) (1.088799e-17 5.296691e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.722053e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.722053e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.728 99.8567 1238.59) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.722053e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.728 99.8567 1238.59) :target-centroid-pos #f(399.728 99.8567 1238.59) :fix-limbs-target-coords (list #<coordinates #X2596edd0  16.185 -100.0 126.57 / 1.605e-10 -1.089e-17 5.297e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-18-35-87-57-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-18-35-87-57-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.5293 -30.9999 3.952250e-07)/(33.8236/1)
;; dif-rot : #f(-1.879305e-09 3.548050e-11 0.067115)/(0.067115/0.017453)
;; dif-pos : #f(14.5971 -6.28709 0.035481)/(15.8935/1)
;; dif-rot : #f(-0.006775 -0.100944 0.099527)/(0.14192/0.017453)
;; cog-dif : #f(-0.097908 -5.37693)/(5.37782/5.0)
;;  coords : #<coordinates #X1325f8e0  479.758 101.99 -91.834 / -0.191 -2.749e-08 5.314e-09>
;;  angles : (#f(19.8901 56.2557 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1471a950  16.809 -100.0 129.555 / 1.602e-10 -1.129e-17 5.287e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  5.389 -68.163 129.555 / -0.067 6.304e-11 2.407e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.186 107.699 401.58 / -0.1 0.101 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.758 101.99 926.666 / -0.191 -2.749e-08 5.314e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.779 3.808 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.779 3.808 814.166 / -0.067 -2.794e-08 -0.173> #<bodyset-link #X6f14d58 RLEG_LINK2  460.663 2.087 804.316 / -0.122 0.305 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  341.027 -52.431 447.785 / -0.374 1.046 -0.351> #<bodyset-link #X130e0d78 RLEG_LINK4  5.852 -61.28 268.956 / -0.067 6.304e-11 -0.173> #<bodyset-link #X12a84e10 RLEG_LINK5  5.389 -68.163 229.555 / -0.067 6.304e-11 2.407e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.758 101.99 926.666 / -0.191 -2.749e-08 5.314e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.738 200.173 936.166 / -0.067 -2.794e-08 1.875e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.738 200.173 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.533 197.129 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.834 102.104 567.493 / -1.384 1.251 -1.329> #<bodyset-link #X1316f038 LLEG_LINK4  401.256 118.346 538.948 / -0.1 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.213 106.522 501.069 / -0.1 0.101 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  5.389 -68.163 129.555 / -0.067 6.304e-11 2.407e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.186 107.699 401.58 / -0.1 0.101 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.758 101.99 926.666 / -0.191 -2.749e-08 5.314e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.779 3.808 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.779 3.808 814.166 / -0.067 -2.794e-08 -0.173> #<bodyset-link #X6f14d58 RLEG_LINK2  460.663 2.087 804.316 / -0.122 0.305 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  341.027 -52.431 447.785 / -0.374 1.046 -0.351> #<bodyset-link #X130e0d78 RLEG_LINK4  5.852 -61.28 268.956 / -0.067 6.304e-11 -0.173> #<bodyset-link #X12a84e10 RLEG_LINK5  5.389 -68.163 229.555 / -0.067 6.304e-11 2.407e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.758 101.99 926.666 / -0.191 -2.749e-08 5.314e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.738 200.173 936.166 / -0.067 -2.794e-08 1.875e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.738 200.173 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.533 197.129 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.834 102.104 567.493 / -1.384 1.251 -1.329> #<bodyset-link #X1316f038 LLEG_LINK4  401.256 118.346 538.948 / -0.1 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.213 106.522 501.069 / -0.1 0.101 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.745 99.8653 1239.03) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.758 101.99 926.666 / -0.191 -2.749e-08 5.314e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  5.389 -68.163 129.555 / -0.067 6.304e-11 2.407e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.186 107.699 401.58 / -0.1 0.101 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.779 3.808 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.779 3.808 814.166 / -0.067 -2.794e-08 -0.173> #<bodyset-link #X6f14d58 RLEG_LINK2  460.663 2.087 804.316 / -0.122 0.305 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  341.027 -52.431 447.785 / -0.374 1.046 -0.351> #<bodyset-link #X130e0d78 RLEG_LINK4  5.852 -61.28 268.956 / -0.067 6.304e-11 -0.173> #<bodyset-link #X12a84e10 RLEG_LINK5  5.389 -68.163 229.555 / -0.067 6.304e-11 2.407e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.738 200.173 936.166 / -0.067 -2.794e-08 1.875e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.738 200.173 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.533 197.129 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.834 102.104 567.493 / -1.384 1.251 -1.329> #<bodyset-link #X1316f038 LLEG_LINK4  401.256 118.346 538.948 / -0.1 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.213 106.522 501.069 / -0.1 0.101 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.745 99.8653 1239.03) :target-centroid-pos #f(399.745 99.8653 1239.03) :fix-limbs-target-coords (#<coordinates #X1471a950  16.809 -100.0 129.555 / 1.602e-10 -1.129e-17 5.287e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981824 0.189793 -2.800114e-08 479.758) (-0.189793 0.981824 -8.218226e-19 101.99) (2.749219e-08 5.314426e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint669456224) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.8901 56.2557 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(16.8092 -100.0 129.555) :rot #2f((1.0 -1.602195e-10 -1.120741e-17) (1.602195e-10 1.0 -5.286508e-10) (1.129183e-17 5.286508e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.336809e-19 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (4.336809e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.336809e-19 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (4.336809e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.745 99.8653 1239.03) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.336809e-19 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (4.336809e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.745 99.8653 1239.03) :target-centroid-pos #f(399.745 99.8653 1239.03) :fix-limbs-target-coords (list #<coordinates #X1471a950  16.809 -100.0 129.555 / 1.602e-10 -1.129e-17 5.287e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-18-71-55-79-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-18-71-55-79-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.5076 -30.8986 3.945300e-07)/(33.7221/1)
;; dif-rot : #f(-1.876185e-09 3.535257e-11 0.067004)/(0.067004/0.017453)
;; dif-pos : #f(14.5625 -6.26714 0.035333)/(15.8538/1)
;; dif-rot : #f(-0.006747 -0.100702 0.099341)/(0.141616/0.017453)
;; cog-dif : #f(-0.096592 -5.35964)/(5.36051/5.0)
;;  coords : #<coordinates #X1325f8e0  479.649 102.0 -91.834 / -0.191 -2.749e-08 5.317e-09>
;;  angles : (#f(19.8689 56.2317 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X13f7cb40  17.448 -100.0 132.559 / 1.599e-10 -1.170e-17 5.276e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.04 -68.266 132.559 / -0.067 6.283e-11 2.402e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.216 107.673 401.573 / -0.099 0.101 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.649 102.0 926.666 / -0.191 -2.749e-08 5.317e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.659 3.819 936.166 / -0.067 -2.794e-08 1.875e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.659 3.819 814.166 / -0.067 -2.794e-08 -0.174> #<bodyset-link #X6f14d58 RLEG_LINK2  460.543 2.09 804.318 / -0.121 0.297 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  343.704 -53.105 446.963 / -0.384 1.056 -0.36> #<bodyset-link #X130e0d78 RLEG_LINK4  6.504 -61.349 271.953 / -0.067 6.283e-11 -0.174> #<bodyset-link #X12a84e10 RLEG_LINK5  6.04 -68.266 232.559 / -0.067 6.283e-11 2.402e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.649 102.0 926.666 / -0.191 -2.749e-08 5.317e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.639 200.18 936.166 / -0.067 -2.794e-08 1.872e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.639 200.18 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.435 197.136 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.825 102.158 567.58 / -1.383 1.251 -1.329> #<bodyset-link #X1316f038 LLEG_LINK4  401.251 118.328 538.944 / -0.099 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.219 106.502 501.065 / -0.099 0.101 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.04 -68.266 132.559 / -0.067 6.283e-11 2.402e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.216 107.673 401.573 / -0.099 0.101 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.649 102.0 926.666 / -0.191 -2.749e-08 5.317e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.659 3.819 936.166 / -0.067 -2.794e-08 1.875e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.659 3.819 814.166 / -0.067 -2.794e-08 -0.174> #<bodyset-link #X6f14d58 RLEG_LINK2  460.543 2.09 804.318 / -0.121 0.297 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  343.704 -53.105 446.963 / -0.384 1.056 -0.36> #<bodyset-link #X130e0d78 RLEG_LINK4  6.504 -61.349 271.953 / -0.067 6.283e-11 -0.174> #<bodyset-link #X12a84e10 RLEG_LINK5  6.04 -68.266 232.559 / -0.067 6.283e-11 2.402e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.649 102.0 926.666 / -0.191 -2.749e-08 5.317e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.639 200.18 936.166 / -0.067 -2.794e-08 1.872e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.639 200.18 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.435 197.136 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.825 102.158 567.58 / -1.383 1.251 -1.329> #<bodyset-link #X1316f038 LLEG_LINK4  401.251 118.328 538.944 / -0.099 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.219 106.502 501.065 / -0.099 0.101 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.761 99.8734 1239.46) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.649 102.0 926.666 / -0.191 -2.749e-08 5.317e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.04 -68.266 132.559 / -0.067 6.283e-11 2.402e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.216 107.673 401.573 / -0.099 0.101 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.659 3.819 936.166 / -0.067 -2.794e-08 1.875e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.659 3.819 814.166 / -0.067 -2.794e-08 -0.174> #<bodyset-link #X6f14d58 RLEG_LINK2  460.543 2.09 804.318 / -0.121 0.297 -0.182> #<bodyset-link #X6f38680 RLEG_LINK3  343.704 -53.105 446.963 / -0.384 1.056 -0.36> #<bodyset-link #X130e0d78 RLEG_LINK4  6.504 -61.349 271.953 / -0.067 6.283e-11 -0.174> #<bodyset-link #X12a84e10 RLEG_LINK5  6.04 -68.266 232.559 / -0.067 6.283e-11 2.402e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.639 200.18 936.166 / -0.067 -2.794e-08 1.872e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.639 200.18 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.435 197.136 804.643 / 0.271 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.825 102.158 567.58 / -1.383 1.251 -1.329> #<bodyset-link #X1316f038 LLEG_LINK4  401.251 118.328 538.944 / -0.099 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.219 106.502 501.065 / -0.099 0.101 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.761 99.8734 1239.46) :target-centroid-pos #f(399.761 99.8734 1239.46) :fix-limbs-target-coords (#<coordinates #X13f7cb40  17.448 -100.0 132.559 / 1.599e-10 -1.170e-17 5.276e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981803 0.189903 -2.800114e-08 479.649) (-0.189903 0.981803 -8.218226e-19 102.0) (2.749160e-08 5.317489e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint624863696) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.8689 56.2317 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(17.4484 -100.0 132.559) :rot #2f((1.0 -1.599049e-10 -1.161950e-17) (1.599049e-10 1.0 -5.276125e-10) (1.170357e-17 5.276125e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -1.292470e-26 -1.776357e-15) (-1.387779e-17 1.0 -4.134893e-25 1.421085e-14) (1.292470e-26 4.134893e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 3.258028e-17 0.0) (-1.387779e-17 1.0 -8.673617e-19 2.842171e-14) (-3.258028e-17 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -1.292470e-26 -1.776357e-15) (-1.387779e-17 1.0 -4.134893e-25 1.421085e-14) (1.292470e-26 4.134893e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 3.258028e-17 0.0) (-1.387779e-17 1.0 -8.673617e-19 2.842171e-14) (-3.258028e-17 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.761 99.8734 1239.46) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -1.292470e-26 -1.776357e-15) (-1.387779e-17 1.0 -4.134893e-25 1.421085e-14) (1.292470e-26 4.134893e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 3.258028e-17 0.0) (-1.387779e-17 1.0 -8.673617e-19 2.842171e-14) (-3.258028e-17 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.761 99.8734 1239.46) :target-centroid-pos #f(399.761 99.8734 1239.46) :fix-limbs-target-coords (list #<coordinates #X13f7cb40  17.448 -100.0 132.559 / 1.599e-10 -1.170e-17 5.276e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-19-05-66-83-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-19-05-66-83-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.4854 -30.7958 3.938233e-07)/(33.619/1)
;; dif-rot : #f(-1.873019e-09 3.522226e-11 0.066891)/(0.066891/0.017453)
;; dif-pos : #f(14.5282 -6.24712 0.03518)/(15.8145/1)
;; dif-rot : #f(-0.00672 -0.100464 0.099153)/(0.141313/0.017453)
;; cog-dif : #f(-0.095293 -5.34234)/(5.34319/5.0)
;;  coords : #<coordinates #X1325f8e0  479.54 102.008 -91.834 / -0.191 -2.749e-08 5.321e-09>
;;  angles : (#f(19.8471 56.2071 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X14244f48  18.102 -100.0 135.58 / 1.596e-10 -1.212e-17 5.266e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.705 -68.372 135.58 / -0.067 6.262e-11 2.398e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.246 107.648 401.567 / -0.099 0.101 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.54 102.008 926.666 / -0.191 -2.749e-08 5.321e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.539 3.83 936.166 / -0.067 -2.794e-08 1.872e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.539 3.83 814.166 / -0.067 -2.794e-08 -0.175> #<bodyset-link #X6f14d58 RLEG_LINK2  460.422 2.092 804.319 / -0.12 0.289 -0.183> #<bodyset-link #X6f38680 RLEG_LINK3  346.328 -53.776 446.183 / -0.393 1.067 -0.369> #<bodyset-link #X130e0d78 RLEG_LINK4  7.171 -61.418 274.969 / -0.067 6.262e-11 -0.175> #<bodyset-link #X12a84e10 RLEG_LINK5  6.705 -68.372 235.58 / -0.067 6.262e-11 2.398e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.54 102.008 926.666 / -0.191 -2.749e-08 5.321e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.541 200.186 936.166 / -0.067 -2.794e-08 1.869e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.541 200.186 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.338 197.142 804.643 / 0.272 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.817 102.212 567.667 / -1.382 1.251 -1.328> #<bodyset-link #X1316f038 LLEG_LINK4  401.246 118.309 538.94 / -0.099 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.226 106.481 501.061 / -0.099 0.101 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.705 -68.372 135.58 / -0.067 6.262e-11 2.398e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.246 107.648 401.567 / -0.099 0.101 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.54 102.008 926.666 / -0.191 -2.749e-08 5.321e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.539 3.83 936.166 / -0.067 -2.794e-08 1.872e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.539 3.83 814.166 / -0.067 -2.794e-08 -0.175> #<bodyset-link #X6f14d58 RLEG_LINK2  460.422 2.092 804.319 / -0.12 0.289 -0.183> #<bodyset-link #X6f38680 RLEG_LINK3  346.328 -53.776 446.183 / -0.393 1.067 -0.369> #<bodyset-link #X130e0d78 RLEG_LINK4  7.171 -61.418 274.969 / -0.067 6.262e-11 -0.175> #<bodyset-link #X12a84e10 RLEG_LINK5  6.705 -68.372 235.58 / -0.067 6.262e-11 2.398e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.54 102.008 926.666 / -0.191 -2.749e-08 5.321e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.541 200.186 936.166 / -0.067 -2.794e-08 1.869e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.541 200.186 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.338 197.142 804.643 / 0.272 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.817 102.212 567.667 / -1.382 1.251 -1.328> #<bodyset-link #X1316f038 LLEG_LINK4  401.246 118.309 538.94 / -0.099 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.226 106.481 501.061 / -0.099 0.101 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.776 99.881 1239.91) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.54 102.008 926.666 / -0.191 -2.749e-08 5.321e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  6.705 -68.372 135.58 / -0.067 6.262e-11 2.398e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.246 107.648 401.567 / -0.099 0.101 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.539 3.83 936.166 / -0.067 -2.794e-08 1.872e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.539 3.83 814.166 / -0.067 -2.794e-08 -0.175> #<bodyset-link #X6f14d58 RLEG_LINK2  460.422 2.092 804.319 / -0.12 0.289 -0.183> #<bodyset-link #X6f38680 RLEG_LINK3  346.328 -53.776 446.183 / -0.393 1.067 -0.369> #<bodyset-link #X130e0d78 RLEG_LINK4  7.171 -61.418 274.969 / -0.067 6.262e-11 -0.175> #<bodyset-link #X12a84e10 RLEG_LINK5  6.705 -68.372 235.58 / -0.067 6.262e-11 2.398e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.541 200.186 936.166 / -0.067 -2.794e-08 1.869e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.541 200.186 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.338 197.142 804.643 / 0.272 -0.803 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.817 102.212 567.667 / -1.382 1.251 -1.328> #<bodyset-link #X1316f038 LLEG_LINK4  401.246 118.309 538.94 / -0.099 0.101 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.226 106.481 501.061 / -0.099 0.101 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.776 99.881 1239.91) :target-centroid-pos #f(399.776 99.881 1239.91) :fix-limbs-target-coords (#<coordinates #X14244f48  18.102 -100.0 135.58 / 1.596e-10 -1.212e-17 5.266e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981781 0.190014 -2.800114e-08 479.54) (-0.190014 0.981781 -8.218221e-19 102.008) (2.749100e-08 5.320598e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint340310176) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.8471 56.2071 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(18.1023 -100.0 135.58) :rot #2f((1.0 -1.595841e-10 -1.203951e-17) (1.595841e-10 1.0 -5.265543e-10) (1.212322e-17 5.265543e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.848918e-18 1.136868e-13) (0.0 1.0 0.0 -2.842171e-14) (-3.848918e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.848918e-18 1.136868e-13) (0.0 1.0 0.0 -2.842171e-14) (-3.848918e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.776 99.881 1239.91) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.848918e-18 1.136868e-13) (0.0 1.0 0.0 -2.842171e-14) (-3.848918e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.776 99.881 1239.91) :target-centroid-pos #f(399.776 99.881 1239.91) :fix-limbs-target-coords (list #<coordinates #X14244f48  18.102 -100.0 135.58 / 1.596e-10 -1.212e-17 5.266e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-19-40-31-11-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-19-40-31-11-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.4629 -30.6915 3.931047e-07)/(33.5144/1)
;; dif-rot : #f(-1.869810e-09 3.508931e-11 0.066776)/(0.066776/0.017453)
;; dif-pos : #f(14.4943 -6.22705 0.035023)/(15.7754/1)
;; dif-rot : #f(-0.006693 -0.100227 0.098965)/(0.141012/0.017453)
;; cog-dif : #f(-0.094009 -5.32505)/(5.32588/5.0)
;;  coords : #<coordinates #X1325f8e0  479.431 102.016 -91.834 / -0.191 -2.749e-08 5.324e-09>
;;  angles : (#f(19.825 56.182 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2fd89338  18.771 -100.0 138.619 / 1.593e-10 -1.255e-17 5.255e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  7.386 -68.479 138.619 / -0.067 6.241e-11 2.394e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.276 107.622 401.56 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.431 102.016 926.666 / -0.191 -2.749e-08 5.324e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.419 3.84 936.166 / -0.067 -2.794e-08 1.868e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.419 3.84 814.166 / -0.067 -2.794e-08 -0.176> #<bodyset-link #X6f14d58 RLEG_LINK2  460.302 2.092 804.321 / -0.118 0.282 -0.183> #<bodyset-link #X6f38680 RLEG_LINK3  348.901 -54.443 445.443 / -0.403 1.077 -0.378> #<bodyset-link #X130e0d78 RLEG_LINK4  7.854 -61.488 278.001 / -0.067 6.241e-11 -0.176> #<bodyset-link #X12a84e10 RLEG_LINK5  7.386 -68.479 238.619 / -0.067 6.241e-11 2.394e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.431 102.016 926.666 / -0.191 -2.749e-08 5.324e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.444 200.192 936.166 / -0.067 -2.794e-08 1.866e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.444 200.192 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.241 197.147 804.643 / 0.272 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.809 102.266 567.753 / -1.381 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.242 118.291 538.937 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.233 106.459 501.056 / -0.099 0.1 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  7.386 -68.479 138.619 / -0.067 6.241e-11 2.394e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.276 107.622 401.56 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.431 102.016 926.666 / -0.191 -2.749e-08 5.324e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.419 3.84 936.166 / -0.067 -2.794e-08 1.868e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.419 3.84 814.166 / -0.067 -2.794e-08 -0.176> #<bodyset-link #X6f14d58 RLEG_LINK2  460.302 2.092 804.321 / -0.118 0.282 -0.183> #<bodyset-link #X6f38680 RLEG_LINK3  348.901 -54.443 445.443 / -0.403 1.077 -0.378> #<bodyset-link #X130e0d78 RLEG_LINK4  7.854 -61.488 278.001 / -0.067 6.241e-11 -0.176> #<bodyset-link #X12a84e10 RLEG_LINK5  7.386 -68.479 238.619 / -0.067 6.241e-11 2.394e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.431 102.016 926.666 / -0.191 -2.749e-08 5.324e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.444 200.192 936.166 / -0.067 -2.794e-08 1.866e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.444 200.192 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.241 197.147 804.643 / 0.272 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.809 102.266 567.753 / -1.381 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.242 118.291 538.937 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.233 106.459 501.056 / -0.099 0.1 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.791 99.8882 1240.35) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.431 102.016 926.666 / -0.191 -2.749e-08 5.324e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  7.386 -68.479 138.619 / -0.067 6.241e-11 2.394e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.276 107.622 401.56 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.419 3.84 936.166 / -0.067 -2.794e-08 1.868e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.419 3.84 814.166 / -0.067 -2.794e-08 -0.176> #<bodyset-link #X6f14d58 RLEG_LINK2  460.302 2.092 804.321 / -0.118 0.282 -0.183> #<bodyset-link #X6f38680 RLEG_LINK3  348.901 -54.443 445.443 / -0.403 1.077 -0.378> #<bodyset-link #X130e0d78 RLEG_LINK4  7.854 -61.488 278.001 / -0.067 6.241e-11 -0.176> #<bodyset-link #X12a84e10 RLEG_LINK5  7.386 -68.479 238.619 / -0.067 6.241e-11 2.394e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.444 200.192 936.166 / -0.067 -2.794e-08 1.866e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.444 200.192 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.241 197.147 804.643 / 0.272 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.809 102.266 567.753 / -1.381 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.242 118.291 538.937 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.233 106.459 501.056 / -0.099 0.1 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.791 99.8882 1240.35) :target-centroid-pos #f(399.791 99.8882 1240.35) :fix-limbs-target-coords (#<coordinates #X2fd89338  18.771 -100.0 138.619 / 1.593e-10 -1.255e-17 5.255e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.98176 0.190126 -2.800114e-08 479.431) (-0.190126 0.98176 -8.218226e-19 102.016) (2.749039e-08 5.323748e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint331061616) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.825 56.182 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(18.771 -100.0 138.619) :rot #2f((1.0 -1.592574e-10 -1.246745e-17) (1.592574e-10 1.0 -5.254761e-10) (1.255080e-17 5.254761e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -3.877409e-26 0.0) (-2.775558e-17 1.0 -4.137923e-25 -1.421085e-14) (3.877409e-26 4.137923e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.667843e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.667843e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -3.877409e-26 0.0) (-2.775558e-17 1.0 -4.137923e-25 -1.421085e-14) (3.877409e-26 4.137923e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.667843e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.667843e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.791 99.8882 1240.35) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -3.877409e-26 0.0) (-2.775558e-17 1.0 -4.137923e-25 -1.421085e-14) (3.877409e-26 4.137923e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.667843e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.667843e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.791 99.8882 1240.35) :target-centroid-pos #f(399.791 99.8882 1240.35) :fix-limbs-target-coords (list #<coordinates #X2fd89338  18.771 -100.0 138.619 / 1.593e-10 -1.255e-17 5.255e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-19-74-55-33-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-19-74-55-33-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.4401 -30.5858 3.923768e-07)/(33.4085/1)
;; dif-rot : #f(-1.866565e-09 3.495514e-11 0.06666)/(0.06666/0.017453)
;; dif-pos : #f(14.4607 -6.20694 0.034862)/(15.7366/1)
;; dif-rot : #f(-0.006666 -0.099993 0.098776)/(0.140711/0.017453)
;; cog-dif : #f(-0.092739 -5.30775)/(5.30856/5.0)
;;  coords : #<coordinates #X1325f8e0  479.323 102.023 -91.834 / -0.191 -2.749e-08 5.327e-09>
;;  angles : (#f(19.8024 56.1563 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X3108e940  19.455 -100.0 141.674 / 1.589e-10 -1.299e-17 5.244e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  8.082 -68.587 141.674 / -0.067 6.219e-11 2.390e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.306 107.596 401.553 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.323 102.023 926.666 / -0.191 -2.749e-08 5.327e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.299 3.849 936.166 / -0.067 -2.794e-08 1.865e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.299 3.849 814.166 / -0.067 -2.794e-08 -0.177> #<bodyset-link #X6f14d58 RLEG_LINK2  460.182 2.092 804.323 / -0.117 0.275 -0.184> #<bodyset-link #X6f38680 RLEG_LINK3  351.427 -55.107 444.739 / -0.414 1.087 -0.388> #<bodyset-link #X130e0d78 RLEG_LINK4  8.551 -61.56 281.049 / -0.067 6.219e-11 -0.177> #<bodyset-link #X12a84e10 RLEG_LINK5  8.082 -68.587 241.674 / -0.067 6.219e-11 2.390e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.323 102.023 926.666 / -0.191 -2.749e-08 5.327e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.347 200.197 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.347 200.197 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.144 197.152 804.643 / 0.272 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.801 102.32 567.838 / -1.381 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.237 118.272 538.933 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.239 106.438 501.052 / -0.099 0.1 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  8.082 -68.587 141.674 / -0.067 6.219e-11 2.390e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.306 107.596 401.553 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.323 102.023 926.666 / -0.191 -2.749e-08 5.327e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.299 3.849 936.166 / -0.067 -2.794e-08 1.865e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.299 3.849 814.166 / -0.067 -2.794e-08 -0.177> #<bodyset-link #X6f14d58 RLEG_LINK2  460.182 2.092 804.323 / -0.117 0.275 -0.184> #<bodyset-link #X6f38680 RLEG_LINK3  351.427 -55.107 444.739 / -0.414 1.087 -0.388> #<bodyset-link #X130e0d78 RLEG_LINK4  8.551 -61.56 281.049 / -0.067 6.219e-11 -0.177> #<bodyset-link #X12a84e10 RLEG_LINK5  8.082 -68.587 241.674 / -0.067 6.219e-11 2.390e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.323 102.023 926.666 / -0.191 -2.749e-08 5.327e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.347 200.197 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.347 200.197 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.144 197.152 804.643 / 0.272 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.801 102.32 567.838 / -1.381 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.237 118.272 538.933 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.239 106.438 501.052 / -0.099 0.1 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.804 99.8949 1240.8) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.323 102.023 926.666 / -0.191 -2.749e-08 5.327e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  8.082 -68.587 141.674 / -0.067 6.219e-11 2.390e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.306 107.596 401.553 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.299 3.849 936.166 / -0.067 -2.794e-08 1.865e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.299 3.849 814.166 / -0.067 -2.794e-08 -0.177> #<bodyset-link #X6f14d58 RLEG_LINK2  460.182 2.092 804.323 / -0.117 0.275 -0.184> #<bodyset-link #X6f38680 RLEG_LINK3  351.427 -55.107 444.739 / -0.414 1.087 -0.388> #<bodyset-link #X130e0d78 RLEG_LINK4  8.551 -61.56 281.049 / -0.067 6.219e-11 -0.177> #<bodyset-link #X12a84e10 RLEG_LINK5  8.082 -68.587 241.674 / -0.067 6.219e-11 2.390e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.347 200.197 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.347 200.197 814.166 / -0.067 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.144 197.152 804.643 / 0.272 -0.804 -0.455> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.801 102.32 567.838 / -1.381 1.251 -1.327> #<bodyset-link #X1316f038 LLEG_LINK4  401.237 118.272 538.933 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.239 106.438 501.052 / -0.099 0.1 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.804 99.8949 1240.8) :target-centroid-pos #f(399.804 99.8949 1240.8) :fix-limbs-target-coords (#<coordinates #X3108e940  19.455 -100.0 141.674 / 1.589e-10 -1.299e-17 5.244e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981738 0.19024 -2.800114e-08 479.323) (-0.19024 0.981738 -8.218221e-19 102.023) (2.748977e-08 5.326934e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint337599504) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.8024 56.1563 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(19.4545 -100.0 141.674) :rot #2f((1.0 -1.589245e-10 -1.290332e-17) (1.589245e-10 1.0 -5.243779e-10) (1.298630e-17 5.243779e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.804 99.8949 1240.8) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.804 99.8949 1240.8) :target-centroid-pos #f(399.804 99.8949 1240.8) :fix-limbs-target-coords (list #<coordinates #X3108e940  19.455 -100.0 141.674 / 1.589e-10 -1.299e-17 5.244e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-20-10-56-11-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-20-10-56-11-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.417 -30.4788 3.916389e-07)/(33.3012/1)
;; dif-rot : #f(-1.863285e-09 3.481835e-11 0.066543)/(0.066543/0.017453)
;; dif-pos : #f(14.4273 -6.18679 0.034697)/(15.698/1)
;; dif-rot : #f(-0.006638 -0.099761 0.098586)/(0.140412/0.017453)
;; cog-dif : #f(-0.091482 -5.29047)/(5.29126/5.0)
;;  coords : #<coordinates #X1325f8e0  479.216 102.029 -91.834 / -0.192 -2.749e-08 5.330e-09>
;;  angles : (#f(19.7795 56.1302 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X12082db0  20.153 -100.0 144.745 / 1.586e-10 -1.343e-17 5.233e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  8.792 -68.697 144.745 / -0.067 6.197e-11 2.385e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.335 107.57 401.547 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.215 102.029 926.666 / -0.192 -2.749e-08 5.330e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.18 3.858 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.18 3.858 814.166 / -0.067 -2.794e-08 -0.178> #<bodyset-link #X6f14d58 RLEG_LINK2  460.062 2.092 804.324 / -0.116 0.268 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  353.907 -55.768 444.07 / -0.425 1.097 -0.398> #<bodyset-link #X130e0d78 RLEG_LINK4  9.263 -61.632 284.113 / -0.067 6.197e-11 -0.178> #<bodyset-link #X12a84e10 RLEG_LINK5  8.792 -68.697 244.745 / -0.067 6.197e-11 2.385e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.215 102.029 926.666 / -0.192 -2.749e-08 5.330e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.251 200.201 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.251 200.201 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.048 197.156 804.643 / 0.273 -0.804 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.792 102.375 567.922 / -1.38 1.251 -1.326> #<bodyset-link #X1316f038 LLEG_LINK4  401.233 118.253 538.93 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.246 106.417 501.048 / -0.099 0.1 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  8.792 -68.697 144.745 / -0.067 6.197e-11 2.385e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.335 107.57 401.547 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.215 102.029 926.666 / -0.192 -2.749e-08 5.330e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.18 3.858 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.18 3.858 814.166 / -0.067 -2.794e-08 -0.178> #<bodyset-link #X6f14d58 RLEG_LINK2  460.062 2.092 804.324 / -0.116 0.268 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  353.907 -55.768 444.07 / -0.425 1.097 -0.398> #<bodyset-link #X130e0d78 RLEG_LINK4  9.263 -61.632 284.113 / -0.067 6.197e-11 -0.178> #<bodyset-link #X12a84e10 RLEG_LINK5  8.792 -68.697 244.745 / -0.067 6.197e-11 2.385e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.215 102.029 926.666 / -0.192 -2.749e-08 5.330e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.251 200.201 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.251 200.201 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.048 197.156 804.643 / 0.273 -0.804 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.792 102.375 567.922 / -1.38 1.251 -1.326> #<bodyset-link #X1316f038 LLEG_LINK4  401.233 118.253 538.93 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.246 106.417 501.048 / -0.099 0.1 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.817 99.9013 1241.26) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.215 102.029 926.666 / -0.192 -2.749e-08 5.330e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  8.792 -68.697 144.745 / -0.067 6.197e-11 2.385e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.335 107.57 401.547 / -0.099 0.1 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.18 3.858 936.166 / -0.067 -2.794e-08 1.862e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.18 3.858 814.166 / -0.067 -2.794e-08 -0.178> #<bodyset-link #X6f14d58 RLEG_LINK2  460.062 2.092 804.324 / -0.116 0.268 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  353.907 -55.768 444.07 / -0.425 1.097 -0.398> #<bodyset-link #X130e0d78 RLEG_LINK4  9.263 -61.632 284.113 / -0.067 6.197e-11 -0.178> #<bodyset-link #X12a84e10 RLEG_LINK5  8.792 -68.697 244.745 / -0.067 6.197e-11 2.385e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.251 200.201 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.251 200.201 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  498.048 197.156 804.643 / 0.273 -0.804 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.792 102.375 567.922 / -1.38 1.251 -1.326> #<bodyset-link #X1316f038 LLEG_LINK4  401.233 118.253 538.93 / -0.099 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.246 106.417 501.048 / -0.099 0.1 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.817 99.9013 1241.26) :target-centroid-pos #f(399.817 99.9013 1241.26) :fix-limbs-target-coords (#<coordinates #X12082db0  20.153 -100.0 144.745 / 1.586e-10 -1.343e-17 5.233e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981715 0.190355 -2.800114e-08 479.216) (-0.190355 0.981715 -8.218226e-19 102.029) (2.748915e-08 5.330154e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint823162048) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.7795 56.1302 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(20.153 -100.0 144.745) :rot #2f((1.0 -1.585856e-10 -1.334713e-17) (1.585856e-10 1.0 -5.232597e-10) (1.342973e-17 5.232597e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.168404e-19 1.136868e-13) (0.0 1.0 0.0 2.842171e-14) (2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.168404e-19 1.136868e-13) (0.0 1.0 0.0 2.842171e-14) (2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.817 99.9013 1241.26) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 1.776357e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.168404e-19 1.136868e-13) (0.0 1.0 0.0 2.842171e-14) (2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.817 99.9013 1241.26) :target-centroid-pos #f(399.817 99.9013 1241.26) :fix-limbs-target-coords (list #<coordinates #X12082db0  20.153 -100.0 144.745 / 1.586e-10 -1.343e-17 5.233e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-20-55-78-03-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-20-55-78-03-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.3936 -30.3705 3.908938e-07)/(33.1927/1)
;; dif-rot : #f(-1.859975e-09 3.468152e-11 0.066425)/(0.066425/0.017453)
;; dif-pos : #f(14.3942 -6.16662 0.034529)/(15.6596/1)
;; dif-rot : #f(-0.006611 -0.099532 0.098395)/(0.140114/0.017453)
;; cog-dif : #f(-0.090237 -5.2732)/(5.27397/5.0)
;;  coords : #<coordinates #X1325f8e0  479.108 102.035 -91.834 / -0.192 -2.749e-08 5.333e-09>
;;  angles : (#f(19.7562 56.1037 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X260ac168  20.867 -100.0 147.83 / 1.582e-10 -1.388e-17 5.221e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  9.518 -68.808 147.83 / -0.066 6.175e-11 2.381e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.364 107.544 401.54 / -0.098 0.1 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.108 102.035 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.061 3.866 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.061 3.866 814.166 / -0.066 -2.794e-08 -0.179> #<bodyset-link #X6f14d58 RLEG_LINK2  459.943 2.09 804.326 / -0.115 0.261 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  356.344 -56.427 443.434 / -0.436 1.106 -0.408> #<bodyset-link #X130e0d78 RLEG_LINK4  9.991 -61.705 287.192 / -0.066 6.175e-11 -0.179> #<bodyset-link #X12a84e10 RLEG_LINK5  9.518 -68.808 247.83 / -0.066 6.175e-11 2.381e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.108 102.035 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.155 200.204 936.166 / -0.066 -2.794e-08 1.856e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.155 200.204 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.953 197.159 804.644 / 0.273 -0.804 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.784 102.429 568.006 / -1.379 1.251 -1.325> #<bodyset-link #X1316f038 LLEG_LINK4  401.228 118.234 538.926 / -0.098 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.252 106.396 501.043 / -0.098 0.1 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  9.518 -68.808 147.83 / -0.066 6.175e-11 2.381e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.364 107.544 401.54 / -0.098 0.1 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.108 102.035 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  460.061 3.866 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.061 3.866 814.166 / -0.066 -2.794e-08 -0.179> #<bodyset-link #X6f14d58 RLEG_LINK2  459.943 2.09 804.326 / -0.115 0.261 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  356.344 -56.427 443.434 / -0.436 1.106 -0.408> #<bodyset-link #X130e0d78 RLEG_LINK4  9.991 -61.705 287.192 / -0.066 6.175e-11 -0.179> #<bodyset-link #X12a84e10 RLEG_LINK5  9.518 -68.808 247.83 / -0.066 6.175e-11 2.381e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.108 102.035 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.155 200.204 936.166 / -0.066 -2.794e-08 1.856e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.155 200.204 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.953 197.159 804.644 / 0.273 -0.804 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.784 102.429 568.006 / -1.379 1.251 -1.325> #<bodyset-link #X1316f038 LLEG_LINK4  401.228 118.234 538.926 / -0.098 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.252 106.396 501.043 / -0.098 0.1 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.829 99.9072 1241.72) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.108 102.035 926.666 / -0.192 -2.749e-08 5.333e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  9.518 -68.808 147.83 / -0.066 6.175e-11 2.381e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.364 107.544 401.54 / -0.098 0.1 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  460.061 3.866 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  460.061 3.866 814.166 / -0.066 -2.794e-08 -0.179> #<bodyset-link #X6f14d58 RLEG_LINK2  459.943 2.09 804.326 / -0.115 0.261 -0.185> #<bodyset-link #X6f38680 RLEG_LINK3  356.344 -56.427 443.434 / -0.436 1.106 -0.408> #<bodyset-link #X130e0d78 RLEG_LINK4  9.991 -61.705 287.192 / -0.066 6.175e-11 -0.179> #<bodyset-link #X12a84e10 RLEG_LINK5  9.518 -68.808 247.83 / -0.066 6.175e-11 2.381e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.155 200.204 936.166 / -0.066 -2.794e-08 1.856e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.155 200.204 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.953 197.159 804.644 / 0.273 -0.804 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.784 102.429 568.006 / -1.379 1.251 -1.325> #<bodyset-link #X1316f038 LLEG_LINK4  401.228 118.234 538.926 / -0.098 0.1 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.252 106.396 501.043 / -0.098 0.1 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.829 99.9072 1241.72) :target-centroid-pos #f(399.829 99.9072 1241.72) :fix-limbs-target-coords (#<coordinates #X260ac168  20.867 -100.0 147.83 / 1.582e-10 -1.388e-17 5.221e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981693 0.190471 -2.800114e-08 479.108) (-0.190471 0.981693 -8.218234e-19 102.035) (2.748852e-08 5.333403e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint293080672) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.7562 56.1037 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(20.8665 -100.0 147.83) :rot #2f((1.0 -1.582407e-10 -1.379888e-17) (1.582407e-10 1.0 -5.221215e-10) (1.388110e-17 5.221215e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.740497e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-3.740497e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.740497e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-3.740497e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.829 99.9072 1241.72) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.740497e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-3.740497e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.829 99.9072 1241.72) :target-centroid-pos #f(399.829 99.9072 1241.72) :fix-limbs-target-coords (list #<coordinates #X260ac168  20.867 -100.0 147.83 / 1.582e-10 -1.388e-17 5.221e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-20-91-60-96-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-20-91-60-96-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.37 -30.2609 3.901408e-07)/(33.0829/1)
;; dif-rot : #f(-1.856637e-09 3.454248e-11 0.066306)/(0.066306/0.017453)
;; dif-pos : #f(14.3613 -6.14643 0.034359)/(15.6214/1)
;; dif-rot : #f(-0.006584 -0.099304 0.098204)/(0.139816/0.017453)
;; cog-dif : #f(-0.089001 -5.25595)/(5.2567/5.0)
;;  coords : #<coordinates #X1325f8e0  479.001 102.04 -91.834 / -0.192 -2.749e-08 5.337e-09>
;;  angles : (#f(19.7326 56.0768 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X263f4d88  21.595 -100.0 150.93 / 1.579e-10 -1.434e-17 5.210e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  10.259 -68.92 150.93 / -0.066 6.153e-11 2.376e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.393 107.518 401.534 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.001 102.04 926.666 / -0.192 -2.749e-08 5.337e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.942 3.873 936.166 / -0.066 -2.794e-08 1.855e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.942 3.873 814.166 / -0.066 -2.794e-08 -0.18> #<bodyset-link #X6f14d58 RLEG_LINK2  459.824 2.088 804.328 / -0.113 0.254 -0.186> #<bodyset-link #X6f38680 RLEG_LINK3  358.739 -57.085 442.83 / -0.447 1.116 -0.419> #<bodyset-link #X130e0d78 RLEG_LINK4  10.734 -61.779 290.285 / -0.066 6.153e-11 -0.18> #<bodyset-link #X12a84e10 RLEG_LINK5  10.259 -68.92 250.93 / -0.066 6.153e-11 2.376e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.001 102.04 926.666 / -0.192 -2.749e-08 5.337e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.06 200.207 936.166 / -0.066 -2.794e-08 1.853e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.06 200.207 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.858 197.162 804.644 / 0.273 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.776 102.483 568.089 / -1.378 1.251 -1.324> #<bodyset-link #X1316f038 LLEG_LINK4  401.224 118.215 538.923 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.259 106.375 501.039 / -0.098 0.099 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  10.259 -68.92 150.93 / -0.066 6.153e-11 2.376e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.393 107.518 401.534 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  479.001 102.04 926.666 / -0.192 -2.749e-08 5.337e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.942 3.873 936.166 / -0.066 -2.794e-08 1.855e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.942 3.873 814.166 / -0.066 -2.794e-08 -0.18> #<bodyset-link #X6f14d58 RLEG_LINK2  459.824 2.088 804.328 / -0.113 0.254 -0.186> #<bodyset-link #X6f38680 RLEG_LINK3  358.739 -57.085 442.83 / -0.447 1.116 -0.419> #<bodyset-link #X130e0d78 RLEG_LINK4  10.734 -61.779 290.285 / -0.066 6.153e-11 -0.18> #<bodyset-link #X12a84e10 RLEG_LINK5  10.259 -68.92 250.93 / -0.066 6.153e-11 2.376e-09>) (#<bodyset-link #X6ee5ff8 BODY  479.001 102.04 926.666 / -0.192 -2.749e-08 5.337e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  498.06 200.207 936.166 / -0.066 -2.794e-08 1.853e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.06 200.207 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.858 197.162 804.644 / 0.273 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.776 102.483 568.089 / -1.378 1.251 -1.324> #<bodyset-link #X1316f038 LLEG_LINK4  401.224 118.215 538.923 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.259 106.375 501.039 / -0.098 0.099 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.84 99.9128 1242.18) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  479.001 102.04 926.666 / -0.192 -2.749e-08 5.337e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  10.259 -68.92 150.93 / -0.066 6.153e-11 2.376e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.393 107.518 401.534 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  459.942 3.873 936.166 / -0.066 -2.794e-08 1.855e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.942 3.873 814.166 / -0.066 -2.794e-08 -0.18> #<bodyset-link #X6f14d58 RLEG_LINK2  459.824 2.088 804.328 / -0.113 0.254 -0.186> #<bodyset-link #X6f38680 RLEG_LINK3  358.739 -57.085 442.83 / -0.447 1.116 -0.419> #<bodyset-link #X130e0d78 RLEG_LINK4  10.734 -61.779 290.285 / -0.066 6.153e-11 -0.18> #<bodyset-link #X12a84e10 RLEG_LINK5  10.259 -68.92 250.93 / -0.066 6.153e-11 2.376e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  498.06 200.207 936.166 / -0.066 -2.794e-08 1.853e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  498.06 200.207 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.858 197.162 804.644 / 0.273 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.776 102.483 568.089 / -1.378 1.251 -1.324> #<bodyset-link #X1316f038 LLEG_LINK4  401.224 118.215 538.923 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.259 106.375 501.039 / -0.098 0.099 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.84 99.9128 1242.18) :target-centroid-pos #f(399.84 99.9128 1242.18) :fix-limbs-target-coords (#<coordinates #X263f4d88  21.595 -100.0 150.93 / 1.579e-10 -1.434e-17 5.210e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.98167 0.190588 -2.800114e-08 479.001) (-0.190588 0.98167 -8.218217e-19 102.04) (2.748788e-08 5.336680e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint307323024) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.7326 56.0768 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(21.5951 -100.0 150.93) :rot #2f((1.0 -1.578897e-10 -1.425858e-17) (1.578897e-10 1.0 -5.209633e-10) (1.434040e-17 5.209633e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.396793e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (6.396793e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.396793e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (6.396793e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.84 99.9128 1242.18) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.396793e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (6.396793e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.84 99.9128 1242.18) :target-centroid-pos #f(399.84 99.9128 1242.18) :fix-limbs-target-coords (list #<coordinates #X263f4d88  21.595 -100.0 150.93 / 1.579e-10 -1.434e-17 5.210e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-21-26-75-80-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-21-26-75-80-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.3462 -30.1502 3.893811e-07)/(32.972/1)
;; dif-rot : #f(-1.853274e-09 3.440236e-11 0.066186)/(0.066186/0.017453)
;; dif-pos : #f(14.3286 -6.12622 0.034185)/(15.5833/1)
;; dif-rot : #f(-0.006557 -0.099077 0.098012)/(0.139519/0.017453)
;; cog-dif : #f(-0.087775 -5.23872)/(5.23945/5.0)
;;  coords : #<coordinates #X1325f8e0  478.894 102.045 -91.834 / -0.192 -2.749e-08 5.340e-09>
;;  angles : (#f(19.7088 56.0495 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X242b1c98  22.339 -100.0 154.043 / 1.575e-10 -1.481e-17 5.198e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  11.016 -69.033 154.043 / -0.066 6.131e-11 2.372e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.422 107.492 401.527 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.894 102.045 926.666 / -0.192 -2.749e-08 5.340e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.824 3.881 936.166 / -0.066 -2.794e-08 1.852e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.824 3.881 814.166 / -0.066 -2.794e-08 -0.181> #<bodyset-link #X6f14d58 RLEG_LINK2  459.705 2.085 804.33 / -0.112 0.247 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  361.095 -57.741 442.257 / -0.459 1.125 -0.43> #<bodyset-link #X130e0d78 RLEG_LINK4  11.492 -61.853 293.391 / -0.066 6.131e-11 -0.181> #<bodyset-link #X12a84e10 RLEG_LINK5  11.016 -69.033 254.043 / -0.066 6.131e-11 2.372e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.894 102.045 926.666 / -0.192 -2.749e-08 5.340e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.965 200.21 936.166 / -0.066 -2.794e-08 1.849e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.965 200.21 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.763 197.164 804.644 / 0.274 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.768 102.538 568.172 / -1.377 1.251 -1.324> #<bodyset-link #X1316f038 LLEG_LINK4  401.22 118.196 538.92 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.265 106.354 501.035 / -0.098 0.099 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  11.016 -69.033 154.043 / -0.066 6.131e-11 2.372e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.422 107.492 401.527 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.894 102.045 926.666 / -0.192 -2.749e-08 5.340e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.824 3.881 936.166 / -0.066 -2.794e-08 1.852e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.824 3.881 814.166 / -0.066 -2.794e-08 -0.181> #<bodyset-link #X6f14d58 RLEG_LINK2  459.705 2.085 804.33 / -0.112 0.247 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  361.095 -57.741 442.257 / -0.459 1.125 -0.43> #<bodyset-link #X130e0d78 RLEG_LINK4  11.492 -61.853 293.391 / -0.066 6.131e-11 -0.181> #<bodyset-link #X12a84e10 RLEG_LINK5  11.016 -69.033 254.043 / -0.066 6.131e-11 2.372e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.894 102.045 926.666 / -0.192 -2.749e-08 5.340e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.965 200.21 936.166 / -0.066 -2.794e-08 1.849e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.965 200.21 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.763 197.164 804.644 / 0.274 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.768 102.538 568.172 / -1.377 1.251 -1.324> #<bodyset-link #X1316f038 LLEG_LINK4  401.22 118.196 538.92 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.265 106.354 501.035 / -0.098 0.099 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.85 99.918 1242.65) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.894 102.045 926.666 / -0.192 -2.749e-08 5.340e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  11.016 -69.033 154.043 / -0.066 6.131e-11 2.372e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.422 107.492 401.527 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  459.824 3.881 936.166 / -0.066 -2.794e-08 1.852e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.824 3.881 814.166 / -0.066 -2.794e-08 -0.181> #<bodyset-link #X6f14d58 RLEG_LINK2  459.705 2.085 804.33 / -0.112 0.247 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  361.095 -57.741 442.257 / -0.459 1.125 -0.43> #<bodyset-link #X130e0d78 RLEG_LINK4  11.492 -61.853 293.391 / -0.066 6.131e-11 -0.181> #<bodyset-link #X12a84e10 RLEG_LINK5  11.016 -69.033 254.043 / -0.066 6.131e-11 2.372e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.965 200.21 936.166 / -0.066 -2.794e-08 1.849e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.965 200.21 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.763 197.164 804.644 / 0.274 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.768 102.538 568.172 / -1.377 1.251 -1.324> #<bodyset-link #X1316f038 LLEG_LINK4  401.22 118.196 538.92 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.265 106.354 501.035 / -0.098 0.099 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.85 99.918 1242.65) :target-centroid-pos #f(399.85 99.918 1242.65) :fix-limbs-target-coords (#<coordinates #X242b1c98  22.339 -100.0 154.043 / 1.575e-10 -1.481e-17 5.198e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981647 0.190706 -2.800114e-08 478.894) (-0.190706 0.981647 -8.218221e-19 102.045) (2.748724e-08 5.339982e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint634156240) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.7088 56.0495 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(22.3389 -100.0 154.043) :rot #2f((1.0 -1.575326e-10 -1.472621e-17) (1.575326e-10 1.0 -5.197851e-10) (1.480763e-17 5.197851e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 -2.842171e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.114194e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-2.114194e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 -2.842171e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.114194e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-2.114194e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.85 99.918 1242.65) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -1.776357e-15) (0.0 1.0 0.0 -2.842171e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.114194e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-2.114194e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.85 99.918 1242.65) :target-centroid-pos #f(399.85 99.918 1242.65) :fix-limbs-target-coords (list #<coordinates #X242b1c98  22.339 -100.0 154.043 / 1.575e-10 -1.481e-17 5.198e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-21-59-89-87-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-21-59-89-87-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.3222 -30.0383 3.886140e-07)/(32.86/1)
;; dif-rot : #f(-1.849886e-09 3.425856e-11 0.066065)/(0.066065/0.017453)
;; dif-pos : #f(14.2961 -6.106 0.03401)/(15.5455/1)
;; dif-rot : #f(-0.006531 -0.098852 0.09782)/(0.139223/0.017453)
;; cog-dif : #f(-0.086558 -5.22151)/(5.22222/5.0)
;;  coords : #<coordinates #X1325f8e0  478.788 102.05 -91.834 / -0.192 -2.749e-08 5.343e-09>
;;  angles : (#f(19.6846 56.0219 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X12302fa8  23.098 -100.0 157.169 / 1.572e-10 -1.528e-17 5.186e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  11.788 -69.148 157.169 / -0.066 6.109e-11 2.367e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.45 107.466 401.521 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.788 102.05 926.666 / -0.192 -2.749e-08 5.343e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.705 3.887 936.166 / -0.066 -2.794e-08 1.849e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.705 3.887 814.166 / -0.066 -2.794e-08 -0.182> #<bodyset-link #X6f14d58 RLEG_LINK2  459.586 2.082 804.331 / -0.111 0.24 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  363.412 -58.395 441.712 / -0.471 1.134 -0.442> #<bodyset-link #X130e0d78 RLEG_LINK4  12.265 -61.928 296.509 / -0.066 6.109e-11 -0.182> #<bodyset-link #X12a84e10 RLEG_LINK5  11.788 -69.148 257.169 / -0.066 6.109e-11 2.367e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.788 102.05 926.666 / -0.192 -2.749e-08 5.343e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.87 200.212 936.166 / -0.066 -2.794e-08 1.846e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.87 200.212 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.669 197.166 804.644 / 0.274 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.76 102.592 568.254 / -1.376 1.25 -1.323> #<bodyset-link #X1316f038 LLEG_LINK4  401.215 118.176 538.916 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.271 106.333 501.031 / -0.098 0.099 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  11.788 -69.148 157.169 / -0.066 6.109e-11 2.367e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.45 107.466 401.521 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.788 102.05 926.666 / -0.192 -2.749e-08 5.343e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.705 3.887 936.166 / -0.066 -2.794e-08 1.849e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.705 3.887 814.166 / -0.066 -2.794e-08 -0.182> #<bodyset-link #X6f14d58 RLEG_LINK2  459.586 2.082 804.331 / -0.111 0.24 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  363.412 -58.395 441.712 / -0.471 1.134 -0.442> #<bodyset-link #X130e0d78 RLEG_LINK4  12.265 -61.928 296.509 / -0.066 6.109e-11 -0.182> #<bodyset-link #X12a84e10 RLEG_LINK5  11.788 -69.148 257.169 / -0.066 6.109e-11 2.367e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.788 102.05 926.666 / -0.192 -2.749e-08 5.343e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.87 200.212 936.166 / -0.066 -2.794e-08 1.846e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.87 200.212 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.669 197.166 804.644 / 0.274 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.76 102.592 568.254 / -1.376 1.25 -1.323> #<bodyset-link #X1316f038 LLEG_LINK4  401.215 118.176 538.916 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.271 106.333 501.031 / -0.098 0.099 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.86 99.923 1243.12) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.788 102.05 926.666 / -0.192 -2.749e-08 5.343e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  11.788 -69.148 157.169 / -0.066 6.109e-11 2.367e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.45 107.466 401.521 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  459.705 3.887 936.166 / -0.066 -2.794e-08 1.849e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.705 3.887 814.166 / -0.066 -2.794e-08 -0.182> #<bodyset-link #X6f14d58 RLEG_LINK2  459.586 2.082 804.331 / -0.111 0.24 -0.187> #<bodyset-link #X6f38680 RLEG_LINK3  363.412 -58.395 441.712 / -0.471 1.134 -0.442> #<bodyset-link #X130e0d78 RLEG_LINK4  12.265 -61.928 296.509 / -0.066 6.109e-11 -0.182> #<bodyset-link #X12a84e10 RLEG_LINK5  11.788 -69.148 257.169 / -0.066 6.109e-11 2.367e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.87 200.212 936.166 / -0.066 -2.794e-08 1.846e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.87 200.212 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.669 197.166 804.644 / 0.274 -0.805 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.76 102.592 568.254 / -1.376 1.25 -1.323> #<bodyset-link #X1316f038 LLEG_LINK4  401.215 118.176 538.916 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.271 106.333 501.031 / -0.098 0.099 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.86 99.923 1243.12) :target-centroid-pos #f(399.86 99.923 1243.12) :fix-limbs-target-coords (#<coordinates #X12302fa8  23.098 -100.0 157.169 / 1.572e-10 -1.528e-17 5.186e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981624 0.190825 -2.800114e-08 478.788) (-0.190825 0.981624 -8.218221e-19 102.05) (2.748659e-08 5.343306e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint632862600) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.6846 56.0219 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(23.0978 -100.0 157.169) :rot #2f((1.0 -1.571694e-10 -1.520179e-17) (1.571694e-10 1.0 -5.185868e-10) (1.528280e-17 5.185868e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.047314e-19 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-7.047314e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.047314e-19 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-7.047314e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.86 99.923 1243.12) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.047314e-19 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-7.047314e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.86 99.923 1243.12) :target-centroid-pos #f(399.86 99.923 1243.12) :fix-limbs-target-coords (list #<coordinates #X12302fa8  23.098 -100.0 157.169 / 1.572e-10 -1.528e-17 5.186e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-21-93-46-40-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-21-93-46-40-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.298 -29.9252 3.878417e-07)/(32.7468/1)
;; dif-rot : #f(-1.846479e-09 3.411687e-11 0.065943)/(0.065943/0.017453)
;; dif-pos : #f(14.2637 -6.08577 0.033833)/(15.5078/1)
;; dif-rot : #f(-0.006504 -0.098629 0.097627)/(0.138928/0.017453)
;; cog-dif : #f(-0.085348 -5.20432)/(5.20502/5.0)
;;  coords : #<coordinates #X1325f8e0  478.681 102.054 -91.834 / -0.192 -2.749e-08 5.347e-09>
;;  angles : (#f(19.6602 55.994 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X11795590  23.872 -100.0 160.306 / 1.568e-10 -1.577e-17 5.174e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  12.575 -69.264 160.306 / -0.066 6.086e-11 2.363e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.478 107.441 401.515 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.681 102.054 926.666 / -0.192 -2.749e-08 5.347e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.587 3.894 936.166 / -0.066 -2.794e-08 1.845e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.587 3.894 814.166 / -0.066 -2.794e-08 -0.183> #<bodyset-link #X6f14d58 RLEG_LINK2  459.467 2.079 804.333 / -0.11 0.234 -0.188> #<bodyset-link #X6f38680 RLEG_LINK3  365.692 -59.049 441.195 / -0.484 1.143 -0.454> #<bodyset-link #X130e0d78 RLEG_LINK4  13.054 -62.004 299.639 / -0.066 6.086e-11 -0.183> #<bodyset-link #X12a84e10 RLEG_LINK5  12.575 -69.264 260.306 / -0.066 6.086e-11 2.363e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.681 102.054 926.666 / -0.192 -2.749e-08 5.347e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.776 200.214 936.166 / -0.066 -2.794e-08 1.842e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.776 200.214 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.575 197.168 804.644 / 0.274 -0.806 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.752 102.647 568.335 / -1.375 1.25 -1.322> #<bodyset-link #X1316f038 LLEG_LINK4  401.211 118.157 538.913 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.278 106.312 501.027 / -0.098 0.099 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  12.575 -69.264 160.306 / -0.066 6.086e-11 2.363e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.478 107.441 401.515 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.681 102.054 926.666 / -0.192 -2.749e-08 5.347e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.587 3.894 936.166 / -0.066 -2.794e-08 1.845e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.587 3.894 814.166 / -0.066 -2.794e-08 -0.183> #<bodyset-link #X6f14d58 RLEG_LINK2  459.467 2.079 804.333 / -0.11 0.234 -0.188> #<bodyset-link #X6f38680 RLEG_LINK3  365.692 -59.049 441.195 / -0.484 1.143 -0.454> #<bodyset-link #X130e0d78 RLEG_LINK4  13.054 -62.004 299.639 / -0.066 6.086e-11 -0.183> #<bodyset-link #X12a84e10 RLEG_LINK5  12.575 -69.264 260.306 / -0.066 6.086e-11 2.363e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.681 102.054 926.666 / -0.192 -2.749e-08 5.347e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.776 200.214 936.166 / -0.066 -2.794e-08 1.842e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.776 200.214 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.575 197.168 804.644 / 0.274 -0.806 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.752 102.647 568.335 / -1.375 1.25 -1.322> #<bodyset-link #X1316f038 LLEG_LINK4  401.211 118.157 538.913 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.278 106.312 501.027 / -0.098 0.099 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.869 99.9276 1243.6) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.681 102.054 926.666 / -0.192 -2.749e-08 5.347e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  12.575 -69.264 160.306 / -0.066 6.086e-11 2.363e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.478 107.441 401.515 / -0.098 0.099 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  459.587 3.894 936.166 / -0.066 -2.794e-08 1.845e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.587 3.894 814.166 / -0.066 -2.794e-08 -0.183> #<bodyset-link #X6f14d58 RLEG_LINK2  459.467 2.079 804.333 / -0.11 0.234 -0.188> #<bodyset-link #X6f38680 RLEG_LINK3  365.692 -59.049 441.195 / -0.484 1.143 -0.454> #<bodyset-link #X130e0d78 RLEG_LINK4  13.054 -62.004 299.639 / -0.066 6.086e-11 -0.183> #<bodyset-link #X12a84e10 RLEG_LINK5  12.575 -69.264 260.306 / -0.066 6.086e-11 2.363e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.776 200.214 936.166 / -0.066 -2.794e-08 1.842e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.776 200.214 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.575 197.168 804.644 / 0.274 -0.806 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.752 102.647 568.335 / -1.375 1.25 -1.322> #<bodyset-link #X1316f038 LLEG_LINK4  401.211 118.157 538.913 / -0.098 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.278 106.312 501.027 / -0.098 0.099 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.869 99.9276 1243.6) :target-centroid-pos #f(399.869 99.9276 1243.6) :fix-limbs-target-coords (#<coordinates #X11795590  23.872 -100.0 160.306 / 1.568e-10 -1.577e-17 5.174e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981601 0.190944 -2.800114e-08 478.681) (-0.190944 0.981601 -8.218226e-19 102.054) (2.748594e-08 5.346652e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint371411808) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.6602 55.994 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(23.8721 -100.0 160.306) :rot #2f((1.0 -1.568002e-10 -1.568530e-17) (1.568002e-10 1.0 -5.173686e-10) (1.576590e-17 5.173686e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -3.877409e-26 0.0) (-2.775558e-17 1.0 -4.137923e-25 0.0) (3.877409e-26 4.137923e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.204170e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (5.204170e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -3.877409e-26 0.0) (-2.775558e-17 1.0 -4.137923e-25 0.0) (3.877409e-26 4.137923e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.204170e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (5.204170e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.869 99.9276 1243.6) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -3.877409e-26 0.0) (-2.775558e-17 1.0 -4.137923e-25 0.0) (3.877409e-26 4.137923e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.204170e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (5.204170e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.869 99.9276 1243.6) :target-centroid-pos #f(399.869 99.9276 1243.6) :fix-limbs-target-coords (list #<coordinates #X11795590  23.872 -100.0 160.306 / 1.568e-10 -1.577e-17 5.174e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-22-29-19-06-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-22-29-19-06-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.2736 -29.8111 3.870634e-07)/(32.6327/1)
;; dif-rot : #f(-1.843050e-09 3.397221e-11 0.065821)/(0.065821/0.017453)
;; dif-pos : #f(14.2316 -6.06554 0.033654)/(15.4703/1)
;; dif-rot : #f(-0.006477 -0.098407 0.097434)/(0.138633/0.017453)
;; cog-dif : #f(-0.084145 -5.18716)/(5.18784/5.0)
;;  coords : #<coordinates #X1325f8e0  478.575 102.057 -91.834 / -0.192 -2.749e-08 5.350e-09>
;;  angles : (#f(19.6356 55.9658 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X113d5488  24.662 -100.0 163.455 / 1.564e-10 -1.626e-17 5.161e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  13.377 -69.38 163.455 / -0.066 6.063e-11 2.358e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.507 107.415 401.508 / -0.097 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.575 102.057 926.666 / -0.192 -2.749e-08 5.350e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.469 3.9 936.166 / -0.066 -2.794e-08 1.842e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.469 3.9 814.166 / -0.066 -2.794e-08 -0.184> #<bodyset-link #X6f14d58 RLEG_LINK2  459.349 2.074 804.335 / -0.109 0.227 -0.189> #<bodyset-link #X6f38680 RLEG_LINK3  367.937 -59.702 440.704 / -0.497 1.152 -0.467> #<bodyset-link #X130e0d78 RLEG_LINK4  13.859 -62.08 302.78 / -0.066 6.063e-11 -0.184> #<bodyset-link #X12a84e10 RLEG_LINK5  13.377 -69.38 263.455 / -0.066 6.063e-11 2.358e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.575 102.057 926.666 / -0.192 -2.749e-08 5.350e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.682 200.215 936.166 / -0.066 -2.794e-08 1.839e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.682 200.215 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.481 197.169 804.644 / 0.275 -0.806 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.745 102.701 568.417 / -1.375 1.25 -1.322> #<bodyset-link #X1316f038 LLEG_LINK4  401.207 118.138 538.91 / -0.097 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.284 106.29 501.023 / -0.097 0.099 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  13.377 -69.38 163.455 / -0.066 6.063e-11 2.358e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.507 107.415 401.508 / -0.097 0.099 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.575 102.057 926.666 / -0.192 -2.749e-08 5.350e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.469 3.9 936.166 / -0.066 -2.794e-08 1.842e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.469 3.9 814.166 / -0.066 -2.794e-08 -0.184> #<bodyset-link #X6f14d58 RLEG_LINK2  459.349 2.074 804.335 / -0.109 0.227 -0.189> #<bodyset-link #X6f38680 RLEG_LINK3  367.937 -59.702 440.704 / -0.497 1.152 -0.467> #<bodyset-link #X130e0d78 RLEG_LINK4  13.859 -62.08 302.78 / -0.066 6.063e-11 -0.184> #<bodyset-link #X12a84e10 RLEG_LINK5  13.377 -69.38 263.455 / -0.066 6.063e-11 2.358e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.575 102.057 926.666 / -0.192 -2.749e-08 5.350e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.682 200.215 936.166 / -0.066 -2.794e-08 1.839e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.682 200.215 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.481 197.169 804.644 / 0.275 -0.806 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.745 102.701 568.417 / -1.375 1.25 -1.322> #<bodyset-link #X1316f038 LLEG_LINK4  401.207 118.138 538.91 / -0.097 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.284 106.29 501.023 / -0.097 0.099 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.878 99.932 1244.08) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.575 102.057 926.666 / -0.192 -2.749e-08 5.350e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  13.377 -69.38 163.455 / -0.066 6.063e-11 2.358e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.507 107.415 401.508 / -0.097 0.099 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  459.469 3.9 936.166 / -0.066 -2.794e-08 1.842e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.469 3.9 814.166 / -0.066 -2.794e-08 -0.184> #<bodyset-link #X6f14d58 RLEG_LINK2  459.349 2.074 804.335 / -0.109 0.227 -0.189> #<bodyset-link #X6f38680 RLEG_LINK3  367.937 -59.702 440.704 / -0.497 1.152 -0.467> #<bodyset-link #X130e0d78 RLEG_LINK4  13.859 -62.08 302.78 / -0.066 6.063e-11 -0.184> #<bodyset-link #X12a84e10 RLEG_LINK5  13.377 -69.38 263.455 / -0.066 6.063e-11 2.358e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.682 200.215 936.166 / -0.066 -2.794e-08 1.839e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.682 200.215 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.481 197.169 804.644 / 0.275 -0.806 -0.456> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.745 102.701 568.417 / -1.375 1.25 -1.322> #<bodyset-link #X1316f038 LLEG_LINK4  401.207 118.138 538.91 / -0.097 0.099 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.284 106.29 501.023 / -0.097 0.099 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.878 99.932 1244.08) :target-centroid-pos #f(399.878 99.932 1244.08) :fix-limbs-target-coords (#<coordinates #X113d5488  24.662 -100.0 163.455 / 1.564e-10 -1.626e-17 5.161e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981578 0.191064 -2.800114e-08 478.575) (-0.191064 0.981578 -8.218221e-19 102.057) (2.748529e-08 5.350017e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint292561480) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.6356 55.9658 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(24.6616 -100.0 163.455) :rot #2f((1.0 -1.564250e-10 -1.617674e-17) (1.564250e-10 1.0 -5.161304e-10) (1.625692e-17 5.161304e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.391019e-18 0.0) (0.0 1.0 0.0 0.0) (4.391019e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.391019e-18 0.0) (0.0 1.0 0.0 0.0) (4.391019e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.878 99.932 1244.08) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.391019e-18 0.0) (0.0 1.0 0.0 0.0) (4.391019e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.878 99.932 1244.08) :target-centroid-pos #f(399.878 99.932 1244.08) :fix-limbs-target-coords (list #<coordinates #X113d5488  24.662 -100.0 163.455 / 1.564e-10 -1.626e-17 5.161e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-22-63-90-01-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-22-63-90-01-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.2491 -29.6959 3.862807e-07)/(32.5175/1)
;; dif-rot : #f(-1.839605e-09 3.382577e-11 0.065698)/(0.065698/0.017453)
;; dif-pos : #f(14.1995 -6.0453 0.033474)/(15.4329/1)
;; dif-rot : #f(-0.006451 -0.098186 0.097241)/(0.138339/0.017453)
;; cog-dif : #f(-0.082948 -5.17002)/(5.17069/5.0)
;;  coords : #<coordinates #X1325f8e0  478.47 102.061 -91.834 / -0.192 -2.748e-08 5.353e-09>
;;  angles : (#f(19.6107 55.9373 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X286e34a8  25.467 -100.0 166.614 / 1.560e-10 -1.676e-17 5.149e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  14.196 -69.498 166.614 / -0.066 6.041e-11 2.353e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.535 107.389 401.502 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.47 102.061 926.666 / -0.192 -2.748e-08 5.353e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.351 3.905 936.166 / -0.066 -2.794e-08 1.838e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.351 3.905 814.166 / -0.066 -2.794e-08 -0.185> #<bodyset-link #X6f14d58 RLEG_LINK2  459.23 2.07 804.337 / -0.108 0.221 -0.19> #<bodyset-link #X6f38680 RLEG_LINK3  370.147 -60.354 440.239 / -0.511 1.161 -0.48> #<bodyset-link #X130e0d78 RLEG_LINK4  14.679 -62.156 305.931 / -0.066 6.041e-11 -0.185> #<bodyset-link #X12a84e10 RLEG_LINK5  14.196 -69.498 266.614 / -0.066 6.041e-11 2.353e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.47 102.061 926.666 / -0.192 -2.748e-08 5.353e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.588 200.216 936.166 / -0.066 -2.794e-08 1.836e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.588 200.216 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.388 197.17 804.644 / 0.275 -0.806 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.737 102.756 568.497 / -1.374 1.25 -1.321> #<bodyset-link #X1316f038 LLEG_LINK4  401.202 118.118 538.907 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.291 106.269 501.019 / -0.097 0.098 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  14.196 -69.498 166.614 / -0.066 6.041e-11 2.353e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.535 107.389 401.502 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.47 102.061 926.666 / -0.192 -2.748e-08 5.353e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.351 3.905 936.166 / -0.066 -2.794e-08 1.838e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.351 3.905 814.166 / -0.066 -2.794e-08 -0.185> #<bodyset-link #X6f14d58 RLEG_LINK2  459.23 2.07 804.337 / -0.108 0.221 -0.19> #<bodyset-link #X6f38680 RLEG_LINK3  370.147 -60.354 440.239 / -0.511 1.161 -0.48> #<bodyset-link #X130e0d78 RLEG_LINK4  14.679 -62.156 305.931 / -0.066 6.041e-11 -0.185> #<bodyset-link #X12a84e10 RLEG_LINK5  14.196 -69.498 266.614 / -0.066 6.041e-11 2.353e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.47 102.061 926.666 / -0.192 -2.748e-08 5.353e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.588 200.216 936.166 / -0.066 -2.794e-08 1.836e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.588 200.216 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.388 197.17 804.644 / 0.275 -0.806 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.737 102.756 568.497 / -1.374 1.25 -1.321> #<bodyset-link #X1316f038 LLEG_LINK4  401.202 118.118 538.907 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.291 106.269 501.019 / -0.097 0.098 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.886 99.9361 1244.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.47 102.061 926.666 / -0.192 -2.748e-08 5.353e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  14.196 -69.498 166.614 / -0.066 6.041e-11 2.353e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.535 107.389 401.502 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  459.351 3.905 936.166 / -0.066 -2.794e-08 1.838e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.351 3.905 814.166 / -0.066 -2.794e-08 -0.185> #<bodyset-link #X6f14d58 RLEG_LINK2  459.23 2.07 804.337 / -0.108 0.221 -0.19> #<bodyset-link #X6f38680 RLEG_LINK3  370.147 -60.354 440.239 / -0.511 1.161 -0.48> #<bodyset-link #X130e0d78 RLEG_LINK4  14.679 -62.156 305.931 / -0.066 6.041e-11 -0.185> #<bodyset-link #X12a84e10 RLEG_LINK5  14.196 -69.498 266.614 / -0.066 6.041e-11 2.353e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.588 200.216 936.166 / -0.066 -2.794e-08 1.836e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.588 200.216 814.166 / -0.066 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.388 197.17 804.644 / 0.275 -0.806 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.737 102.756 568.497 / -1.374 1.25 -1.321> #<bodyset-link #X1316f038 LLEG_LINK4  401.202 118.118 538.907 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.291 106.269 501.019 / -0.097 0.098 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.886 99.9361 1244.57) :target-centroid-pos #f(399.886 99.9361 1244.57) :fix-limbs-target-coords (#<coordinates #X286e34a8  25.467 -100.0 166.614 / 1.560e-10 -1.676e-17 5.149e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981554 0.191185 -2.800114e-08 478.47) (-0.191185 0.981554 -8.218213e-19 102.061) (2.748463e-08 5.353399e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint138142024) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.6107 55.9373 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(25.4666 -100.0 166.614) :rot #2f((1.0 -1.560436e-10 -1.667610e-17) (1.560436e-10 1.0 -5.148723e-10) (1.675586e-17 5.148723e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.794708e-19 0.0) (0.0 1.0 0.0 0.0) (-3.794708e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.794708e-19 0.0) (0.0 1.0 0.0 0.0) (-3.794708e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.886 99.9361 1244.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.794708e-19 0.0) (0.0 1.0 0.0 0.0) (-3.794708e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.886 99.9361 1244.57) :target-centroid-pos #f(399.886 99.9361 1244.57) :fix-limbs-target-coords (list #<coordinates #X286e34a8  25.467 -100.0 166.614 / 1.560e-10 -1.676e-17 5.149e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-22-99-57-80-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-22-99-57-80-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.2245 -29.5797 3.854925e-07)/(32.4013/1)
;; dif-rot : #f(-1.836143e-09 3.367745e-11 0.065574)/(0.065574/0.017453)
;; dif-pos : #f(14.1676 -6.02508 0.033293)/(15.3956/1)
;; dif-rot : #f(-0.006424 -0.097966 0.097047)/(0.138046/0.017453)
;; cog-dif : #f(-0.081756 -5.15291)/(5.15356/5.0)
;;  coords : #<coordinates #X1325f8e0  478.364 102.064 -91.834 / -0.192 -2.748e-08 5.357e-09>
;;  angles : (#f(19.5857 55.9086 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X274e4c68  26.287 -100.0 169.782 / 1.557e-10 -1.726e-17 5.136e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  15.029 -69.617 169.782 / -0.066 6.018e-11 2.348e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.563 107.363 401.496 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.364 102.064 926.666 / -0.192 -2.748e-08 5.357e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.233 3.911 936.166 / -0.066 -2.794e-08 1.835e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.233 3.911 814.166 / -0.066 -2.794e-08 -0.186> #<bodyset-link #X6f14d58 RLEG_LINK2  459.112 2.065 804.339 / -0.107 0.215 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  372.325 -61.007 439.798 / -0.525 1.17 -0.493> #<bodyset-link #X130e0d78 RLEG_LINK4  15.514 -62.233 309.091 / -0.066 6.018e-11 -0.186> #<bodyset-link #X12a84e10 RLEG_LINK5  15.029 -69.617 269.782 / -0.066 6.018e-11 2.348e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.364 102.064 926.666 / -0.192 -2.748e-08 5.357e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.495 200.217 936.166 / -0.065 -2.794e-08 1.832e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.495 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.295 197.171 804.644 / 0.275 -0.806 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.729 102.81 568.578 / -1.373 1.25 -1.32> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.099 538.903 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.297 106.248 501.015 / -0.097 0.098 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  15.029 -69.617 169.782 / -0.066 6.018e-11 2.348e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.563 107.363 401.496 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.364 102.064 926.666 / -0.192 -2.748e-08 5.357e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.233 3.911 936.166 / -0.066 -2.794e-08 1.835e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.233 3.911 814.166 / -0.066 -2.794e-08 -0.186> #<bodyset-link #X6f14d58 RLEG_LINK2  459.112 2.065 804.339 / -0.107 0.215 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  372.325 -61.007 439.798 / -0.525 1.17 -0.493> #<bodyset-link #X130e0d78 RLEG_LINK4  15.514 -62.233 309.091 / -0.066 6.018e-11 -0.186> #<bodyset-link #X12a84e10 RLEG_LINK5  15.029 -69.617 269.782 / -0.066 6.018e-11 2.348e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.364 102.064 926.666 / -0.192 -2.748e-08 5.357e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.495 200.217 936.166 / -0.065 -2.794e-08 1.832e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.495 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.295 197.171 804.644 / 0.275 -0.806 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.729 102.81 568.578 / -1.373 1.25 -1.32> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.099 538.903 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.297 106.248 501.015 / -0.097 0.098 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.894 99.9399 1245.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.364 102.064 926.666 / -0.192 -2.748e-08 5.357e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  15.029 -69.617 169.782 / -0.066 6.018e-11 2.348e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.563 107.363 401.496 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  459.233 3.911 936.166 / -0.066 -2.794e-08 1.835e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.233 3.911 814.166 / -0.066 -2.794e-08 -0.186> #<bodyset-link #X6f14d58 RLEG_LINK2  459.112 2.065 804.339 / -0.107 0.215 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  372.325 -61.007 439.798 / -0.525 1.17 -0.493> #<bodyset-link #X130e0d78 RLEG_LINK4  15.514 -62.233 309.091 / -0.066 6.018e-11 -0.186> #<bodyset-link #X12a84e10 RLEG_LINK5  15.029 -69.617 269.782 / -0.066 6.018e-11 2.348e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.495 200.217 936.166 / -0.065 -2.794e-08 1.832e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.495 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.295 197.171 804.644 / 0.275 -0.806 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.729 102.81 568.578 / -1.373 1.25 -1.32> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.099 538.903 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.297 106.248 501.015 / -0.097 0.098 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.894 99.9399 1245.06) :target-centroid-pos #f(399.894 99.9399 1245.06) :fix-limbs-target-coords (#<coordinates #X274e4c68  26.287 -100.0 169.782 / 1.557e-10 -1.726e-17 5.136e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.98153 0.191306 -2.800114e-08 478.364) (-0.191306 0.98153 -8.218230e-19 102.064) (2.748397e-08 5.356798e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint131820432) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.5857 55.9086 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(26.2869 -100.0 169.782) :rot #2f((1.0 -1.556563e-10 -1.718337e-17) (1.556563e-10 1.0 -5.135942e-10) (1.726270e-17 5.135942e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -1.147804e-41 0.0) (-2.775558e-17 1.0 -8.270796e-25 0.0) (-1.147804e-41 8.270796e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (-5.963112e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -1.147804e-41 0.0) (-2.775558e-17 1.0 -8.270796e-25 0.0) (-1.147804e-41 8.270796e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (-5.963112e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.894 99.9399 1245.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -1.147804e-41 0.0) (-2.775558e-17 1.0 -8.270796e-25 0.0) (-1.147804e-41 8.270796e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (-5.963112e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.894 99.9399 1245.06) :target-centroid-pos #f(399.894 99.9399 1245.06) :fix-limbs-target-coords (list #<coordinates #X274e4c68  26.287 -100.0 169.782 / 1.557e-10 -1.726e-17 5.136e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-23-35-31-20-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-23-35-31-20-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.1997 -29.4624 3.847005e-07)/(32.2841/1)
;; dif-rot : #f(-1.832664e-09 3.353068e-11 0.06545)/(0.06545/0.017453)
;; dif-pos : #f(14.1359 -6.00485 0.033111)/(15.3584/1)
;; dif-rot : #f(-0.006398 -0.097747 0.096853)/(0.137753/0.017453)
;; cog-dif : #f(-0.08057 -5.13583)/(5.13646/5.0)
;;  coords : #<coordinates #X1325f8e0  478.259 102.067 -91.834 / -0.193 -2.748e-08 5.360e-09>
;;  angles : (#f(19.5605 55.8797 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X31bd1908  27.123 -100.0 172.959 / 1.553e-10 -1.778e-17 5.123e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  15.878 -69.737 172.959 / -0.065 5.995e-11 2.344e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.59 107.337 401.49 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.259 102.067 926.666 / -0.193 -2.748e-08 5.360e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.116 3.916 936.166 / -0.065 -2.794e-08 1.831e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.116 3.916 814.166 / -0.065 -2.794e-08 -0.187> #<bodyset-link #X6f14d58 RLEG_LINK2  458.994 2.059 804.341 / -0.106 0.209 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  374.471 -61.659 439.381 / -0.54 1.178 -0.508> #<bodyset-link #X130e0d78 RLEG_LINK4  16.365 -62.311 312.26 / -0.065 5.995e-11 -0.187> #<bodyset-link #X12a84e10 RLEG_LINK5  15.878 -69.737 272.959 / -0.065 5.995e-11 2.344e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.259 102.067 926.666 / -0.193 -2.748e-08 5.360e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.401 200.217 936.166 / -0.065 -2.794e-08 1.829e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.401 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.202 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.721 102.865 568.658 / -1.372 1.25 -1.32> #<bodyset-link #X1316f038 LLEG_LINK4  401.194 118.08 538.9 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.303 106.227 501.011 / -0.097 0.098 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  15.878 -69.737 172.959 / -0.065 5.995e-11 2.344e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.59 107.337 401.49 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.259 102.067 926.666 / -0.193 -2.748e-08 5.360e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  459.116 3.916 936.166 / -0.065 -2.794e-08 1.831e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.116 3.916 814.166 / -0.065 -2.794e-08 -0.187> #<bodyset-link #X6f14d58 RLEG_LINK2  458.994 2.059 804.341 / -0.106 0.209 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  374.471 -61.659 439.381 / -0.54 1.178 -0.508> #<bodyset-link #X130e0d78 RLEG_LINK4  16.365 -62.311 312.26 / -0.065 5.995e-11 -0.187> #<bodyset-link #X12a84e10 RLEG_LINK5  15.878 -69.737 272.959 / -0.065 5.995e-11 2.344e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.259 102.067 926.666 / -0.193 -2.748e-08 5.360e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.401 200.217 936.166 / -0.065 -2.794e-08 1.829e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.401 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.202 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.721 102.865 568.658 / -1.372 1.25 -1.32> #<bodyset-link #X1316f038 LLEG_LINK4  401.194 118.08 538.9 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.303 106.227 501.011 / -0.097 0.098 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.901 99.9435 1245.55) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.259 102.067 926.666 / -0.193 -2.748e-08 5.360e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  15.878 -69.737 172.959 / -0.065 5.995e-11 2.344e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.59 107.337 401.49 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  459.116 3.916 936.166 / -0.065 -2.794e-08 1.831e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  459.116 3.916 814.166 / -0.065 -2.794e-08 -0.187> #<bodyset-link #X6f14d58 RLEG_LINK2  458.994 2.059 804.341 / -0.106 0.209 -0.191> #<bodyset-link #X6f38680 RLEG_LINK3  374.471 -61.659 439.381 / -0.54 1.178 -0.508> #<bodyset-link #X130e0d78 RLEG_LINK4  16.365 -62.311 312.26 / -0.065 5.995e-11 -0.187> #<bodyset-link #X12a84e10 RLEG_LINK5  15.878 -69.737 272.959 / -0.065 5.995e-11 2.344e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.401 200.217 936.166 / -0.065 -2.794e-08 1.829e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.401 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.202 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.721 102.865 568.658 / -1.372 1.25 -1.32> #<bodyset-link #X1316f038 LLEG_LINK4  401.194 118.08 538.9 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.303 106.227 501.011 / -0.097 0.098 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.901 99.9435 1245.55) :target-centroid-pos #f(399.901 99.9435 1245.55) :fix-limbs-target-coords (#<coordinates #X31bd1908  27.123 -100.0 172.959 / 1.553e-10 -1.778e-17 5.123e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981507 0.191428 -2.800114e-08 478.259) (-0.191428 0.981507 -8.218230e-19 102.067) (2.748330e-08 5.360212e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint662304688) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.5605 55.8797 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(27.1228 -100.0 172.959) :rot #2f((1.0 -1.552629e-10 -1.769854e-17) (1.552629e-10 1.0 -5.122962e-10) (1.777743e-17 5.122962e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.613633e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.613633e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.613633e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.613633e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.901 99.9435 1245.55) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.613633e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.613633e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.901 99.9435 1245.55) :target-centroid-pos #f(399.901 99.9435 1245.55) :fix-limbs-target-coords (list #<coordinates #X31bd1908  27.123 -100.0 172.959 / 1.553e-10 -1.778e-17 5.123e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-23-82-26-86-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-23-82-26-86-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.1748 -29.3441 3.839037e-07)/(32.166/1)
;; dif-rot : #f(-1.829170e-09 3.337938e-11 0.065325)/(0.065325/0.017453)
;; dif-pos : #f(14.1042 -5.98464 0.032928)/(15.3214/1)
;; dif-rot : #f(-0.006371 -0.097529 0.096658)/(0.13746/0.017453)
;; cog-dif : #f(-0.079387 -5.11878)/(5.1194/5.0)
;;  coords : #<coordinates #X1325f8e0  478.153 102.069 -91.834 / -0.193 -2.748e-08 5.364e-09>
;;  angles : (#f(19.5351 55.8506 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X24849130  27.974 -100.0 176.143 / 1.549e-10 -1.830e-17 5.110e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  16.743 -69.858 176.143 / -0.065 5.972e-11 2.339e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.618 107.312 401.484 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.153 102.069 926.666 / -0.193 -2.748e-08 5.364e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.998 3.921 936.166 / -0.065 -2.794e-08 1.828e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.998 3.921 814.166 / -0.065 -2.794e-08 -0.188> #<bodyset-link #X6f14d58 RLEG_LINK2  458.876 2.054 804.343 / -0.105 0.203 -0.192> #<bodyset-link #X6f38680 RLEG_LINK3  376.586 -62.311 438.986 / -0.555 1.186 -0.522> #<bodyset-link #X130e0d78 RLEG_LINK4  17.232 -62.389 315.437 / -0.065 5.972e-11 -0.188> #<bodyset-link #X12a84e10 RLEG_LINK5  16.743 -69.858 276.143 / -0.065 5.972e-11 2.339e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.153 102.069 926.666 / -0.193 -2.748e-08 5.364e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.309 200.218 936.166 / -0.065 -2.794e-08 1.825e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.309 200.218 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.11 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.713 102.92 568.737 / -1.371 1.25 -1.319> #<bodyset-link #X1316f038 LLEG_LINK4  401.189 118.06 538.897 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.309 106.206 501.007 / -0.097 0.098 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  16.743 -69.858 176.143 / -0.065 5.972e-11 2.339e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.618 107.312 401.484 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.153 102.069 926.666 / -0.193 -2.748e-08 5.364e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.998 3.921 936.166 / -0.065 -2.794e-08 1.828e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.998 3.921 814.166 / -0.065 -2.794e-08 -0.188> #<bodyset-link #X6f14d58 RLEG_LINK2  458.876 2.054 804.343 / -0.105 0.203 -0.192> #<bodyset-link #X6f38680 RLEG_LINK3  376.586 -62.311 438.986 / -0.555 1.186 -0.522> #<bodyset-link #X130e0d78 RLEG_LINK4  17.232 -62.389 315.437 / -0.065 5.972e-11 -0.188> #<bodyset-link #X12a84e10 RLEG_LINK5  16.743 -69.858 276.143 / -0.065 5.972e-11 2.339e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.153 102.069 926.666 / -0.193 -2.748e-08 5.364e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.309 200.218 936.166 / -0.065 -2.794e-08 1.825e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.309 200.218 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.11 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.713 102.92 568.737 / -1.371 1.25 -1.319> #<bodyset-link #X1316f038 LLEG_LINK4  401.189 118.06 538.897 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.309 106.206 501.007 / -0.097 0.098 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.908 99.9469 1246.05) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.153 102.069 926.666 / -0.193 -2.748e-08 5.364e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  16.743 -69.858 176.143 / -0.065 5.972e-11 2.339e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.618 107.312 401.484 / -0.097 0.098 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.998 3.921 936.166 / -0.065 -2.794e-08 1.828e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.998 3.921 814.166 / -0.065 -2.794e-08 -0.188> #<bodyset-link #X6f14d58 RLEG_LINK2  458.876 2.054 804.343 / -0.105 0.203 -0.192> #<bodyset-link #X6f38680 RLEG_LINK3  376.586 -62.311 438.986 / -0.555 1.186 -0.522> #<bodyset-link #X130e0d78 RLEG_LINK4  17.232 -62.389 315.437 / -0.065 5.972e-11 -0.188> #<bodyset-link #X12a84e10 RLEG_LINK5  16.743 -69.858 276.143 / -0.065 5.972e-11 2.339e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.309 200.218 936.166 / -0.065 -2.794e-08 1.825e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.309 200.218 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.11 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.713 102.92 568.737 / -1.371 1.25 -1.319> #<bodyset-link #X1316f038 LLEG_LINK4  401.189 118.06 538.897 / -0.097 0.098 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.309 106.206 501.007 / -0.097 0.098 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.908 99.9469 1246.05) :target-centroid-pos #f(399.908 99.9469 1246.05) :fix-limbs-target-coords (#<coordinates #X24849130  27.974 -100.0 176.143 / 1.549e-10 -1.830e-17 5.110e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981483 0.191551 -2.800114e-08 478.153) (-0.191551 0.981483 -8.218217e-19 102.069) (2.748263e-08 5.363641e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint649797600) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.5351 55.8506 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(27.9741 -100.0 176.143) :rot #2f((1.0 -1.548635e-10 -1.822161e-17) (1.548635e-10 1.0 -5.109784e-10) (1.830004e-17 5.109784e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.366801e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-5.366801e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.366801e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-5.366801e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.908 99.9469 1246.05) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.366801e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-5.366801e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.908 99.9469 1246.05) :target-centroid-pos #f(399.908 99.9469 1246.05) :fix-limbs-target-coords (list #<coordinates #X24849130  27.974 -100.0 176.143 / 1.549e-10 -1.830e-17 5.110e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-24-18-21-40-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-24-18-21-40-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.1498 -29.2249 3.831026e-07)/(32.047/1)
;; dif-rot : #f(-1.825664e-09 3.322790e-11 0.0652)/(0.0652/0.017453)
;; dif-pos : #f(14.0727 -5.96443 0.032745)/(15.2845/1)
;; dif-rot : #f(-0.006345 -0.097312 0.096464)/(0.137168/0.017453)
;; cog-dif : #f(-0.078208 -5.10175)/(5.10235/5.0)
;;  coords : #<coordinates #X1325f8e0  478.048 102.072 -91.834 / -0.193 -2.748e-08 5.367e-09>
;;  angles : (#f(19.5096 55.8213 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X25144890  28.841 -100.0 179.335 / 1.545e-10 -1.883e-17 5.096e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  17.623 -69.98 179.335 / -0.065 5.950e-11 2.334e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.646 107.286 401.478 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.048 102.072 926.666 / -0.193 -2.748e-08 5.367e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.881 3.926 936.166 / -0.065 -2.794e-08 1.824e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.881 3.926 814.166 / -0.065 -2.794e-08 -0.189> #<bodyset-link #X6f14d58 RLEG_LINK2  458.758 2.048 804.345 / -0.103 0.197 -0.193> #<bodyset-link #X6f38680 RLEG_LINK3  378.671 -62.964 438.614 / -0.571 1.194 -0.538> #<bodyset-link #X130e0d78 RLEG_LINK4  18.114 -62.468 318.62 / -0.065 5.950e-11 -0.189> #<bodyset-link #X12a84e10 RLEG_LINK5  17.623 -69.98 279.335 / -0.065 5.950e-11 2.334e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.048 102.072 926.666 / -0.193 -2.748e-08 5.367e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.216 200.218 936.166 / -0.065 -2.794e-08 1.822e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.216 200.218 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.017 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.705 102.974 568.817 / -1.371 1.25 -1.318> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.041 538.894 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.316 106.185 501.003 / -0.096 0.097 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  17.623 -69.98 179.335 / -0.065 5.950e-11 2.334e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.646 107.286 401.478 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  478.048 102.072 926.666 / -0.193 -2.748e-08 5.367e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.881 3.926 936.166 / -0.065 -2.794e-08 1.824e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.881 3.926 814.166 / -0.065 -2.794e-08 -0.189> #<bodyset-link #X6f14d58 RLEG_LINK2  458.758 2.048 804.345 / -0.103 0.197 -0.193> #<bodyset-link #X6f38680 RLEG_LINK3  378.671 -62.964 438.614 / -0.571 1.194 -0.538> #<bodyset-link #X130e0d78 RLEG_LINK4  18.114 -62.468 318.62 / -0.065 5.950e-11 -0.189> #<bodyset-link #X12a84e10 RLEG_LINK5  17.623 -69.98 279.335 / -0.065 5.950e-11 2.334e-09>) (#<bodyset-link #X6ee5ff8 BODY  478.048 102.072 926.666 / -0.193 -2.748e-08 5.367e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.216 200.218 936.166 / -0.065 -2.794e-08 1.822e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.216 200.218 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.017 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.705 102.974 568.817 / -1.371 1.25 -1.318> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.041 538.894 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.316 106.185 501.003 / -0.096 0.097 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.915 99.9501 1246.55) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  478.048 102.072 926.666 / -0.193 -2.748e-08 5.367e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  17.623 -69.98 179.335 / -0.065 5.950e-11 2.334e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.646 107.286 401.478 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.881 3.926 936.166 / -0.065 -2.794e-08 1.824e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.881 3.926 814.166 / -0.065 -2.794e-08 -0.189> #<bodyset-link #X6f14d58 RLEG_LINK2  458.758 2.048 804.345 / -0.103 0.197 -0.193> #<bodyset-link #X6f38680 RLEG_LINK3  378.671 -62.964 438.614 / -0.571 1.194 -0.538> #<bodyset-link #X130e0d78 RLEG_LINK4  18.114 -62.468 318.62 / -0.065 5.950e-11 -0.189> #<bodyset-link #X12a84e10 RLEG_LINK5  17.623 -69.98 279.335 / -0.065 5.950e-11 2.334e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.216 200.218 936.166 / -0.065 -2.794e-08 1.822e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.216 200.218 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  497.017 197.171 804.644 / 0.276 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.705 102.974 568.817 / -1.371 1.25 -1.318> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.041 538.894 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.316 106.185 501.003 / -0.096 0.097 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.915 99.9501 1246.55) :target-centroid-pos #f(399.915 99.9501 1246.55) :fix-limbs-target-coords (#<coordinates #X25144890  28.841 -100.0 179.335 / 1.545e-10 -1.883e-17 5.096e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981459 0.191674 -2.800114e-08 478.048) (-0.191674 0.981459 -8.218230e-19 102.072) (2.748196e-08 5.367082e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint814273504) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.5096 55.8213 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(28.841 -100.0 179.335) :rot #2f((1.0 -1.544581e-10 -1.875254e-17) (1.544581e-10 1.0 -5.096407e-10) (1.883052e-17 5.096407e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.794708e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (3.794708e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.794708e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (3.794708e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.915 99.9501 1246.55) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.794708e-19 5.684342e-14) (0.0 1.0 0.0 0.0) (3.794708e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.915 99.9501 1246.55) :target-centroid-pos #f(399.915 99.9501 1246.55) :fix-limbs-target-coords (list #<coordinates #X25144890  28.841 -100.0 179.335 / 1.545e-10 -1.883e-17 5.096e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-24-53-40-86-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-24-53-40-86-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.1247 -29.1047 3.822983e-07)/(31.9271/1)
;; dif-rot : #f(-1.822144e-09 3.307595e-11 0.065074)/(0.065074/0.017453)
;; dif-pos : #f(14.0412 -5.94423 0.032561)/(15.2477/1)
;; dif-rot : #f(-0.006318 -0.097096 0.096269)/(0.136877/0.017453)
;; cog-dif : #f(-0.077033 -5.08476)/(5.08534/5.0)
;;  coords : #<coordinates #X1325f8e0  477.944 102.074 -91.834 / -0.193 -2.748e-08 5.371e-09>
;;  angles : (#f(19.484 55.7918 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X159e7eb8  29.724 -100.0 182.534 / 1.540e-10 -1.937e-17 5.083e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.519 -70.103 182.534 / -0.065 5.927e-11 2.329e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.673 107.26 401.472 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.944 102.074 926.666 / -0.193 -2.748e-08 5.371e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.764 3.93 936.166 / -0.065 -2.794e-08 1.821e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.764 3.93 814.166 / -0.065 -2.794e-08 -0.19> #<bodyset-link #X6f14d58 RLEG_LINK2  458.641 2.041 804.347 / -0.102 0.191 -0.194> #<bodyset-link #X6f38680 RLEG_LINK3  380.727 -63.617 438.262 / -0.588 1.202 -0.553> #<bodyset-link #X130e0d78 RLEG_LINK4  19.012 -62.546 321.81 / -0.065 5.927e-11 -0.19> #<bodyset-link #X12a84e10 RLEG_LINK5  18.519 -70.103 282.534 / -0.065 5.927e-11 2.329e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.944 102.074 926.666 / -0.193 -2.748e-08 5.371e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.123 200.217 936.166 / -0.065 -2.794e-08 1.818e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.123 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.925 197.171 804.644 / 0.277 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.698 103.029 568.896 / -1.37 1.25 -1.318> #<bodyset-link #X1316f038 LLEG_LINK4  401.181 118.021 538.891 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.322 106.164 500.999 / -0.096 0.097 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.519 -70.103 182.534 / -0.065 5.927e-11 2.329e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.673 107.26 401.472 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.944 102.074 926.666 / -0.193 -2.748e-08 5.371e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.764 3.93 936.166 / -0.065 -2.794e-08 1.821e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.764 3.93 814.166 / -0.065 -2.794e-08 -0.19> #<bodyset-link #X6f14d58 RLEG_LINK2  458.641 2.041 804.347 / -0.102 0.191 -0.194> #<bodyset-link #X6f38680 RLEG_LINK3  380.727 -63.617 438.262 / -0.588 1.202 -0.553> #<bodyset-link #X130e0d78 RLEG_LINK4  19.012 -62.546 321.81 / -0.065 5.927e-11 -0.19> #<bodyset-link #X12a84e10 RLEG_LINK5  18.519 -70.103 282.534 / -0.065 5.927e-11 2.329e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.944 102.074 926.666 / -0.193 -2.748e-08 5.371e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.123 200.217 936.166 / -0.065 -2.794e-08 1.818e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.123 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.925 197.171 804.644 / 0.277 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.698 103.029 568.896 / -1.37 1.25 -1.318> #<bodyset-link #X1316f038 LLEG_LINK4  401.181 118.021 538.891 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.322 106.164 500.999 / -0.096 0.097 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.921 99.9531 1247.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.944 102.074 926.666 / -0.193 -2.748e-08 5.371e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  18.519 -70.103 182.534 / -0.065 5.927e-11 2.329e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.673 107.26 401.472 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.764 3.93 936.166 / -0.065 -2.794e-08 1.821e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.764 3.93 814.166 / -0.065 -2.794e-08 -0.19> #<bodyset-link #X6f14d58 RLEG_LINK2  458.641 2.041 804.347 / -0.102 0.191 -0.194> #<bodyset-link #X6f38680 RLEG_LINK3  380.727 -63.617 438.262 / -0.588 1.202 -0.553> #<bodyset-link #X130e0d78 RLEG_LINK4  19.012 -62.546 321.81 / -0.065 5.927e-11 -0.19> #<bodyset-link #X12a84e10 RLEG_LINK5  18.519 -70.103 282.534 / -0.065 5.927e-11 2.329e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.123 200.217 936.166 / -0.065 -2.794e-08 1.818e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.123 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.925 197.171 804.644 / 0.277 -0.807 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.698 103.029 568.896 / -1.37 1.25 -1.318> #<bodyset-link #X1316f038 LLEG_LINK4  401.181 118.021 538.891 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.322 106.164 500.999 / -0.096 0.097 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.921 99.9531 1247.06) :target-centroid-pos #f(399.921 99.9531 1247.06) :fix-limbs-target-coords (#<coordinates #X159e7eb8  29.724 -100.0 182.534 / 1.540e-10 -1.937e-17 5.083e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981435 0.191797 -2.800114e-08 477.944) (-0.191797 0.981435 -8.218221e-19 102.074) (2.748129e-08 5.370537e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint371438136) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.484 55.7918 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(29.7235 -100.0 182.534) :rot #2f((1.0 -1.540467e-10 -1.929133e-17) (1.540467e-10 1.0 -5.082832e-10) (1.936886e-17 5.082832e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.722053e-18 0.0) (0.0 1.0 0.0 0.0) (-6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.722053e-18 0.0) (0.0 1.0 0.0 0.0) (-6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.921 99.9531 1247.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.722053e-18 0.0) (0.0 1.0 0.0 0.0) (-6.722053e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.921 99.9531 1247.06) :target-centroid-pos #f(399.921 99.9531 1247.06) :fix-limbs-target-coords (list #<coordinates #X159e7eb8  29.724 -100.0 182.534 / 1.540e-10 -1.937e-17 5.083e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-24-87-47-53-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-24-87-47-53-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.0994 -28.9835 3.814907e-07)/(31.8063/1)
;; dif-rot : #f(-1.818612e-09 3.292095e-11 0.064948)/(0.064948/0.017453)
;; dif-pos : #f(14.0099 -5.92405 0.032377)/(15.211/1)
;; dif-rot : #f(-0.006292 -0.096881 0.096073)/(0.136585/0.017453)
;; cog-dif : #f(-0.07586 -5.06779)/(5.06836/5.0)
;;  coords : #<coordinates #X1325f8e0  477.839 102.076 -91.834 / -0.193 -2.748e-08 5.374e-09>
;;  angles : (#f(19.4582 55.7622 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #Xa1aa620  30.622 -100.0 185.738 / 1.536e-10 -1.992e-17 5.069e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  19.431 -70.227 185.738 / -0.065 5.904e-11 2.324e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.7 107.234 401.466 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.839 102.076 926.666 / -0.193 -2.748e-08 5.374e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.647 3.935 936.166 / -0.065 -2.794e-08 1.817e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.647 3.935 814.166 / -0.065 -2.794e-08 -0.192> #<bodyset-link #X6f14d58 RLEG_LINK2  458.523 2.034 804.349 / -0.101 0.185 -0.195> #<bodyset-link #X6f38680 RLEG_LINK3  382.755 -64.271 437.931 / -0.605 1.21 -0.57> #<bodyset-link #X130e0d78 RLEG_LINK4  19.925 -62.626 325.005 / -0.065 5.904e-11 -0.192> #<bodyset-link #X12a84e10 RLEG_LINK5  19.431 -70.227 285.738 / -0.065 5.904e-11 2.324e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.839 102.076 926.666 / -0.193 -2.748e-08 5.374e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.031 200.217 936.166 / -0.065 -2.794e-08 1.815e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.031 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.833 197.17 804.644 / 0.277 -0.808 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.69 103.084 568.975 / -1.369 1.25 -1.317> #<bodyset-link #X1316f038 LLEG_LINK4  401.177 118.002 538.888 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.328 106.143 500.995 / -0.096 0.097 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  19.431 -70.227 185.738 / -0.065 5.904e-11 2.324e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.7 107.234 401.466 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.839 102.076 926.666 / -0.193 -2.748e-08 5.374e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.647 3.935 936.166 / -0.065 -2.794e-08 1.817e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.647 3.935 814.166 / -0.065 -2.794e-08 -0.192> #<bodyset-link #X6f14d58 RLEG_LINK2  458.523 2.034 804.349 / -0.101 0.185 -0.195> #<bodyset-link #X6f38680 RLEG_LINK3  382.755 -64.271 437.931 / -0.605 1.21 -0.57> #<bodyset-link #X130e0d78 RLEG_LINK4  19.925 -62.626 325.005 / -0.065 5.904e-11 -0.192> #<bodyset-link #X12a84e10 RLEG_LINK5  19.431 -70.227 285.738 / -0.065 5.904e-11 2.324e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.839 102.076 926.666 / -0.193 -2.748e-08 5.374e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  497.031 200.217 936.166 / -0.065 -2.794e-08 1.815e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.031 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.833 197.17 804.644 / 0.277 -0.808 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.69 103.084 568.975 / -1.369 1.25 -1.317> #<bodyset-link #X1316f038 LLEG_LINK4  401.177 118.002 538.888 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.328 106.143 500.995 / -0.096 0.097 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.926 99.9559 1247.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.839 102.076 926.666 / -0.193 -2.748e-08 5.374e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  19.431 -70.227 185.738 / -0.065 5.904e-11 2.324e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.7 107.234 401.466 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.647 3.935 936.166 / -0.065 -2.794e-08 1.817e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.647 3.935 814.166 / -0.065 -2.794e-08 -0.192> #<bodyset-link #X6f14d58 RLEG_LINK2  458.523 2.034 804.349 / -0.101 0.185 -0.195> #<bodyset-link #X6f38680 RLEG_LINK3  382.755 -64.271 437.931 / -0.605 1.21 -0.57> #<bodyset-link #X130e0d78 RLEG_LINK4  19.925 -62.626 325.005 / -0.065 5.904e-11 -0.192> #<bodyset-link #X12a84e10 RLEG_LINK5  19.431 -70.227 285.738 / -0.065 5.904e-11 2.324e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  497.031 200.217 936.166 / -0.065 -2.794e-08 1.815e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  497.031 200.217 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.833 197.17 804.644 / 0.277 -0.808 -0.457> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.69 103.084 568.975 / -1.369 1.25 -1.317> #<bodyset-link #X1316f038 LLEG_LINK4  401.177 118.002 538.888 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.328 106.143 500.995 / -0.096 0.097 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.926 99.9559 1247.57) :target-centroid-pos #f(399.926 99.9559 1247.57) :fix-limbs-target-coords (#<coordinates #Xa1aa620  30.622 -100.0 185.738 / 1.536e-10 -1.992e-17 5.069e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.98141 0.191921 -2.800114e-08 477.839) (-0.191921 0.98141 -8.218221e-19 102.076) (2.748061e-08 5.374003e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint376694048) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.4582 55.7622 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(30.6216 -100.0 185.738) :rot #2f((1.0 -1.536293e-10 -1.983796e-17) (1.536293e-10 1.0 -5.069059e-10) (1.991502e-17 5.069059e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.192622e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-1.192622e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.192622e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-1.192622e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.926 99.9559 1247.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.192622e-18 -5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-1.192622e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.926 99.9559 1247.57) :target-centroid-pos #f(399.926 99.9559 1247.57) :fix-limbs-target-coords (list #<coordinates #Xa1aa620  30.622 -100.0 185.738 / 1.536e-10 -1.992e-17 5.069e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-25-20-02-80-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-25-20-02-80-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.0741 -28.8614 3.806801e-07)/(31.6846/1)
;; dif-rot : #f(-1.815069e-09 3.276742e-11 0.064821)/(0.064821/0.017453)
;; dif-pos : #f(13.9787 -5.90387 0.032193)/(15.1743/1)
;; dif-rot : #f(-0.006266 -0.096666 0.095878)/(0.136295/0.017453)
;; cog-dif : #f(-0.07469 -5.05085)/(5.0514/5.0)
;;  coords : #<coordinates #X1325f8e0  477.735 102.078 -91.834 / -0.193 -2.748e-08 5.377e-09>
;;  angles : (#f(19.4323 55.7324 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X3189a5f8  31.535 -100.0 188.946 / 1.532e-10 -2.047e-17 5.055e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  20.358 -70.352 188.946 / -0.065 5.881e-11 2.319e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.728 107.209 401.46 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.734 102.078 926.666 / -0.193 -2.748e-08 5.377e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.53 3.939 936.166 / -0.065 -2.794e-08 1.814e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.53 3.939 814.166 / -0.065 -2.794e-08 -0.193> #<bodyset-link #X6f14d58 RLEG_LINK2  458.406 2.027 804.352 / -0.1 0.18 -0.196> #<bodyset-link #X6f38680 RLEG_LINK3  384.755 -64.925 437.619 / -0.623 1.218 -0.587> #<bodyset-link #X130e0d78 RLEG_LINK4  20.855 -62.705 328.205 / -0.065 5.881e-11 -0.193> #<bodyset-link #X12a84e10 RLEG_LINK5  20.358 -70.352 288.946 / -0.065 5.881e-11 2.319e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.734 102.078 926.666 / -0.193 -2.748e-08 5.377e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.939 200.216 936.166 / -0.065 -2.794e-08 1.811e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.939 200.216 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.742 197.17 804.644 / 0.277 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.682 103.139 569.053 / -1.368 1.25 -1.316> #<bodyset-link #X1316f038 LLEG_LINK4  401.172 117.982 538.885 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.335 106.121 500.992 / -0.096 0.097 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  20.358 -70.352 188.946 / -0.065 5.881e-11 2.319e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.728 107.209 401.46 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.734 102.078 926.666 / -0.193 -2.748e-08 5.377e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.53 3.939 936.166 / -0.065 -2.794e-08 1.814e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.53 3.939 814.166 / -0.065 -2.794e-08 -0.193> #<bodyset-link #X6f14d58 RLEG_LINK2  458.406 2.027 804.352 / -0.1 0.18 -0.196> #<bodyset-link #X6f38680 RLEG_LINK3  384.755 -64.925 437.619 / -0.623 1.218 -0.587> #<bodyset-link #X130e0d78 RLEG_LINK4  20.855 -62.705 328.205 / -0.065 5.881e-11 -0.193> #<bodyset-link #X12a84e10 RLEG_LINK5  20.358 -70.352 288.946 / -0.065 5.881e-11 2.319e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.734 102.078 926.666 / -0.193 -2.748e-08 5.377e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.939 200.216 936.166 / -0.065 -2.794e-08 1.811e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.939 200.216 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.742 197.17 804.644 / 0.277 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.682 103.139 569.053 / -1.368 1.25 -1.316> #<bodyset-link #X1316f038 LLEG_LINK4  401.172 117.982 538.885 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.335 106.121 500.992 / -0.096 0.097 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.931 99.9586 1248.08) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.734 102.078 926.666 / -0.193 -2.748e-08 5.377e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  20.358 -70.352 188.946 / -0.065 5.881e-11 2.319e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.728 107.209 401.46 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.53 3.939 936.166 / -0.065 -2.794e-08 1.814e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.53 3.939 814.166 / -0.065 -2.794e-08 -0.193> #<bodyset-link #X6f14d58 RLEG_LINK2  458.406 2.027 804.352 / -0.1 0.18 -0.196> #<bodyset-link #X6f38680 RLEG_LINK3  384.755 -64.925 437.619 / -0.623 1.218 -0.587> #<bodyset-link #X130e0d78 RLEG_LINK4  20.855 -62.705 328.205 / -0.065 5.881e-11 -0.193> #<bodyset-link #X12a84e10 RLEG_LINK5  20.358 -70.352 288.946 / -0.065 5.881e-11 2.319e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.939 200.216 936.166 / -0.065 -2.794e-08 1.811e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.939 200.216 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.742 197.17 804.644 / 0.277 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.682 103.139 569.053 / -1.368 1.25 -1.316> #<bodyset-link #X1316f038 LLEG_LINK4  401.172 117.982 538.885 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.335 106.121 500.992 / -0.096 0.097 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.931 99.9586 1248.08) :target-centroid-pos #f(399.931 99.9586 1248.08) :fix-limbs-target-coords (#<coordinates #X3189a5f8  31.535 -100.0 188.946 / 1.532e-10 -2.047e-17 5.055e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981386 0.192045 -2.800114e-08 477.735) (-0.192045 0.981386 -8.218221e-19 102.078) (2.747993e-08 5.377480e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint324526560) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.4323 55.7324 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(31.5354 -100.0 188.946) :rot #2f((1.0 -1.532059e-10 -2.039241e-17) (1.532059e-10 1.0 -5.055090e-10) (2.046900e-17 5.055090e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.963112e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (5.963112e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.963112e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (5.963112e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.931 99.9586 1248.08) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.963112e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (5.963112e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.931 99.9586 1248.08) :target-centroid-pos #f(399.931 99.9586 1248.08) :fix-limbs-target-coords (list #<coordinates #X3189a5f8  31.535 -100.0 188.946 / 1.532e-10 -2.047e-17 5.055e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-25-54-74-92-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-25-54-74-92-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.0487 -28.7384 3.798655e-07)/(31.5621/1)
;; dif-rot : #f(-1.811515e-09 3.261163e-11 0.064694)/(0.064694/0.017453)
;; dif-pos : #f(13.9475 -5.88371 0.032009)/(15.1378/1)
;; dif-rot : #f(-0.00624 -0.096452 0.095682)/(0.136004/0.017453)
;; cog-dif : #f(-0.073521 -5.03393)/(5.03447/5.0)
;;  coords : #<coordinates #X1325f8e0  477.63 102.08 -91.834 / -0.193 -2.748e-08 5.381e-09>
;;  angles : (#f(19.4063 55.7026 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X316ee020  32.465 -100.0 192.159 / 1.528e-10 -2.103e-17 5.041e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  21.301 -70.478 192.159 / -0.065 5.858e-11 2.314e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.755 107.183 401.454 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.63 102.08 926.666 / -0.193 -2.748e-08 5.381e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.413 3.943 936.166 / -0.065 -2.794e-08 1.810e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.413 3.943 814.166 / -0.065 -2.794e-08 -0.194> #<bodyset-link #X6f14d58 RLEG_LINK2  458.289 2.02 804.354 / -0.099 0.174 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  386.729 -65.581 437.326 / -0.641 1.225 -0.605> #<bodyset-link #X130e0d78 RLEG_LINK4  21.8 -62.785 331.409 / -0.065 5.858e-11 -0.194> #<bodyset-link #X12a84e10 RLEG_LINK5  21.301 -70.478 292.159 / -0.065 5.858e-11 2.314e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.63 102.08 926.666 / -0.193 -2.748e-08 5.381e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.847 200.216 936.166 / -0.065 -2.794e-08 1.808e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.847 200.216 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.65 197.169 804.644 / 0.278 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.674 103.194 569.132 / -1.367 1.25 -1.316> #<bodyset-link #X1316f038 LLEG_LINK4  401.168 117.963 538.882 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.341 106.1 500.988 / -0.096 0.097 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  21.301 -70.478 192.159 / -0.065 5.858e-11 2.314e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.755 107.183 401.454 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.63 102.08 926.666 / -0.193 -2.748e-08 5.381e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.413 3.943 936.166 / -0.065 -2.794e-08 1.810e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.413 3.943 814.166 / -0.065 -2.794e-08 -0.194> #<bodyset-link #X6f14d58 RLEG_LINK2  458.289 2.02 804.354 / -0.099 0.174 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  386.729 -65.581 437.326 / -0.641 1.225 -0.605> #<bodyset-link #X130e0d78 RLEG_LINK4  21.8 -62.785 331.409 / -0.065 5.858e-11 -0.194> #<bodyset-link #X12a84e10 RLEG_LINK5  21.301 -70.478 292.159 / -0.065 5.858e-11 2.314e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.63 102.08 926.666 / -0.193 -2.748e-08 5.381e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.847 200.216 936.166 / -0.065 -2.794e-08 1.808e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.847 200.216 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.65 197.169 804.644 / 0.278 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.674 103.194 569.132 / -1.367 1.25 -1.316> #<bodyset-link #X1316f038 LLEG_LINK4  401.168 117.963 538.882 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.341 106.1 500.988 / -0.096 0.097 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.936 99.9611 1248.6) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.63 102.08 926.666 / -0.193 -2.748e-08 5.381e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  21.301 -70.478 192.159 / -0.065 5.858e-11 2.314e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.755 107.183 401.454 / -0.096 0.097 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.413 3.943 936.166 / -0.065 -2.794e-08 1.810e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.413 3.943 814.166 / -0.065 -2.794e-08 -0.194> #<bodyset-link #X6f14d58 RLEG_LINK2  458.289 2.02 804.354 / -0.099 0.174 -0.197> #<bodyset-link #X6f38680 RLEG_LINK3  386.729 -65.581 437.326 / -0.641 1.225 -0.605> #<bodyset-link #X130e0d78 RLEG_LINK4  21.8 -62.785 331.409 / -0.065 5.858e-11 -0.194> #<bodyset-link #X12a84e10 RLEG_LINK5  21.301 -70.478 292.159 / -0.065 5.858e-11 2.314e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.847 200.216 936.166 / -0.065 -2.794e-08 1.808e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.847 200.216 814.166 / -0.065 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.65 197.169 804.644 / 0.278 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.674 103.194 569.132 / -1.367 1.25 -1.316> #<bodyset-link #X1316f038 LLEG_LINK4  401.168 117.963 538.882 / -0.096 0.097 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.341 106.1 500.988 / -0.096 0.097 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.936 99.9611 1248.6) :target-centroid-pos #f(399.936 99.9611 1248.6) :fix-limbs-target-coords (#<coordinates #X316ee020  32.465 -100.0 192.159 / 1.528e-10 -2.103e-17 5.041e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981362 0.19217 -2.800114e-08 477.63) (-0.19217 0.981362 -8.218217e-19 102.08) (2.747925e-08 5.380968e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint828513848) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.4063 55.7026 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(32.4648 -100.0 192.159) :rot #2f((1.0 -1.527765e-10 -2.095466e-17) (1.527765e-10 1.0 -5.040924e-10) (2.103077e-17 5.040924e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -5.741820e-42 0.0) (-1.387779e-17 1.0 -8.274835e-25 0.0) (-5.741820e-42 8.274835e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.095750e-18 0.0) (0.0 1.0 0.0 0.0) (5.095750e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -5.741820e-42 0.0) (-1.387779e-17 1.0 -8.274835e-25 0.0) (-5.741820e-42 8.274835e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.095750e-18 0.0) (0.0 1.0 0.0 0.0) (5.095750e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.936 99.9611 1248.6) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.387779e-17 -5.741820e-42 0.0) (-1.387779e-17 1.0 -8.274835e-25 0.0) (-5.741820e-42 8.274835e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.095750e-18 0.0) (0.0 1.0 0.0 0.0) (5.095750e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.936 99.9611 1248.6) :target-centroid-pos #f(399.936 99.9611 1248.6) :fix-limbs-target-coords (list #<coordinates #X316ee020  32.465 -100.0 192.159 / 1.528e-10 -2.103e-17 5.041e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-25-90-36-39-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-25-90-36-39-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.0232 -28.6145 3.790486e-07)/(31.4387/1)
;; dif-rot : #f(-1.807950e-09 3.245496e-11 0.064567)/(0.064567/0.017453)
;; dif-pos : #f(13.9165 -5.86357 0.031825)/(15.1014/1)
;; dif-rot : #f(-0.006214 -0.096239 0.095486)/(0.135714/0.017453)
;; cog-dif : #f(-0.072355 -5.01705)/(5.01757/5.0)
;;  coords : #<coordinates #X1325f8e0  477.526 102.081 -91.834 / -0.193 -2.748e-08 5.384e-09>
;;  angles : (#f(19.3803 55.6726 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X24de5800  33.41 -100.0 195.374 / 1.523e-10 -2.160e-17 5.027e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  22.26 -70.605 195.374 / -0.065 5.835e-11 2.309e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.782 107.158 401.448 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.526 102.081 926.666 / -0.193 -2.748e-08 5.384e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.296 3.947 936.166 / -0.065 -2.794e-08 1.807e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.296 3.947 814.166 / -0.065 -2.794e-08 -0.195> #<bodyset-link #X6f14d58 RLEG_LINK2  458.171 2.013 804.356 / -0.098 0.168 -0.198> #<bodyset-link #X6f38680 RLEG_LINK3  388.678 -66.238 437.052 / -0.661 1.232 -0.624> #<bodyset-link #X130e0d78 RLEG_LINK4  22.76 -62.866 334.615 / -0.065 5.835e-11 -0.195> #<bodyset-link #X12a84e10 RLEG_LINK5  22.26 -70.605 295.374 / -0.065 5.835e-11 2.309e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.526 102.081 926.666 / -0.193 -2.748e-08 5.384e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.755 200.215 936.166 / -0.064 -2.794e-08 1.804e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.755 200.215 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.559 197.168 804.644 / 0.278 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.667 103.249 569.21 / -1.366 1.25 -1.315> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 117.943 538.879 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.347 106.079 500.984 / -0.095 0.096 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  22.26 -70.605 195.374 / -0.065 5.835e-11 2.309e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.782 107.158 401.448 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.526 102.081 926.666 / -0.193 -2.748e-08 5.384e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.296 3.947 936.166 / -0.065 -2.794e-08 1.807e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.296 3.947 814.166 / -0.065 -2.794e-08 -0.195> #<bodyset-link #X6f14d58 RLEG_LINK2  458.171 2.013 804.356 / -0.098 0.168 -0.198> #<bodyset-link #X6f38680 RLEG_LINK3  388.678 -66.238 437.052 / -0.661 1.232 -0.624> #<bodyset-link #X130e0d78 RLEG_LINK4  22.76 -62.866 334.615 / -0.065 5.835e-11 -0.195> #<bodyset-link #X12a84e10 RLEG_LINK5  22.26 -70.605 295.374 / -0.065 5.835e-11 2.309e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.526 102.081 926.666 / -0.193 -2.748e-08 5.384e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.755 200.215 936.166 / -0.064 -2.794e-08 1.804e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.755 200.215 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.559 197.168 804.644 / 0.278 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.667 103.249 569.21 / -1.366 1.25 -1.315> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 117.943 538.879 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.347 106.079 500.984 / -0.095 0.096 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.941 99.9634 1249.13) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.526 102.081 926.666 / -0.193 -2.748e-08 5.384e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  22.26 -70.605 195.374 / -0.065 5.835e-11 2.309e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.782 107.158 401.448 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.296 3.947 936.166 / -0.065 -2.794e-08 1.807e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.296 3.947 814.166 / -0.065 -2.794e-08 -0.195> #<bodyset-link #X6f14d58 RLEG_LINK2  458.171 2.013 804.356 / -0.098 0.168 -0.198> #<bodyset-link #X6f38680 RLEG_LINK3  388.678 -66.238 437.052 / -0.661 1.232 -0.624> #<bodyset-link #X130e0d78 RLEG_LINK4  22.76 -62.866 334.615 / -0.065 5.835e-11 -0.195> #<bodyset-link #X12a84e10 RLEG_LINK5  22.26 -70.605 295.374 / -0.065 5.835e-11 2.309e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.755 200.215 936.166 / -0.064 -2.794e-08 1.804e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.755 200.215 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.559 197.168 804.644 / 0.278 -0.808 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.667 103.249 569.21 / -1.366 1.25 -1.315> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 117.943 538.879 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.347 106.079 500.984 / -0.095 0.096 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.941 99.9634 1249.13) :target-centroid-pos #f(399.941 99.9634 1249.13) :fix-limbs-target-coords (#<coordinates #X24de5800  33.41 -100.0 195.374 / 1.523e-10 -2.160e-17 5.027e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981337 0.192295 -2.800114e-08 477.526) (-0.192295 0.981337 -8.218221e-19 102.081) (2.747856e-08 5.384466e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint801400816) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.3803 55.6726 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(33.4099 -100.0 195.374) :rot #2f((1.0 -1.523413e-10 -2.152469e-17) (1.523413e-10 1.0 -5.026562e-10) (2.160031e-17 5.026562e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.843144e-18 0.0) (0.0 1.0 0.0 0.0) (-1.843144e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.843144e-18 0.0) (0.0 1.0 0.0 0.0) (-1.843144e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.941 99.9634 1249.13) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.843144e-18 0.0) (0.0 1.0 0.0 0.0) (-1.843144e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.941 99.9634 1249.13) :target-centroid-pos #f(399.941 99.9634 1249.13) :fix-limbs-target-coords (list #<coordinates #X24de5800  33.41 -100.0 195.374 / 1.523e-10 -2.160e-17 5.027e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-26-24-39-08-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-26-24-39-08-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.9977 -28.4897 3.782287e-07)/(31.3146/1)
;; dif-rot : #f(-1.804376e-09 3.229813e-11 0.064439)/(0.064439/0.017453)
;; dif-pos : #f(13.8855 -5.84344 0.031641)/(15.065/1)
;; dif-rot : #f(-0.006188 -0.096026 0.09529)/(0.135424/0.017453)
;; cog-dif : #f(-0.07119 -5.00019)/(5.00069/5.0)
;;  coords : #<coordinates #X1325f8e0  477.422 102.083 -91.834 / -0.194 -2.748e-08 5.388e-09>
;;  angles : (#f(19.3541 55.6426 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X16cbdfc0  34.371 -100.0 198.593 / 1.519e-10 -2.218e-17 5.012e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  23.235 -70.732 198.593 / -0.064 5.812e-11 2.304e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.809 107.132 401.443 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.422 102.083 926.666 / -0.194 -2.748e-08 5.388e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.18 3.951 936.166 / -0.064 -2.794e-08 1.803e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.18 3.951 814.166 / -0.064 -2.794e-08 -0.196> #<bodyset-link #X6f14d58 RLEG_LINK2  458.054 2.005 804.358 / -0.097 0.163 -0.199> #<bodyset-link #X6f38680 RLEG_LINK3  390.601 -66.895 436.795 / -0.681 1.239 -0.643> #<bodyset-link #X130e0d78 RLEG_LINK4  23.737 -62.946 337.824 / -0.064 5.812e-11 -0.196> #<bodyset-link #X12a84e10 RLEG_LINK5  23.235 -70.732 298.593 / -0.064 5.812e-11 2.304e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.422 102.083 926.666 / -0.194 -2.748e-08 5.388e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.664 200.214 936.166 / -0.064 -2.794e-08 1.801e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.664 200.214 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.467 197.167 804.644 / 0.278 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.659 103.304 569.288 / -1.366 1.25 -1.314> #<bodyset-link #X1316f038 LLEG_LINK4  401.16 117.924 538.876 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.353 106.058 500.98 / -0.095 0.096 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  23.235 -70.732 198.593 / -0.064 5.812e-11 2.304e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.809 107.132 401.443 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.422 102.083 926.666 / -0.194 -2.748e-08 5.388e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.18 3.951 936.166 / -0.064 -2.794e-08 1.803e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.18 3.951 814.166 / -0.064 -2.794e-08 -0.196> #<bodyset-link #X6f14d58 RLEG_LINK2  458.054 2.005 804.358 / -0.097 0.163 -0.199> #<bodyset-link #X6f38680 RLEG_LINK3  390.601 -66.895 436.795 / -0.681 1.239 -0.643> #<bodyset-link #X130e0d78 RLEG_LINK4  23.737 -62.946 337.824 / -0.064 5.812e-11 -0.196> #<bodyset-link #X12a84e10 RLEG_LINK5  23.235 -70.732 298.593 / -0.064 5.812e-11 2.304e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.422 102.083 926.666 / -0.194 -2.748e-08 5.388e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.664 200.214 936.166 / -0.064 -2.794e-08 1.801e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.664 200.214 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.467 197.167 804.644 / 0.278 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.659 103.304 569.288 / -1.366 1.25 -1.314> #<bodyset-link #X1316f038 LLEG_LINK4  401.16 117.924 538.876 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.353 106.058 500.98 / -0.095 0.096 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.946 99.9656 1249.65) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.422 102.083 926.666 / -0.194 -2.748e-08 5.388e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  23.235 -70.732 198.593 / -0.064 5.812e-11 2.304e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.809 107.132 401.443 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.18 3.951 936.166 / -0.064 -2.794e-08 1.803e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.18 3.951 814.166 / -0.064 -2.794e-08 -0.196> #<bodyset-link #X6f14d58 RLEG_LINK2  458.054 2.005 804.358 / -0.097 0.163 -0.199> #<bodyset-link #X6f38680 RLEG_LINK3  390.601 -66.895 436.795 / -0.681 1.239 -0.643> #<bodyset-link #X130e0d78 RLEG_LINK4  23.737 -62.946 337.824 / -0.064 5.812e-11 -0.196> #<bodyset-link #X12a84e10 RLEG_LINK5  23.235 -70.732 298.593 / -0.064 5.812e-11 2.304e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.664 200.214 936.166 / -0.064 -2.794e-08 1.801e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.664 200.214 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.467 197.167 804.644 / 0.278 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.659 103.304 569.288 / -1.366 1.25 -1.314> #<bodyset-link #X1316f038 LLEG_LINK4  401.16 117.924 538.876 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.353 106.058 500.98 / -0.095 0.096 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.946 99.9656 1249.65) :target-centroid-pos #f(399.946 99.9656 1249.65) :fix-limbs-target-coords (#<coordinates #X16cbdfc0  34.371 -100.0 198.593 / 1.519e-10 -2.218e-17 5.012e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981313 0.19242 -2.800114e-08 477.422) (-0.19242 0.981313 -8.218221e-19 102.083) (2.747787e-08 5.387974e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint805453616) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.3541 55.6426 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(34.3707 -100.0 198.593) :rot #2f((1.0 -1.519001e-10 -2.210246e-17) (1.519001e-10 1.0 -5.012005e-10) (2.217759e-17 5.012005e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.017322e-18 0.0) (0.0 1.0 0.0 0.0) (-6.017322e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.017322e-18 0.0) (0.0 1.0 0.0 0.0) (-6.017322e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.946 99.9656 1249.65) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.017322e-18 0.0) (0.0 1.0 0.0 0.0) (-6.017322e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.946 99.9656 1249.65) :target-centroid-pos #f(399.946 99.9656 1249.65) :fix-limbs-target-coords (list #<coordinates #X16cbdfc0  34.371 -100.0 198.593 / 1.519e-10 -2.218e-17 5.012e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-26-59-10-79-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-26-59-10-79-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.972 -28.364 3.774055e-07)/(31.1896/1)
;; dif-rot : #f(-1.800791e-09 3.213750e-11 0.064311)/(0.064311/0.017453)
;; dif-pos : #f(13.8546 -5.82332 0.031457)/(15.0287/1)
;; dif-rot : #f(-0.006162 -0.095814 0.095094)/(0.135134/0.017453)
;; cog-dif : #f(-0.070026 -4.98335)/(4.98384/5.0)
;;  coords : #<coordinates #X1325f8e0  477.318 102.084 -91.834 / -0.194 -2.748e-08 5.391e-09>
;;  angles : (#f(19.3279 55.6124 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2f39a820  35.347 -100.0 201.812 / 1.515e-10 -2.276e-17 4.997e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  24.225 -70.861 201.812 / -0.064 5.789e-11 2.299e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.836 107.107 401.437 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.318 102.084 926.666 / -0.194 -2.748e-08 5.391e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.063 3.955 936.166 / -0.064 -2.794e-08 1.800e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.063 3.955 814.166 / -0.064 -2.794e-08 -0.198> #<bodyset-link #X6f14d58 RLEG_LINK2  457.937 1.997 804.361 / -0.096 0.158 -0.2> #<bodyset-link #X6f38680 RLEG_LINK3  392.5 -67.554 436.556 / -0.701 1.246 -0.663> #<bodyset-link #X130e0d78 RLEG_LINK4  24.729 -63.027 341.034 / -0.064 5.789e-11 -0.198> #<bodyset-link #X12a84e10 RLEG_LINK5  24.225 -70.861 301.812 / -0.064 5.789e-11 2.299e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.318 102.084 926.666 / -0.194 -2.748e-08 5.391e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.572 200.213 936.166 / -0.064 -2.794e-08 1.797e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.572 200.213 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.376 197.166 804.644 / 0.278 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.651 103.359 569.366 / -1.365 1.25 -1.314> #<bodyset-link #X1316f038 LLEG_LINK4  401.156 117.904 538.873 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.359 106.037 500.977 / -0.095 0.096 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  24.225 -70.861 201.812 / -0.064 5.789e-11 2.299e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.836 107.107 401.437 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.318 102.084 926.666 / -0.194 -2.748e-08 5.391e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  458.063 3.955 936.166 / -0.064 -2.794e-08 1.800e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.063 3.955 814.166 / -0.064 -2.794e-08 -0.198> #<bodyset-link #X6f14d58 RLEG_LINK2  457.937 1.997 804.361 / -0.096 0.158 -0.2> #<bodyset-link #X6f38680 RLEG_LINK3  392.5 -67.554 436.556 / -0.701 1.246 -0.663> #<bodyset-link #X130e0d78 RLEG_LINK4  24.729 -63.027 341.034 / -0.064 5.789e-11 -0.198> #<bodyset-link #X12a84e10 RLEG_LINK5  24.225 -70.861 301.812 / -0.064 5.789e-11 2.299e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.318 102.084 926.666 / -0.194 -2.748e-08 5.391e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.572 200.213 936.166 / -0.064 -2.794e-08 1.797e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.572 200.213 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.376 197.166 804.644 / 0.278 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.651 103.359 569.366 / -1.365 1.25 -1.314> #<bodyset-link #X1316f038 LLEG_LINK4  401.156 117.904 538.873 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.359 106.037 500.977 / -0.095 0.096 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.95 99.9677 1250.18) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.318 102.084 926.666 / -0.194 -2.748e-08 5.391e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  24.225 -70.861 201.812 / -0.064 5.789e-11 2.299e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.836 107.107 401.437 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  458.063 3.955 936.166 / -0.064 -2.794e-08 1.800e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  458.063 3.955 814.166 / -0.064 -2.794e-08 -0.198> #<bodyset-link #X6f14d58 RLEG_LINK2  457.937 1.997 804.361 / -0.096 0.158 -0.2> #<bodyset-link #X6f38680 RLEG_LINK3  392.5 -67.554 436.556 / -0.701 1.246 -0.663> #<bodyset-link #X130e0d78 RLEG_LINK4  24.729 -63.027 341.034 / -0.064 5.789e-11 -0.198> #<bodyset-link #X12a84e10 RLEG_LINK5  24.225 -70.861 301.812 / -0.064 5.789e-11 2.299e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.572 200.213 936.166 / -0.064 -2.794e-08 1.797e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.572 200.213 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.376 197.166 804.644 / 0.278 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.651 103.359 569.366 / -1.365 1.25 -1.314> #<bodyset-link #X1316f038 LLEG_LINK4  401.156 117.904 538.873 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.359 106.037 500.977 / -0.095 0.096 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.95 99.9677 1250.18) :target-centroid-pos #f(399.95 99.9677 1250.18) :fix-limbs-target-coords (#<coordinates #X2f39a820  35.347 -100.0 201.812 / 1.515e-10 -2.276e-17 4.997e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981288 0.192545 -2.800114e-08 477.318) (-0.192545 0.981288 -8.218221e-19 102.084) (2.747718e-08 5.391492e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint302781592) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.3279 55.6124 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(35.3471 -100.0 201.812) :rot #2f((1.0 -1.514530e-10 -2.268797e-17) (1.514530e-10 1.0 -4.997253e-10) (2.276259e-17 4.997253e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 1.009742e-28 0.0) (0.0 -1.009742e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.168404e-19 0.0) (0.0 1.0 0.0 0.0) (2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 1.009742e-28 0.0) (0.0 -1.009742e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.168404e-19 0.0) (0.0 1.0 0.0 0.0) (2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.95 99.9677 1250.18) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -3.552714e-15) (0.0 1.0 1.009742e-28 0.0) (0.0 -1.009742e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.168404e-19 0.0) (0.0 1.0 0.0 0.0) (2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.95 99.9677 1250.18) :target-centroid-pos #f(399.95 99.9677 1250.18) :fix-limbs-target-coords (list #<coordinates #X2f39a820  35.347 -100.0 201.812 / 1.515e-10 -2.276e-17 4.997e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-27-05-32-38-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-27-05-32-38-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.9463 -28.2374 3.765803e-07)/(31.0638/1)
;; dif-rot : #f(-1.797198e-09 3.197831e-11 0.064183)/(0.064183/0.017453)
;; dif-pos : #f(13.8237 -5.80322 0.031274)/(14.9925/1)
;; dif-rot : #f(-0.006136 -0.095602 0.094898)/(0.134844/0.017453)
;; cog-dif : #f(-0.068863 -4.96654)/(4.96702/5.0)
;;  coords : #<coordinates #X1325f8e0  477.214 102.086 -91.834 / -0.194 -2.748e-08 5.395e-09>
;;  angles : (#f(19.3017 55.5822 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X15b18cf0  36.339 -100.0 205.033 / 1.510e-10 -2.336e-17 4.982e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  25.231 -70.99 205.033 / -0.064 5.765e-11 2.294e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.863 107.081 401.431 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.214 102.086 926.666 / -0.194 -2.748e-08 5.395e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.947 3.959 936.166 / -0.064 -2.794e-08 1.796e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.947 3.959 814.166 / -0.064 -2.794e-08 -0.199> #<bodyset-link #X6f14d58 RLEG_LINK2  457.82 1.989 804.363 / -0.095 0.152 -0.201> #<bodyset-link #X6f38680 RLEG_LINK3  394.375 -68.215 436.333 / -0.723 1.253 -0.684> #<bodyset-link #X130e0d78 RLEG_LINK4  25.737 -63.108 344.245 / -0.064 5.765e-11 -0.199> #<bodyset-link #X12a84e10 RLEG_LINK5  25.231 -70.99 305.033 / -0.064 5.765e-11 2.294e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.214 102.086 926.666 / -0.194 -2.748e-08 5.395e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.481 200.212 936.166 / -0.064 -2.794e-08 1.794e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.481 200.212 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.286 197.165 804.644 / 0.279 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.643 103.414 569.443 / -1.364 1.25 -1.313> #<bodyset-link #X1316f038 LLEG_LINK4  401.152 117.885 538.871 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.366 106.016 500.973 / -0.095 0.096 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  25.231 -70.99 205.033 / -0.064 5.765e-11 2.294e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.863 107.081 401.431 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.214 102.086 926.666 / -0.194 -2.748e-08 5.395e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.947 3.959 936.166 / -0.064 -2.794e-08 1.796e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.947 3.959 814.166 / -0.064 -2.794e-08 -0.199> #<bodyset-link #X6f14d58 RLEG_LINK2  457.82 1.989 804.363 / -0.095 0.152 -0.201> #<bodyset-link #X6f38680 RLEG_LINK3  394.375 -68.215 436.333 / -0.723 1.253 -0.684> #<bodyset-link #X130e0d78 RLEG_LINK4  25.737 -63.108 344.245 / -0.064 5.765e-11 -0.199> #<bodyset-link #X12a84e10 RLEG_LINK5  25.231 -70.99 305.033 / -0.064 5.765e-11 2.294e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.214 102.086 926.666 / -0.194 -2.748e-08 5.395e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.481 200.212 936.166 / -0.064 -2.794e-08 1.794e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.481 200.212 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.286 197.165 804.644 / 0.279 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.643 103.414 569.443 / -1.364 1.25 -1.313> #<bodyset-link #X1316f038 LLEG_LINK4  401.152 117.885 538.871 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.366 106.016 500.973 / -0.095 0.096 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.954 99.9696 1250.72) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.214 102.086 926.666 / -0.194 -2.748e-08 5.395e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  25.231 -70.99 205.033 / -0.064 5.765e-11 2.294e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.863 107.081 401.431 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.947 3.959 936.166 / -0.064 -2.794e-08 1.796e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.947 3.959 814.166 / -0.064 -2.794e-08 -0.199> #<bodyset-link #X6f14d58 RLEG_LINK2  457.82 1.989 804.363 / -0.095 0.152 -0.201> #<bodyset-link #X6f38680 RLEG_LINK3  394.375 -68.215 436.333 / -0.723 1.253 -0.684> #<bodyset-link #X130e0d78 RLEG_LINK4  25.737 -63.108 344.245 / -0.064 5.765e-11 -0.199> #<bodyset-link #X12a84e10 RLEG_LINK5  25.231 -70.99 305.033 / -0.064 5.765e-11 2.294e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.481 200.212 936.166 / -0.064 -2.794e-08 1.794e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.481 200.212 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.286 197.165 804.644 / 0.279 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.643 103.414 569.443 / -1.364 1.25 -1.313> #<bodyset-link #X1316f038 LLEG_LINK4  401.152 117.885 538.871 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.366 106.016 500.973 / -0.095 0.096 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.954 99.9696 1250.72) :target-centroid-pos #f(399.954 99.9696 1250.72) :fix-limbs-target-coords (#<coordinates #X15b18cf0  36.339 -100.0 205.033 / 1.510e-10 -2.336e-17 4.982e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981263 0.192671 -2.800114e-08 477.214) (-0.192671 0.981263 -8.218217e-19 102.086) (2.747649e-08 5.395018e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint274726632) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.3017 55.5822 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(36.3393 -100.0 205.033) :rot #2f((1.0 -1.510000e-10 -2.328117e-17) (1.510000e-10 1.0 -4.982307e-10) (2.335529e-17 4.982307e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 1.009742e-28 1.421085e-14) (0.0 -1.009742e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.258381e-18 0.0) (0.0 1.0 0.0 0.0) (5.258381e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 1.009742e-28 1.421085e-14) (0.0 -1.009742e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.258381e-18 0.0) (0.0 1.0 0.0 0.0) (5.258381e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.954 99.9696 1250.72) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 1.009742e-28 1.421085e-14) (0.0 -1.009742e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.258381e-18 0.0) (0.0 1.0 0.0 0.0) (5.258381e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.954 99.9696 1250.72) :target-centroid-pos #f(399.954 99.9696 1250.72) :fix-limbs-target-coords (list #<coordinates #X15b18cf0  36.339 -100.0 205.033 / 1.510e-10 -2.336e-17 4.982e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-27-39-67-80-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-27-39-67-80-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.9205 -28.11 3.757522e-07)/(30.9372/1)
;; dif-rot : #f(-1.793595e-09 3.181618e-11 0.064054)/(0.064054/0.017453)
;; dif-pos : #f(13.7929 -5.78314 0.031091)/(14.9563/1)
;; dif-rot : #f(-0.00611 -0.095391 0.094701)/(0.134555/0.017453)
;; cog-dif : #f(-0.067701 -4.94975)/(4.95022/5.0)
;;  coords : #<coordinates #X1325f8e0  477.11 102.087 -91.834 / -0.194 -2.748e-08 5.399e-09>
;;  angles : (#f(19.2754 55.552 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1702cac8  37.347 -100.0 208.253 / 1.505e-10 -2.396e-17 4.967e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.253 -71.121 208.253 / -0.064 5.742e-11 2.289e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.89 107.056 401.425 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.11 102.087 926.666 / -0.194 -2.748e-08 5.399e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.83 3.963 936.166 / -0.064 -2.794e-08 1.792e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.83 3.963 814.166 / -0.064 -2.794e-08 -0.2> #<bodyset-link #X6f14d58 RLEG_LINK2  457.703 1.98 804.366 / -0.094 0.147 -0.202> #<bodyset-link #X6f38680 RLEG_LINK3  396.227 -68.877 436.127 / -0.745 1.259 -0.705> #<bodyset-link #X130e0d78 RLEG_LINK4  26.761 -63.19 347.456 / -0.064 5.742e-11 -0.2> #<bodyset-link #X12a84e10 RLEG_LINK5  26.253 -71.121 308.253 / -0.064 5.742e-11 2.289e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.11 102.087 926.666 / -0.194 -2.748e-08 5.399e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.39 200.211 936.166 / -0.064 -2.794e-08 1.790e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.39 200.211 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.195 197.164 804.644 / 0.279 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.635 103.469 569.521 / -1.363 1.25 -1.312> #<bodyset-link #X1316f038 LLEG_LINK4  401.147 117.865 538.868 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.372 105.995 500.969 / -0.095 0.096 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.253 -71.121 208.253 / -0.064 5.742e-11 2.289e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.89 107.056 401.425 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.11 102.087 926.666 / -0.194 -2.748e-08 5.399e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.83 3.963 936.166 / -0.064 -2.794e-08 1.792e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.83 3.963 814.166 / -0.064 -2.794e-08 -0.2> #<bodyset-link #X6f14d58 RLEG_LINK2  457.703 1.98 804.366 / -0.094 0.147 -0.202> #<bodyset-link #X6f38680 RLEG_LINK3  396.227 -68.877 436.127 / -0.745 1.259 -0.705> #<bodyset-link #X130e0d78 RLEG_LINK4  26.761 -63.19 347.456 / -0.064 5.742e-11 -0.2> #<bodyset-link #X12a84e10 RLEG_LINK5  26.253 -71.121 308.253 / -0.064 5.742e-11 2.289e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.11 102.087 926.666 / -0.194 -2.748e-08 5.399e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.39 200.211 936.166 / -0.064 -2.794e-08 1.790e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.39 200.211 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.195 197.164 804.644 / 0.279 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.635 103.469 569.521 / -1.363 1.25 -1.312> #<bodyset-link #X1316f038 LLEG_LINK4  401.147 117.865 538.868 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.372 105.995 500.969 / -0.095 0.096 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.957 99.9715 1251.26) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.11 102.087 926.666 / -0.194 -2.748e-08 5.399e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  26.253 -71.121 208.253 / -0.064 5.742e-11 2.289e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.89 107.056 401.425 / -0.095 0.096 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.83 3.963 936.166 / -0.064 -2.794e-08 1.792e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.83 3.963 814.166 / -0.064 -2.794e-08 -0.2> #<bodyset-link #X6f14d58 RLEG_LINK2  457.703 1.98 804.366 / -0.094 0.147 -0.202> #<bodyset-link #X6f38680 RLEG_LINK3  396.227 -68.877 436.127 / -0.745 1.259 -0.705> #<bodyset-link #X130e0d78 RLEG_LINK4  26.761 -63.19 347.456 / -0.064 5.742e-11 -0.2> #<bodyset-link #X12a84e10 RLEG_LINK5  26.253 -71.121 308.253 / -0.064 5.742e-11 2.289e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.39 200.211 936.166 / -0.064 -2.794e-08 1.790e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.39 200.211 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.195 197.164 804.644 / 0.279 -0.809 -0.458> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.635 103.469 569.521 / -1.363 1.25 -1.312> #<bodyset-link #X1316f038 LLEG_LINK4  401.147 117.865 538.868 / -0.095 0.096 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.372 105.995 500.969 / -0.095 0.096 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.957 99.9715 1251.26) :target-centroid-pos #f(399.957 99.9715 1251.26) :fix-limbs-target-coords (#<coordinates #X1702cac8  37.347 -100.0 208.253 / 1.505e-10 -2.396e-17 4.967e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981239 0.192798 -2.800114e-08 477.11) (-0.192798 0.981239 -8.218221e-19 102.087) (2.747580e-08 5.398553e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint673537400) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.2754 55.552 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(37.3472 -100.0 208.253) :rot #2f((1.0 -1.505412e-10 -2.388204e-17) (1.505412e-10 1.0 -4.967168e-10) (2.395565e-17 4.967168e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.632077e-18 0.0) (0.0 1.0 0.0 0.0) (3.632077e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.632077e-18 0.0) (0.0 1.0 0.0 0.0) (3.632077e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.957 99.9715 1251.26) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 3.552714e-15) (0.0 1.0 0.0 0.0) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.632077e-18 0.0) (0.0 1.0 0.0 0.0) (3.632077e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.957 99.9715 1251.26) :target-centroid-pos #f(399.957 99.9715 1251.26) :fix-limbs-target-coords (list #<coordinates #X1702cac8  37.347 -100.0 208.253 / 1.505e-10 -2.396e-17 4.967e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-27-74-49-48-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-27-74-49-48-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.8947 -27.9817 3.749213e-07)/(30.8099/1)
;; dif-rot : #f(-1.789983e-09 3.165596e-11 0.063925)/(0.063925/0.017453)
;; dif-pos : #f(13.7622 -5.76307 0.030908)/(14.9202/1)
;; dif-rot : #f(-0.006085 -0.09518 0.094504)/(0.134266/0.017453)
;; cog-dif : #f(-0.066539 -4.93299)/(4.93344/5.0)
;;  coords : #<coordinates #X1325f8e0  477.007 102.088 -91.834 / -0.194 -2.748e-08 5.402e-09>
;;  angles : (#f(19.249 55.5217 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1396d738  38.371 -100.0 211.473 / 1.501e-10 -2.456e-17 4.952e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  27.29 -71.252 211.473 / -0.064 5.719e-11 2.284e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.917 107.03 401.42 / -0.095 0.095 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.007 102.088 926.666 / -0.194 -2.748e-08 5.402e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.714 3.967 936.166 / -0.064 -2.794e-08 1.789e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.714 3.967 814.166 / -0.064 -2.794e-08 -0.201> #<bodyset-link #X6f14d58 RLEG_LINK2  457.586 1.972 804.368 / -0.093 0.142 -0.203> #<bodyset-link #X6f38680 RLEG_LINK3  398.057 -69.54 435.936 / -0.768 1.266 -0.728> #<bodyset-link #X130e0d78 RLEG_LINK4  27.801 -63.272 350.666 / -0.064 5.719e-11 -0.201> #<bodyset-link #X12a84e10 RLEG_LINK5  27.29 -71.252 311.473 / -0.064 5.719e-11 2.284e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.007 102.088 926.666 / -0.194 -2.748e-08 5.402e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.299 200.209 936.166 / -0.064 -2.794e-08 1.786e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.299 200.209 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.104 197.163 804.644 / 0.279 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.628 103.525 569.598 / -1.362 1.249 -1.312> #<bodyset-link #X1316f038 LLEG_LINK4  401.143 117.846 538.865 / -0.095 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.378 105.975 500.965 / -0.095 0.095 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  27.29 -71.252 211.473 / -0.064 5.719e-11 2.284e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.917 107.03 401.42 / -0.095 0.095 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  477.007 102.088 926.666 / -0.194 -2.748e-08 5.402e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.714 3.967 936.166 / -0.064 -2.794e-08 1.789e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.714 3.967 814.166 / -0.064 -2.794e-08 -0.201> #<bodyset-link #X6f14d58 RLEG_LINK2  457.586 1.972 804.368 / -0.093 0.142 -0.203> #<bodyset-link #X6f38680 RLEG_LINK3  398.057 -69.54 435.936 / -0.768 1.266 -0.728> #<bodyset-link #X130e0d78 RLEG_LINK4  27.801 -63.272 350.666 / -0.064 5.719e-11 -0.201> #<bodyset-link #X12a84e10 RLEG_LINK5  27.29 -71.252 311.473 / -0.064 5.719e-11 2.284e-09>) (#<bodyset-link #X6ee5ff8 BODY  477.007 102.088 926.666 / -0.194 -2.748e-08 5.402e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.299 200.209 936.166 / -0.064 -2.794e-08 1.786e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.299 200.209 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.104 197.163 804.644 / 0.279 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.628 103.525 569.598 / -1.362 1.249 -1.312> #<bodyset-link #X1316f038 LLEG_LINK4  401.143 117.846 538.865 / -0.095 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.378 105.975 500.965 / -0.095 0.095 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.961 99.9732 1251.8) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  477.007 102.088 926.666 / -0.194 -2.748e-08 5.402e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  27.29 -71.252 211.473 / -0.064 5.719e-11 2.284e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.917 107.03 401.42 / -0.095 0.095 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.714 3.967 936.166 / -0.064 -2.794e-08 1.789e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.714 3.967 814.166 / -0.064 -2.794e-08 -0.201> #<bodyset-link #X6f14d58 RLEG_LINK2  457.586 1.972 804.368 / -0.093 0.142 -0.203> #<bodyset-link #X6f38680 RLEG_LINK3  398.057 -69.54 435.936 / -0.768 1.266 -0.728> #<bodyset-link #X130e0d78 RLEG_LINK4  27.801 -63.272 350.666 / -0.064 5.719e-11 -0.201> #<bodyset-link #X12a84e10 RLEG_LINK5  27.29 -71.252 311.473 / -0.064 5.719e-11 2.284e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.299 200.209 936.166 / -0.064 -2.794e-08 1.786e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.299 200.209 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.104 197.163 804.644 / 0.279 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.628 103.525 569.598 / -1.362 1.249 -1.312> #<bodyset-link #X1316f038 LLEG_LINK4  401.143 117.846 538.865 / -0.095 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.378 105.975 500.965 / -0.095 0.095 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.961 99.9732 1251.8) :target-centroid-pos #f(399.961 99.9732 1251.8) :fix-limbs-target-coords (#<coordinates #X1396d738  38.371 -100.0 211.473 / 1.501e-10 -2.456e-17 4.952e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981214 0.192924 -2.800114e-08 477.007) (-0.192924 0.981214 -8.218234e-19 102.088) (2.747510e-08 5.402097e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint299410072) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.249 55.5217 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(38.3708 -100.0 211.473) :rot #2f((1.0 -1.500765e-10 -2.449056e-17) (1.500765e-10 1.0 -4.951836e-10) (2.456364e-17 4.951836e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.252607e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-3.252607e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.252607e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-3.252607e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.961 99.9732 1251.8) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.252607e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (-3.252607e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.961 99.9732 1251.8) :target-centroid-pos #f(399.961 99.9732 1251.8) :fix-limbs-target-coords (list #<coordinates #X1396d738  38.371 -100.0 211.473 / 1.501e-10 -2.456e-17 4.952e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-28-09-57-63-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-28-09-57-63-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.8688 -27.8526 3.740886e-07)/(30.6818/1)
;; dif-rot : #f(-1.786363e-09 3.149121e-11 0.063796)/(0.063796/0.017453)
;; dif-pos : #f(13.7315 -5.74301 0.030726)/(14.8842/1)
;; dif-rot : #f(-0.006059 -0.09497 0.094307)/(0.133977/0.017453)
;; cog-dif : #f(-0.065378 -4.91625)/(4.91668/5.0)
;;  coords : #<coordinates #X1325f8e0  476.903 102.089 -91.834 / -0.194 -2.747e-08 5.406e-09>
;;  angles : (#f(19.2226 55.4914 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X31d4c3e0  39.41 -100.0 214.691 / 1.496e-10 -2.518e-17 4.936e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  28.343 -71.384 214.691 / -0.064 5.696e-11 2.279e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.944 107.005 401.414 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.903 102.089 926.666 / -0.194 -2.747e-08 5.406e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.598 3.97 936.166 / -0.064 -2.794e-08 1.785e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.598 3.97 814.166 / -0.064 -2.794e-08 -0.203> #<bodyset-link #X6f14d58 RLEG_LINK2  457.47 1.963 804.371 / -0.092 0.137 -0.204> #<bodyset-link #X6f38680 RLEG_LINK3  399.865 -70.205 435.761 / -0.792 1.272 -0.751> #<bodyset-link #X130e0d78 RLEG_LINK4  28.856 -63.354 353.874 / -0.064 5.696e-11 -0.203> #<bodyset-link #X12a84e10 RLEG_LINK5  28.343 -71.384 314.691 / -0.064 5.696e-11 2.279e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.903 102.089 926.666 / -0.194 -2.747e-08 5.406e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.208 200.208 936.166 / -0.064 -2.794e-08 1.783e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.208 200.208 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.014 197.161 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.62 103.58 569.675 / -1.362 1.249 -1.311> #<bodyset-link #X1316f038 LLEG_LINK4  401.139 117.826 538.862 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.384 105.954 500.962 / -0.094 0.095 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  28.343 -71.384 214.691 / -0.064 5.696e-11 2.279e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.944 107.005 401.414 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.903 102.089 926.666 / -0.194 -2.747e-08 5.406e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.598 3.97 936.166 / -0.064 -2.794e-08 1.785e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.598 3.97 814.166 / -0.064 -2.794e-08 -0.203> #<bodyset-link #X6f14d58 RLEG_LINK2  457.47 1.963 804.371 / -0.092 0.137 -0.204> #<bodyset-link #X6f38680 RLEG_LINK3  399.865 -70.205 435.761 / -0.792 1.272 -0.751> #<bodyset-link #X130e0d78 RLEG_LINK4  28.856 -63.354 353.874 / -0.064 5.696e-11 -0.203> #<bodyset-link #X12a84e10 RLEG_LINK5  28.343 -71.384 314.691 / -0.064 5.696e-11 2.279e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.903 102.089 926.666 / -0.194 -2.747e-08 5.406e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.208 200.208 936.166 / -0.064 -2.794e-08 1.783e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.208 200.208 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.014 197.161 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.62 103.58 569.675 / -1.362 1.249 -1.311> #<bodyset-link #X1316f038 LLEG_LINK4  401.139 117.826 538.862 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.384 105.954 500.962 / -0.094 0.095 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.964 99.9748 1252.35) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.903 102.089 926.666 / -0.194 -2.747e-08 5.406e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  28.343 -71.384 214.691 / -0.064 5.696e-11 2.279e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.944 107.005 401.414 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.598 3.97 936.166 / -0.064 -2.794e-08 1.785e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.598 3.97 814.166 / -0.064 -2.794e-08 -0.203> #<bodyset-link #X6f14d58 RLEG_LINK2  457.47 1.963 804.371 / -0.092 0.137 -0.204> #<bodyset-link #X6f38680 RLEG_LINK3  399.865 -70.205 435.761 / -0.792 1.272 -0.751> #<bodyset-link #X130e0d78 RLEG_LINK4  28.856 -63.354 353.874 / -0.064 5.696e-11 -0.203> #<bodyset-link #X12a84e10 RLEG_LINK5  28.343 -71.384 314.691 / -0.064 5.696e-11 2.279e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.208 200.208 936.166 / -0.064 -2.794e-08 1.783e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.208 200.208 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  496.014 197.161 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.62 103.58 569.675 / -1.362 1.249 -1.311> #<bodyset-link #X1316f038 LLEG_LINK4  401.139 117.826 538.862 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.384 105.954 500.962 / -0.094 0.095 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.964 99.9748 1252.35) :target-centroid-pos #f(399.964 99.9748 1252.35) :fix-limbs-target-coords (#<coordinates #X31d4c3e0  39.41 -100.0 214.691 / 1.496e-10 -2.518e-17 4.936e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981189 0.193051 -2.800114e-08 476.903) (-0.193051 0.981189 -8.218217e-19 102.089) (2.747440e-08 5.405650e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint325134440) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.2226 55.4914 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(39.4101 -100.0 214.691) :rot #2f((1.0 -1.496061e-10 -2.510668e-17) (1.496061e-10 1.0 -4.936313e-10) (2.517924e-17 4.936313e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.903128e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.903128e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.903128e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.903128e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.964 99.9748 1252.35) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.903128e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.903128e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.964 99.9748 1252.35) :target-centroid-pos #f(399.964 99.9748 1252.35) :fix-limbs-target-coords (list #<coordinates #X31d4c3e0  39.41 -100.0 214.691 / 1.496e-10 -2.518e-17 4.936e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-28-44-46-72-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-28-44-46-72-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.8428 -27.7226 3.732530e-07)/(30.5529/1)
;; dif-rot : #f(-1.782734e-09 3.132669e-11 0.063666)/(0.063666/0.017453)
;; dif-pos : #f(13.7009 -5.72297 0.030545)/(14.8482/1)
;; dif-rot : #f(-0.006033 -0.09476 0.09411)/(0.133688/0.017453)
;; cog-dif : #f(-0.064217 -4.89953)/(4.89995/5.0)
;;  coords : #<coordinates #X1325f8e0  476.799 102.091 -91.834 / -0.194 -2.747e-08 5.409e-09>
;;  angles : (#f(19.1962 55.461 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X301cef30  40.465 -100.0 217.907 / 1.491e-10 -2.580e-17 4.921e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  29.412 -71.516 217.907 / -0.064 5.673e-11 2.274e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.971 106.979 401.408 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.799 102.091 926.666 / -0.194 -2.747e-08 5.409e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.482 3.974 936.166 / -0.064 -2.794e-08 1.782e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.482 3.974 814.166 / -0.064 -2.794e-08 -0.204> #<bodyset-link #X6f14d58 RLEG_LINK2  457.353 1.954 804.373 / -0.091 0.132 -0.206> #<bodyset-link #X6f38680 RLEG_LINK3  401.652 -70.872 435.6 / -0.817 1.277 -0.775> #<bodyset-link #X130e0d78 RLEG_LINK4  29.927 -63.436 357.079 / -0.064 5.673e-11 -0.204> #<bodyset-link #X12a84e10 RLEG_LINK5  29.412 -71.516 317.907 / -0.064 5.673e-11 2.274e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.799 102.091 926.666 / -0.194 -2.747e-08 5.409e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.117 200.207 936.166 / -0.064 -2.794e-08 1.779e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.117 200.207 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.923 197.16 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.612 103.635 569.752 / -1.361 1.249 -1.311> #<bodyset-link #X1316f038 LLEG_LINK4  401.135 117.807 538.859 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.39 105.933 500.958 / -0.094 0.095 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  29.412 -71.516 217.907 / -0.064 5.673e-11 2.274e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.971 106.979 401.408 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.799 102.091 926.666 / -0.194 -2.747e-08 5.409e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.482 3.974 936.166 / -0.064 -2.794e-08 1.782e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.482 3.974 814.166 / -0.064 -2.794e-08 -0.204> #<bodyset-link #X6f14d58 RLEG_LINK2  457.353 1.954 804.373 / -0.091 0.132 -0.206> #<bodyset-link #X6f38680 RLEG_LINK3  401.652 -70.872 435.6 / -0.817 1.277 -0.775> #<bodyset-link #X130e0d78 RLEG_LINK4  29.927 -63.436 357.079 / -0.064 5.673e-11 -0.204> #<bodyset-link #X12a84e10 RLEG_LINK5  29.412 -71.516 317.907 / -0.064 5.673e-11 2.274e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.799 102.091 926.666 / -0.194 -2.747e-08 5.409e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.117 200.207 936.166 / -0.064 -2.794e-08 1.779e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.117 200.207 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.923 197.16 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.612 103.635 569.752 / -1.361 1.249 -1.311> #<bodyset-link #X1316f038 LLEG_LINK4  401.135 117.807 538.859 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.39 105.933 500.958 / -0.094 0.095 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.967 99.9763 1252.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.799 102.091 926.666 / -0.194 -2.747e-08 5.409e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  29.412 -71.516 217.907 / -0.064 5.673e-11 2.274e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.971 106.979 401.408 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.482 3.974 936.166 / -0.064 -2.794e-08 1.782e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.482 3.974 814.166 / -0.064 -2.794e-08 -0.204> #<bodyset-link #X6f14d58 RLEG_LINK2  457.353 1.954 804.373 / -0.091 0.132 -0.206> #<bodyset-link #X6f38680 RLEG_LINK3  401.652 -70.872 435.6 / -0.817 1.277 -0.775> #<bodyset-link #X130e0d78 RLEG_LINK4  29.927 -63.436 357.079 / -0.064 5.673e-11 -0.204> #<bodyset-link #X12a84e10 RLEG_LINK5  29.412 -71.516 317.907 / -0.064 5.673e-11 2.274e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.117 200.207 936.166 / -0.064 -2.794e-08 1.779e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.117 200.207 814.166 / -0.064 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.923 197.16 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.612 103.635 569.752 / -1.361 1.249 -1.311> #<bodyset-link #X1316f038 LLEG_LINK4  401.135 117.807 538.859 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.39 105.933 500.958 / -0.094 0.095 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.967 99.9763 1252.9) :target-centroid-pos #f(399.967 99.9763 1252.9) :fix-limbs-target-coords (#<coordinates #X301cef30  40.465 -100.0 217.907 / 1.491e-10 -2.580e-17 4.921e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981164 0.193178 -2.800114e-08 476.799) (-0.193178 0.981164 -8.218221e-19 102.091) (2.747370e-08 5.409210e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint168442376) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.1962 55.461 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(40.4651 -100.0 217.907) :rot #2f((1.0 -1.491298e-10 -2.573037e-17) (1.491298e-10 1.0 -4.920599e-10) (2.580240e-17 4.920599e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.692061e-18 0.0) (0.0 1.0 0.0 0.0) (-5.692061e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.692061e-18 0.0) (0.0 1.0 0.0 0.0) (-5.692061e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.967 99.9763 1252.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.692061e-18 0.0) (0.0 1.0 0.0 0.0) (-5.692061e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.967 99.9763 1252.9) :target-centroid-pos #f(399.967 99.9763 1252.9) :fix-limbs-target-coords (list #<coordinates #X301cef30  40.465 -100.0 217.907 / 1.491e-10 -2.580e-17 4.921e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-28-81-39-84-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-28-81-39-84-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.8167 -27.5919 3.724160e-07)/(30.4233/1)
;; dif-rot : #f(-1.779096e-09 3.116292e-11 0.063537)/(0.063537/0.017453)
;; dif-pos : #f(13.6703 -5.70293 0.030364)/(14.8122/1)
;; dif-rot : #f(-0.006007 -0.09455 0.093912)/(0.133399/0.017453)
;; cog-dif : #f(-0.063056 -4.88282)/(4.88323/5.0)
;;  coords : #<coordinates #X1325f8e0  476.696 102.092 -91.834 / -0.195 -2.747e-08 5.413e-09>
;;  angles : (#f(19.1698 55.4306 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X3058aa48  41.536 -100.0 221.12 / 1.486e-10 -2.643e-17 4.905e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  30.497 -71.65 221.12 / -0.064 5.650e-11 2.268e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.998 106.954 401.403 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.696 102.092 926.666 / -0.195 -2.747e-08 5.413e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.365 3.978 936.166 / -0.064 -2.794e-08 1.778e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.365 3.978 814.166 / -0.064 -2.794e-08 -0.205> #<bodyset-link #X6f14d58 RLEG_LINK2  457.236 1.945 804.376 / -0.09 0.127 -0.207> #<bodyset-link #X6f38680 RLEG_LINK3  403.418 -71.541 435.454 / -0.843 1.283 -0.8> #<bodyset-link #X130e0d78 RLEG_LINK4  31.014 -63.519 360.281 / -0.064 5.650e-11 -0.205> #<bodyset-link #X12a84e10 RLEG_LINK5  30.497 -71.65 321.12 / -0.064 5.650e-11 2.268e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.696 102.092 926.666 / -0.195 -2.747e-08 5.413e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.027 200.206 936.166 / -0.063 -2.794e-08 1.776e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.027 200.206 814.166 / -0.063 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.833 197.159 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.604 103.691 569.829 / -1.36 1.249 -1.31> #<bodyset-link #X1316f038 LLEG_LINK4  401.131 117.788 538.856 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.397 105.912 500.954 / -0.094 0.095 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  30.497 -71.65 221.12 / -0.064 5.650e-11 2.268e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.998 106.954 401.403 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.696 102.092 926.666 / -0.195 -2.747e-08 5.413e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.365 3.978 936.166 / -0.064 -2.794e-08 1.778e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.365 3.978 814.166 / -0.064 -2.794e-08 -0.205> #<bodyset-link #X6f14d58 RLEG_LINK2  457.236 1.945 804.376 / -0.09 0.127 -0.207> #<bodyset-link #X6f38680 RLEG_LINK3  403.418 -71.541 435.454 / -0.843 1.283 -0.8> #<bodyset-link #X130e0d78 RLEG_LINK4  31.014 -63.519 360.281 / -0.064 5.650e-11 -0.205> #<bodyset-link #X12a84e10 RLEG_LINK5  30.497 -71.65 321.12 / -0.064 5.650e-11 2.268e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.696 102.092 926.666 / -0.195 -2.747e-08 5.413e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  496.027 200.206 936.166 / -0.063 -2.794e-08 1.776e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.027 200.206 814.166 / -0.063 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.833 197.159 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.604 103.691 569.829 / -1.36 1.249 -1.31> #<bodyset-link #X1316f038 LLEG_LINK4  401.131 117.788 538.856 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.397 105.912 500.954 / -0.094 0.095 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.97 99.9777 1253.45) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.696 102.092 926.666 / -0.195 -2.747e-08 5.413e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  30.497 -71.65 221.12 / -0.064 5.650e-11 2.268e-09> #<cascaded-coords #X12422518 :lleg-end-coords  386.998 106.954 401.403 / -0.094 0.095 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.365 3.978 936.166 / -0.064 -2.794e-08 1.778e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.365 3.978 814.166 / -0.064 -2.794e-08 -0.205> #<bodyset-link #X6f14d58 RLEG_LINK2  457.236 1.945 804.376 / -0.09 0.127 -0.207> #<bodyset-link #X6f38680 RLEG_LINK3  403.418 -71.541 435.454 / -0.843 1.283 -0.8> #<bodyset-link #X130e0d78 RLEG_LINK4  31.014 -63.519 360.281 / -0.064 5.650e-11 -0.205> #<bodyset-link #X12a84e10 RLEG_LINK5  30.497 -71.65 321.12 / -0.064 5.650e-11 2.268e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  496.027 200.206 936.166 / -0.063 -2.794e-08 1.776e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  496.027 200.206 814.166 / -0.063 -2.794e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.833 197.159 804.644 / 0.28 -0.81 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.604 103.691 569.829 / -1.36 1.249 -1.31> #<bodyset-link #X1316f038 LLEG_LINK4  401.131 117.788 538.856 / -0.094 0.095 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.397 105.912 500.954 / -0.094 0.095 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.97 99.9777 1253.45) :target-centroid-pos #f(399.97 99.9777 1253.45) :fix-limbs-target-coords (#<coordinates #X3058aa48  41.536 -100.0 221.12 / 1.486e-10 -2.643e-17 4.905e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981139 0.193306 -2.800114e-08 476.696) (-0.193306 0.981139 -8.218217e-19 102.092) (2.747300e-08 5.412780e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint798687136) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.1698 55.4306 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(41.5357 -100.0 221.12) :rot #2f((1.0 -1.486478e-10 -2.636161e-17) (1.486478e-10 1.0 -4.904695e-10) (2.643310e-17 4.904695e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.331035e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-2.331035e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.331035e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-2.331035e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.97 99.9777 1253.45) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.331035e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-2.331035e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.97 99.9777 1253.45) :target-centroid-pos #f(399.97 99.9777 1253.45) :fix-limbs-target-coords (list #<coordinates #X3058aa48  41.536 -100.0 221.12 / 1.486e-10 -2.643e-17 4.905e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-29-16-91-78-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-29-16-91-78-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.7906 -27.4602 3.715758e-07)/(30.293/1)
;; dif-rot : #f(-1.775449e-09 3.099700e-11 0.063406)/(0.063406/0.017453)
;; dif-pos : #f(13.6398 -5.68292 0.030183)/(14.7763/1)
;; dif-rot : #f(-0.005982 -0.09434 0.093714)/(0.13311/0.017453)
;; cog-dif : #f(-0.061895 -4.86614)/(4.86653/5.0)
;;  coords : #<coordinates #X1325f8e0  476.593 102.093 -91.834 / -0.195 -2.747e-08 5.416e-09>
;;  angles : (#f(19.1433 55.4002 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X131f6958  42.622 -100.0 224.328 / 1.482e-10 -2.707e-17 4.889e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.597 -71.784 224.328 / -0.063 5.627e-11 2.263e-09> #<cascaded-coords #X12422518 :lleg-end-coords  387.025 106.929 401.397 / -0.094 0.094 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.593 102.093 926.666 / -0.195 -2.747e-08 5.416e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.249 3.981 936.166 / -0.063 -2.794e-08 1.774e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.249 3.981 814.166 / -0.063 -2.794e-08 -0.206> #<bodyset-link #X6f14d58 RLEG_LINK2  457.119 1.936 804.379 / -0.089 0.122 -0.208> #<bodyset-link #X6f38680 RLEG_LINK3  405.164 -72.211 435.322 / -0.869 1.288 -0.826> #<bodyset-link #X130e0d78 RLEG_LINK4  32.117 -63.602 363.479 / -0.063 5.627e-11 -0.206> #<bodyset-link #X12a84e10 RLEG_LINK5  31.597 -71.784 324.328 / -0.063 5.627e-11 2.263e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.593 102.093 926.666 / -0.195 -2.747e-08 5.416e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.936 200.204 936.166 / -0.063 -2.795e-08 1.772e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.936 200.204 814.166 / -0.063 -2.795e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.743 197.157 804.644 / 0.281 -0.811 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.596 103.747 569.906 / -1.359 1.249 -1.309> #<bodyset-link #X1316f038 LLEG_LINK4  401.127 117.768 538.853 / -0.094 0.094 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.403 105.891 500.951 / -0.094 0.094 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.597 -71.784 224.328 / -0.063 5.627e-11 2.263e-09> #<cascaded-coords #X12422518 :lleg-end-coords  387.025 106.929 401.397 / -0.094 0.094 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.593 102.093 926.666 / -0.195 -2.747e-08 5.416e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.249 3.981 936.166 / -0.063 -2.794e-08 1.774e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.249 3.981 814.166 / -0.063 -2.794e-08 -0.206> #<bodyset-link #X6f14d58 RLEG_LINK2  457.119 1.936 804.379 / -0.089 0.122 -0.208> #<bodyset-link #X6f38680 RLEG_LINK3  405.164 -72.211 435.322 / -0.869 1.288 -0.826> #<bodyset-link #X130e0d78 RLEG_LINK4  32.117 -63.602 363.479 / -0.063 5.627e-11 -0.206> #<bodyset-link #X12a84e10 RLEG_LINK5  31.597 -71.784 324.328 / -0.063 5.627e-11 2.263e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.593 102.093 926.666 / -0.195 -2.747e-08 5.416e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.936 200.204 936.166 / -0.063 -2.795e-08 1.772e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.936 200.204 814.166 / -0.063 -2.795e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.743 197.157 804.644 / 0.281 -0.811 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.596 103.747 569.906 / -1.359 1.249 -1.309> #<bodyset-link #X1316f038 LLEG_LINK4  401.127 117.768 538.853 / -0.094 0.094 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.403 105.891 500.951 / -0.094 0.094 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.972 99.9791 1254.01) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.593 102.093 926.666 / -0.195 -2.747e-08 5.416e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.597 -71.784 224.328 / -0.063 5.627e-11 2.263e-09> #<cascaded-coords #X12422518 :lleg-end-coords  387.025 106.929 401.397 / -0.094 0.094 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.249 3.981 936.166 / -0.063 -2.794e-08 1.774e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.249 3.981 814.166 / -0.063 -2.794e-08 -0.206> #<bodyset-link #X6f14d58 RLEG_LINK2  457.119 1.936 804.379 / -0.089 0.122 -0.208> #<bodyset-link #X6f38680 RLEG_LINK3  405.164 -72.211 435.322 / -0.869 1.288 -0.826> #<bodyset-link #X130e0d78 RLEG_LINK4  32.117 -63.602 363.479 / -0.063 5.627e-11 -0.206> #<bodyset-link #X12a84e10 RLEG_LINK5  31.597 -71.784 324.328 / -0.063 5.627e-11 2.263e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  495.936 200.204 936.166 / -0.063 -2.795e-08 1.772e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.936 200.204 814.166 / -0.063 -2.795e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.743 197.157 804.644 / 0.281 -0.811 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.596 103.747 569.906 / -1.359 1.249 -1.309> #<bodyset-link #X1316f038 LLEG_LINK4  401.127 117.768 538.853 / -0.094 0.094 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.403 105.891 500.951 / -0.094 0.094 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.972 99.9791 1254.01) :target-centroid-pos #f(399.972 99.9791 1254.01) :fix-limbs-target-coords (#<coordinates #X131f6958  42.622 -100.0 224.328 / 1.482e-10 -2.707e-17 4.889e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981113 0.193433 -2.800114e-08 476.593) (-0.193433 0.981113 -8.218213e-19 102.093) (2.747229e-08 5.416357e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint769058040) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.1433 55.4002 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(42.6221 -100.0 224.328) :rot #2f((1.0 -1.481601e-10 -2.700035e-17) (1.481601e-10 1.0 -4.888601e-10) (2.707129e-17 4.888601e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -1.292470e-26 0.0) (-2.775558e-17 1.0 -8.272816e-25 0.0) (1.292470e-26 8.272816e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.331035e-18 0.0) (0.0 1.0 0.0 0.0) (2.331035e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -1.292470e-26 0.0) (-2.775558e-17 1.0 -8.272816e-25 0.0) (1.292470e-26 8.272816e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.331035e-18 0.0) (0.0 1.0 0.0 0.0) (2.331035e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.972 99.9791 1254.01) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 -1.292470e-26 0.0) (-2.775558e-17 1.0 -8.272816e-25 0.0) (1.292470e-26 8.272816e-25 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.331035e-18 0.0) (0.0 1.0 0.0 0.0) (2.331035e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.972 99.9791 1254.01) :target-centroid-pos #f(399.972 99.9791 1254.01) :fix-limbs-target-coords (list #<coordinates #X131f6958  42.622 -100.0 224.328 / 1.482e-10 -2.707e-17 4.889e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-29-52-27-63-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-29-52-27-63-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(12.7644 -27.3278 3.707338e-07)/(30.1619/1)
;; dif-rot : #f(-1.771795e-09 3.082921e-11 0.063276)/(0.063276/0.017453)
;; dif-pos : #f(13.6093 -5.66291 0.030003)/(14.7405/1)
;; dif-rot : #f(-0.005956 -0.094131 0.093516)/(0.132821/0.017453)
;; cog-dif : #f(-0.060735 -4.84947)/(4.84985/5.0)
;;  coords : #<coordinates #X1325f8e0  476.489 102.094 -91.834 / -0.195 -2.747e-08 5.420e-09>
;;  angles : (#f(19.1168 55.3698 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X9c8c188  43.724 -100.0 227.532 / 1.477e-10 -2.772e-17 4.872e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.713 -71.92 227.532 / -0.063 5.604e-11 2.258e-09> #<cascaded-coords #X12422518 :lleg-end-coords  387.051 106.903 401.391 / -0.094 0.094 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.489 102.094 926.666 / -0.195 -2.747e-08 5.420e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.133 3.985 936.166 / -0.063 -2.795e-08 1.771e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.133 3.985 814.166 / -0.063 -2.795e-08 -0.208> #<bodyset-link #X6f14d58 RLEG_LINK2  457.003 1.926 804.381 / -0.088 0.117 -0.209> #<bodyset-link #X6f38680 RLEG_LINK3  406.891 -72.883 435.204 / -0.896 1.293 -0.852> #<bodyset-link #X130e0d78 RLEG_LINK4  33.235 -63.685 366.672 / -0.063 5.604e-11 -0.208> #<bodyset-link #X12a84e10 RLEG_LINK5  32.713 -71.92 327.532 / -0.063 5.604e-11 2.258e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.489 102.094 926.666 / -0.195 -2.747e-08 5.420e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.845 200.203 936.166 / -0.063 -2.795e-08 1.768e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.845 200.203 814.166 / -0.063 -2.795e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.653 197.156 804.644 / 0.281 -0.811 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.588 103.802 569.983 / -1.358 1.249 -1.309> #<bodyset-link #X1316f038 LLEG_LINK4  401.123 117.749 538.851 / -0.094 0.094 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.409 105.87 500.947 / -0.094 0.094 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.713 -71.92 227.532 / -0.063 5.604e-11 2.258e-09> #<cascaded-coords #X12422518 :lleg-end-coords  387.051 106.903 401.391 / -0.094 0.094 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.489 102.094 926.666 / -0.195 -2.747e-08 5.420e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.133 3.985 936.166 / -0.063 -2.795e-08 1.771e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.133 3.985 814.166 / -0.063 -2.795e-08 -0.208> #<bodyset-link #X6f14d58 RLEG_LINK2  457.003 1.926 804.381 / -0.088 0.117 -0.209> #<bodyset-link #X6f38680 RLEG_LINK3  406.891 -72.883 435.204 / -0.896 1.293 -0.852> #<bodyset-link #X130e0d78 RLEG_LINK4  33.235 -63.685 366.672 / -0.063 5.604e-11 -0.208> #<bodyset-link #X12a84e10 RLEG_LINK5  32.713 -71.92 327.532 / -0.063 5.604e-11 2.258e-09>) (#<bodyset-link #X6ee5ff8 BODY  476.489 102.094 926.666 / -0.195 -2.747e-08 5.420e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.845 200.203 936.166 / -0.063 -2.795e-08 1.768e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.845 200.203 814.166 / -0.063 -2.795e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.653 197.156 804.644 / 0.281 -0.811 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.588 103.802 569.983 / -1.358 1.249 -1.309> #<bodyset-link #X1316f038 LLEG_LINK4  401.123 117.749 538.851 / -0.094 0.094 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.409 105.87 500.947 / -0.094 0.094 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.975 99.9803 1254.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.489 102.094 926.666 / -0.195 -2.747e-08 5.420e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.713 -71.92 227.532 / -0.063 5.604e-11 2.258e-09> #<cascaded-coords #X12422518 :lleg-end-coords  387.051 106.903 401.391 / -0.094 0.094 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.133 3.985 936.166 / -0.063 -2.795e-08 1.771e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.133 3.985 814.166 / -0.063 -2.795e-08 -0.208> #<bodyset-link #X6f14d58 RLEG_LINK2  457.003 1.926 804.381 / -0.088 0.117 -0.209> #<bodyset-link #X6f38680 RLEG_LINK3  406.891 -72.883 435.204 / -0.896 1.293 -0.852> #<bodyset-link #X130e0d78 RLEG_LINK4  33.235 -63.685 366.672 / -0.063 5.604e-11 -0.208> #<bodyset-link #X12a84e10 RLEG_LINK5  32.713 -71.92 327.532 / -0.063 5.604e-11 2.258e-09>) (#<bodyset-link #X1258dac0 LLEG_LINK0  495.845 200.203 936.166 / -0.063 -2.795e-08 1.768e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.845 200.203 814.166 / -0.063 -2.795e-08 -0.31> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.653 197.156 804.644 / 0.281 -0.811 -0.459> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.588 103.802 569.983 / -1.358 1.249 -1.309> #<bodyset-link #X1316f038 LLEG_LINK4  401.123 117.749 538.851 / -0.094 0.094 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.409 105.87 500.947 / -0.094 0.094 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.975 99.9803 1254.57) :target-centroid-pos #f(399.975 99.9803 1254.57) :fix-limbs-target-coords (#<coordinates #X9c8c188  43.724 -100.0 227.532 / 1.477e-10 -2.772e-17 4.872e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981088 0.193562 -2.800114e-08 476.489) (-0.193562 0.981088 -8.218230e-19 102.094) (2.747159e-08 5.419943e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint773208736) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.1168 55.3698 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(43.724 -100.0 227.532) :rot #2f((1.0 -1.476666e-10 -2.764655e-17) (1.476666e-10 1.0 -4.872320e-10) (2.771695e-17 4.872320e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.363573e-36 3.144186e-18 0.0) (1.363573e-36 1.0 -8.673617e-19 2.842171e-14) (-3.144186e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.363573e-36 3.144186e-18 0.0) (1.363573e-36 1.0 -8.673617e-19 2.842171e-14) (-3.144186e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.975 99.9803 1254.57) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 0.0 0.0) (0.0 1.0 0.0 -1.421085e-14) (0.0 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.363573e-36 3.144186e-18 0.0) (1.363573e-36 1.0 -8.673617e-19 2.842171e-14) (-3.144186e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.975 99.9803 1254.57) :target-centroid-pos #f(399.975 99.9803 1254.57) :fix-limbs-target-coords (list #<coordinates #X9c8c188  43.724 -100.0 227.532 / 1.477e-10 -2.772e-17 4.872e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-29-87-70-57-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-29-87-70-57-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(14.1794 -27.6624 0.117281)/(31.085/1)
;; dif-rot : #f(-0.000543 -0.008457 0.065908)/(0.066451/0.017453)
;; dif-pos : #f(13.5046 -5.72456 0.031129)/(14.6678/1)
;; dif-rot : #f(-0.005982 -0.09331 0.094136)/(0.132681/0.017453)
;; cog-dif : #f(-0.048354 -4.90945)/(4.90969/5.0)
;;  coords : #<coordinates #X1325f8e0  476.41 102.239 -91.834 / -0.194 -2.748e-08 5.397e-09>
;;  angles : (#f(19.0904 55.3394 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2874d610  44.842 -100.0 230.73 / 1.472e-10 -2.837e-17 4.856e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.514 -71.464 230.74 / -0.066 0.008 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  387.164 106.963 401.37 / -0.094 0.093 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.41 102.239 926.666 / -0.194 -2.748e-08 5.397e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.136 4.114 936.166 / -0.064 -2.794e-08 1.794e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.136 4.114 814.166 / -0.064 -2.794e-08 -0.209> #<bodyset-link #X6f14d58 RLEG_LINK2  457.003 2.042 804.385 / -0.088 0.113 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  408.451 -73.413 435.129 / -0.925 1.298 -0.88> #<bodyset-link #X130e0d78 RLEG_LINK4  34.236 -63.277 369.863 / -0.066 0.008 -0.209> #<bodyset-link #X12a84e10 RLEG_LINK5  33.358 -71.546 330.737 / -0.066 0.008 0.0>) (#<bodyset-link #X6ee5ff8 BODY  476.41 102.239 926.666 / -0.194 -2.748e-08 5.397e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.685 200.364 936.166 / -0.064 -2.794e-08 1.792e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.685 200.364 814.166 / -0.064 -2.794e-08 -0.311> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.489 197.313 804.645 / 0.281 -0.811 -0.46> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.564 103.676 570.266 / -1.357 1.248 -1.307> #<bodyset-link #X1316f038 LLEG_LINK4  401.131 117.824 538.834 / -0.094 0.093 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.44 105.928 500.933 / -0.094 0.093 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.514 -71.464 230.74 / -0.066 0.008 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  387.164 106.963 401.37 / -0.094 0.093 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.41 102.239 926.666 / -0.194 -2.748e-08 5.397e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.136 4.114 936.166 / -0.064 -2.794e-08 1.794e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.136 4.114 814.166 / -0.064 -2.794e-08 -0.209> #<bodyset-link #X6f14d58 RLEG_LINK2  457.003 2.042 804.385 / -0.088 0.113 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  408.451 -73.413 435.129 / -0.925 1.298 -0.88> #<bodyset-link #X130e0d78 RLEG_LINK4  34.236 -63.277 369.863 / -0.066 0.008 -0.209> #<bodyset-link #X12a84e10 RLEG_LINK5  33.358 -71.546 330.737 / -0.066 0.008 0.0>) (#<bodyset-link #X6ee5ff8 BODY  476.41 102.239 926.666 / -0.194 -2.748e-08 5.397e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.685 200.364 936.166 / -0.064 -2.794e-08 1.792e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.685 200.364 814.166 / -0.064 -2.794e-08 -0.311> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.489 197.313 804.645 / 0.281 -0.811 -0.46> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.564 103.676 570.266 / -1.357 1.248 -1.307> #<bodyset-link #X1316f038 LLEG_LINK4  401.131 117.824 538.834 / -0.094 0.093 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.44 105.928 500.933 / -0.094 0.093 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.977 99.9815 1255.14) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.41 102.239 926.666 / -0.194 -2.748e-08 5.397e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.514 -71.464 230.74 / -0.066 0.008 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  387.164 106.963 401.37 / -0.094 0.093 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.136 4.114 936.166 / -0.064 -2.794e-08 1.794e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.136 4.114 814.166 / -0.064 -2.794e-08 -0.209> #<bodyset-link #X6f14d58 RLEG_LINK2  457.003 2.042 804.385 / -0.088 0.113 -0.211> #<bodyset-link #X6f38680 RLEG_LINK3  408.451 -73.413 435.129 / -0.925 1.298 -0.88> #<bodyset-link #X130e0d78 RLEG_LINK4  34.236 -63.277 369.863 / -0.066 0.008 -0.209> #<bodyset-link #X12a84e10 RLEG_LINK5  33.358 -71.546 330.737 / -0.066 0.008 0.0>) (#<bodyset-link #X1258dac0 LLEG_LINK0  495.685 200.364 936.166 / -0.064 -2.794e-08 1.792e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.685 200.364 814.166 / -0.064 -2.794e-08 -0.311> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.489 197.313 804.645 / 0.281 -0.811 -0.46> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.564 103.676 570.266 / -1.357 1.248 -1.307> #<bodyset-link #X1316f038 LLEG_LINK4  401.131 117.824 538.834 / -0.094 0.093 -0.312> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.44 105.928 500.933 / -0.094 0.093 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.977 99.9815 1255.14) :target-centroid-pos #f(399.977 99.9815 1255.14) :fix-limbs-target-coords (#<coordinates #X2874d610  44.842 -100.0 230.73 / 1.472e-10 -2.837e-17 4.856e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981249 0.192744 -2.800114e-08 476.41) (-0.192744 0.981249 -8.218217e-19 102.239) (2.747609e-08 5.397060e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint809626640) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.0904 55.3394 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(44.8416 -100.0 230.73) :rot #2f((1.0 -1.471675e-10 -2.830019e-17) (1.471675e-10 1.0 -4.855852e-10) (2.837002e-17 4.855852e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.487771e-19 -7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (7.487771e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.589415e-19 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (7.589415e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.487771e-19 -7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (7.487771e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.589415e-19 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (7.589415e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.977 99.9815 1255.14) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.487771e-19 -7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (7.487771e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.589415e-19 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (7.589415e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.977 99.9815 1255.14) :target-centroid-pos #f(399.977 99.9815 1255.14) :fix-limbs-target-coords (list #<coordinates #X2874d610  44.842 -100.0 230.73 / 1.472e-10 -2.837e-17 4.856e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-30-34-92-70-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-30-34-92-70-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(15.6181 -27.9889 0.240747)/(32.0525/1)
;; dif-rot : #f(-0.001111 -0.017094 0.068589)/(0.070696/0.017453)
;; dif-pos : #f(13.4011 -5.78449 0.032233)/(14.5963/1)
;; dif-rot : #f(-0.006006 -0.092498 0.094741)/(0.132544/0.017453)
;; cog-dif : #f(-0.03565 -4.96815)/(4.96828/5.0)
;;  coords : #<coordinates #X1325f8e0  476.331 102.382 -91.834 / -0.193 -2.748e-08 5.375e-09>
;;  angles : (#f(19.0639 55.309 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X130cb5e0  45.975 -100.0 233.922 / 1.467e-10 -2.903e-17 4.839e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.31 -71.006 233.964 / -0.069 0.017 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.275 107.021 401.348 / -0.095 0.093 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.331 102.382 926.666 / -0.193 -2.748e-08 5.375e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.136 4.242 936.166 / -0.065 -2.794e-08 1.817e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.136 4.242 814.166 / -0.065 -2.794e-08 -0.211> #<bodyset-link #X6f14d58 RLEG_LINK2  457.001 2.154 804.388 / -0.088 0.108 -0.212> #<bodyset-link #X6f38680 RLEG_LINK3  409.999 -73.948 435.065 / -0.955 1.302 -0.908> #<bodyset-link #X130e0d78 RLEG_LINK4  35.256 -62.874 373.058 / -0.069 0.017 -0.211> #<bodyset-link #X12a84e10 RLEG_LINK5  34.014 -71.176 333.949 / -0.069 0.017 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.331 102.382 926.666 / -0.193 -2.748e-08 5.375e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.525 200.523 936.166 / -0.065 -2.794e-08 1.814e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.525 200.523 814.166 / -0.065 -2.794e-08 -0.311> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.327 197.467 804.647 / 0.281 -0.812 -0.461> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.54 103.553 570.547 / -1.356 1.248 -1.305> #<bodyset-link #X1316f038 LLEG_LINK4  401.139 117.897 538.818 / -0.095 0.093 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.47 105.985 500.919 / -0.095 0.093 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.31 -71.006 233.964 / -0.069 0.017 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.275 107.021 401.348 / -0.095 0.093 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.331 102.382 926.666 / -0.193 -2.748e-08 5.375e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.136 4.242 936.166 / -0.065 -2.794e-08 1.817e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.136 4.242 814.166 / -0.065 -2.794e-08 -0.211> #<bodyset-link #X6f14d58 RLEG_LINK2  457.001 2.154 804.388 / -0.088 0.108 -0.212> #<bodyset-link #X6f38680 RLEG_LINK3  409.999 -73.948 435.065 / -0.955 1.302 -0.908> #<bodyset-link #X130e0d78 RLEG_LINK4  35.256 -62.874 373.058 / -0.069 0.017 -0.211> #<bodyset-link #X12a84e10 RLEG_LINK5  34.014 -71.176 333.949 / -0.069 0.017 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.331 102.382 926.666 / -0.193 -2.748e-08 5.375e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.525 200.523 936.166 / -0.065 -2.794e-08 1.814e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.525 200.523 814.166 / -0.065 -2.794e-08 -0.311> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.327 197.467 804.647 / 0.281 -0.812 -0.461> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.54 103.553 570.547 / -1.356 1.248 -1.305> #<bodyset-link #X1316f038 LLEG_LINK4  401.139 117.897 538.818 / -0.095 0.093 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.47 105.985 500.919 / -0.095 0.093 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.98 99.9826 1255.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.331 102.382 926.666 / -0.193 -2.748e-08 5.375e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.31 -71.006 233.964 / -0.069 0.017 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.275 107.021 401.348 / -0.095 0.093 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.136 4.242 936.166 / -0.065 -2.794e-08 1.817e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.136 4.242 814.166 / -0.065 -2.794e-08 -0.211> #<bodyset-link #X6f14d58 RLEG_LINK2  457.001 2.154 804.388 / -0.088 0.108 -0.212> #<bodyset-link #X6f38680 RLEG_LINK3  409.999 -73.948 435.065 / -0.955 1.302 -0.908> #<bodyset-link #X130e0d78 RLEG_LINK4  35.256 -62.874 373.058 / -0.069 0.017 -0.211> #<bodyset-link #X12a84e10 RLEG_LINK5  34.014 -71.176 333.949 / -0.069 0.017 0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  495.525 200.523 936.166 / -0.065 -2.794e-08 1.814e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.525 200.523 814.166 / -0.065 -2.794e-08 -0.311> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.327 197.467 804.647 / 0.281 -0.812 -0.461> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.54 103.553 570.547 / -1.356 1.248 -1.305> #<bodyset-link #X1316f038 LLEG_LINK4  401.139 117.897 538.818 / -0.095 0.093 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.47 105.985 500.919 / -0.095 0.093 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.98 99.9826 1255.71) :target-centroid-pos #f(399.98 99.9826 1255.71) :fix-limbs-target-coords (#<coordinates #X130cb5e0  45.975 -100.0 233.922 / 1.467e-10 -2.903e-17 4.839e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981406 0.191943 -2.800114e-08 476.331) (-0.191943 0.981406 -8.218226e-19 102.382) (2.748049e-08 5.374613e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint120514144) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.0639 55.309 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(45.9748 -100.0 233.922) :rot #2f((1.0 -1.466628e-10 -2.896120e-17) (1.466628e-10 1.0 -4.839197e-10) (2.903048e-17 4.839197e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.151965e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (-1.151965e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 4.701977e-38 1.084202e-19 -5.684342e-14) (4.701977e-38 1.0 -8.673617e-19 -2.842171e-14) (-1.084202e-19 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.151965e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (-1.151965e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 4.701977e-38 1.084202e-19 -5.684342e-14) (4.701977e-38 1.0 -8.673617e-19 -2.842171e-14) (-1.084202e-19 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.98 99.9826 1255.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.151965e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (-1.151965e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 4.701977e-38 1.084202e-19 -5.684342e-14) (4.701977e-38 1.0 -8.673617e-19 -2.842171e-14) (-1.084202e-19 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.98 99.9826 1255.71) :target-centroid-pos #f(399.98 99.9826 1255.71) :fix-limbs-target-coords (list #<coordinates #X130cb5e0  45.975 -100.0 233.922 / 1.467e-10 -2.903e-17 4.839e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-30-70-27-76-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-30-70-27-76-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(17.0449 -28.2963 0.367298)/(33.0355/1)
;; dif-rot : #f(-0.001691 -0.0257 0.071252)/(0.075764/0.017453)
;; dif-pos : #f(13.3008 -5.84081 0.033284)/(14.5267/1)
;; dif-rot : #f(-0.006027 -0.09171 0.095312)/(0.132406/0.017453)
;; cog-dif : #f(-0.022915 -5.02376)/(5.02382/5.0)
;;  coords : #<coordinates #X1325f8e0  476.25 102.519 -91.834 / -0.192 -2.748e-08 5.353e-09>
;;  angles : (#f(19.0374 55.2786 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X143df748  47.123 -100.0 237.107 / 1.462e-10 -2.970e-17 4.822e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.133 -70.562 237.2 / -0.071 0.026 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.383 107.075 401.328 / -0.095 0.092 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.25 102.519 926.666 / -0.192 -2.748e-08 5.353e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.132 4.364 936.166 / -0.066 -2.794e-08 1.838e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.132 4.364 814.166 / -0.066 -2.794e-08 -0.212> #<bodyset-link #X6f14d58 RLEG_LINK2  456.994 2.262 804.391 / -0.088 0.104 -0.213> #<bodyset-link #X6f38680 RLEG_LINK3  411.537 -74.493 435.01 / -0.986 1.306 -0.937> #<bodyset-link #X130e0d78 RLEG_LINK4  36.298 -62.489 376.257 / -0.071 0.026 -0.212> #<bodyset-link #X12a84e10 RLEG_LINK5  34.694 -70.822 337.167 / -0.071 0.026 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.25 102.519 926.666 / -0.192 -2.748e-08 5.353e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.368 200.675 936.166 / -0.066 -2.794e-08 1.836e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.368 200.675 814.166 / -0.066 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.167 197.615 804.648 / 0.282 -0.813 -0.462> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.516 103.438 570.819 / -1.354 1.247 -1.303> #<bodyset-link #X1316f038 LLEG_LINK4  401.146 117.967 538.802 / -0.095 0.092 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.499 106.038 500.906 / -0.095 0.092 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.133 -70.562 237.2 / -0.071 0.026 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.383 107.075 401.328 / -0.095 0.092 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.25 102.519 926.666 / -0.192 -2.748e-08 5.353e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.132 4.364 936.166 / -0.066 -2.794e-08 1.838e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.132 4.364 814.166 / -0.066 -2.794e-08 -0.212> #<bodyset-link #X6f14d58 RLEG_LINK2  456.994 2.262 804.391 / -0.088 0.104 -0.213> #<bodyset-link #X6f38680 RLEG_LINK3  411.537 -74.493 435.01 / -0.986 1.306 -0.937> #<bodyset-link #X130e0d78 RLEG_LINK4  36.298 -62.489 376.257 / -0.071 0.026 -0.212> #<bodyset-link #X12a84e10 RLEG_LINK5  34.694 -70.822 337.167 / -0.071 0.026 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.25 102.519 926.666 / -0.192 -2.748e-08 5.353e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.368 200.675 936.166 / -0.066 -2.794e-08 1.836e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.368 200.675 814.166 / -0.066 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.167 197.615 804.648 / 0.282 -0.813 -0.462> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.516 103.438 570.819 / -1.354 1.247 -1.303> #<bodyset-link #X1316f038 LLEG_LINK4  401.146 117.967 538.802 / -0.095 0.092 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.499 106.038 500.906 / -0.095 0.092 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.982 99.9837 1256.28) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.25 102.519 926.666 / -0.192 -2.748e-08 5.353e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.133 -70.562 237.2 / -0.071 0.026 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.383 107.075 401.328 / -0.095 0.092 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.132 4.364 936.166 / -0.066 -2.794e-08 1.838e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.132 4.364 814.166 / -0.066 -2.794e-08 -0.212> #<bodyset-link #X6f14d58 RLEG_LINK2  456.994 2.262 804.391 / -0.088 0.104 -0.213> #<bodyset-link #X6f38680 RLEG_LINK3  411.537 -74.493 435.01 / -0.986 1.306 -0.937> #<bodyset-link #X130e0d78 RLEG_LINK4  36.298 -62.489 376.257 / -0.071 0.026 -0.212> #<bodyset-link #X12a84e10 RLEG_LINK5  34.694 -70.822 337.167 / -0.071 0.026 0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  495.368 200.675 936.166 / -0.066 -2.794e-08 1.836e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.368 200.675 814.166 / -0.066 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.167 197.615 804.648 / 0.282 -0.813 -0.462> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.516 103.438 570.819 / -1.354 1.247 -1.303> #<bodyset-link #X1316f038 LLEG_LINK4  401.146 117.967 538.802 / -0.095 0.092 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.499 106.038 500.906 / -0.095 0.092 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.982 99.9837 1256.28) :target-centroid-pos #f(399.982 99.9837 1256.28) :fix-limbs-target-coords (#<coordinates #X143df748  47.123 -100.0 237.107 / 1.462e-10 -2.970e-17 4.822e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981555 0.191179 -2.800114e-08 476.25) (-0.191179 0.981555 -8.218221e-19 102.519) (2.748466e-08 5.353226e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint609420224) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.0374 55.2786 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(47.1235 -100.0 237.107) :rot #2f((1.0 -1.461524e-10 -2.962957e-17) (1.461524e-10 1.0 -4.822358e-10) (2.969827e-17 4.822358e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-19 3.552714e-15) (0.0 1.0 0.0 0.0) (-6.234162e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.957338e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-3.957338e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-19 3.552714e-15) (0.0 1.0 0.0 0.0) (-6.234162e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.957338e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-3.957338e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.982 99.9837 1256.28) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-19 3.552714e-15) (0.0 1.0 0.0 0.0) (-6.234162e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.957338e-18 0.0) (0.0 1.0 0.0 2.842171e-14) (-3.957338e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.982 99.9837 1256.28) :target-centroid-pos #f(399.982 99.9837 1256.28) :fix-limbs-target-coords (list #<coordinates #X143df748  47.123 -100.0 237.107 / 1.462e-10 -2.970e-17 4.822e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-31-06-07-55-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-31-06-07-55-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(18.4598 -28.5852 0.496669)/(34.0312/1)
;; dif-rot : #f(-0.00228 -0.034275 0.073898)/(0.081491/0.017453)
;; dif-pos : #f(13.2033 -5.89366 0.034281)/(14.459/1)
;; dif-rot : #f(-0.006044 -0.090945 0.09585)/(0.132268/0.017453)
;; cog-dif : #f(-0.010168 -5.0764)/(5.07641/5.0)
;;  coords : #<coordinates #X1325f8e0  476.168 102.65 -91.834 / -0.192 -2.749e-08 5.333e-09>
;;  angles : (#f(19.0109 55.2482 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X11b6bd08  48.288 -100.0 240.284 / 1.456e-10 -3.037e-17 4.805e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.983 -70.129 240.45 / -0.074 0.034 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.488 107.125 401.308 / -0.096 0.091 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.168 102.65 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.123 4.481 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.123 4.481 814.166 / -0.066 -2.794e-08 -0.214> #<bodyset-link #X6f14d58 RLEG_LINK2  456.982 2.365 804.394 / -0.088 0.1 -0.215> #<bodyset-link #X6f38680 RLEG_LINK3  413.065 -75.046 434.963 / -1.018 1.31 -0.968> #<bodyset-link #X130e0d78 RLEG_LINK4  37.363 -62.119 379.457 / -0.074 0.034 -0.214> #<bodyset-link #X12a84e10 RLEG_LINK5  35.399 -70.484 340.391 / -0.074 0.034 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.168 102.65 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.213 200.82 936.166 / -0.066 -2.794e-08 1.857e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.213 200.82 814.166 / -0.066 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.009 197.756 804.649 / 0.282 -0.813 -0.463> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.492 103.329 571.084 / -1.353 1.247 -1.301> #<bodyset-link #X1316f038 LLEG_LINK4  401.153 118.032 538.787 / -0.096 0.091 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.527 106.087 500.893 / -0.096 0.091 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.983 -70.129 240.45 / -0.074 0.034 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.488 107.125 401.308 / -0.096 0.091 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.168 102.65 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.123 4.481 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.123 4.481 814.166 / -0.066 -2.794e-08 -0.214> #<bodyset-link #X6f14d58 RLEG_LINK2  456.982 2.365 804.394 / -0.088 0.1 -0.215> #<bodyset-link #X6f38680 RLEG_LINK3  413.065 -75.046 434.963 / -1.018 1.31 -0.968> #<bodyset-link #X130e0d78 RLEG_LINK4  37.363 -62.119 379.457 / -0.074 0.034 -0.214> #<bodyset-link #X12a84e10 RLEG_LINK5  35.399 -70.484 340.391 / -0.074 0.034 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.168 102.65 926.666 / -0.192 -2.749e-08 5.333e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.213 200.82 936.166 / -0.066 -2.794e-08 1.857e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.213 200.82 814.166 / -0.066 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.009 197.756 804.649 / 0.282 -0.813 -0.463> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.492 103.329 571.084 / -1.353 1.247 -1.301> #<bodyset-link #X1316f038 LLEG_LINK4  401.153 118.032 538.787 / -0.096 0.091 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.527 106.087 500.893 / -0.096 0.091 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.984 99.9846 1256.86) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.168 102.65 926.666 / -0.192 -2.749e-08 5.333e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.983 -70.129 240.45 / -0.074 0.034 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.488 107.125 401.308 / -0.096 0.091 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.123 4.481 936.166 / -0.066 -2.794e-08 1.859e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.123 4.481 814.166 / -0.066 -2.794e-08 -0.214> #<bodyset-link #X6f14d58 RLEG_LINK2  456.982 2.365 804.394 / -0.088 0.1 -0.215> #<bodyset-link #X6f38680 RLEG_LINK3  413.065 -75.046 434.963 / -1.018 1.31 -0.968> #<bodyset-link #X130e0d78 RLEG_LINK4  37.363 -62.119 379.457 / -0.074 0.034 -0.214> #<bodyset-link #X12a84e10 RLEG_LINK5  35.399 -70.484 340.391 / -0.074 0.034 0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  495.213 200.82 936.166 / -0.066 -2.794e-08 1.857e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.213 200.82 814.166 / -0.066 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  495.009 197.756 804.649 / 0.282 -0.813 -0.463> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.492 103.329 571.084 / -1.353 1.247 -1.301> #<bodyset-link #X1316f038 LLEG_LINK4  401.153 118.032 538.787 / -0.096 0.091 -0.313> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.527 106.087 500.893 / -0.096 0.091 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.984 99.9846 1256.86) :target-centroid-pos #f(399.984 99.9846 1256.86) :fix-limbs-target-coords (#<coordinates #X11b6bd08  48.288 -100.0 240.284 / 1.456e-10 -3.037e-17 4.805e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981697 0.190452 -2.800114e-08 476.168) (-0.190452 0.981697 -8.218221e-19 102.65) (2.748862e-08 5.332865e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint828991416) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.0109 55.2482 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(48.2877 -100.0 240.284) :rot #2f((1.0 -1.456365e-10 -3.030524e-17) (1.456365e-10 1.0 -4.805334e-10) (3.037336e-17 4.805334e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.046432e-18 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (-2.046432e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.089976e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (3.089976e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.046432e-18 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (-2.046432e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.089976e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (3.089976e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.984 99.9846 1256.86) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.046432e-18 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (-2.046432e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.089976e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (3.089976e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.984 99.9846 1256.86) :target-centroid-pos #f(399.984 99.9846 1256.86) :fix-limbs-target-coords (list #<coordinates #X11b6bd08  48.288 -100.0 240.284 / 1.456e-10 -3.037e-17 4.805e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-31-39-66-73-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-31-39-66-73-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(19.8627 -28.8559 0.628606)/(35.0369/1)
;; dif-rot : #f(-0.002879 -0.042817 0.076527)/(0.087738/0.017453)
;; dif-pos : #f(13.1086 -5.94318 0.035225)/(14.393/1)
;; dif-rot : #f(-0.006059 -0.090202 0.096357)/(0.132128/0.017453)
;; cog-dif : #f(0.002574 -5.12615)/(5.12615/5.0)
;;  coords : #<coordinates #X1325f8e0  476.084 102.776 -91.834 / -0.191 -2.749e-08 5.313e-09>
;;  angles : (#f(18.9845 55.2179 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X30bf98a8  49.467 -100.0 243.452 / 1.451e-10 -3.106e-17 4.788e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.861 -69.709 243.711 / -0.077 0.043 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.589 107.172 401.289 / -0.096 0.09 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.084 102.776 926.666 / -0.191 -2.749e-08 5.313e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.108 4.593 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.108 4.593 814.166 / -0.067 -2.794e-08 -0.215> #<bodyset-link #X6f14d58 RLEG_LINK2  456.965 2.463 804.397 / -0.088 0.095 -0.216> #<bodyset-link #X6f38680 RLEG_LINK3  414.584 -75.608 434.926 / -1.05 1.314 -0.998> #<bodyset-link #X130e0d78 RLEG_LINK4  38.45 -61.766 382.66 / -0.077 0.043 -0.215> #<bodyset-link #X12a84e10 RLEG_LINK5  36.127 -70.16 343.619 / -0.077 0.043 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.084 102.776 926.666 / -0.191 -2.749e-08 5.313e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.06 200.959 936.166 / -0.067 -2.794e-08 1.877e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.06 200.959 814.166 / -0.067 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.854 197.892 804.651 / 0.282 -0.814 -0.464> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.469 103.228 571.341 / -1.352 1.246 -1.299> #<bodyset-link #X1316f038 LLEG_LINK4  401.159 118.094 538.772 / -0.096 0.09 -0.314> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.554 106.134 500.881 / -0.096 0.09 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.861 -69.709 243.711 / -0.077 0.043 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.589 107.172 401.289 / -0.096 0.09 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.084 102.776 926.666 / -0.191 -2.749e-08 5.313e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.108 4.593 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.108 4.593 814.166 / -0.067 -2.794e-08 -0.215> #<bodyset-link #X6f14d58 RLEG_LINK2  456.965 2.463 804.397 / -0.088 0.095 -0.216> #<bodyset-link #X6f38680 RLEG_LINK3  414.584 -75.608 434.926 / -1.05 1.314 -0.998> #<bodyset-link #X130e0d78 RLEG_LINK4  38.45 -61.766 382.66 / -0.077 0.043 -0.215> #<bodyset-link #X12a84e10 RLEG_LINK5  36.127 -70.16 343.619 / -0.077 0.043 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.084 102.776 926.666 / -0.191 -2.749e-08 5.313e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  495.06 200.959 936.166 / -0.067 -2.794e-08 1.877e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.06 200.959 814.166 / -0.067 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.854 197.892 804.651 / 0.282 -0.814 -0.464> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.469 103.228 571.341 / -1.352 1.246 -1.299> #<bodyset-link #X1316f038 LLEG_LINK4  401.159 118.094 538.772 / -0.096 0.09 -0.314> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.554 106.134 500.881 / -0.096 0.09 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.985 99.9856 1257.44) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.084 102.776 926.666 / -0.191 -2.749e-08 5.313e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.861 -69.709 243.711 / -0.077 0.043 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.589 107.172 401.289 / -0.096 0.09 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.108 4.593 936.166 / -0.067 -2.794e-08 1.878e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.108 4.593 814.166 / -0.067 -2.794e-08 -0.215> #<bodyset-link #X6f14d58 RLEG_LINK2  456.965 2.463 804.397 / -0.088 0.095 -0.216> #<bodyset-link #X6f38680 RLEG_LINK3  414.584 -75.608 434.926 / -1.05 1.314 -0.998> #<bodyset-link #X130e0d78 RLEG_LINK4  38.45 -61.766 382.66 / -0.077 0.043 -0.215> #<bodyset-link #X12a84e10 RLEG_LINK5  36.127 -70.16 343.619 / -0.077 0.043 0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  495.06 200.959 936.166 / -0.067 -2.794e-08 1.877e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  495.06 200.959 814.166 / -0.067 -2.794e-08 -0.312> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.854 197.892 804.651 / 0.282 -0.814 -0.464> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.469 103.228 571.341 / -1.352 1.246 -1.299> #<bodyset-link #X1316f038 LLEG_LINK4  401.159 118.094 538.772 / -0.096 0.09 -0.314> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.554 106.134 500.881 / -0.096 0.09 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.985 99.9856 1257.44) :target-centroid-pos #f(399.985 99.9856 1257.44) :fix-limbs-target-coords (#<coordinates #X30bf98a8  49.467 -100.0 243.452 / 1.451e-10 -3.106e-17 4.788e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981831 0.18976 -2.800114e-08 476.084) (-0.18976 0.981831 -8.218226e-19 102.776) (2.749237e-08 5.313494e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint221092624) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.9845 55.2179 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(49.4674 -100.0 243.452) :rot #2f((1.0 -1.451150e-10 -3.098816e-17) (1.451150e-10 1.0 -4.788128e-10) (3.105570e-17 4.788128e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.513817e-17 0.0) (-2.775558e-17 1.0 -2.168404e-19 0.0) (-1.513817e-17 2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.547875e-18 0.0) (0.0 1.0 0.0 0.0) (-2.547875e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.513817e-17 0.0) (-2.775558e-17 1.0 -2.168404e-19 0.0) (-1.513817e-17 2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.547875e-18 0.0) (0.0 1.0 0.0 0.0) (-2.547875e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.985 99.9856 1257.44) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.513817e-17 0.0) (-2.775558e-17 1.0 -2.168404e-19 0.0) (-1.513817e-17 2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.547875e-18 0.0) (0.0 1.0 0.0 0.0) (-2.547875e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.985 99.9856 1257.44) :target-centroid-pos #f(399.985 99.9856 1257.44) :fix-limbs-target-coords (list #<coordinates #X30bf98a8  49.467 -100.0 243.452 / 1.451e-10 -3.106e-17 4.788e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-31-73-33-86-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-31-73-33-86-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(21.2536 -29.109 0.762857)/(36.0504/1)
;; dif-rot : #f(-0.003485 -0.051325 0.07914)/(0.094391/0.017453)
;; dif-pos : #f(13.0166 -5.98948 0.036118)/(14.3285/1)
;; dif-rot : #f(-0.006071 -0.089481 0.096833)/(0.131986/0.017453)
;; cog-dif : #f(0.015296 -5.17313)/(5.17315/5.0)
;;  coords : #<coordinates #X1325f8e0  476.0 102.896 -91.834 / -0.19 -2.750e-08 5.295e-09>
;;  angles : (#f(18.9581 55.1876 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2edd6860  50.663 -100.0 246.611 / 1.446e-10 -3.175e-17 4.771e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.767 -69.3 246.983 / -0.079 0.051 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.687 107.215 401.271 / -0.097 0.09 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.0 102.896 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.09 4.701 936.166 / -0.068 -2.794e-08 1.897e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.09 4.701 814.166 / -0.068 -2.794e-08 -0.217> #<bodyset-link #X6f14d58 RLEG_LINK2  456.944 2.556 804.4 / -0.088 0.091 -0.218> #<bodyset-link #X6f38680 RLEG_LINK3  416.094 -76.178 434.898 / -1.083 1.317 -1.03> #<bodyset-link #X130e0d78 RLEG_LINK4  39.56 -61.428 385.862 / -0.079 0.051 -0.217> #<bodyset-link #X12a84e10 RLEG_LINK5  36.878 -69.851 346.851 / -0.079 0.051 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.0 102.896 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.91 201.092 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.91 201.092 814.166 / -0.068 -2.794e-08 -0.313> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.702 198.021 804.652 / 0.282 -0.815 -0.465> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.445 103.133 571.591 / -1.351 1.245 -1.297> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 118.151 538.759 / -0.097 0.09 -0.314> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.58 106.177 500.869 / -0.097 0.09 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.767 -69.3 246.983 / -0.079 0.051 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.687 107.215 401.271 / -0.097 0.09 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  476.0 102.896 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.09 4.701 936.166 / -0.068 -2.794e-08 1.897e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.09 4.701 814.166 / -0.068 -2.794e-08 -0.217> #<bodyset-link #X6f14d58 RLEG_LINK2  456.944 2.556 804.4 / -0.088 0.091 -0.218> #<bodyset-link #X6f38680 RLEG_LINK3  416.094 -76.178 434.898 / -1.083 1.317 -1.03> #<bodyset-link #X130e0d78 RLEG_LINK4  39.56 -61.428 385.862 / -0.079 0.051 -0.217> #<bodyset-link #X12a84e10 RLEG_LINK5  36.878 -69.851 346.851 / -0.079 0.051 0.001>) (#<bodyset-link #X6ee5ff8 BODY  476.0 102.896 926.666 / -0.19 -2.750e-08 5.295e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.91 201.092 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.91 201.092 814.166 / -0.068 -2.794e-08 -0.313> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.702 198.021 804.652 / 0.282 -0.815 -0.465> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.445 103.133 571.591 / -1.351 1.245 -1.297> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 118.151 538.759 / -0.097 0.09 -0.314> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.58 106.177 500.869 / -0.097 0.09 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.987 99.9864 1258.02) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  476.0 102.896 926.666 / -0.19 -2.750e-08 5.295e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.767 -69.3 246.983 / -0.079 0.051 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  387.687 107.215 401.271 / -0.097 0.09 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.09 4.701 936.166 / -0.068 -2.794e-08 1.897e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.09 4.701 814.166 / -0.068 -2.794e-08 -0.217> #<bodyset-link #X6f14d58 RLEG_LINK2  456.944 2.556 804.4 / -0.088 0.091 -0.218> #<bodyset-link #X6f38680 RLEG_LINK3  416.094 -76.178 434.898 / -1.083 1.317 -1.03> #<bodyset-link #X130e0d78 RLEG_LINK4  39.56 -61.428 385.862 / -0.079 0.051 -0.217> #<bodyset-link #X12a84e10 RLEG_LINK5  36.878 -69.851 346.851 / -0.079 0.051 0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  494.91 201.092 936.166 / -0.068 -2.794e-08 1.895e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.91 201.092 814.166 / -0.068 -2.794e-08 -0.313> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.702 198.021 804.652 / 0.282 -0.815 -0.465> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.445 103.133 571.591 / -1.351 1.245 -1.297> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 118.151 538.759 / -0.097 0.09 -0.314> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.58 106.177 500.869 / -0.097 0.09 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.987 99.9864 1258.02) :target-centroid-pos #f(399.987 99.9864 1258.02) :fix-limbs-target-coords (#<coordinates #X2edd6860  50.663 -100.0 246.611 / 1.446e-10 -3.175e-17 4.771e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981957 0.189102 -2.800114e-08 476.0) (-0.189102 0.981957 -8.218226e-19 102.896) (2.749593e-08 5.295083e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint827936440) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.9581 55.1876 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(50.6625 -100.0 246.611) :rot #2f((1.0 -1.445880e-10 -3.167829e-17) (1.445880e-10 1.0 -4.770740e-10) (3.174525e-17 4.770740e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.451003e-18 0.0) (0.0 1.0 0.0 0.0) (-6.451003e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.451003e-18 0.0) (0.0 1.0 0.0 0.0) (-6.451003e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.987 99.9864 1258.02) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.451003e-18 0.0) (0.0 1.0 0.0 0.0) (-6.451003e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.987 99.9864 1258.02) :target-centroid-pos #f(399.987 99.9864 1258.02) :fix-limbs-target-coords (list #<coordinates #X2edd6860  50.663 -100.0 246.611 / 1.446e-10 -3.175e-17 4.771e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-32-07-31-77-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-32-07-31-77-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(22.6322 -29.3449 0.899178)/(37.0696/1)
;; dif-rot : #f(-0.004098 -0.059797 0.081739)/(0.101359/0.017453)
;; dif-pos : #f(12.9272 -6.03269 0.036961)/(14.2656/1)
;; dif-rot : #f(-0.00608 -0.08878 0.097279)/(0.131841/0.017453)
;; cog-dif : #f(0.027984 -5.2174)/(5.21748/5.0)
;;  coords : #<coordinates #X1325f8e0  475.915 103.011 -91.834 / -0.19 -2.750e-08 5.278e-09>
;;  angles : (#f(18.9316 55.1573 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2f1a1120  51.873 -100.0 249.759 / 1.441e-10 -3.244e-17 4.753e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.701 -68.903 250.265 / -0.082 0.06 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.782 107.255 401.253 / -0.097 0.089 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.915 103.011 926.666 / -0.19 -2.750e-08 5.278e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.067 4.804 936.166 / -0.068 -2.794e-08 1.914e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.067 4.804 814.166 / -0.068 -2.794e-08 -0.218> #<bodyset-link #X6f14d58 RLEG_LINK2  456.919 2.645 804.403 / -0.088 0.087 -0.219> #<bodyset-link #X6f38680 RLEG_LINK3  417.595 -76.756 434.878 / -1.117 1.32 -1.062> #<bodyset-link #X130e0d78 RLEG_LINK4  40.692 -61.105 389.064 / -0.082 0.06 -0.219> #<bodyset-link #X12a84e10 RLEG_LINK5  37.654 -69.557 350.086 / -0.082 0.06 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.915 103.011 926.666 / -0.19 -2.750e-08 5.278e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.762 201.219 936.166 / -0.068 -2.794e-08 1.913e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.762 201.219 814.166 / -0.068 -2.794e-08 -0.313> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.552 198.145 804.653 / 0.283 -0.815 -0.466> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.422 103.045 571.834 / -1.349 1.245 -1.295> #<bodyset-link #X1316f038 LLEG_LINK4  401.169 118.206 538.745 / -0.097 0.089 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.605 106.217 500.858 / -0.097 0.089 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.701 -68.903 250.265 / -0.082 0.06 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.782 107.255 401.253 / -0.097 0.089 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.915 103.011 926.666 / -0.19 -2.750e-08 5.278e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.067 4.804 936.166 / -0.068 -2.794e-08 1.914e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.067 4.804 814.166 / -0.068 -2.794e-08 -0.218> #<bodyset-link #X6f14d58 RLEG_LINK2  456.919 2.645 804.403 / -0.088 0.087 -0.219> #<bodyset-link #X6f38680 RLEG_LINK3  417.595 -76.756 434.878 / -1.117 1.32 -1.062> #<bodyset-link #X130e0d78 RLEG_LINK4  40.692 -61.105 389.064 / -0.082 0.06 -0.219> #<bodyset-link #X12a84e10 RLEG_LINK5  37.654 -69.557 350.086 / -0.082 0.06 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.915 103.011 926.666 / -0.19 -2.750e-08 5.278e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.762 201.219 936.166 / -0.068 -2.794e-08 1.913e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.762 201.219 814.166 / -0.068 -2.794e-08 -0.313> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.552 198.145 804.653 / 0.283 -0.815 -0.466> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.422 103.045 571.834 / -1.349 1.245 -1.295> #<bodyset-link #X1316f038 LLEG_LINK4  401.169 118.206 538.745 / -0.097 0.089 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.605 106.217 500.858 / -0.097 0.089 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.989 99.9873 1258.61) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.915 103.011 926.666 / -0.19 -2.750e-08 5.278e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.701 -68.903 250.265 / -0.082 0.06 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.782 107.255 401.253 / -0.097 0.089 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.067 4.804 936.166 / -0.068 -2.794e-08 1.914e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.067 4.804 814.166 / -0.068 -2.794e-08 -0.218> #<bodyset-link #X6f14d58 RLEG_LINK2  456.919 2.645 804.403 / -0.088 0.087 -0.219> #<bodyset-link #X6f38680 RLEG_LINK3  417.595 -76.756 434.878 / -1.117 1.32 -1.062> #<bodyset-link #X130e0d78 RLEG_LINK4  40.692 -61.105 389.064 / -0.082 0.06 -0.219> #<bodyset-link #X12a84e10 RLEG_LINK5  37.654 -69.557 350.086 / -0.082 0.06 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  494.762 201.219 936.166 / -0.068 -2.794e-08 1.913e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.762 201.219 814.166 / -0.068 -2.794e-08 -0.313> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.552 198.145 804.653 / 0.283 -0.815 -0.466> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.422 103.045 571.834 / -1.349 1.245 -1.295> #<bodyset-link #X1316f038 LLEG_LINK4  401.169 118.206 538.745 / -0.097 0.089 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.605 106.217 500.858 / -0.097 0.089 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.989 99.9873 1258.61) :target-centroid-pos #f(399.989 99.9873 1258.61) :fix-limbs-target-coords (#<coordinates #X2f1a1120  51.873 -100.0 249.759 / 1.441e-10 -3.244e-17 4.753e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982077 0.188478 -2.800114e-08 475.915) (-0.188478 0.982077 -8.218221e-19 103.011) (2.749929e-08 5.277601e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint771711456) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.9316 55.1573 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(51.873 -100.0 249.759) :rot #2f((1.0 -1.440555e-10 -3.237559e-17) (1.440555e-10 1.0 -4.753171e-10) (3.244195e-17 4.753171e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.168404e-18 0.0) (0.0 1.0 0.0 0.0) (-2.168404e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.764716e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (2.764716e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.168404e-18 0.0) (0.0 1.0 0.0 0.0) (-2.168404e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.764716e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (2.764716e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.989 99.9873 1258.61) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.168404e-18 0.0) (0.0 1.0 0.0 0.0) (-2.168404e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.764716e-18 5.684342e-14) (0.0 1.0 0.0 2.842171e-14) (2.764716e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.989 99.9873 1258.61) :target-centroid-pos #f(399.989 99.9873 1258.61) :fix-limbs-target-coords (list #<coordinates #X2f1a1120  51.873 -100.0 249.759 / 1.441e-10 -3.244e-17 4.753e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-32-41-96-53-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-32-41-96-53-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(23.9986 -29.5641 1.03733)/(38.0926/1)
;; dif-rot : #f(-0.004716 -0.068231 0.084324)/(0.108574/0.017453)
;; dif-pos : #f(12.8403 -6.0729 0.037753)/(14.2041/1)
;; dif-rot : #f(-0.006087 -0.0881 0.097697)/(0.131694/0.017453)
;; cog-dif : #f(0.040624 -5.25906)/(5.25922/5.0)
;;  coords : #<coordinates #X1325f8e0  475.828 103.121 -91.834 / -0.189 -2.750e-08 5.261e-09>
;;  angles : (#f(18.9053 55.1271 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X312a8110  53.099 -100.0 252.897 / 1.435e-10 -3.315e-17 4.735e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.664 -68.518 253.555 / -0.084 0.068 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.875 107.292 401.236 / -0.098 0.088 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.828 103.121 926.666 / -0.189 -2.750e-08 5.261e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.039 4.902 936.166 / -0.069 -2.793e-08 1.931e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.039 4.902 814.166 / -0.069 -2.793e-08 -0.22> #<bodyset-link #X6f14d58 RLEG_LINK2  456.889 2.729 804.407 / -0.088 0.083 -0.22> #<bodyset-link #X6f38680 RLEG_LINK3  419.087 -77.341 434.867 / -1.152 1.323 -1.096> #<bodyset-link #X130e0d78 RLEG_LINK4  41.845 -60.797 392.265 / -0.084 0.068 -0.22> #<bodyset-link #X12a84e10 RLEG_LINK5  38.454 -69.276 353.321 / -0.084 0.068 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.828 103.121 926.666 / -0.189 -2.750e-08 5.261e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.617 201.341 936.166 / -0.069 -2.793e-08 1.930e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.617 201.341 814.166 / -0.069 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.404 198.263 804.654 / 0.283 -0.816 -0.467> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.4 102.963 572.07 / -1.348 1.244 -1.294> #<bodyset-link #X1316f038 LLEG_LINK4  401.174 118.257 538.732 / -0.098 0.088 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.63 106.255 500.847 / -0.098 0.088 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.664 -68.518 253.555 / -0.084 0.068 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.875 107.292 401.236 / -0.098 0.088 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.828 103.121 926.666 / -0.189 -2.750e-08 5.261e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.039 4.902 936.166 / -0.069 -2.793e-08 1.931e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.039 4.902 814.166 / -0.069 -2.793e-08 -0.22> #<bodyset-link #X6f14d58 RLEG_LINK2  456.889 2.729 804.407 / -0.088 0.083 -0.22> #<bodyset-link #X6f38680 RLEG_LINK3  419.087 -77.341 434.867 / -1.152 1.323 -1.096> #<bodyset-link #X130e0d78 RLEG_LINK4  41.845 -60.797 392.265 / -0.084 0.068 -0.22> #<bodyset-link #X12a84e10 RLEG_LINK5  38.454 -69.276 353.321 / -0.084 0.068 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.828 103.121 926.666 / -0.189 -2.750e-08 5.261e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.617 201.341 936.166 / -0.069 -2.793e-08 1.930e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.617 201.341 814.166 / -0.069 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.404 198.263 804.654 / 0.283 -0.816 -0.467> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.4 102.963 572.07 / -1.348 1.244 -1.294> #<bodyset-link #X1316f038 LLEG_LINK4  401.174 118.257 538.732 / -0.098 0.088 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.63 106.255 500.847 / -0.098 0.088 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.99 99.988 1259.2) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.828 103.121 926.666 / -0.189 -2.750e-08 5.261e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.664 -68.518 253.555 / -0.084 0.068 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.875 107.292 401.236 / -0.098 0.088 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.039 4.902 936.166 / -0.069 -2.793e-08 1.931e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.039 4.902 814.166 / -0.069 -2.793e-08 -0.22> #<bodyset-link #X6f14d58 RLEG_LINK2  456.889 2.729 804.407 / -0.088 0.083 -0.22> #<bodyset-link #X6f38680 RLEG_LINK3  419.087 -77.341 434.867 / -1.152 1.323 -1.096> #<bodyset-link #X130e0d78 RLEG_LINK4  41.845 -60.797 392.265 / -0.084 0.068 -0.22> #<bodyset-link #X12a84e10 RLEG_LINK5  38.454 -69.276 353.321 / -0.084 0.068 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  494.617 201.341 936.166 / -0.069 -2.793e-08 1.930e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.617 201.341 814.166 / -0.069 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.404 198.263 804.654 / 0.283 -0.816 -0.467> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.4 102.963 572.07 / -1.348 1.244 -1.294> #<bodyset-link #X1316f038 LLEG_LINK4  401.174 118.257 538.732 / -0.098 0.088 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.63 106.255 500.847 / -0.098 0.088 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.99 99.988 1259.2) :target-centroid-pos #f(399.99 99.988 1259.2) :fix-limbs-target-coords (#<coordinates #X312a8110  53.099 -100.0 252.897 / 1.435e-10 -3.315e-17 4.735e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982191 0.187886 -2.800114e-08 475.828) (-0.187886 0.982191 -8.218226e-19 103.121) (2.750246e-08 5.261022e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint668727368) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.9053 55.1271 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(53.0989 -100.0 252.897) :rot #2f((1.0 -1.435177e-10 -3.308001e-17) (1.435177e-10 1.0 -4.735423e-10) (3.314577e-17 4.735423e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 2.192799e-17 0.0) (-2.775558e-17 1.0 -1.734723e-18 0.0) (-2.192799e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.336809e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (-4.336809e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 2.192799e-17 0.0) (-2.775558e-17 1.0 -1.734723e-18 0.0) (-2.192799e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.336809e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (-4.336809e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.99 99.988 1259.2) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 2.192799e-17 0.0) (-2.775558e-17 1.0 -1.734723e-18 0.0) (-2.192799e-17 1.734723e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.336809e-19 0.0) (0.0 1.0 0.0 -2.842171e-14) (-4.336809e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.99 99.988 1259.2) :target-centroid-pos #f(399.99 99.988 1259.2) :fix-limbs-target-coords (list #<coordinates #X312a8110  53.099 -100.0 252.897 / 1.435e-10 -3.315e-17 4.735e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-32-76-90-64-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-32-76-90-64-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(25.3526 -29.767 1.17708)/(39.1179/1)
;; dif-rot : #f(-0.00534 -0.076627 0.086895)/(0.115978/0.017453)
;; dif-pos : #f(12.7558 -6.11024 0.038497)/(14.1438/1)
;; dif-rot : #f(-0.006091 -0.087439 0.098088)/(0.131544/0.017453)
;; cog-dif : #f(0.053202 -5.29819)/(5.29845/5.0)
;;  coords : #<coordinates #X1325f8e0  475.74 103.227 -91.834 / -0.188 -2.751e-08 5.245e-09>
;;  angles : (#f(18.8789 55.0969 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X271fa6f8  54.34 -100.0 256.022 / 1.430e-10 -3.386e-17 4.717e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.655 -68.143 256.853 / -0.087 0.077 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.964 107.325 401.22 / -0.098 0.088 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.74 103.227 926.666 / -0.188 -2.751e-08 5.245e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.008 4.997 936.166 / -0.07 -2.793e-08 1.946e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.008 4.997 814.166 / -0.07 -2.793e-08 -0.221> #<bodyset-link #X6f14d58 RLEG_LINK2  456.855 2.809 804.41 / -0.087 0.079 -0.222> #<bodyset-link #X6f38680 RLEG_LINK3  420.571 -77.933 434.864 / -1.187 1.326 -1.129> #<bodyset-link #X130e0d78 RLEG_LINK4  43.021 -60.502 395.463 / -0.087 0.077 -0.222> #<bodyset-link #X12a84e10 RLEG_LINK5  39.277 -69.008 356.558 / -0.087 0.077 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.74 103.227 926.666 / -0.188 -2.751e-08 5.245e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.473 201.456 936.166 / -0.07 -2.793e-08 1.946e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.473 201.456 814.166 / -0.07 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.258 198.376 804.655 / 0.283 -0.816 -0.468> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.378 102.887 572.3 / -1.347 1.244 -1.292> #<bodyset-link #X1316f038 LLEG_LINK4  401.178 118.305 538.72 / -0.098 0.088 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.653 106.29 500.836 / -0.098 0.088 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.655 -68.143 256.853 / -0.087 0.077 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.964 107.325 401.22 / -0.098 0.088 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.74 103.227 926.666 / -0.188 -2.751e-08 5.245e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  457.008 4.997 936.166 / -0.07 -2.793e-08 1.946e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.008 4.997 814.166 / -0.07 -2.793e-08 -0.221> #<bodyset-link #X6f14d58 RLEG_LINK2  456.855 2.809 804.41 / -0.087 0.079 -0.222> #<bodyset-link #X6f38680 RLEG_LINK3  420.571 -77.933 434.864 / -1.187 1.326 -1.129> #<bodyset-link #X130e0d78 RLEG_LINK4  43.021 -60.502 395.463 / -0.087 0.077 -0.222> #<bodyset-link #X12a84e10 RLEG_LINK5  39.277 -69.008 356.558 / -0.087 0.077 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.74 103.227 926.666 / -0.188 -2.751e-08 5.245e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.473 201.456 936.166 / -0.07 -2.793e-08 1.946e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.473 201.456 814.166 / -0.07 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.258 198.376 804.655 / 0.283 -0.816 -0.468> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.378 102.887 572.3 / -1.347 1.244 -1.292> #<bodyset-link #X1316f038 LLEG_LINK4  401.178 118.305 538.72 / -0.098 0.088 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.653 106.29 500.836 / -0.098 0.088 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.992 99.9887 1259.8) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.74 103.227 926.666 / -0.188 -2.751e-08 5.245e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.655 -68.143 256.853 / -0.087 0.077 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  387.964 107.325 401.22 / -0.098 0.088 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  457.008 4.997 936.166 / -0.07 -2.793e-08 1.946e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  457.008 4.997 814.166 / -0.07 -2.793e-08 -0.221> #<bodyset-link #X6f14d58 RLEG_LINK2  456.855 2.809 804.41 / -0.087 0.079 -0.222> #<bodyset-link #X6f38680 RLEG_LINK3  420.571 -77.933 434.864 / -1.187 1.326 -1.129> #<bodyset-link #X130e0d78 RLEG_LINK4  43.021 -60.502 395.463 / -0.087 0.077 -0.222> #<bodyset-link #X12a84e10 RLEG_LINK5  39.277 -69.008 356.558 / -0.087 0.077 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  494.473 201.456 936.166 / -0.07 -2.793e-08 1.946e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.473 201.456 814.166 / -0.07 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.258 198.376 804.655 / 0.283 -0.816 -0.468> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.378 102.887 572.3 / -1.347 1.244 -1.292> #<bodyset-link #X1316f038 LLEG_LINK4  401.178 118.305 538.72 / -0.098 0.088 -0.315> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.653 106.29 500.836 / -0.098 0.088 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.992 99.9887 1259.8) :target-centroid-pos #f(399.992 99.9887 1259.8) :fix-limbs-target-coords (#<coordinates #X271fa6f8  54.34 -100.0 256.022 / 1.430e-10 -3.386e-17 4.717e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982298 0.187325 -2.800114e-08 475.74) (-0.187325 0.982298 -8.218226e-19 103.227) (2.750546e-08 5.245320e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint671733616) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.8789 55.0969 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(54.34 -100.0 256.022) :rot #2f((1.0 -1.429744e-10 -3.379149e-17) (1.429744e-10 1.0 -4.717497e-10) (3.385664e-17 4.717497e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.472334e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (4.472334e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.559423e-18 0.0) (0.0 1.0 0.0 0.0) (-6.559423e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.472334e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (4.472334e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.559423e-18 0.0) (0.0 1.0 0.0 0.0) (-6.559423e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.992 99.9887 1259.8) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.472334e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (4.472334e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.559423e-18 0.0) (0.0 1.0 0.0 0.0) (-6.559423e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.992 99.9887 1259.8) :target-centroid-pos #f(399.992 99.9887 1259.8) :fix-limbs-target-coords (list #<coordinates #X271fa6f8  54.34 -100.0 256.022 / 1.430e-10 -3.386e-17 4.717e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-33-12-52-66-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-33-12-52-66-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(26.6941 -29.9538 1.31821)/(40.144/1)
;; dif-rot : #f(-0.005967 -0.084983 0.089453)/(0.12353/0.017453)
;; dif-pos : #f(12.6737 -6.14477 0.039193)/(14.0848/1)
;; dif-rot : #f(-0.006094 -0.086798 0.098451)/(0.131391/0.017453)
;; cog-dif : #f(0.065707 -5.33485)/(5.33525/5.0)
;;  coords : #<coordinates #X1325f8e0  475.652 103.327 -91.834 / -0.188 -2.751e-08 5.230e-09>
;;  angles : (#f(18.8526 55.0667 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X262e49d8  55.596 -100.0 259.135 / 1.424e-10 -3.457e-17 4.699e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.674 -67.779 260.156 / -0.089 0.085 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.051 107.356 401.204 / -0.098 0.087 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.652 103.327 926.666 / -0.188 -2.751e-08 5.230e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.972 5.087 936.166 / -0.07 -2.793e-08 1.961e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.972 5.087 814.166 / -0.07 -2.793e-08 -0.223> #<bodyset-link #X6f14d58 RLEG_LINK2  456.818 2.885 804.413 / -0.087 0.074 -0.223> #<bodyset-link #X6f38680 RLEG_LINK3  422.046 -78.532 434.87 / -1.222 1.328 -1.163> #<bodyset-link #X130e0d78 RLEG_LINK4  44.219 -60.222 398.658 / -0.089 0.085 -0.223> #<bodyset-link #X12a84e10 RLEG_LINK5  40.124 -68.753 359.794 / -0.089 0.085 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.652 103.327 926.666 / -0.188 -2.751e-08 5.230e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.331 201.567 936.166 / -0.07 -2.793e-08 1.961e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.331 201.567 814.166 / -0.07 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.115 198.483 804.656 / 0.283 -0.817 -0.468> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.356 102.817 572.523 / -1.346 1.243 -1.291> #<bodyset-link #X1316f038 LLEG_LINK4  401.182 118.349 538.708 / -0.098 0.087 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.676 106.322 500.826 / -0.098 0.087 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.674 -67.779 260.156 / -0.089 0.085 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.051 107.356 401.204 / -0.098 0.087 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.652 103.327 926.666 / -0.188 -2.751e-08 5.230e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.972 5.087 936.166 / -0.07 -2.793e-08 1.961e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.972 5.087 814.166 / -0.07 -2.793e-08 -0.223> #<bodyset-link #X6f14d58 RLEG_LINK2  456.818 2.885 804.413 / -0.087 0.074 -0.223> #<bodyset-link #X6f38680 RLEG_LINK3  422.046 -78.532 434.87 / -1.222 1.328 -1.163> #<bodyset-link #X130e0d78 RLEG_LINK4  44.219 -60.222 398.658 / -0.089 0.085 -0.223> #<bodyset-link #X12a84e10 RLEG_LINK5  40.124 -68.753 359.794 / -0.089 0.085 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.652 103.327 926.666 / -0.188 -2.751e-08 5.230e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.331 201.567 936.166 / -0.07 -2.793e-08 1.961e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.331 201.567 814.166 / -0.07 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.115 198.483 804.656 / 0.283 -0.817 -0.468> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.356 102.817 572.523 / -1.346 1.243 -1.291> #<bodyset-link #X1316f038 LLEG_LINK4  401.182 118.349 538.708 / -0.098 0.087 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.676 106.322 500.826 / -0.098 0.087 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.993 99.9894 1260.39) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.652 103.327 926.666 / -0.188 -2.751e-08 5.230e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.674 -67.779 260.156 / -0.089 0.085 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.051 107.356 401.204 / -0.098 0.087 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.972 5.087 936.166 / -0.07 -2.793e-08 1.961e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.972 5.087 814.166 / -0.07 -2.793e-08 -0.223> #<bodyset-link #X6f14d58 RLEG_LINK2  456.818 2.885 804.413 / -0.087 0.074 -0.223> #<bodyset-link #X6f38680 RLEG_LINK3  422.046 -78.532 434.87 / -1.222 1.328 -1.163> #<bodyset-link #X130e0d78 RLEG_LINK4  44.219 -60.222 398.658 / -0.089 0.085 -0.223> #<bodyset-link #X12a84e10 RLEG_LINK5  40.124 -68.753 359.794 / -0.089 0.085 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  494.331 201.567 936.166 / -0.07 -2.793e-08 1.961e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.331 201.567 814.166 / -0.07 -2.793e-08 -0.314> #<bodyset-link #X6fe1bf0 LLEG_LINK2  494.115 198.483 804.656 / 0.283 -0.817 -0.468> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.356 102.817 572.523 / -1.346 1.243 -1.291> #<bodyset-link #X1316f038 LLEG_LINK4  401.182 118.349 538.708 / -0.098 0.087 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.676 106.322 500.826 / -0.098 0.087 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.993 99.9894 1260.39) :target-centroid-pos #f(399.993 99.9894 1260.39) :fix-limbs-target-coords (#<coordinates #X262e49d8  55.596 -100.0 259.135 / 1.424e-10 -3.457e-17 4.699e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982399 0.186795 -2.800114e-08 475.652) (-0.186795 0.982399 -8.218226e-19 103.327) (2.750829e-08 5.230470e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint769188288) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.8526 55.0667 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(55.5963 -100.0 259.135) :rot #2f((1.0 -1.424257e-10 -3.450998e-17) (1.424257e-10 1.0 -4.699395e-10) (3.457452e-17 4.699395e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.746272e-18 0.0) (0.0 1.0 0.0 0.0) (-5.746272e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.463673e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (1.463673e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.746272e-18 0.0) (0.0 1.0 0.0 0.0) (-5.746272e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.463673e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (1.463673e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.993 99.9894 1260.39) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.746272e-18 0.0) (0.0 1.0 0.0 0.0) (-5.746272e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.463673e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (1.463673e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.993 99.9894 1260.39) :target-centroid-pos #f(399.993 99.9894 1260.39) :fix-limbs-target-coords (list #<coordinates #X262e49d8  55.596 -100.0 259.135 / 1.424e-10 -3.457e-17 4.699e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-33-59-78-79-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-33-59-78-79-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(28.0229 -30.125 1.46047)/(41.1695/1)
;; dif-rot : #f(-0.006597 -0.093298 0.091998)/(0.131193/0.017453)
;; dif-pos : #f(12.5938 -6.1766 0.039843)/(14.027/1)
;; dif-rot : #f(-0.006094 -0.086175 0.098788)/(0.131234/0.017453)
;; cog-dif : #f(0.078127 -5.36911)/(5.36968/5.0)
;;  coords : #<coordinates #X1325f8e0  475.562 103.423 -91.834 / -0.187 -2.751e-08 5.216e-09>
;;  angles : (#f(18.8263 55.0366 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #Xd2e2450  56.868 -100.0 262.235 / 1.419e-10 -3.530e-17 4.681e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.722 -67.425 263.466 / -0.092 0.093 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.135 107.384 401.189 / -0.099 0.086 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.562 103.423 926.666 / -0.187 -2.751e-08 5.216e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.933 5.174 936.166 / -0.071 -2.793e-08 1.975e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.933 5.174 814.166 / -0.071 -2.793e-08 -0.224> #<bodyset-link #X6f14d58 RLEG_LINK2  456.776 2.957 804.417 / -0.087 0.07 -0.225> #<bodyset-link #X6f38680 RLEG_LINK3  423.514 -79.137 434.884 / -1.258 1.33 -1.198> #<bodyset-link #X130e0d78 RLEG_LINK4  45.439 -59.954 401.849 / -0.092 0.093 -0.225> #<bodyset-link #X12a84e10 RLEG_LINK5  40.995 -68.511 363.029 / -0.092 0.093 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.562 103.423 926.666 / -0.187 -2.751e-08 5.216e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.192 201.672 936.166 / -0.071 -2.793e-08 1.975e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.192 201.672 814.166 / -0.071 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.973 198.586 804.657 / 0.284 -0.817 -0.469> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.334 102.753 572.741 / -1.345 1.243 -1.289> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.391 538.697 / -0.099 0.086 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.698 106.351 500.816 / -0.099 0.086 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.722 -67.425 263.466 / -0.092 0.093 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.135 107.384 401.189 / -0.099 0.086 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.562 103.423 926.666 / -0.187 -2.751e-08 5.216e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.933 5.174 936.166 / -0.071 -2.793e-08 1.975e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.933 5.174 814.166 / -0.071 -2.793e-08 -0.224> #<bodyset-link #X6f14d58 RLEG_LINK2  456.776 2.957 804.417 / -0.087 0.07 -0.225> #<bodyset-link #X6f38680 RLEG_LINK3  423.514 -79.137 434.884 / -1.258 1.33 -1.198> #<bodyset-link #X130e0d78 RLEG_LINK4  45.439 -59.954 401.849 / -0.092 0.093 -0.225> #<bodyset-link #X12a84e10 RLEG_LINK5  40.995 -68.511 363.029 / -0.092 0.093 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.562 103.423 926.666 / -0.187 -2.751e-08 5.216e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.192 201.672 936.166 / -0.071 -2.793e-08 1.975e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.192 201.672 814.166 / -0.071 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.973 198.586 804.657 / 0.284 -0.817 -0.469> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.334 102.753 572.741 / -1.345 1.243 -1.289> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.391 538.697 / -0.099 0.086 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.698 106.351 500.816 / -0.099 0.086 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.994 99.99 1261.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.562 103.423 926.666 / -0.187 -2.751e-08 5.216e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.722 -67.425 263.466 / -0.092 0.093 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.135 107.384 401.189 / -0.099 0.086 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.933 5.174 936.166 / -0.071 -2.793e-08 1.975e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.933 5.174 814.166 / -0.071 -2.793e-08 -0.224> #<bodyset-link #X6f14d58 RLEG_LINK2  456.776 2.957 804.417 / -0.087 0.07 -0.225> #<bodyset-link #X6f38680 RLEG_LINK3  423.514 -79.137 434.884 / -1.258 1.33 -1.198> #<bodyset-link #X130e0d78 RLEG_LINK4  45.439 -59.954 401.849 / -0.092 0.093 -0.225> #<bodyset-link #X12a84e10 RLEG_LINK5  40.995 -68.511 363.029 / -0.092 0.093 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  494.192 201.672 936.166 / -0.071 -2.793e-08 1.975e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.192 201.672 814.166 / -0.071 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.973 198.586 804.657 / 0.284 -0.817 -0.469> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.334 102.753 572.741 / -1.345 1.243 -1.289> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.391 538.697 / -0.099 0.086 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.698 106.351 500.816 / -0.099 0.086 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.994 99.99 1261.0) :target-centroid-pos #f(399.994 99.99 1261.0) :fix-limbs-target-coords (#<coordinates #Xd2e2450  56.868 -100.0 262.235 / 1.419e-10 -3.530e-17 4.681e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982494 0.186294 -2.800114e-08 475.562) (-0.186294 0.982494 -8.218226e-19 103.423) (2.751095e-08 5.216450e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint118779352) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.8263 55.0366 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(56.8678 -100.0 262.235) :rot #2f((1.0 -1.418718e-10 -3.523544e-17) (1.418718e-10 1.0 -4.681117e-10) (3.529936e-17 4.681117e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-19 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (-5.963112e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.788934e-18 -1.136868e-13) (0.0 1.0 0.0 0.0) (1.788934e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-19 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (-5.963112e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.788934e-18 -1.136868e-13) (0.0 1.0 0.0 0.0) (1.788934e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.994 99.99 1261.0) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-19 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (-5.963112e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.788934e-18 -1.136868e-13) (0.0 1.0 0.0 0.0) (1.788934e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.994 99.99 1261.0) :target-centroid-pos #f(399.994 99.99 1261.0) :fix-limbs-target-coords (list #<coordinates #Xd2e2450  56.868 -100.0 262.235 / 1.419e-10 -3.530e-17 4.681e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-33-93-89-20-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-33-93-89-20-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(29.3389 -30.2808 1.60366)/(42.1933/1)
;; dif-rot : #f(-0.007228 -0.101569 0.094531)/(0.138941/0.017453)
;; dif-pos : #f(12.5162 -6.20581 0.040447)/(13.9703/1)
;; dif-rot : #f(-0.006093 -0.08557 0.0991)/(0.131073/0.017453)
;; cog-dif : #f(0.090452 -5.40104)/(5.40179/5.0)
;;  coords : #<coordinates #X1325f8e0  475.472 103.514 -91.834 / -0.187 -2.751e-08 5.203e-09>
;;  angles : (#f(18.8 55.0066 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X12d6a710  58.154 -100.0 265.321 / 1.413e-10 -3.603e-17 4.663e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.8 -67.082 266.779 / -0.094 0.102 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.217 107.409 401.174 / -0.099 0.086 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.472 103.514 926.666 / -0.187 -2.751e-08 5.203e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.89 5.256 936.166 / -0.071 -2.793e-08 1.988e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.89 5.256 814.166 / -0.071 -2.793e-08 -0.226> #<bodyset-link #X6f14d58 RLEG_LINK2  456.731 3.024 804.42 / -0.086 0.066 -0.226> #<bodyset-link #X6f38680 RLEG_LINK3  424.974 -79.748 434.906 / -1.295 1.331 -1.233> #<bodyset-link #X130e0d78 RLEG_LINK4  46.68 -59.7 405.035 / -0.094 0.102 -0.227> #<bodyset-link #X12a84e10 RLEG_LINK5  41.89 -68.282 366.261 / -0.094 0.102 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.472 103.514 926.666 / -0.187 -2.751e-08 5.203e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.054 201.773 936.166 / -0.071 -2.793e-08 1.989e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.054 201.773 814.166 / -0.071 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.834 198.683 804.658 / 0.284 -0.818 -0.47> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.313 102.694 572.952 / -1.343 1.242 -1.287> #<bodyset-link #X1316f038 LLEG_LINK4  401.188 118.429 538.686 / -0.099 0.086 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.719 106.378 500.807 / -0.099 0.086 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.8 -67.082 266.779 / -0.094 0.102 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.217 107.409 401.174 / -0.099 0.086 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.472 103.514 926.666 / -0.187 -2.751e-08 5.203e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.89 5.256 936.166 / -0.071 -2.793e-08 1.988e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.89 5.256 814.166 / -0.071 -2.793e-08 -0.226> #<bodyset-link #X6f14d58 RLEG_LINK2  456.731 3.024 804.42 / -0.086 0.066 -0.226> #<bodyset-link #X6f38680 RLEG_LINK3  424.974 -79.748 434.906 / -1.295 1.331 -1.233> #<bodyset-link #X130e0d78 RLEG_LINK4  46.68 -59.7 405.035 / -0.094 0.102 -0.227> #<bodyset-link #X12a84e10 RLEG_LINK5  41.89 -68.282 366.261 / -0.094 0.102 0.002>) (#<bodyset-link #X6ee5ff8 BODY  475.472 103.514 926.666 / -0.187 -2.751e-08 5.203e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  494.054 201.773 936.166 / -0.071 -2.793e-08 1.989e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.054 201.773 814.166 / -0.071 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.834 198.683 804.658 / 0.284 -0.818 -0.47> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.313 102.694 572.952 / -1.343 1.242 -1.287> #<bodyset-link #X1316f038 LLEG_LINK4  401.188 118.429 538.686 / -0.099 0.086 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.719 106.378 500.807 / -0.099 0.086 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.996 99.9906 1261.6) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.472 103.514 926.666 / -0.187 -2.751e-08 5.203e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.8 -67.082 266.779 / -0.094 0.102 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  388.217 107.409 401.174 / -0.099 0.086 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.89 5.256 936.166 / -0.071 -2.793e-08 1.988e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.89 5.256 814.166 / -0.071 -2.793e-08 -0.226> #<bodyset-link #X6f14d58 RLEG_LINK2  456.731 3.024 804.42 / -0.086 0.066 -0.226> #<bodyset-link #X6f38680 RLEG_LINK3  424.974 -79.748 434.906 / -1.295 1.331 -1.233> #<bodyset-link #X130e0d78 RLEG_LINK4  46.68 -59.7 405.035 / -0.094 0.102 -0.227> #<bodyset-link #X12a84e10 RLEG_LINK5  41.89 -68.282 366.261 / -0.094 0.102 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  494.054 201.773 936.166 / -0.071 -2.793e-08 1.989e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  494.054 201.773 814.166 / -0.071 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.834 198.683 804.658 / 0.284 -0.818 -0.47> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.313 102.694 572.952 / -1.343 1.242 -1.287> #<bodyset-link #X1316f038 LLEG_LINK4  401.188 118.429 538.686 / -0.099 0.086 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.719 106.378 500.807 / -0.099 0.086 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.996 99.9906 1261.6) :target-centroid-pos #f(399.996 99.9906 1261.6) :fix-limbs-target-coords (#<coordinates #X12d6a710  58.154 -100.0 265.321 / 1.413e-10 -3.603e-17 4.663e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982583 0.185822 -2.800114e-08 475.472) (-0.185822 0.982583 -8.218221e-19 103.514) (2.751345e-08 5.203241e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint298616024) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.8 55.0066 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(58.1544 -100.0 265.321) :rot #2f((1.0 -1.413125e-10 -3.596781e-17) (1.413125e-10 1.0 -4.662665e-10) (3.603110e-17 4.662665e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.981556e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (-2.981556e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.035766e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.035766e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.981556e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (-2.981556e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.035766e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.035766e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.996 99.9906 1261.6) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.981556e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (-2.981556e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.035766e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (3.035766e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.996 99.9906 1261.6) :target-centroid-pos #f(399.996 99.9906 1261.6) :fix-limbs-target-coords (list #<coordinates #X12d6a710  58.154 -100.0 265.321 / 1.413e-10 -3.603e-17 4.663e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-34-28-94-50-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-34-28-94-50-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(30.642 -30.4216 1.74757)/(43.2141/1)
;; dif-rot : #f(-0.007861 -0.109795 0.097052)/(0.146751/0.017453)
;; dif-pos : #f(12.4406 -6.23247 0.041006)/(13.9146/1)
;; dif-rot : #f(-0.00609 -0.084983 0.099387)/(0.130909/0.017453)
;; cog-dif : #f(0.10267 -5.43068)/(5.43165/5.0)
;;  coords : #<coordinates #X1325f8e0  475.38 103.601 -91.834 / -0.186 -2.752e-08 5.191e-09>
;;  angles : (#f(18.7738 54.9766 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X9f3c560  59.456 -100.0 268.391 / 1.407e-10 -3.677e-17 4.644e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.907 -66.749 270.095 / -0.097 0.11 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.296 107.432 401.16 / -0.099 0.085 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.38 103.601 926.666 / -0.186 -2.752e-08 5.191e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.842 5.335 936.166 / -0.071 -2.793e-08 2.000e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.842 5.335 814.166 / -0.071 -2.793e-08 -0.227> #<bodyset-link #X6f14d58 RLEG_LINK2  456.682 3.088 804.423 / -0.086 0.062 -0.228> #<bodyset-link #X6f38680 RLEG_LINK3  426.426 -80.366 434.937 / -1.331 1.333 -1.268> #<bodyset-link #X130e0d78 RLEG_LINK4  47.944 -59.459 408.214 / -0.097 0.11 -0.229> #<bodyset-link #X12a84e10 RLEG_LINK5  42.809 -68.065 369.49 / -0.097 0.11 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.38 103.601 926.666 / -0.186 -2.752e-08 5.191e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.918 201.868 936.166 / -0.072 -2.793e-08 2.001e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.918 201.868 814.166 / -0.072 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.697 198.776 804.659 / 0.284 -0.818 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.292 102.641 573.157 / -1.342 1.242 -1.286> #<bodyset-link #X1316f038 LLEG_LINK4  401.191 118.464 538.675 / -0.099 0.085 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.739 106.403 500.798 / -0.099 0.085 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.907 -66.749 270.095 / -0.097 0.11 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.296 107.432 401.16 / -0.099 0.085 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.38 103.601 926.666 / -0.186 -2.752e-08 5.191e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.842 5.335 936.166 / -0.071 -2.793e-08 2.000e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.842 5.335 814.166 / -0.071 -2.793e-08 -0.227> #<bodyset-link #X6f14d58 RLEG_LINK2  456.682 3.088 804.423 / -0.086 0.062 -0.228> #<bodyset-link #X6f38680 RLEG_LINK3  426.426 -80.366 434.937 / -1.331 1.333 -1.268> #<bodyset-link #X130e0d78 RLEG_LINK4  47.944 -59.459 408.214 / -0.097 0.11 -0.229> #<bodyset-link #X12a84e10 RLEG_LINK5  42.809 -68.065 369.49 / -0.097 0.11 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.38 103.601 926.666 / -0.186 -2.752e-08 5.191e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.918 201.868 936.166 / -0.072 -2.793e-08 2.001e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.918 201.868 814.166 / -0.072 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.697 198.776 804.659 / 0.284 -0.818 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.292 102.641 573.157 / -1.342 1.242 -1.286> #<bodyset-link #X1316f038 LLEG_LINK4  401.191 118.464 538.675 / -0.099 0.085 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.739 106.403 500.798 / -0.099 0.085 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.997 99.9912 1262.21) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.38 103.601 926.666 / -0.186 -2.752e-08 5.191e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  31.907 -66.749 270.095 / -0.097 0.11 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.296 107.432 401.16 / -0.099 0.085 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.842 5.335 936.166 / -0.071 -2.793e-08 2.000e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.842 5.335 814.166 / -0.071 -2.793e-08 -0.227> #<bodyset-link #X6f14d58 RLEG_LINK2  456.682 3.088 804.423 / -0.086 0.062 -0.228> #<bodyset-link #X6f38680 RLEG_LINK3  426.426 -80.366 434.937 / -1.331 1.333 -1.268> #<bodyset-link #X130e0d78 RLEG_LINK4  47.944 -59.459 408.214 / -0.097 0.11 -0.229> #<bodyset-link #X12a84e10 RLEG_LINK5  42.809 -68.065 369.49 / -0.097 0.11 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.918 201.868 936.166 / -0.072 -2.793e-08 2.001e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.918 201.868 814.166 / -0.072 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.697 198.776 804.659 / 0.284 -0.818 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.292 102.641 573.157 / -1.342 1.242 -1.286> #<bodyset-link #X1316f038 LLEG_LINK4  401.191 118.464 538.675 / -0.099 0.085 -0.316> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.739 106.403 500.798 / -0.099 0.085 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.997 99.9912 1262.21) :target-centroid-pos #f(399.997 99.9912 1262.21) :fix-limbs-target-coords (#<coordinates #X9f3c560  59.456 -100.0 268.391 / 1.407e-10 -3.677e-17 4.644e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982667 0.185379 -2.800114e-08 475.38) (-0.185379 0.982667 -8.218221e-19 103.601) (2.751580e-08 5.190823e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint774918200) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.7738 54.9766 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(59.456 -100.0 268.391) :rot #2f((1.0 -1.407481e-10 -3.670703e-17) (1.407481e-10 1.0 -4.644040e-10) (3.676969e-17 4.644040e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.439455e-18 7.105427e-15) (0.0 1.0 0.0 7.105427e-15) (2.439455e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.553649e-18 0.0) (0.0 1.0 0.0 0.0) (4.553649e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.439455e-18 7.105427e-15) (0.0 1.0 0.0 7.105427e-15) (2.439455e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.553649e-18 0.0) (0.0 1.0 0.0 0.0) (4.553649e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.997 99.9912 1262.21) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.439455e-18 7.105427e-15) (0.0 1.0 0.0 7.105427e-15) (2.439455e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.553649e-18 0.0) (0.0 1.0 0.0 0.0) (4.553649e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.997 99.9912 1262.21) :target-centroid-pos #f(399.997 99.9912 1262.21) :fix-limbs-target-coords (list #<coordinates #X9f3c560  59.456 -100.0 268.391 / 1.407e-10 -3.677e-17 4.644e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-34-63-28-48-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-34-63-28-48-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(31.9319 -30.5477 1.89196)/(44.231/1)
;; dif-rot : #f(-0.008495 -0.117975 0.099561)/(0.154605/0.017453)
;; dif-pos : #f(12.3672 -6.25664 0.04152)/(13.8598/1)
;; dif-rot : #f(-0.006085 -0.084413 0.09965)/(0.130739/0.017453)
;; cog-dif : #f(0.114772 -5.4581)/(5.4593/5.0)
;;  coords : #<coordinates #X1325f8e0  475.288 103.684 -91.834 / -0.186 -2.752e-08 5.179e-09>
;;  angles : (#f(18.7476 54.9467 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2faef968  60.772 -100.0 271.447 / 1.402e-10 -3.752e-17 4.625e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.043 -66.427 273.413 / -0.1 0.118 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.372 107.452 401.146 / -0.1 0.085 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.288 103.684 926.666 / -0.186 -2.752e-08 5.179e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.792 5.409 936.166 / -0.072 -2.793e-08 2.011e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.792 5.409 814.166 / -0.072 -2.793e-08 -0.229> #<bodyset-link #X6f14d58 RLEG_LINK2  456.629 3.148 804.427 / -0.085 0.058 -0.229> #<bodyset-link #X6f38680 RLEG_LINK3  427.871 -80.989 434.976 / -1.368 1.334 -1.303> #<bodyset-link #X130e0d78 RLEG_LINK4  49.229 -59.23 411.387 / -0.1 0.118 -0.23> #<bodyset-link #X12a84e10 RLEG_LINK5  43.752 -67.859 372.715 / -0.1 0.118 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.288 103.684 926.666 / -0.186 -2.752e-08 5.179e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.784 201.958 936.166 / -0.072 -2.793e-08 2.013e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.784 201.958 814.166 / -0.072 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.561 198.864 804.66 / 0.284 -0.819 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.272 102.593 573.356 / -1.341 1.241 -1.285> #<bodyset-link #X1316f038 LLEG_LINK4  401.193 118.497 538.665 / -0.1 0.085 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.759 106.425 500.789 / -0.1 0.085 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.043 -66.427 273.413 / -0.1 0.118 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.372 107.452 401.146 / -0.1 0.085 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.288 103.684 926.666 / -0.186 -2.752e-08 5.179e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.792 5.409 936.166 / -0.072 -2.793e-08 2.011e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.792 5.409 814.166 / -0.072 -2.793e-08 -0.229> #<bodyset-link #X6f14d58 RLEG_LINK2  456.629 3.148 804.427 / -0.085 0.058 -0.229> #<bodyset-link #X6f38680 RLEG_LINK3  427.871 -80.989 434.976 / -1.368 1.334 -1.303> #<bodyset-link #X130e0d78 RLEG_LINK4  49.229 -59.23 411.387 / -0.1 0.118 -0.23> #<bodyset-link #X12a84e10 RLEG_LINK5  43.752 -67.859 372.715 / -0.1 0.118 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.288 103.684 926.666 / -0.186 -2.752e-08 5.179e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.784 201.958 936.166 / -0.072 -2.793e-08 2.013e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.784 201.958 814.166 / -0.072 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.561 198.864 804.66 / 0.284 -0.819 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.272 102.593 573.356 / -1.341 1.241 -1.285> #<bodyset-link #X1316f038 LLEG_LINK4  401.193 118.497 538.665 / -0.1 0.085 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.759 106.425 500.789 / -0.1 0.085 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.998 99.9917 1262.82) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.288 103.684 926.666 / -0.186 -2.752e-08 5.179e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.043 -66.427 273.413 / -0.1 0.118 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.372 107.452 401.146 / -0.1 0.085 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.792 5.409 936.166 / -0.072 -2.793e-08 2.011e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.792 5.409 814.166 / -0.072 -2.793e-08 -0.229> #<bodyset-link #X6f14d58 RLEG_LINK2  456.629 3.148 804.427 / -0.085 0.058 -0.229> #<bodyset-link #X6f38680 RLEG_LINK3  427.871 -80.989 434.976 / -1.368 1.334 -1.303> #<bodyset-link #X130e0d78 RLEG_LINK4  49.229 -59.23 411.387 / -0.1 0.118 -0.23> #<bodyset-link #X12a84e10 RLEG_LINK5  43.752 -67.859 372.715 / -0.1 0.118 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.784 201.958 936.166 / -0.072 -2.793e-08 2.013e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.784 201.958 814.166 / -0.072 -2.793e-08 -0.315> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.561 198.864 804.66 / 0.284 -0.819 -0.471> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.272 102.593 573.356 / -1.341 1.241 -1.285> #<bodyset-link #X1316f038 LLEG_LINK4  401.193 118.497 538.665 / -0.1 0.085 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.759 106.425 500.789 / -0.1 0.085 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.998 99.9917 1262.82) :target-centroid-pos #f(399.998 99.9917 1262.82) :fix-limbs-target-coords (#<coordinates #X2faef968  60.772 -100.0 271.447 / 1.402e-10 -3.752e-17 4.625e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982745 0.184963 -2.800114e-08 475.288) (-0.184963 0.982745 -8.218226e-19 103.684) (2.751799e-08 5.179181e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint821476080) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.7476 54.9467 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(60.7725 -100.0 271.447) :rot #2f((1.0 -1.401784e-10 -3.745305e-17) (1.401784e-10 1.0 -4.625244e-10) (3.751508e-17 4.625244e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.312591e-18 0.0) (0.0 1.0 0.0 0.0) (5.312591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.312591e-18 0.0) (0.0 1.0 0.0 0.0) (5.312591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.998 99.9917 1262.82) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.312591e-18 0.0) (0.0 1.0 0.0 0.0) (5.312591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.998 99.9917 1262.82) :target-centroid-pos #f(399.998 99.9917 1262.82) :fix-limbs-target-coords (list #<coordinates #X2faef968  60.772 -100.0 271.447 / 1.402e-10 -3.752e-17 4.625e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-34-98-22-40-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-34-98-22-40-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(33.2085 -30.6592 2.03664)/(45.2431/1)
;; dif-rot : #f(-0.009127 -0.126108 0.102058)/(0.162488/0.017453)
;; dif-pos : #f(12.2958 -6.27839 0.041992)/(13.806/1)
;; dif-rot : #f(-0.006079 -0.083861 0.099889)/(0.130565/0.017453)
;; cog-dif : #f(0.126749 -5.48333)/(5.48479/5.0)
;;  coords : #<coordinates #X1325f8e0  475.195 103.762 -91.834 / -0.186 -2.752e-08 5.168e-09>
;;  angles : (#f(18.7215 54.9169 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2db0aa98  62.104 -100.0 274.485 / 1.396e-10 -3.827e-17 4.606e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.209 -66.115 276.731 / -0.102 0.126 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.446 107.469 401.133 / -0.1 0.084 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.195 103.762 926.666 / -0.186 -2.752e-08 5.168e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.737 5.48 936.166 / -0.072 -2.793e-08 2.021e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.737 5.48 814.166 / -0.072 -2.793e-08 -0.23> #<bodyset-link #X6f14d58 RLEG_LINK2  456.572 3.205 804.43 / -0.085 0.054 -0.231> #<bodyset-link #X6f38680 RLEG_LINK3  429.31 -81.617 435.023 / -1.405 1.334 -1.339> #<bodyset-link #X130e0d78 RLEG_LINK4  50.535 -59.013 414.551 / -0.102 0.126 -0.232> #<bodyset-link #X12a84e10 RLEG_LINK5  44.718 -67.665 375.934 / -0.102 0.126 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.195 103.762 926.666 / -0.186 -2.752e-08 5.168e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.652 202.044 936.166 / -0.072 -2.793e-08 2.024e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.652 202.044 814.166 / -0.072 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.428 198.948 804.661 / 0.285 -0.819 -0.472> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.252 102.55 573.55 / -1.34 1.241 -1.283> #<bodyset-link #X1316f038 LLEG_LINK4  401.195 118.527 538.655 / -0.1 0.084 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.778 106.445 500.78 / -0.1 0.084 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.209 -66.115 276.731 / -0.102 0.126 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.446 107.469 401.133 / -0.1 0.084 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.195 103.762 926.666 / -0.186 -2.752e-08 5.168e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.737 5.48 936.166 / -0.072 -2.793e-08 2.021e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.737 5.48 814.166 / -0.072 -2.793e-08 -0.23> #<bodyset-link #X6f14d58 RLEG_LINK2  456.572 3.205 804.43 / -0.085 0.054 -0.231> #<bodyset-link #X6f38680 RLEG_LINK3  429.31 -81.617 435.023 / -1.405 1.334 -1.339> #<bodyset-link #X130e0d78 RLEG_LINK4  50.535 -59.013 414.551 / -0.102 0.126 -0.232> #<bodyset-link #X12a84e10 RLEG_LINK5  44.718 -67.665 375.934 / -0.102 0.126 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.195 103.762 926.666 / -0.186 -2.752e-08 5.168e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.652 202.044 936.166 / -0.072 -2.793e-08 2.024e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.652 202.044 814.166 / -0.072 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.428 198.948 804.661 / 0.285 -0.819 -0.472> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.252 102.55 573.55 / -1.34 1.241 -1.283> #<bodyset-link #X1316f038 LLEG_LINK4  401.195 118.527 538.655 / -0.1 0.084 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.778 106.445 500.78 / -0.1 0.084 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.999 99.9922 1263.44) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.195 103.762 926.666 / -0.186 -2.752e-08 5.168e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.209 -66.115 276.731 / -0.102 0.126 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.446 107.469 401.133 / -0.1 0.084 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.737 5.48 936.166 / -0.072 -2.793e-08 2.021e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.737 5.48 814.166 / -0.072 -2.793e-08 -0.23> #<bodyset-link #X6f14d58 RLEG_LINK2  456.572 3.205 804.43 / -0.085 0.054 -0.231> #<bodyset-link #X6f38680 RLEG_LINK3  429.31 -81.617 435.023 / -1.405 1.334 -1.339> #<bodyset-link #X130e0d78 RLEG_LINK4  50.535 -59.013 414.551 / -0.102 0.126 -0.232> #<bodyset-link #X12a84e10 RLEG_LINK5  44.718 -67.665 375.934 / -0.102 0.126 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.652 202.044 936.166 / -0.072 -2.793e-08 2.024e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.652 202.044 814.166 / -0.072 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.428 198.948 804.661 / 0.285 -0.819 -0.472> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.252 102.55 573.55 / -1.34 1.241 -1.283> #<bodyset-link #X1316f038 LLEG_LINK4  401.195 118.527 538.655 / -0.1 0.084 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.778 106.445 500.78 / -0.1 0.084 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(399.999 99.9922 1263.44) :target-centroid-pos #f(399.999 99.9922 1263.44) :fix-limbs-target-coords (#<coordinates #X2db0aa98  62.104 -100.0 274.485 / 1.396e-10 -3.827e-17 4.606e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982819 0.184575 -2.800114e-08 475.195) (-0.184575 0.982819 -8.218221e-19 103.762) (2.752004e-08 5.168297e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint796203496) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.7215 54.9169 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(62.1039 -100.0 274.485) :rot #2f((1.0 -1.396036e-10 -3.820581e-17) (1.396036e-10 1.0 -4.606278e-10) (3.826719e-17 4.606278e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.348357e-18 0.0) (0.0 1.0 0.0 -7.105427e-15) (-8.348357e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.065758e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (4.065758e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.348357e-18 0.0) (0.0 1.0 0.0 -7.105427e-15) (-8.348357e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.065758e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (4.065758e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(399.999 99.9922 1263.44) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 8.348357e-18 0.0) (0.0 1.0 0.0 -7.105427e-15) (-8.348357e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -4.065758e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (4.065758e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(399.999 99.9922 1263.44) :target-centroid-pos #f(399.999 99.9922 1263.44) :fix-limbs-target-coords (list #<coordinates #X2db0aa98  62.104 -100.0 274.485 / 1.396e-10 -3.827e-17 4.606e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-35-34-53-38-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-35-34-53-38-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(34.4716 -30.7564 2.18139)/(46.2494/1)
;; dif-rot : #f(-0.009758 -0.13419 0.104543)/(0.170386/0.017453)
;; dif-pos : #f(12.2263 -6.29779 0.042422)/(13.7531/1)
;; dif-rot : #f(-0.006071 -0.083325 0.100105)/(0.130387/0.017453)
;; cog-dif : #f(0.138592 -5.50642)/(5.50816/5.0)
;;  coords : #<coordinates #X1325f8e0  475.1 103.836 -91.834 / -0.185 -2.752e-08 5.158e-09>
;;  angles : (#f(18.6954 54.8871 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2de7d890  63.45 -100.0 277.507 / 1.390e-10 -3.903e-17 4.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.406 -65.812 280.049 / -0.105 0.134 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.518 107.484 401.121 / -0.1 0.083 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.1 103.836 926.666 / -0.185 -2.752e-08 5.158e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.679 5.548 936.166 / -0.073 -2.793e-08 2.031e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.679 5.548 814.166 / -0.073 -2.793e-08 -0.232> #<bodyset-link #X6f14d58 RLEG_LINK2  456.513 3.257 804.434 / -0.084 0.05 -0.232> #<bodyset-link #X6f38680 RLEG_LINK3  430.742 -82.251 435.077 / -1.441 1.334 -1.374> #<bodyset-link #X130e0d78 RLEG_LINK4  51.864 -58.808 417.706 / -0.105 0.134 -0.234> #<bodyset-link #X12a84e10 RLEG_LINK5  45.709 -67.483 379.147 / -0.105 0.134 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.1 103.836 926.666 / -0.185 -2.752e-08 5.158e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.522 202.125 936.166 / -0.073 -2.793e-08 2.035e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.522 202.125 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.296 199.026 804.661 / 0.285 -0.82 -0.473> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.232 102.513 573.738 / -1.339 1.241 -1.282> #<bodyset-link #X1316f038 LLEG_LINK4  401.196 118.554 538.646 / -0.1 0.083 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.797 106.462 500.772 / -0.1 0.083 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.406 -65.812 280.049 / -0.105 0.134 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.518 107.484 401.121 / -0.1 0.083 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.1 103.836 926.666 / -0.185 -2.752e-08 5.158e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.679 5.548 936.166 / -0.073 -2.793e-08 2.031e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.679 5.548 814.166 / -0.073 -2.793e-08 -0.232> #<bodyset-link #X6f14d58 RLEG_LINK2  456.513 3.257 804.434 / -0.084 0.05 -0.232> #<bodyset-link #X6f38680 RLEG_LINK3  430.742 -82.251 435.077 / -1.441 1.334 -1.374> #<bodyset-link #X130e0d78 RLEG_LINK4  51.864 -58.808 417.706 / -0.105 0.134 -0.234> #<bodyset-link #X12a84e10 RLEG_LINK5  45.709 -67.483 379.147 / -0.105 0.134 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.1 103.836 926.666 / -0.185 -2.752e-08 5.158e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.522 202.125 936.166 / -0.073 -2.793e-08 2.035e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.522 202.125 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.296 199.026 804.661 / 0.285 -0.82 -0.473> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.232 102.513 573.738 / -1.339 1.241 -1.282> #<bodyset-link #X1316f038 LLEG_LINK4  401.196 118.554 538.646 / -0.1 0.083 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.797 106.462 500.772 / -0.1 0.083 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.0 99.9927 1264.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.1 103.836 926.666 / -0.185 -2.752e-08 5.158e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.406 -65.812 280.049 / -0.105 0.134 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.518 107.484 401.121 / -0.1 0.083 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.679 5.548 936.166 / -0.073 -2.793e-08 2.031e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.679 5.548 814.166 / -0.073 -2.793e-08 -0.232> #<bodyset-link #X6f14d58 RLEG_LINK2  456.513 3.257 804.434 / -0.084 0.05 -0.232> #<bodyset-link #X6f38680 RLEG_LINK3  430.742 -82.251 435.077 / -1.441 1.334 -1.374> #<bodyset-link #X130e0d78 RLEG_LINK4  51.864 -58.808 417.706 / -0.105 0.134 -0.234> #<bodyset-link #X12a84e10 RLEG_LINK5  45.709 -67.483 379.147 / -0.105 0.134 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.522 202.125 936.166 / -0.073 -2.793e-08 2.035e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.522 202.125 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.296 199.026 804.661 / 0.285 -0.82 -0.473> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.232 102.513 573.738 / -1.339 1.241 -1.282> #<bodyset-link #X1316f038 LLEG_LINK4  401.196 118.554 538.646 / -0.1 0.083 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.797 106.462 500.772 / -0.1 0.083 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.0 99.9927 1264.06) :target-centroid-pos #f(400.0 99.9927 1264.06) :fix-limbs-target-coords (#<coordinates #X2de7d890  63.45 -100.0 277.507 / 1.390e-10 -3.903e-17 4.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982886 0.184212 -2.800114e-08 475.1) (-0.184212 0.982886 -8.218221e-19 103.836) (2.752194e-08 5.158159e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint674224856) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.6954 54.8871 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(63.45 -100.0 277.507) :rot #2f((1.0 -1.390237e-10 -3.896525e-17) (1.390237e-10 1.0 -4.587143e-10) (3.902599e-17 4.587143e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.445229e-18 -7.105427e-15) (0.0 1.0 0.0 0.0) (-4.445229e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.192622e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-1.192622e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.445229e-18 -7.105427e-15) (0.0 1.0 0.0 0.0) (-4.445229e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.192622e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-1.192622e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.0 99.9927 1264.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.445229e-18 -7.105427e-15) (0.0 1.0 0.0 0.0) (-4.445229e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.192622e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-1.192622e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.0 99.9927 1264.06) :target-centroid-pos #f(400.0 99.9927 1264.06) :fix-limbs-target-coords (list #<coordinates #X2de7d890  63.45 -100.0 277.507 / 1.390e-10 -3.903e-17 4.587e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-35-69-99-94-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-35-69-99-94-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(35.7211 -30.8395 2.32602)/(47.2492/1)
;; dif-rot : #f(-0.010387 -0.142222 0.107016)/(0.17829/0.017453)
;; dif-pos : #f(12.1588 -6.31487 0.04281)/(13.7009/1)
;; dif-rot : #f(-0.006061 -0.082805 0.100297)/(0.130203/0.017453)
;; cog-dif : #f(0.150291 -5.5274)/(5.52945/5.0)
;;  coords : #<coordinates #X1325f8e0  475.005 103.907 -91.834 / -0.185 -2.752e-08 5.149e-09>
;;  angles : (#f(18.6694 54.8574 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2fd44dd0  64.811 -100.0 280.51 / 1.384e-10 -3.979e-17 4.568e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.632 -65.52 283.366 / -0.107 0.143 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.588 107.496 401.108 / -0.1 0.083 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.005 103.907 926.666 / -0.185 -2.752e-08 5.149e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.618 5.612 936.166 / -0.073 -2.793e-08 2.040e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.618 5.612 814.166 / -0.073 -2.793e-08 -0.233> #<bodyset-link #X6f14d58 RLEG_LINK2  456.449 3.306 804.437 / -0.084 0.046 -0.234> #<bodyset-link #X6f38680 RLEG_LINK3  432.168 -82.89 435.14 / -1.478 1.334 -1.41> #<bodyset-link #X130e0d78 RLEG_LINK4  53.213 -58.616 420.852 / -0.107 0.143 -0.236> #<bodyset-link #X12a84e10 RLEG_LINK5  46.723 -67.313 382.352 / -0.107 0.143 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.005 103.907 926.666 / -0.185 -2.752e-08 5.149e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.393 202.201 936.166 / -0.073 -2.793e-08 2.044e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.393 202.201 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.166 199.101 804.662 / 0.285 -0.82 -0.473> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.213 102.481 573.921 / -1.338 1.24 -1.281> #<bodyset-link #X1316f038 LLEG_LINK4  401.197 118.579 538.637 / -0.1 0.083 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.814 106.477 500.764 / -0.1 0.083 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.632 -65.52 283.366 / -0.107 0.143 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.588 107.496 401.108 / -0.1 0.083 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  475.005 103.907 926.666 / -0.185 -2.752e-08 5.149e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.618 5.612 936.166 / -0.073 -2.793e-08 2.040e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.618 5.612 814.166 / -0.073 -2.793e-08 -0.233> #<bodyset-link #X6f14d58 RLEG_LINK2  456.449 3.306 804.437 / -0.084 0.046 -0.234> #<bodyset-link #X6f38680 RLEG_LINK3  432.168 -82.89 435.14 / -1.478 1.334 -1.41> #<bodyset-link #X130e0d78 RLEG_LINK4  53.213 -58.616 420.852 / -0.107 0.143 -0.236> #<bodyset-link #X12a84e10 RLEG_LINK5  46.723 -67.313 382.352 / -0.107 0.143 0.003>) (#<bodyset-link #X6ee5ff8 BODY  475.005 103.907 926.666 / -0.185 -2.752e-08 5.149e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.393 202.201 936.166 / -0.073 -2.793e-08 2.044e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.393 202.201 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.166 199.101 804.662 / 0.285 -0.82 -0.473> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.213 102.481 573.921 / -1.338 1.24 -1.281> #<bodyset-link #X1316f038 LLEG_LINK4  401.197 118.579 538.637 / -0.1 0.083 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.814 106.477 500.764 / -0.1 0.083 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.001 99.9931 1264.68) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  475.005 103.907 926.666 / -0.185 -2.752e-08 5.149e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.632 -65.52 283.366 / -0.107 0.143 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.588 107.496 401.108 / -0.1 0.083 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.618 5.612 936.166 / -0.073 -2.793e-08 2.040e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.618 5.612 814.166 / -0.073 -2.793e-08 -0.233> #<bodyset-link #X6f14d58 RLEG_LINK2  456.449 3.306 804.437 / -0.084 0.046 -0.234> #<bodyset-link #X6f38680 RLEG_LINK3  432.168 -82.89 435.14 / -1.478 1.334 -1.41> #<bodyset-link #X130e0d78 RLEG_LINK4  53.213 -58.616 420.852 / -0.107 0.143 -0.236> #<bodyset-link #X12a84e10 RLEG_LINK5  46.723 -67.313 382.352 / -0.107 0.143 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.393 202.201 936.166 / -0.073 -2.793e-08 2.044e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.393 202.201 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.166 199.101 804.662 / 0.285 -0.82 -0.473> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.213 102.481 573.921 / -1.338 1.24 -1.281> #<bodyset-link #X1316f038 LLEG_LINK4  401.197 118.579 538.637 / -0.1 0.083 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.814 106.477 500.764 / -0.1 0.083 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.001 99.9931 1264.68) :target-centroid-pos #f(400.001 99.9931 1264.68) :fix-limbs-target-coords (#<coordinates #X2fd44dd0  64.811 -100.0 280.51 / 1.384e-10 -3.979e-17 4.568e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.982949 0.183877 -2.800114e-08 475.005) (-0.183877 0.982949 -8.218221e-19 103.907) (2.752370e-08 5.148756e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint637474584) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.6694 54.8574 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(64.8109 -100.0 280.51) :rot #2f((1.0 -1.384387e-10 -3.973132e-17) (1.384387e-10 1.0 -4.567842e-10) (3.979140e-17 4.567842e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.047314e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (7.047314e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.938894e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (6.938894e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.047314e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (7.047314e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.938894e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (6.938894e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.001 99.9931 1264.68) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.047314e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (7.047314e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.938894e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (6.938894e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.001 99.9931 1264.68) :target-centroid-pos #f(400.001 99.9931 1264.68) :fix-limbs-target-coords (list #<coordinates #X2fd44dd0  64.811 -100.0 280.51 / 1.384e-10 -3.979e-17 4.568e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-36-04-75-60-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-36-04-75-60-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(36.9566 -30.9088 2.47031)/(48.2415/1)
;; dif-rot : #f(-0.011013 -0.1502 0.109477)/(0.18619/0.017453)
;; dif-pos : #f(12.0931 -6.32968 0.043158)/(13.6496/1)
;; dif-rot : #f(-0.006051 -0.082301 0.100467)/(0.130015/0.017453)
;; cog-dif : #f(0.161839 -5.54632)/(5.54868/5.0)
;;  coords : #<coordinates #X1325f8e0  474.909 103.973 -91.834 / -0.185 -2.753e-08 5.140e-09>
;;  angles : (#f(18.6434 54.8277 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X13751650  66.186 -100.0 283.495 / 1.378e-10 -4.056e-17 4.548e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.889 -65.238 286.679 / -0.109 0.151 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.655 107.507 401.097 / -0.1 0.082 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.909 103.973 926.666 / -0.185 -2.753e-08 5.140e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.553 5.672 936.166 / -0.073 -2.793e-08 2.048e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.553 5.672 814.166 / -0.073 -2.793e-08 -0.235> #<bodyset-link #X6f14d58 RLEG_LINK2  456.382 3.352 804.441 / -0.083 0.042 -0.235> #<bodyset-link #X6f38680 RLEG_LINK3  433.588 -83.533 435.21 / -1.514 1.334 -1.445> #<bodyset-link #X130e0d78 RLEG_LINK4  54.584 -58.435 423.986 / -0.109 0.151 -0.238> #<bodyset-link #X12a84e10 RLEG_LINK5  47.762 -67.153 385.548 / -0.109 0.151 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.909 103.973 926.666 / -0.185 -2.753e-08 5.140e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.266 202.273 936.166 / -0.073 -2.793e-08 2.053e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.266 202.273 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.038 199.171 804.663 / 0.285 -0.82 -0.474> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.194 102.453 574.098 / -1.337 1.24 -1.279> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.6 538.628 / -0.1 0.082 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.832 106.49 500.756 / -0.1 0.082 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.889 -65.238 286.679 / -0.109 0.151 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.655 107.507 401.097 / -0.1 0.082 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.909 103.973 926.666 / -0.185 -2.753e-08 5.140e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.553 5.672 936.166 / -0.073 -2.793e-08 2.048e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.553 5.672 814.166 / -0.073 -2.793e-08 -0.235> #<bodyset-link #X6f14d58 RLEG_LINK2  456.382 3.352 804.441 / -0.083 0.042 -0.235> #<bodyset-link #X6f38680 RLEG_LINK3  433.588 -83.533 435.21 / -1.514 1.334 -1.445> #<bodyset-link #X130e0d78 RLEG_LINK4  54.584 -58.435 423.986 / -0.109 0.151 -0.238> #<bodyset-link #X12a84e10 RLEG_LINK5  47.762 -67.153 385.548 / -0.109 0.151 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.909 103.973 926.666 / -0.185 -2.753e-08 5.140e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.266 202.273 936.166 / -0.073 -2.793e-08 2.053e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.266 202.273 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.038 199.171 804.663 / 0.285 -0.82 -0.474> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.194 102.453 574.098 / -1.337 1.24 -1.279> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.6 538.628 / -0.1 0.082 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.832 106.49 500.756 / -0.1 0.082 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.001 99.9935 1265.3) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.909 103.973 926.666 / -0.185 -2.753e-08 5.140e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  32.889 -65.238 286.679 / -0.109 0.151 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.655 107.507 401.097 / -0.1 0.082 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.553 5.672 936.166 / -0.073 -2.793e-08 2.048e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.553 5.672 814.166 / -0.073 -2.793e-08 -0.235> #<bodyset-link #X6f14d58 RLEG_LINK2  456.382 3.352 804.441 / -0.083 0.042 -0.235> #<bodyset-link #X6f38680 RLEG_LINK3  433.588 -83.533 435.21 / -1.514 1.334 -1.445> #<bodyset-link #X130e0d78 RLEG_LINK4  54.584 -58.435 423.986 / -0.109 0.151 -0.238> #<bodyset-link #X12a84e10 RLEG_LINK5  47.762 -67.153 385.548 / -0.109 0.151 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.266 202.273 936.166 / -0.073 -2.793e-08 2.053e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.266 202.273 814.166 / -0.073 -2.793e-08 -0.316> #<bodyset-link #X6fe1bf0 LLEG_LINK2  493.038 199.171 804.663 / 0.285 -0.82 -0.474> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.194 102.453 574.098 / -1.337 1.24 -1.279> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.6 538.628 / -0.1 0.082 -0.317> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.832 106.49 500.756 / -0.1 0.082 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.001 99.9935 1265.3) :target-centroid-pos #f(400.001 99.9935 1265.3) :fix-limbs-target-coords (#<coordinates #X13751650  66.186 -100.0 283.495 / 1.378e-10 -4.056e-17 4.548e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983007 0.183567 -2.800114e-08 474.909) (-0.183567 0.983007 -8.218213e-19 103.973) (2.752532e-08 5.140075e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint639296464) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.6434 54.8277 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(66.1863 -100.0 283.495) :rot #2f((1.0 -1.378488e-10 -4.050395e-17) (1.378488e-10 1.0 -4.548376e-10) (4.056337e-17 4.548376e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.757820e-18 -7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (-9.757820e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 7.101524e-18 0.0) (-2.775558e-17 1.0 -8.673617e-19 0.0) (-7.101524e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.757820e-18 -7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (-9.757820e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 7.101524e-18 0.0) (-2.775558e-17 1.0 -8.673617e-19 0.0) (-7.101524e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.001 99.9935 1265.3) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.757820e-18 -7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (-9.757820e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 7.101524e-18 0.0) (-2.775558e-17 1.0 -8.673617e-19 0.0) (-7.101524e-18 8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.001 99.9935 1265.3) :target-centroid-pos #f(400.001 99.9935 1265.3) :fix-limbs-target-coords (list #<coordinates #X13751650  66.186 -100.0 283.495 / 1.378e-10 -4.056e-17 4.548e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-36-39-82-73-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-36-39-82-73-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(38.178 -30.9643 2.61405)/(49.2258/1)
;; dif-rot : #f(-0.011635 -0.158124 0.111926)/(0.194077/0.017453)
;; dif-pos : #f(12.0294 -6.34227 0.043466)/(13.599/1)
;; dif-rot : #f(-0.006039 -0.081813 0.100615)/(0.12982/0.017453)
;; cog-dif : #f(0.173228 -5.56319)/(5.56589/5.0)
;;  coords : #<coordinates #X1325f8e0  474.812 104.035 -91.834 / -0.184 -2.753e-08 5.132e-09>
;;  angles : (#f(18.6175 54.7982 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X17ae45f0  67.576 -100.0 286.461 / 1.373e-10 -4.134e-17 4.529e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.176 -64.967 289.989 / -0.112 0.158 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.72 107.514 401.085 / -0.101 0.082 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.812 104.035 926.666 / -0.184 -2.753e-08 5.132e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.484 5.729 936.166 / -0.073 -2.793e-08 2.055e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.484 5.729 814.166 / -0.073 -2.793e-08 -0.236> #<bodyset-link #X6f14d58 RLEG_LINK2  456.312 3.394 804.444 / -0.083 0.038 -0.236> #<bodyset-link #X6f38680 RLEG_LINK3  435.004 -84.18 435.288 / -1.55 1.333 -1.479> #<bodyset-link #X130e0d78 RLEG_LINK4  55.977 -58.265 427.108 / -0.112 0.158 -0.239> #<bodyset-link #X12a84e10 RLEG_LINK5  48.824 -67.005 388.736 / -0.112 0.158 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.812 104.035 926.666 / -0.184 -2.753e-08 5.132e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.14 202.341 936.166 / -0.074 -2.793e-08 2.061e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.14 202.341 814.166 / -0.074 -2.793e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.911 199.236 804.663 / 0.286 -0.821 -0.474> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.176 102.431 574.27 / -1.336 1.24 -1.278> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.62 538.62 / -0.101 0.082 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.848 106.501 500.749 / -0.101 0.082 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.176 -64.967 289.989 / -0.112 0.158 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.72 107.514 401.085 / -0.101 0.082 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.812 104.035 926.666 / -0.184 -2.753e-08 5.132e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.484 5.729 936.166 / -0.073 -2.793e-08 2.055e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.484 5.729 814.166 / -0.073 -2.793e-08 -0.236> #<bodyset-link #X6f14d58 RLEG_LINK2  456.312 3.394 804.444 / -0.083 0.038 -0.236> #<bodyset-link #X6f38680 RLEG_LINK3  435.004 -84.18 435.288 / -1.55 1.333 -1.479> #<bodyset-link #X130e0d78 RLEG_LINK4  55.977 -58.265 427.108 / -0.112 0.158 -0.239> #<bodyset-link #X12a84e10 RLEG_LINK5  48.824 -67.005 388.736 / -0.112 0.158 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.812 104.035 926.666 / -0.184 -2.753e-08 5.132e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.14 202.341 936.166 / -0.074 -2.793e-08 2.061e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.14 202.341 814.166 / -0.074 -2.793e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.911 199.236 804.663 / 0.286 -0.821 -0.474> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.176 102.431 574.27 / -1.336 1.24 -1.278> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.62 538.62 / -0.101 0.082 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.848 106.501 500.749 / -0.101 0.082 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.002 99.9939 1265.93) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.812 104.035 926.666 / -0.184 -2.753e-08 5.132e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.176 -64.967 289.989 / -0.112 0.158 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.72 107.514 401.085 / -0.101 0.082 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.484 5.729 936.166 / -0.073 -2.793e-08 2.055e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.484 5.729 814.166 / -0.073 -2.793e-08 -0.236> #<bodyset-link #X6f14d58 RLEG_LINK2  456.312 3.394 804.444 / -0.083 0.038 -0.236> #<bodyset-link #X6f38680 RLEG_LINK3  435.004 -84.18 435.288 / -1.55 1.333 -1.479> #<bodyset-link #X130e0d78 RLEG_LINK4  55.977 -58.265 427.108 / -0.112 0.158 -0.239> #<bodyset-link #X12a84e10 RLEG_LINK5  48.824 -67.005 388.736 / -0.112 0.158 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.14 202.341 936.166 / -0.074 -2.793e-08 2.061e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.14 202.341 814.166 / -0.074 -2.793e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.911 199.236 804.663 / 0.286 -0.821 -0.474> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.176 102.431 574.27 / -1.336 1.24 -1.278> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.62 538.62 / -0.101 0.082 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.848 106.501 500.749 / -0.101 0.082 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.002 99.9939 1265.93) :target-centroid-pos #f(400.002 99.9939 1265.93) :fix-limbs-target-coords (#<coordinates #X17ae45f0  67.576 -100.0 286.461 / 1.373e-10 -4.134e-17 4.529e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.98306 0.183282 -2.800114e-08 474.812) (-0.183282 0.98306 -8.218221e-19 104.035) (2.752681e-08 5.132109e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint663841304) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.6175 54.7982 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(67.5763 -100.0 286.461) :rot #2f((1.0 -1.372538e-10 -4.128308e-17) (1.372538e-10 1.0 -4.528745e-10) (4.134184e-17 4.528745e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.288373e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (6.288373e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.288373e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (6.288373e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.002 99.9939 1265.93) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.288373e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (6.288373e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 -5.684342e-14) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.002 99.9939 1265.93) :target-centroid-pos #f(400.002 99.9939 1265.93) :fix-limbs-target-coords (list #<coordinates #X17ae45f0  67.576 -100.0 286.461 / 1.373e-10 -4.134e-17 4.529e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-36-85-56-86-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-36-85-56-86-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(39.3849 -31.0063 2.75706)/(50.2012/1)
;; dif-rot : #f(-0.012253 -0.165992 0.114361)/(0.201946/0.017453)
;; dif-pos : #f(11.9674 -6.35266 0.043734)/(13.5491/1)
;; dif-rot : #f(-0.006025 -0.081341 0.100741)/(0.129621/0.017453)
;; cog-dif : #f(0.184449 -5.57804)/(5.58109/5.0)
;;  coords : #<coordinates #X1325f8e0  474.714 104.093 -91.834 / -0.184 -2.753e-08 5.125e-09>
;;  angles : (#f(18.5916 54.7687 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X31647c38  68.981 -100.0 289.407 / 1.367e-10 -4.213e-17 4.509e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.494 -64.705 293.293 / -0.114 0.166 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.783 107.52 401.074 / -0.101 0.082 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.714 104.093 926.666 / -0.184 -2.753e-08 5.125e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.412 5.782 936.166 / -0.074 -2.793e-08 2.061e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.412 5.782 814.166 / -0.074 -2.793e-08 -0.238> #<bodyset-link #X6f14d58 RLEG_LINK2  456.239 3.432 804.448 / -0.082 0.034 -0.238> #<bodyset-link #X6f38680 RLEG_LINK3  436.414 -84.832 435.373 / -1.585 1.333 -1.513> #<bodyset-link #X130e0d78 RLEG_LINK4  57.39 -58.107 430.218 / -0.114 0.166 -0.241> #<bodyset-link #X12a84e10 RLEG_LINK5  49.911 -66.868 391.912 / -0.114 0.166 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.714 104.093 926.666 / -0.184 -2.753e-08 5.125e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.017 202.404 936.166 / -0.074 -2.792e-08 2.069e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.017 202.404 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.787 199.298 804.664 / 0.286 -0.821 -0.475> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.158 102.413 574.437 / -1.335 1.239 -1.277> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.636 538.612 / -0.101 0.082 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.864 106.51 500.742 / -0.101 0.082 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.494 -64.705 293.293 / -0.114 0.166 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.783 107.52 401.074 / -0.101 0.082 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.714 104.093 926.666 / -0.184 -2.753e-08 5.125e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.412 5.782 936.166 / -0.074 -2.793e-08 2.061e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.412 5.782 814.166 / -0.074 -2.793e-08 -0.238> #<bodyset-link #X6f14d58 RLEG_LINK2  456.239 3.432 804.448 / -0.082 0.034 -0.238> #<bodyset-link #X6f38680 RLEG_LINK3  436.414 -84.832 435.373 / -1.585 1.333 -1.513> #<bodyset-link #X130e0d78 RLEG_LINK4  57.39 -58.107 430.218 / -0.114 0.166 -0.241> #<bodyset-link #X12a84e10 RLEG_LINK5  49.911 -66.868 391.912 / -0.114 0.166 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.714 104.093 926.666 / -0.184 -2.753e-08 5.125e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  493.017 202.404 936.166 / -0.074 -2.792e-08 2.069e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.017 202.404 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.787 199.298 804.664 / 0.286 -0.821 -0.475> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.158 102.413 574.437 / -1.335 1.239 -1.277> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.636 538.612 / -0.101 0.082 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.864 106.51 500.742 / -0.101 0.082 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.003 99.9943 1266.56) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.714 104.093 926.666 / -0.184 -2.753e-08 5.125e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.494 -64.705 293.293 / -0.114 0.166 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.783 107.52 401.074 / -0.101 0.082 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.412 5.782 936.166 / -0.074 -2.793e-08 2.061e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.412 5.782 814.166 / -0.074 -2.793e-08 -0.238> #<bodyset-link #X6f14d58 RLEG_LINK2  456.239 3.432 804.448 / -0.082 0.034 -0.238> #<bodyset-link #X6f38680 RLEG_LINK3  436.414 -84.832 435.373 / -1.585 1.333 -1.513> #<bodyset-link #X130e0d78 RLEG_LINK4  57.39 -58.107 430.218 / -0.114 0.166 -0.241> #<bodyset-link #X12a84e10 RLEG_LINK5  49.911 -66.868 391.912 / -0.114 0.166 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  493.017 202.404 936.166 / -0.074 -2.792e-08 2.069e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  493.017 202.404 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.787 199.298 804.664 / 0.286 -0.821 -0.475> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.158 102.413 574.437 / -1.335 1.239 -1.277> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.636 538.612 / -0.101 0.082 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.864 106.51 500.742 / -0.101 0.082 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.003 99.9943 1266.56) :target-centroid-pos #f(400.003 99.9943 1266.56) :fix-limbs-target-coords (#<coordinates #X31647c38  68.981 -100.0 289.407 / 1.367e-10 -4.213e-17 4.509e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983109 0.183023 -2.800114e-08 474.714) (-0.183023 0.983109 -8.218213e-19 104.093) (2.752816e-08 5.124851e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint117389832) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.5916 54.7687 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(68.9807 -100.0 289.407) :rot #2f((1.0 -1.366540e-10 -4.206865e-17) (1.366540e-10 1.0 -4.508953e-10) (4.212674e-17 4.508953e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.409463e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (1.409463e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.421011e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.409463e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (1.409463e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.421011e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.003 99.9943 1266.56) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.409463e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (1.409463e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.421011e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (5.421011e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.003 99.9943 1266.56) :target-centroid-pos #f(400.003 99.9943 1266.56) :fix-limbs-target-coords (list #<coordinates #X31647c38  68.981 -100.0 289.407 / 1.367e-10 -4.213e-17 4.509e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-37-21-39-85-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-37-21-39-85-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(40.5773 -31.0348 2.89912)/(51.1672/1)
;; dif-rot : #f(-0.012865 -0.173802 0.116784)/(0.209788/0.017453)
;; dif-pos : #f(11.9073 -6.3609 0.043964)/(13.4999/1)
;; dif-rot : #f(-0.006011 -0.080884 0.100846)/(0.129415/0.017453)
;; cog-dif : #f(0.195495 -5.5909)/(5.59431/5.0)
;;  coords : #<coordinates #X1325f8e0  474.616 104.147 -91.834 / -0.184 -2.753e-08 5.118e-09>
;;  angles : (#f(18.5658 54.7394 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X116df440  70.399 -100.0 292.332 / 1.360e-10 -4.292e-17 4.489e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.843 -64.453 296.59 / -0.117 0.174 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.844 107.523 401.064 / -0.101 0.081 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.616 104.147 926.666 / -0.184 -2.753e-08 5.118e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.337 5.832 936.166 / -0.074 -2.792e-08 2.067e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.337 5.832 814.166 / -0.074 -2.792e-08 -0.239> #<bodyset-link #X6f14d58 RLEG_LINK2  456.162 3.467 804.452 / -0.081 0.03 -0.24> #<bodyset-link #X6f38680 RLEG_LINK3  437.821 -85.487 435.466 / -1.62 1.331 -1.547> #<bodyset-link #X130e0d78 RLEG_LINK4  58.825 -57.961 433.313 / -0.117 0.174 -0.243> #<bodyset-link #X12a84e10 RLEG_LINK5  51.021 -66.742 395.077 / -0.117 0.174 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.616 104.147 926.666 / -0.184 -2.753e-08 5.118e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.895 202.462 936.166 / -0.074 -2.792e-08 2.075e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.895 202.462 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.664 199.355 804.664 / 0.286 -0.822 -0.475> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.141 102.401 574.598 / -1.334 1.239 -1.276> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.65 538.605 / -0.101 0.081 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.88 106.517 500.735 / -0.101 0.081 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.843 -64.453 296.59 / -0.117 0.174 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.844 107.523 401.064 / -0.101 0.081 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.616 104.147 926.666 / -0.184 -2.753e-08 5.118e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.337 5.832 936.166 / -0.074 -2.792e-08 2.067e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.337 5.832 814.166 / -0.074 -2.792e-08 -0.239> #<bodyset-link #X6f14d58 RLEG_LINK2  456.162 3.467 804.452 / -0.081 0.03 -0.24> #<bodyset-link #X6f38680 RLEG_LINK3  437.821 -85.487 435.466 / -1.62 1.331 -1.547> #<bodyset-link #X130e0d78 RLEG_LINK4  58.825 -57.961 433.313 / -0.117 0.174 -0.243> #<bodyset-link #X12a84e10 RLEG_LINK5  51.021 -66.742 395.077 / -0.117 0.174 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.616 104.147 926.666 / -0.184 -2.753e-08 5.118e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.895 202.462 936.166 / -0.074 -2.792e-08 2.075e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.895 202.462 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.664 199.355 804.664 / 0.286 -0.822 -0.475> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.141 102.401 574.598 / -1.334 1.239 -1.276> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.65 538.605 / -0.101 0.081 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.88 106.517 500.735 / -0.101 0.081 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.004 99.9946 1267.2) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.616 104.147 926.666 / -0.184 -2.753e-08 5.118e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  33.843 -64.453 296.59 / -0.117 0.174 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.844 107.523 401.064 / -0.101 0.081 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.337 5.832 936.166 / -0.074 -2.792e-08 2.067e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.337 5.832 814.166 / -0.074 -2.792e-08 -0.239> #<bodyset-link #X6f14d58 RLEG_LINK2  456.162 3.467 804.452 / -0.081 0.03 -0.24> #<bodyset-link #X6f38680 RLEG_LINK3  437.821 -85.487 435.466 / -1.62 1.331 -1.547> #<bodyset-link #X130e0d78 RLEG_LINK4  58.825 -57.961 433.313 / -0.117 0.174 -0.243> #<bodyset-link #X12a84e10 RLEG_LINK5  51.021 -66.742 395.077 / -0.117 0.174 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.895 202.462 936.166 / -0.074 -2.792e-08 2.075e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.895 202.462 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.664 199.355 804.664 / 0.286 -0.822 -0.475> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.141 102.401 574.598 / -1.334 1.239 -1.276> #<bodyset-link #X1316f038 LLEG_LINK4  401.199 118.65 538.605 / -0.101 0.081 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.88 106.517 500.735 / -0.101 0.081 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.004 99.9946 1267.2) :target-centroid-pos #f(400.004 99.9946 1267.2) :fix-limbs-target-coords (#<coordinates #X116df440  70.399 -100.0 292.332 / 1.360e-10 -4.292e-17 4.489e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983152 0.182789 -2.800114e-08 474.616) (-0.182789 0.983152 -8.218221e-19 104.147) (2.752938e-08 5.118294e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint793574080) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.5658 54.7394 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(70.3994 -100.0 292.332) :rot #2f((1.0 -1.360492e-10 -4.286059e-17) (1.360492e-10 1.0 -4.488999e-10) (4.291801e-17 4.488999e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.107298e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (9.107298e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.065758e-18 0.0) (0.0 1.0 0.0 0.0) (-4.065758e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.107298e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (9.107298e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.065758e-18 0.0) (0.0 1.0 0.0 0.0) (-4.065758e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.004 99.9946 1267.2) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.107298e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (9.107298e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.065758e-18 0.0) (0.0 1.0 0.0 0.0) (-4.065758e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.004 99.9946 1267.2) :target-centroid-pos #f(400.004 99.9946 1267.2) :fix-limbs-target-coords (list #<coordinates #X116df440  70.399 -100.0 292.332 / 1.360e-10 -4.292e-17 4.489e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-37-55-91-54-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-37-55-91-54-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(41.7547 -31.05 3.04004)/(52.1229/1)
;; dif-rot : #f(-0.013471 -0.181552 0.119193)/(0.217599/0.017453)
;; dif-pos : #f(11.8489 -6.367 0.044156)/(13.4513/1)
;; dif-rot : #f(-0.005995 -0.080443 0.100928)/(0.129203/0.017453)
;; cog-dif : #f(0.20636 -5.60176)/(5.60556/5.0)
;;  coords : #<coordinates #X1325f8e0  474.516 104.198 -91.834 / -0.184 -2.753e-08 5.112e-09>
;;  angles : (#f(18.54 54.7101 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X7696c70  71.832 -100.0 295.235 / 1.354e-10 -4.372e-17 4.469e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.223 -64.212 299.88 / -0.119 0.182 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.903 107.525 401.054 / -0.101 0.081 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.516 104.198 926.666 / -0.184 -2.753e-08 5.112e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.258 5.878 936.166 / -0.074 -2.792e-08 2.072e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.258 5.878 814.166 / -0.074 -2.792e-08 -0.241> #<bodyset-link #X6f14d58 RLEG_LINK2  456.081 3.499 804.455 / -0.08 0.026 -0.241> #<bodyset-link #X6f38680 RLEG_LINK3  439.223 -86.147 435.566 / -1.654 1.33 -1.58> #<bodyset-link #X130e0d78 RLEG_LINK4  60.281 -57.826 436.393 / -0.119 0.182 -0.245> #<bodyset-link #X12a84e10 RLEG_LINK5  52.155 -66.626 398.229 / -0.119 0.182 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.516 104.198 926.666 / -0.184 -2.753e-08 5.112e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.774 202.517 936.166 / -0.074 -2.792e-08 2.081e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.774 202.517 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.542 199.407 804.665 / 0.287 -0.822 -0.476> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.124 102.393 574.754 / -1.333 1.239 -1.275> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.662 538.598 / -0.101 0.081 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.894 106.521 500.729 / -0.101 0.081 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.223 -64.212 299.88 / -0.119 0.182 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.903 107.525 401.054 / -0.101 0.081 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.516 104.198 926.666 / -0.184 -2.753e-08 5.112e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.258 5.878 936.166 / -0.074 -2.792e-08 2.072e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.258 5.878 814.166 / -0.074 -2.792e-08 -0.241> #<bodyset-link #X6f14d58 RLEG_LINK2  456.081 3.499 804.455 / -0.08 0.026 -0.241> #<bodyset-link #X6f38680 RLEG_LINK3  439.223 -86.147 435.566 / -1.654 1.33 -1.58> #<bodyset-link #X130e0d78 RLEG_LINK4  60.281 -57.826 436.393 / -0.119 0.182 -0.245> #<bodyset-link #X12a84e10 RLEG_LINK5  52.155 -66.626 398.229 / -0.119 0.182 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.516 104.198 926.666 / -0.184 -2.753e-08 5.112e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.774 202.517 936.166 / -0.074 -2.792e-08 2.081e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.774 202.517 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.542 199.407 804.665 / 0.287 -0.822 -0.476> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.124 102.393 574.754 / -1.333 1.239 -1.275> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.662 538.598 / -0.101 0.081 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.894 106.521 500.729 / -0.101 0.081 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.004 99.995 1267.83) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.516 104.198 926.666 / -0.184 -2.753e-08 5.112e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.223 -64.212 299.88 / -0.119 0.182 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.903 107.525 401.054 / -0.101 0.081 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.258 5.878 936.166 / -0.074 -2.792e-08 2.072e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.258 5.878 814.166 / -0.074 -2.792e-08 -0.241> #<bodyset-link #X6f14d58 RLEG_LINK2  456.081 3.499 804.455 / -0.08 0.026 -0.241> #<bodyset-link #X6f38680 RLEG_LINK3  439.223 -86.147 435.566 / -1.654 1.33 -1.58> #<bodyset-link #X130e0d78 RLEG_LINK4  60.281 -57.826 436.393 / -0.119 0.182 -0.245> #<bodyset-link #X12a84e10 RLEG_LINK5  52.155 -66.626 398.229 / -0.119 0.182 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.774 202.517 936.166 / -0.074 -2.792e-08 2.081e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.774 202.517 814.166 / -0.074 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.542 199.407 804.665 / 0.287 -0.822 -0.476> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.124 102.393 574.754 / -1.333 1.239 -1.275> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.662 538.598 / -0.101 0.081 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.894 106.521 500.729 / -0.101 0.081 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.004 99.995 1267.83) :target-centroid-pos #f(400.004 99.995 1267.83) :fix-limbs-target-coords (#<coordinates #X7696c70  71.832 -100.0 295.235 / 1.354e-10 -4.372e-17 4.469e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983191 0.18258 -2.800114e-08 474.516) (-0.18258 0.983191 -8.218221e-19 104.198) (2.753047e-08 5.112435e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint653462568) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.54 54.7101 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(71.8323 -100.0 295.235) :rot #2f((1.0 -1.354397e-10 -4.365885e-17) (1.354397e-10 1.0 -4.468887e-10) (4.371558e-17 4.468887e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.138412e-17 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (1.138412e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.041540e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-5.041540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.138412e-17 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (1.138412e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.041540e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-5.041540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.004 99.995 1267.83) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.138412e-17 7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (1.138412e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.041540e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-5.041540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.004 99.995 1267.83) :target-centroid-pos #f(400.004 99.995 1267.83) :fix-limbs-target-coords (list #<coordinates #X7696c70  71.832 -100.0 295.235 / 1.354e-10 -4.372e-17 4.469e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-37-89-97-43-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-37-89-97-43-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(42.9169 -31.052 3.17961)/(53.0679/1)
;; dif-rot : #f(-0.01407 -0.18924 0.121587)/(0.225373/0.017453)
;; dif-pos : #f(11.7923 -6.37099 0.04431)/(13.4034/1)
;; dif-rot : #f(-0.005979 -0.080017 0.100989)/(0.128986/0.017453)
;; cog-dif : #f(0.217034 -5.61066)/(5.61485/5.0)
;;  coords : #<coordinates #X1325f8e0  474.415 104.244 -91.834 / -0.183 -2.753e-08 5.107e-09>
;;  angles : (#f(18.5143 54.6809 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2ea25820  73.279 -100.0 298.116 / 1.348e-10 -4.452e-17 4.449e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.634 -63.982 303.16 / -0.122 0.19 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.959 107.524 401.044 / -0.101 0.08 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.415 104.244 926.666 / -0.183 -2.753e-08 5.107e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.176 5.921 936.166 / -0.074 -2.792e-08 2.076e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.176 5.921 814.166 / -0.074 -2.792e-08 -0.243> #<bodyset-link #X6f14d58 RLEG_LINK2  455.998 3.527 804.459 / -0.08 0.022 -0.243> #<bodyset-link #X6f38680 RLEG_LINK3  440.622 -86.809 435.673 / -1.688 1.328 -1.612> #<bodyset-link #X130e0d78 RLEG_LINK4  61.758 -57.702 439.458 / -0.122 0.19 -0.247> #<bodyset-link #X12a84e10 RLEG_LINK5  53.313 -66.522 401.367 / -0.122 0.19 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.415 104.244 926.666 / -0.183 -2.753e-08 5.107e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.655 202.567 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.655 202.567 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.422 199.456 804.665 / 0.287 -0.823 -0.476> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.108 102.39 574.906 / -1.332 1.238 -1.274> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.671 538.591 / -0.101 0.08 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.909 106.524 500.722 / -0.101 0.08 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.634 -63.982 303.16 / -0.122 0.19 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.959 107.524 401.044 / -0.101 0.08 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.415 104.244 926.666 / -0.183 -2.753e-08 5.107e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.176 5.921 936.166 / -0.074 -2.792e-08 2.076e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.176 5.921 814.166 / -0.074 -2.792e-08 -0.243> #<bodyset-link #X6f14d58 RLEG_LINK2  455.998 3.527 804.459 / -0.08 0.022 -0.243> #<bodyset-link #X6f38680 RLEG_LINK3  440.622 -86.809 435.673 / -1.688 1.328 -1.612> #<bodyset-link #X130e0d78 RLEG_LINK4  61.758 -57.702 439.458 / -0.122 0.19 -0.247> #<bodyset-link #X12a84e10 RLEG_LINK5  53.313 -66.522 401.367 / -0.122 0.19 0.003>) (#<bodyset-link #X6ee5ff8 BODY  474.415 104.244 926.666 / -0.183 -2.753e-08 5.107e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.655 202.567 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.655 202.567 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.422 199.456 804.665 / 0.287 -0.823 -0.476> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.108 102.39 574.906 / -1.332 1.238 -1.274> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.671 538.591 / -0.101 0.08 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.909 106.524 500.722 / -0.101 0.08 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.005 99.9953 1268.47) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.415 104.244 926.666 / -0.183 -2.753e-08 5.107e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  34.634 -63.982 303.16 / -0.122 0.19 0.003> #<cascaded-coords #X12422518 :lleg-end-coords  388.959 107.524 401.044 / -0.101 0.08 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.176 5.921 936.166 / -0.074 -2.792e-08 2.076e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.176 5.921 814.166 / -0.074 -2.792e-08 -0.243> #<bodyset-link #X6f14d58 RLEG_LINK2  455.998 3.527 804.459 / -0.08 0.022 -0.243> #<bodyset-link #X6f38680 RLEG_LINK3  440.622 -86.809 435.673 / -1.688 1.328 -1.612> #<bodyset-link #X130e0d78 RLEG_LINK4  61.758 -57.702 439.458 / -0.122 0.19 -0.247> #<bodyset-link #X12a84e10 RLEG_LINK5  53.313 -66.522 401.367 / -0.122 0.19 0.003>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.655 202.567 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.655 202.567 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.422 199.456 804.665 / 0.287 -0.823 -0.476> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.108 102.39 574.906 / -1.332 1.238 -1.274> #<bodyset-link #X1316f038 LLEG_LINK4  401.198 118.671 538.591 / -0.101 0.08 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.909 106.524 500.722 / -0.101 0.08 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.005 99.9953 1268.47) :target-centroid-pos #f(400.005 99.9953 1268.47) :fix-limbs-target-coords (#<coordinates #X2ea25820  73.279 -100.0 298.116 / 1.348e-10 -4.452e-17 4.449e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983225 0.182395 -2.800114e-08 474.415) (-0.182395 0.983225 -8.218221e-19 104.244) (2.753143e-08 5.107270e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint779592328) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.5143 54.6809 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(73.2794 -100.0 298.116) :rot #2f((1.0 -1.348254e-10 -4.446334e-17) (1.348254e-10 1.0 -4.448618e-10) (4.451939e-17 4.448618e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.517883e-18 1.421085e-14) (0.0 1.0 0.0 0.0) (1.517883e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 0.0) (0.0 1.0 0.0 0.0) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.517883e-18 1.421085e-14) (0.0 1.0 0.0 0.0) (1.517883e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 0.0) (0.0 1.0 0.0 0.0) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.005 99.9953 1268.47) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.517883e-18 1.421085e-14) (0.0 1.0 0.0 0.0) (1.517883e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 0.0) (0.0 1.0 0.0 0.0) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.005 99.9953 1268.47) :target-centroid-pos #f(400.005 99.9953 1268.47) :fix-limbs-target-coords (list #<coordinates #X2ea25820  73.279 -100.0 298.116 / 1.348e-10 -4.452e-17 4.449e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-38-23-85-47-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-38-23-85-47-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(44.0636 -31.0409 3.31763)/(54.0014/1)
;; dif-rot : #f(-0.014662 -0.196864 0.123966)/(0.233105/0.017453)
;; dif-pos : #f(11.7375 -6.37287 0.044426)/(13.3561/1)
;; dif-rot : #f(-0.005961 -0.079606 0.101029)/(0.128761/0.017453)
;; cog-dif : #f(0.227513 -5.61758)/(5.62219/5.0)
;;  coords : #<coordinates #X1325f8e0  474.314 104.287 -91.834 / -0.183 -2.753e-08 5.103e-09>
;;  angles : (#f(18.4887 54.6517 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X28449b10  74.74 -100.0 300.974 / 1.342e-10 -4.533e-17 4.428e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.077 -63.762 306.431 / -0.124 0.197 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.014 107.52 401.035 / -0.101 0.08 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.314 104.287 926.666 / -0.183 -2.753e-08 5.103e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.09 5.961 936.166 / -0.074 -2.792e-08 2.080e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.09 5.961 814.166 / -0.074 -2.792e-08 -0.244> #<bodyset-link #X6f14d58 RLEG_LINK2  455.911 3.551 804.463 / -0.079 0.018 -0.244> #<bodyset-link #X6f38680 RLEG_LINK3  442.019 -87.475 435.788 / -1.72 1.326 -1.644> #<bodyset-link #X130e0d78 RLEG_LINK4  63.255 -57.589 442.506 / -0.124 0.197 -0.249> #<bodyset-link #X12a84e10 RLEG_LINK5  54.496 -66.429 404.491 / -0.124 0.197 0.002>) (#<bodyset-link #X6ee5ff8 BODY  474.314 104.287 926.666 / -0.183 -2.753e-08 5.103e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.537 202.612 936.166 / -0.075 -2.792e-08 2.091e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.537 202.612 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.304 199.5 804.666 / 0.287 -0.823 -0.477> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.092 102.392 575.052 / -1.331 1.238 -1.272> #<bodyset-link #X1316f038 LLEG_LINK4  401.197 118.678 538.585 / -0.101 0.08 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.922 106.524 500.716 / -0.101 0.08 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.077 -63.762 306.431 / -0.124 0.197 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.014 107.52 401.035 / -0.101 0.08 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.314 104.287 926.666 / -0.183 -2.753e-08 5.103e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.09 5.961 936.166 / -0.074 -2.792e-08 2.080e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.09 5.961 814.166 / -0.074 -2.792e-08 -0.244> #<bodyset-link #X6f14d58 RLEG_LINK2  455.911 3.551 804.463 / -0.079 0.018 -0.244> #<bodyset-link #X6f38680 RLEG_LINK3  442.019 -87.475 435.788 / -1.72 1.326 -1.644> #<bodyset-link #X130e0d78 RLEG_LINK4  63.255 -57.589 442.506 / -0.124 0.197 -0.249> #<bodyset-link #X12a84e10 RLEG_LINK5  54.496 -66.429 404.491 / -0.124 0.197 0.002>) (#<bodyset-link #X6ee5ff8 BODY  474.314 104.287 926.666 / -0.183 -2.753e-08 5.103e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.537 202.612 936.166 / -0.075 -2.792e-08 2.091e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.537 202.612 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.304 199.5 804.666 / 0.287 -0.823 -0.477> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.092 102.392 575.052 / -1.331 1.238 -1.272> #<bodyset-link #X1316f038 LLEG_LINK4  401.197 118.678 538.585 / -0.101 0.08 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.922 106.524 500.716 / -0.101 0.08 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.005 99.9955 1269.12) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.314 104.287 926.666 / -0.183 -2.753e-08 5.103e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.077 -63.762 306.431 / -0.124 0.197 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.014 107.52 401.035 / -0.101 0.08 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.09 5.961 936.166 / -0.074 -2.792e-08 2.080e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.09 5.961 814.166 / -0.074 -2.792e-08 -0.244> #<bodyset-link #X6f14d58 RLEG_LINK2  455.911 3.551 804.463 / -0.079 0.018 -0.244> #<bodyset-link #X6f38680 RLEG_LINK3  442.019 -87.475 435.788 / -1.72 1.326 -1.644> #<bodyset-link #X130e0d78 RLEG_LINK4  63.255 -57.589 442.506 / -0.124 0.197 -0.249> #<bodyset-link #X12a84e10 RLEG_LINK5  54.496 -66.429 404.491 / -0.124 0.197 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.537 202.612 936.166 / -0.075 -2.792e-08 2.091e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.537 202.612 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.304 199.5 804.666 / 0.287 -0.823 -0.477> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.092 102.392 575.052 / -1.331 1.238 -1.272> #<bodyset-link #X1316f038 LLEG_LINK4  401.197 118.678 538.585 / -0.101 0.08 -0.318> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.922 106.524 500.716 / -0.101 0.08 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.005 99.9955 1269.12) :target-centroid-pos #f(400.005 99.9955 1269.12) :fix-limbs-target-coords (#<coordinates #X28449b10  74.74 -100.0 300.974 / 1.342e-10 -4.533e-17 4.428e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983255 0.182235 -2.800114e-08 474.314) (-0.182235 0.983255 -8.218230e-19 104.287) (2.753226e-08 5.102800e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint762241232) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.4887 54.6517 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(74.7404 -100.0 300.974) :rot #2f((1.0 -1.342063e-10 -4.527401e-17) (1.342063e-10 1.0 -4.428193e-10) (4.532937e-17 4.428193e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 1.421085e-14) (0.0 1.0 0.0 7.105427e-15) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-6.234162e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 1.421085e-14) (0.0 1.0 0.0 7.105427e-15) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-6.234162e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.005 99.9955 1269.12) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.084202e-19 1.421085e-14) (0.0 1.0 0.0 7.105427e-15) (1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-6.234162e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.005 99.9955 1269.12) :target-centroid-pos #f(400.005 99.9955 1269.12) :fix-limbs-target-coords (list #<coordinates #X28449b10  74.74 -100.0 300.974 / 1.342e-10 -4.533e-17 4.428e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-38-59-26-11-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-38-59-26-11-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(45.1946 -31.0166 3.4539)/(54.9228/1)
;; dif-rot : #f(-0.015245 -0.204423 0.126329)/(0.240791/0.017453)
;; dif-pos : #f(11.6844 -6.37267 0.044506)/(13.3093/1)
;; dif-rot : #f(-0.005943 -0.079211 0.101047)/(0.128531/0.017453)
;; cog-dif : #f(0.237788 -5.62254)/(5.62756/5.0)
;;  coords : #<coordinates #X1325f8e0  474.211 104.325 -91.834 / -0.183 -2.753e-08 5.099e-09>
;;  angles : (#f(18.4631 54.6227 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X28803578  76.215 -100.0 303.808 / 1.336e-10 -4.615e-17 4.408e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.552 -63.552 309.689 / -0.127 0.205 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.066 107.515 401.026 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.211 104.325 926.666 / -0.183 -2.753e-08 5.099e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.001 5.997 936.166 / -0.074 -2.792e-08 2.082e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.001 5.997 814.166 / -0.074 -2.792e-08 -0.246> #<bodyset-link #X6f14d58 RLEG_LINK2  455.82 3.573 804.467 / -0.078 0.014 -0.246> #<bodyset-link #X6f38680 RLEG_LINK3  443.413 -88.144 435.91 / -1.752 1.324 -1.675> #<bodyset-link #X130e0d78 RLEG_LINK4  64.774 -57.488 445.535 / -0.127 0.205 -0.251> #<bodyset-link #X12a84e10 RLEG_LINK5  55.702 -66.347 407.598 / -0.127 0.205 0.002>) (#<bodyset-link #X6ee5ff8 BODY  474.211 104.325 926.666 / -0.183 -2.753e-08 5.099e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.421 202.653 936.166 / -0.075 -2.792e-08 2.095e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.421 202.653 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.188 199.54 804.666 / 0.288 -0.823 -0.477> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.077 102.398 575.193 / -1.33 1.238 -1.271> #<bodyset-link #X1316f038 LLEG_LINK4  401.195 118.682 538.579 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.935 106.523 500.711 / -0.101 0.079 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.552 -63.552 309.689 / -0.127 0.205 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.066 107.515 401.026 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.211 104.325 926.666 / -0.183 -2.753e-08 5.099e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  456.001 5.997 936.166 / -0.074 -2.792e-08 2.082e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.001 5.997 814.166 / -0.074 -2.792e-08 -0.246> #<bodyset-link #X6f14d58 RLEG_LINK2  455.82 3.573 804.467 / -0.078 0.014 -0.246> #<bodyset-link #X6f38680 RLEG_LINK3  443.413 -88.144 435.91 / -1.752 1.324 -1.675> #<bodyset-link #X130e0d78 RLEG_LINK4  64.774 -57.488 445.535 / -0.127 0.205 -0.251> #<bodyset-link #X12a84e10 RLEG_LINK5  55.702 -66.347 407.598 / -0.127 0.205 0.002>) (#<bodyset-link #X6ee5ff8 BODY  474.211 104.325 926.666 / -0.183 -2.753e-08 5.099e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.421 202.653 936.166 / -0.075 -2.792e-08 2.095e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.421 202.653 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.188 199.54 804.666 / 0.288 -0.823 -0.477> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.077 102.398 575.193 / -1.33 1.238 -1.271> #<bodyset-link #X1316f038 LLEG_LINK4  401.195 118.682 538.579 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.935 106.523 500.711 / -0.101 0.079 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.006 99.9958 1269.76) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.211 104.325 926.666 / -0.183 -2.753e-08 5.099e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  35.552 -63.552 309.689 / -0.127 0.205 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.066 107.515 401.026 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  456.001 5.997 936.166 / -0.074 -2.792e-08 2.082e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  456.001 5.997 814.166 / -0.074 -2.792e-08 -0.246> #<bodyset-link #X6f14d58 RLEG_LINK2  455.82 3.573 804.467 / -0.078 0.014 -0.246> #<bodyset-link #X6f38680 RLEG_LINK3  443.413 -88.144 435.91 / -1.752 1.324 -1.675> #<bodyset-link #X130e0d78 RLEG_LINK4  64.774 -57.488 445.535 / -0.127 0.205 -0.251> #<bodyset-link #X12a84e10 RLEG_LINK5  55.702 -66.347 407.598 / -0.127 0.205 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.421 202.653 936.166 / -0.075 -2.792e-08 2.095e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.421 202.653 814.166 / -0.075 -2.792e-08 -0.317> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.188 199.54 804.666 / 0.288 -0.823 -0.477> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.077 102.398 575.193 / -1.33 1.238 -1.271> #<bodyset-link #X1316f038 LLEG_LINK4  401.195 118.682 538.579 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.935 106.523 500.711 / -0.101 0.079 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.006 99.9958 1269.76) :target-centroid-pos #f(400.006 99.9958 1269.76) :fix-limbs-target-coords (#<coordinates #X28803578  76.215 -100.0 303.808 / 1.336e-10 -4.615e-17 4.408e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.98328 0.182101 -2.800114e-08 474.211) (-0.182101 0.98328 -8.218226e-19 104.325) (2.753296e-08 5.099024e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint648043328) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.4631 54.6227 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(76.2153 -100.0 303.808) :rot #2f((1.0 -1.335827e-10 -4.609079e-17) (1.335827e-10 1.0 -4.407614e-10) (4.614545e-17 4.407614e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.529431e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (5.529431e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-6.234162e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.529431e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (5.529431e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-6.234162e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.006 99.9958 1269.76) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.529431e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (5.529431e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.234162e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-6.234162e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.006 99.9958 1269.76) :target-centroid-pos #f(400.006 99.9958 1269.76) :fix-limbs-target-coords (list #<coordinates #X28803578  76.215 -100.0 303.808 / 1.336e-10 -4.615e-17 4.408e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-38-94-02-74-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-38-94-02-74-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(46.3094 -30.9793 3.58821)/(55.8315/1)
;; dif-rot : #f(-0.015818 -0.211915 0.128675)/(0.248426/0.017453)
;; dif-pos : #f(11.6331 -6.37038 0.044549)/(13.2632/1)
;; dif-rot : #f(-0.005923 -0.07883 0.101044)/(0.128293/0.017453)
;; cog-dif : #f(0.247853 -5.62553)/(5.63098/5.0)
;;  coords : #<coordinates #X1325f8e0  474.108 104.36 -91.834 / -0.183 -2.753e-08 5.096e-09>
;;  angles : (#f(18.4376 54.5938 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2e022818  77.704 -100.0 306.618 / 1.330e-10 -4.697e-17 4.387e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  36.059 -63.354 312.935 / -0.129 0.212 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.116 107.508 401.017 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.108 104.36 926.666 / -0.183 -2.753e-08 5.096e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.909 6.03 936.166 / -0.075 -2.792e-08 2.084e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.909 6.03 814.166 / -0.075 -2.792e-08 -0.247> #<bodyset-link #X6f14d58 RLEG_LINK2  455.727 3.59 804.47 / -0.077 0.01 -0.247> #<bodyset-link #X6f38680 RLEG_LINK3  444.805 -88.815 436.039 / -1.783 1.321 -1.705> #<bodyset-link #X130e0d78 RLEG_LINK4  66.313 -57.398 448.546 / -0.129 0.212 -0.253> #<bodyset-link #X12a84e10 RLEG_LINK5  56.932 -66.276 410.689 / -0.129 0.212 0.002>) (#<bodyset-link #X6ee5ff8 BODY  474.108 104.36 926.666 / -0.183 -2.753e-08 5.096e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.307 202.69 936.166 / -0.075 -2.792e-08 2.098e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.307 202.69 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.073 199.576 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.062 102.409 575.328 / -1.329 1.238 -1.27> #<bodyset-link #X1316f038 LLEG_LINK4  401.194 118.684 538.573 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.948 106.519 500.705 / -0.101 0.079 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  36.059 -63.354 312.935 / -0.129 0.212 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.116 107.508 401.017 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.108 104.36 926.666 / -0.183 -2.753e-08 5.096e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.909 6.03 936.166 / -0.075 -2.792e-08 2.084e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.909 6.03 814.166 / -0.075 -2.792e-08 -0.247> #<bodyset-link #X6f14d58 RLEG_LINK2  455.727 3.59 804.47 / -0.077 0.01 -0.247> #<bodyset-link #X6f38680 RLEG_LINK3  444.805 -88.815 436.039 / -1.783 1.321 -1.705> #<bodyset-link #X130e0d78 RLEG_LINK4  66.313 -57.398 448.546 / -0.129 0.212 -0.253> #<bodyset-link #X12a84e10 RLEG_LINK5  56.932 -66.276 410.689 / -0.129 0.212 0.002>) (#<bodyset-link #X6ee5ff8 BODY  474.108 104.36 926.666 / -0.183 -2.753e-08 5.096e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.307 202.69 936.166 / -0.075 -2.792e-08 2.098e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.307 202.69 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.073 199.576 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.062 102.409 575.328 / -1.329 1.238 -1.27> #<bodyset-link #X1316f038 LLEG_LINK4  401.194 118.684 538.573 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.948 106.519 500.705 / -0.101 0.079 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.006 99.9961 1270.41) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.108 104.36 926.666 / -0.183 -2.753e-08 5.096e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  36.059 -63.354 312.935 / -0.129 0.212 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.116 107.508 401.017 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.909 6.03 936.166 / -0.075 -2.792e-08 2.084e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.909 6.03 814.166 / -0.075 -2.792e-08 -0.247> #<bodyset-link #X6f14d58 RLEG_LINK2  455.727 3.59 804.47 / -0.077 0.01 -0.247> #<bodyset-link #X6f38680 RLEG_LINK3  444.805 -88.815 436.039 / -1.783 1.321 -1.705> #<bodyset-link #X130e0d78 RLEG_LINK4  66.313 -57.398 448.546 / -0.129 0.212 -0.253> #<bodyset-link #X12a84e10 RLEG_LINK5  56.932 -66.276 410.689 / -0.129 0.212 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.307 202.69 936.166 / -0.075 -2.792e-08 2.098e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.307 202.69 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  492.073 199.576 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.062 102.409 575.328 / -1.329 1.238 -1.27> #<bodyset-link #X1316f038 LLEG_LINK4  401.194 118.684 538.573 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.948 106.519 500.705 / -0.101 0.079 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.006 99.9961 1270.41) :target-centroid-pos #f(400.006 99.9961 1270.41) :fix-limbs-target-coords (#<coordinates #X2e022818  77.704 -100.0 306.618 / 1.330e-10 -4.697e-17 4.387e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.9833 0.181991 -2.800114e-08 474.108) (-0.181991 0.9833 -8.218230e-19 104.36) (2.753353e-08 5.095945e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint608679488) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.4376 54.5938 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(77.7039 -100.0 306.618) :rot #2f((1.0 -1.329544e-10 -4.691361e-17) (1.329544e-10 1.0 -4.386883e-10) (4.696756e-17 4.386883e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.734723e-18 -7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (1.734723e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.409463e-18 0.0) (0.0 1.0 0.0 0.0) (1.409463e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.734723e-18 -7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (1.734723e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.409463e-18 0.0) (0.0 1.0 0.0 0.0) (1.409463e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.006 99.9961 1270.41) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.734723e-18 -7.105427e-15) (0.0 1.0 0.0 -7.105427e-15) (1.734723e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.409463e-18 0.0) (0.0 1.0 0.0 0.0) (1.409463e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.006 99.9961 1270.41) :target-centroid-pos #f(400.006 99.9961 1270.41) :fix-limbs-target-coords (list #<coordinates #X2e022818  77.704 -100.0 306.618 / 1.330e-10 -4.697e-17 4.387e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-39-29-91-89-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-39-29-91-89-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(47.4077 -30.929 3.72036)/(56.7269/1)
;; dif-rot : #f(-0.016382 -0.219338 0.131003)/(0.256006/0.017453)
;; dif-pos : #f(11.5835 -6.36601 0.044556)/(13.2176/1)
;; dif-rot : #f(-0.005902 -0.078465 0.101018)/(0.128048/0.017453)
;; cog-dif : #f(0.257702 -5.62654)/(5.63244/5.0)
;;  coords : #<coordinates #X1325f8e0  474.004 104.391 -91.834 / -0.183 -2.753e-08 5.094e-09>
;;  angles : (#f(18.4122 54.565 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X31e1eaf0  79.206 -100.0 309.403 / 1.323e-10 -4.780e-17 4.366e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  36.597 -63.167 316.167 / -0.131 0.22 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.165 107.498 401.009 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.003 104.391 926.666 / -0.183 -2.753e-08 5.094e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.813 6.059 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.813 6.059 814.166 / -0.075 -2.792e-08 -0.249> #<bodyset-link #X6f14d58 RLEG_LINK2  455.63 3.605 804.474 / -0.076 0.006 -0.249> #<bodyset-link #X6f38680 RLEG_LINK3  446.197 -89.489 436.175 / -1.813 1.319 -1.734> #<bodyset-link #X130e0d78 RLEG_LINK4  67.872 -57.319 451.537 / -0.131 0.22 -0.255> #<bodyset-link #X12a84e10 RLEG_LINK5  58.185 -66.217 413.761 / -0.131 0.22 0.002>) (#<bodyset-link #X6ee5ff8 BODY  474.003 104.391 926.666 / -0.183 -2.753e-08 5.094e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.194 202.723 936.166 / -0.075 -2.792e-08 2.100e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.194 202.723 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.96 199.608 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.048 102.426 575.459 / -1.328 1.238 -1.269> #<bodyset-link #X1316f038 LLEG_LINK4  401.192 118.683 538.568 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.96 106.514 500.7 / -0.101 0.079 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  36.597 -63.167 316.167 / -0.131 0.22 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.165 107.498 401.009 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  474.003 104.391 926.666 / -0.183 -2.753e-08 5.094e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.813 6.059 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.813 6.059 814.166 / -0.075 -2.792e-08 -0.249> #<bodyset-link #X6f14d58 RLEG_LINK2  455.63 3.605 804.474 / -0.076 0.006 -0.249> #<bodyset-link #X6f38680 RLEG_LINK3  446.197 -89.489 436.175 / -1.813 1.319 -1.734> #<bodyset-link #X130e0d78 RLEG_LINK4  67.872 -57.319 451.537 / -0.131 0.22 -0.255> #<bodyset-link #X12a84e10 RLEG_LINK5  58.185 -66.217 413.761 / -0.131 0.22 0.002>) (#<bodyset-link #X6ee5ff8 BODY  474.003 104.391 926.666 / -0.183 -2.753e-08 5.094e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.194 202.723 936.166 / -0.075 -2.792e-08 2.100e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.194 202.723 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.96 199.608 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.048 102.426 575.459 / -1.328 1.238 -1.269> #<bodyset-link #X1316f038 LLEG_LINK4  401.192 118.683 538.568 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.96 106.514 500.7 / -0.101 0.079 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.007 99.9963 1271.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  474.003 104.391 926.666 / -0.183 -2.753e-08 5.094e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  36.597 -63.167 316.167 / -0.131 0.22 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.165 107.498 401.009 / -0.101 0.079 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.813 6.059 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.813 6.059 814.166 / -0.075 -2.792e-08 -0.249> #<bodyset-link #X6f14d58 RLEG_LINK2  455.63 3.605 804.474 / -0.076 0.006 -0.249> #<bodyset-link #X6f38680 RLEG_LINK3  446.197 -89.489 436.175 / -1.813 1.319 -1.734> #<bodyset-link #X130e0d78 RLEG_LINK4  67.872 -57.319 451.537 / -0.131 0.22 -0.255> #<bodyset-link #X12a84e10 RLEG_LINK5  58.185 -66.217 413.761 / -0.131 0.22 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.194 202.723 936.166 / -0.075 -2.792e-08 2.100e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.194 202.723 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.96 199.608 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.048 102.426 575.459 / -1.328 1.238 -1.269> #<bodyset-link #X1316f038 LLEG_LINK4  401.192 118.683 538.568 / -0.101 0.079 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.96 106.514 500.7 / -0.101 0.079 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.007 99.9963 1271.06) :target-centroid-pos #f(400.007 99.9963 1271.06) :fix-limbs-target-coords (#<coordinates #X31e1eaf0  79.206 -100.0 309.403 / 1.323e-10 -4.780e-17 4.366e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983316 0.181906 -2.800114e-08 474.004) (-0.181906 0.983316 -8.218230e-19 104.391) (2.753397e-08 5.093567e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint385985128) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.4122 54.565 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(79.2063 -100.0 309.403) :rot #2f((1.0 -1.323215e-10 -4.774240e-17) (1.323215e-10 1.0 -4.366001e-10) (4.779564e-17 4.366001e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.301043e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (1.301043e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.041540e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-5.041540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.301043e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (1.301043e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.041540e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-5.041540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.007 99.9963 1271.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.301043e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (1.301043e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.041540e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (-5.041540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.007 99.9963 1271.06) :target-centroid-pos #f(400.007 99.9963 1271.06) :fix-limbs-target-coords (list #<coordinates #X31e1eaf0  79.206 -100.0 309.403 / 1.323e-10 -4.780e-17 4.366e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-39-64-34-25-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-39-64-34-25-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(48.4892 -30.8657 3.85014)/(57.6084/1)
;; dif-rot : #f(-0.016936 -0.226689 0.133313)/(0.263528/0.017453)
;; dif-pos : #f(11.5357 -6.35954 0.044526)/(13.1726/1)
;; dif-rot : #f(-0.005881 -0.078116 0.100972)/(0.127796/0.017453)
;; cog-dif : #f(0.267328 -5.62556)/(5.63191/5.0)
;;  coords : #<coordinates #X1325f8e0  473.898 104.418 -91.834 / -0.183 -2.753e-08 5.092e-09>
;;  angles : (#f(18.3869 54.5363 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X11cb1b10  80.722 -100.0 312.162 / 1.317e-10 -4.863e-17 4.345e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  37.168 -62.992 319.384 / -0.134 0.227 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.211 107.486 401.001 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.898 104.418 926.666 / -0.183 -2.753e-08 5.092e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.714 6.085 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.714 6.085 814.166 / -0.075 -2.792e-08 -0.25> #<bodyset-link #X6f14d58 RLEG_LINK2  455.529 3.615 804.478 / -0.075 0.002 -0.25> #<bodyset-link #X6f38680 RLEG_LINK3  447.587 -90.165 436.317 / -1.843 1.316 -1.762> #<bodyset-link #X130e0d78 RLEG_LINK4  69.452 -57.253 454.507 / -0.134 0.227 -0.257> #<bodyset-link #X12a84e10 RLEG_LINK5  59.463 -66.168 416.815 / -0.134 0.227 0.002>) (#<bodyset-link #X6ee5ff8 BODY  473.898 104.418 926.666 / -0.183 -2.753e-08 5.092e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.083 202.751 936.166 / -0.075 -2.792e-08 2.102e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.083 202.751 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.848 199.635 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.034 102.447 575.585 / -1.327 1.237 -1.269> #<bodyset-link #X1316f038 LLEG_LINK4  401.19 118.68 538.563 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.971 106.506 500.695 / -0.101 0.078 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  37.168 -62.992 319.384 / -0.134 0.227 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.211 107.486 401.001 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.898 104.418 926.666 / -0.183 -2.753e-08 5.092e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.714 6.085 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.714 6.085 814.166 / -0.075 -2.792e-08 -0.25> #<bodyset-link #X6f14d58 RLEG_LINK2  455.529 3.615 804.478 / -0.075 0.002 -0.25> #<bodyset-link #X6f38680 RLEG_LINK3  447.587 -90.165 436.317 / -1.843 1.316 -1.762> #<bodyset-link #X130e0d78 RLEG_LINK4  69.452 -57.253 454.507 / -0.134 0.227 -0.257> #<bodyset-link #X12a84e10 RLEG_LINK5  59.463 -66.168 416.815 / -0.134 0.227 0.002>) (#<bodyset-link #X6ee5ff8 BODY  473.898 104.418 926.666 / -0.183 -2.753e-08 5.092e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  492.083 202.751 936.166 / -0.075 -2.792e-08 2.102e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.083 202.751 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.848 199.635 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.034 102.447 575.585 / -1.327 1.237 -1.269> #<bodyset-link #X1316f038 LLEG_LINK4  401.19 118.68 538.563 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.971 106.506 500.695 / -0.101 0.078 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.007 99.9965 1271.72) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.898 104.418 926.666 / -0.183 -2.753e-08 5.092e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  37.168 -62.992 319.384 / -0.134 0.227 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.211 107.486 401.001 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.714 6.085 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.714 6.085 814.166 / -0.075 -2.792e-08 -0.25> #<bodyset-link #X6f14d58 RLEG_LINK2  455.529 3.615 804.478 / -0.075 0.002 -0.25> #<bodyset-link #X6f38680 RLEG_LINK3  447.587 -90.165 436.317 / -1.843 1.316 -1.762> #<bodyset-link #X130e0d78 RLEG_LINK4  69.452 -57.253 454.507 / -0.134 0.227 -0.257> #<bodyset-link #X12a84e10 RLEG_LINK5  59.463 -66.168 416.815 / -0.134 0.227 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  492.083 202.751 936.166 / -0.075 -2.792e-08 2.102e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  492.083 202.751 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.848 199.635 804.667 / 0.288 -0.824 -0.478> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.034 102.447 575.585 / -1.327 1.237 -1.269> #<bodyset-link #X1316f038 LLEG_LINK4  401.19 118.68 538.563 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.971 106.506 500.695 / -0.101 0.078 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.007 99.9965 1271.72) :target-centroid-pos #f(400.007 99.9965 1271.72) :fix-limbs-target-coords (#<coordinates #X11cb1b10  80.722 -100.0 312.162 / 1.317e-10 -4.863e-17 4.345e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983327 0.181846 -2.800114e-08 473.898) (-0.181846 0.983327 -8.218217e-19 104.418) (2.753428e-08 5.091894e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint621774504) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.3869 54.5363 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(80.7221 -100.0 312.162) :rot #2f((1.0 -1.316841e-10 -4.857708e-17) (1.316841e-10 1.0 -4.344971e-10) (4.862961e-17 4.344971e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.192622e-17 0.0) (0.0 1.0 0.0 -7.105427e-15) (1.192622e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.192622e-17 0.0) (0.0 1.0 0.0 -7.105427e-15) (1.192622e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.007 99.9965 1271.72) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.192622e-17 0.0) (0.0 1.0 0.0 -7.105427e-15) (1.192622e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.884684e-18 0.0) (0.0 1.0 0.0 0.0) (-6.884684e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.007 99.9965 1271.72) :target-centroid-pos #f(400.007 99.9965 1271.72) :fix-limbs-target-coords (list #<coordinates #X11cb1b10  80.722 -100.0 312.162 / 1.317e-10 -4.863e-17 4.345e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-39-99-88-78-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-39-99-88-78-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(49.5536 -30.7894 3.97733)/(58.4753/1)
;; dif-rot : #f(-0.017477 -0.233967 0.135601)/(0.270986/0.017453)
;; dif-pos : #f(11.4896 -6.35098 0.044461)/(13.1282/1)
;; dif-rot : #f(-0.005859 -0.077782 0.100903)/(0.127537/0.017453)
;; cog-dif : #f(0.276724 -5.62258)/(5.62939/5.0)
;;  coords : #<coordinates #X1325f8e0  473.792 104.441 -91.834 / -0.183 -2.753e-08 5.091e-09>
;;  angles : (#f(18.3616 54.5077 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2e953cb0  82.251 -100.0 314.895 / 1.310e-10 -4.947e-17 4.324e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  37.771 -62.828 322.583 / -0.136 0.234 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.255 107.473 400.994 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.792 104.441 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.611 6.107 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.611 6.107 814.166 / -0.075 -2.792e-08 -0.252> #<bodyset-link #X6f14d58 RLEG_LINK2  455.425 3.623 804.482 / -0.074 -0.002 -0.252> #<bodyset-link #X6f38680 RLEG_LINK3  448.978 -90.843 436.467 / -1.871 1.313 -1.789> #<bodyset-link #X130e0d78 RLEG_LINK4  71.053 -57.197 457.455 / -0.136 0.234 -0.259> #<bodyset-link #X12a84e10 RLEG_LINK5  60.764 -66.131 419.848 / -0.136 0.234 0.002>) (#<bodyset-link #X6ee5ff8 BODY  473.792 104.441 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.973 202.774 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.973 202.774 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.738 199.658 804.667 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.021 102.473 575.705 / -1.326 1.237 -1.268> #<bodyset-link #X1316f038 LLEG_LINK4  401.188 118.674 538.558 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.982 106.496 500.69 / -0.101 0.078 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  37.771 -62.828 322.583 / -0.136 0.234 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.255 107.473 400.994 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.792 104.441 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.611 6.107 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.611 6.107 814.166 / -0.075 -2.792e-08 -0.252> #<bodyset-link #X6f14d58 RLEG_LINK2  455.425 3.623 804.482 / -0.074 -0.002 -0.252> #<bodyset-link #X6f38680 RLEG_LINK3  448.978 -90.843 436.467 / -1.871 1.313 -1.789> #<bodyset-link #X130e0d78 RLEG_LINK4  71.053 -57.197 457.455 / -0.136 0.234 -0.259> #<bodyset-link #X12a84e10 RLEG_LINK5  60.764 -66.131 419.848 / -0.136 0.234 0.002>) (#<bodyset-link #X6ee5ff8 BODY  473.792 104.441 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.973 202.774 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.973 202.774 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.738 199.658 804.667 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.021 102.473 575.705 / -1.326 1.237 -1.268> #<bodyset-link #X1316f038 LLEG_LINK4  401.188 118.674 538.558 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.982 106.496 500.69 / -0.101 0.078 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.008 99.9967 1272.38) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.792 104.441 926.666 / -0.183 -2.753e-08 5.091e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  37.771 -62.828 322.583 / -0.136 0.234 0.002> #<cascaded-coords #X12422518 :lleg-end-coords  389.255 107.473 400.994 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.611 6.107 936.166 / -0.075 -2.792e-08 2.086e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.611 6.107 814.166 / -0.075 -2.792e-08 -0.252> #<bodyset-link #X6f14d58 RLEG_LINK2  455.425 3.623 804.482 / -0.074 -0.002 -0.252> #<bodyset-link #X6f38680 RLEG_LINK3  448.978 -90.843 436.467 / -1.871 1.313 -1.789> #<bodyset-link #X130e0d78 RLEG_LINK4  71.053 -57.197 457.455 / -0.136 0.234 -0.259> #<bodyset-link #X12a84e10 RLEG_LINK5  60.764 -66.131 419.848 / -0.136 0.234 0.002>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.973 202.774 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.973 202.774 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.738 199.658 804.667 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.021 102.473 575.705 / -1.326 1.237 -1.268> #<bodyset-link #X1316f038 LLEG_LINK4  401.188 118.674 538.558 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.982 106.496 500.69 / -0.101 0.078 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.008 99.9967 1272.38) :target-centroid-pos #f(400.008 99.9967 1272.38) :fix-limbs-target-coords (#<coordinates #X2e953cb0  82.251 -100.0 314.895 / 1.310e-10 -4.947e-17 4.324e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983333 0.181812 -2.800114e-08 473.792) (-0.181812 0.983333 -8.218221e-19 104.441) (2.753445e-08 5.090935e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint116388808) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.3616 54.5077 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(82.2513 -100.0 314.895) :rot #2f((1.0 -1.310423e-10 -4.941759e-17) (1.310423e-10 1.0 -4.323795e-10) (4.946940e-17 4.323795e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.505213e-18 7.105427e-15) (0.0 1.0 0.0 7.105427e-15) (-6.505213e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.149960e-18 0.0) (0.0 1.0 0.0 0.0) (-5.149960e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.505213e-18 7.105427e-15) (0.0 1.0 0.0 7.105427e-15) (-6.505213e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.149960e-18 0.0) (0.0 1.0 0.0 0.0) (-5.149960e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.008 99.9967 1272.38) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.505213e-18 7.105427e-15) (0.0 1.0 0.0 7.105427e-15) (-6.505213e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.149960e-18 0.0) (0.0 1.0 0.0 0.0) (-5.149960e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.008 99.9967 1272.38) :target-centroid-pos #f(400.008 99.9967 1272.38) :fix-limbs-target-coords (list #<coordinates #X2e953cb0  82.251 -100.0 314.895 / 1.310e-10 -4.947e-17 4.324e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-40-48-54-30-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-40-48-54-30-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(50.6003 -30.7 4.10173)/(59.3271/1)
;; dif-rot : #f(-0.018007 -0.241169 0.137869)/(0.278379/0.017453)
;; dif-pos : #f(11.4454 -6.3403 0.044359)/(13.0843/1)
;; dif-rot : #f(-0.005835 -0.077464 0.100812)/(0.12727/0.017453)
;; cog-dif : #f(0.285885 -5.61758)/(5.62485/5.0)
;;  coords : #<coordinates #X1325f8e0  473.684 104.46 -91.834 / -0.183 -2.753e-08 5.091e-09>
;;  angles : (#f(18.3364 54.4792 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X316106f0  83.794 -100.0 317.601 / 1.304e-10 -5.031e-17 4.302e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  38.406 -62.677 325.765 / -0.138 0.242 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.297 107.457 400.987 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.684 104.46 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.504 6.126 936.166 / -0.075 -2.792e-08 2.085e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.504 6.126 814.166 / -0.075 -2.792e-08 -0.253> #<bodyset-link #X6f14d58 RLEG_LINK2  455.317 3.626 804.486 / -0.073 -0.005 -0.253> #<bodyset-link #X6f38680 RLEG_LINK3  450.369 -91.522 436.624 / -1.898 1.309 -1.815> #<bodyset-link #X130e0d78 RLEG_LINK4  72.673 -57.154 460.381 / -0.138 0.242 -0.261> #<bodyset-link #X12a84e10 RLEG_LINK5  62.09 -66.106 422.86 / -0.138 0.242 0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.684 104.46 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.865 202.793 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.865 202.793 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.63 199.676 804.668 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.008 102.504 575.82 / -1.325 1.237 -1.267> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.666 538.554 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.993 106.485 500.686 / -0.101 0.078 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  38.406 -62.677 325.765 / -0.138 0.242 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.297 107.457 400.987 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.684 104.46 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.504 6.126 936.166 / -0.075 -2.792e-08 2.085e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.504 6.126 814.166 / -0.075 -2.792e-08 -0.253> #<bodyset-link #X6f14d58 RLEG_LINK2  455.317 3.626 804.486 / -0.073 -0.005 -0.253> #<bodyset-link #X6f38680 RLEG_LINK3  450.369 -91.522 436.624 / -1.898 1.309 -1.815> #<bodyset-link #X130e0d78 RLEG_LINK4  72.673 -57.154 460.381 / -0.138 0.242 -0.261> #<bodyset-link #X12a84e10 RLEG_LINK5  62.09 -66.106 422.86 / -0.138 0.242 0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.684 104.46 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.865 202.793 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.865 202.793 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.63 199.676 804.668 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.008 102.504 575.82 / -1.325 1.237 -1.267> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.666 538.554 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.993 106.485 500.686 / -0.101 0.078 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.008 99.9969 1273.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.684 104.46 926.666 / -0.183 -2.753e-08 5.091e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  38.406 -62.677 325.765 / -0.138 0.242 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.297 107.457 400.987 / -0.101 0.078 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.504 6.126 936.166 / -0.075 -2.792e-08 2.085e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.504 6.126 814.166 / -0.075 -2.792e-08 -0.253> #<bodyset-link #X6f14d58 RLEG_LINK2  455.317 3.626 804.486 / -0.073 -0.005 -0.253> #<bodyset-link #X6f38680 RLEG_LINK3  450.369 -91.522 436.624 / -1.898 1.309 -1.815> #<bodyset-link #X130e0d78 RLEG_LINK4  72.673 -57.154 460.381 / -0.138 0.242 -0.261> #<bodyset-link #X12a84e10 RLEG_LINK5  62.09 -66.106 422.86 / -0.138 0.242 0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.865 202.793 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.865 202.793 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.63 199.676 804.668 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  779.008 102.504 575.82 / -1.325 1.237 -1.267> #<bodyset-link #X1316f038 LLEG_LINK4  401.185 118.666 538.554 / -0.101 0.078 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  396.993 106.485 500.686 / -0.101 0.078 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.008 99.9969 1273.04) :target-centroid-pos #f(400.008 99.9969 1273.04) :fix-limbs-target-coords (#<coordinates #X316106f0  83.794 -100.0 317.601 / 1.304e-10 -5.031e-17 4.302e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983335 0.181803 -2.800114e-08 473.684) (-0.181803 0.983335 -8.218221e-19 104.46) (2.753450e-08 5.090697e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint631204592) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.3364 54.4792 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(83.7938 -100.0 317.601) :rot #2f((1.0 -1.303961e-10 -5.026385e-17) (1.303961e-10 1.0 -4.302473e-10) (5.031494e-17 4.302473e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.951564e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (1.951564e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.933120e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-4.933120e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.951564e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (1.951564e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.933120e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-4.933120e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.008 99.9969 1273.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.951564e-18 7.105427e-15) (0.0 1.0 0.0 0.0) (1.951564e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.933120e-18 5.684342e-14) (0.0 1.0 0.0 0.0) (-4.933120e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.008 99.9969 1273.04) :target-centroid-pos #f(400.008 99.9969 1273.04) :fix-limbs-target-coords (list #<coordinates #X316106f0  83.794 -100.0 317.601 / 1.304e-10 -5.031e-17 4.302e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-40-82-08-96-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-40-82-08-96-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(51.6291 -30.5976 4.22313)/(60.1632/1)
;; dif-rot : #f(-0.018523 -0.248295 0.140112)/(0.285701/0.017453)
;; dif-pos : #f(11.4029 -6.3275 0.044221)/(13.0409/1)
;; dif-rot : #f(-0.005811 -0.077161 0.100698)/(0.126995/0.017453)
;; cog-dif : #f(0.294803 -5.61054)/(5.61828/5.0)
;;  coords : #<coordinates #X1325f8e0  473.576 104.474 -91.834 / -0.183 -2.753e-08 5.091e-09>
;;  angles : (#f(18.3112 54.4508 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X3002cb58  85.349 -100.0 320.278 / 1.297e-10 -5.117e-17 4.281e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  39.074 -62.538 328.928 / -0.141 0.249 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.336 107.438 400.98 / -0.101 0.077 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.576 104.474 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.394 6.141 936.166 / -0.074 -2.792e-08 2.083e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.394 6.141 814.166 / -0.074 -2.792e-08 -0.255> #<bodyset-link #X6f14d58 RLEG_LINK2  455.206 3.626 804.49 / -0.072 -0.009 -0.255> #<bodyset-link #X6f38680 RLEG_LINK3  451.762 -92.203 436.788 / -1.924 1.306 -1.841> #<bodyset-link #X130e0d78 RLEG_LINK4  74.314 -57.122 463.283 / -0.141 0.249 -0.263> #<bodyset-link #X12a84e10 RLEG_LINK5  63.438 -66.093 425.849 / -0.141 0.249 0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.576 104.474 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.758 202.808 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.758 202.808 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.523 199.69 804.668 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.996 102.54 575.929 / -1.324 1.237 -1.266> #<bodyset-link #X1316f038 LLEG_LINK4  401.182 118.656 538.55 / -0.101 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.003 106.471 500.681 / -0.101 0.077 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  39.074 -62.538 328.928 / -0.141 0.249 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.336 107.438 400.98 / -0.101 0.077 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.576 104.474 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.394 6.141 936.166 / -0.074 -2.792e-08 2.083e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.394 6.141 814.166 / -0.074 -2.792e-08 -0.255> #<bodyset-link #X6f14d58 RLEG_LINK2  455.206 3.626 804.49 / -0.072 -0.009 -0.255> #<bodyset-link #X6f38680 RLEG_LINK3  451.762 -92.203 436.788 / -1.924 1.306 -1.841> #<bodyset-link #X130e0d78 RLEG_LINK4  74.314 -57.122 463.283 / -0.141 0.249 -0.263> #<bodyset-link #X12a84e10 RLEG_LINK5  63.438 -66.093 425.849 / -0.141 0.249 0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.576 104.474 926.666 / -0.183 -2.753e-08 5.091e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.758 202.808 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.758 202.808 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.523 199.69 804.668 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.996 102.54 575.929 / -1.324 1.237 -1.266> #<bodyset-link #X1316f038 LLEG_LINK4  401.182 118.656 538.55 / -0.101 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.003 106.471 500.681 / -0.101 0.077 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.008 99.9971 1273.7) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.576 104.474 926.666 / -0.183 -2.753e-08 5.091e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  39.074 -62.538 328.928 / -0.141 0.249 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.336 107.438 400.98 / -0.101 0.077 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.394 6.141 936.166 / -0.074 -2.792e-08 2.083e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.394 6.141 814.166 / -0.074 -2.792e-08 -0.255> #<bodyset-link #X6f14d58 RLEG_LINK2  455.206 3.626 804.49 / -0.072 -0.009 -0.255> #<bodyset-link #X6f38680 RLEG_LINK3  451.762 -92.203 436.788 / -1.924 1.306 -1.841> #<bodyset-link #X130e0d78 RLEG_LINK4  74.314 -57.122 463.283 / -0.141 0.249 -0.263> #<bodyset-link #X12a84e10 RLEG_LINK5  63.438 -66.093 425.849 / -0.141 0.249 0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.758 202.808 936.166 / -0.075 -2.792e-08 2.103e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.758 202.808 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.523 199.69 804.668 / 0.289 -0.825 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.996 102.54 575.929 / -1.324 1.237 -1.266> #<bodyset-link #X1316f038 LLEG_LINK4  401.182 118.656 538.55 / -0.101 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.003 106.471 500.681 / -0.101 0.077 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.008 99.9971 1273.7) :target-centroid-pos #f(400.008 99.9971 1273.7) :fix-limbs-target-coords (#<coordinates #X3002cb58  85.349 -100.0 320.278 / 1.297e-10 -5.117e-17 4.281e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983332 0.181821 -2.800114e-08 473.576) (-0.181821 0.983332 -8.218221e-19 104.474) (2.753441e-08 5.091192e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint608226112) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.3112 54.4508 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(85.3494 -100.0 320.278) :rot #2f((1.0 -1.297456e-10 -5.111579e-17) (1.297456e-10 1.0 -4.281008e-10) (5.116615e-17 4.281008e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.540979e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-9.540979e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.967827e-17 -5.684342e-14) (-2.775558e-17 1.0 -2.168404e-18 0.0) (-1.967827e-17 2.168404e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.540979e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-9.540979e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.967827e-17 -5.684342e-14) (-2.775558e-17 1.0 -2.168404e-18 0.0) (-1.967827e-17 2.168404e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.008 99.9971 1273.7) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.540979e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-9.540979e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 2.775558e-17 1.967827e-17 -5.684342e-14) (-2.775558e-17 1.0 -2.168404e-18 0.0) (-1.967827e-17 2.168404e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.008 99.9971 1273.7) :target-centroid-pos #f(400.008 99.9971 1273.7) :fix-limbs-target-coords (list #<coordinates #X3002cb58  85.349 -100.0 320.278 / 1.297e-10 -5.117e-17 4.281e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-41-16-83-50-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-41-16-83-50-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(52.6395 -30.482 4.3413)/(60.9829/1)
;; dif-rot : #f(-0.019025 -0.25534 0.142332)/(0.292949/0.017453)
;; dif-pos : #f(11.3623 -6.31254 0.044047)/(12.9982/1)
;; dif-rot : #f(-0.005786 -0.076875 0.100561)/(0.126712/0.017453)
;; cog-dif : #f(0.303475 -5.60142)/(5.60963/5.0)
;;  coords : #<coordinates #X1325f8e0  473.466 104.485 -91.834 / -0.183 -2.753e-08 5.092e-09>
;;  angles : (#f(18.2862 54.4225 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X28e086a8  86.918 -100.0 322.928 / 1.291e-10 -5.202e-17 4.259e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  39.775 -62.412 332.07 / -0.143 0.256 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.374 107.418 400.974 / -0.101 0.077 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.466 104.485 926.666 / -0.183 -2.753e-08 5.092e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.28 6.153 936.166 / -0.074 -2.792e-08 2.081e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.28 6.153 814.166 / -0.074 -2.792e-08 -0.256> #<bodyset-link #X6f14d58 RLEG_LINK2  455.091 3.623 804.493 / -0.071 -0.013 -0.256> #<bodyset-link #X6f38680 RLEG_LINK3  453.157 -92.885 436.958 / -1.95 1.303 -1.865> #<bodyset-link #X130e0d78 RLEG_LINK4  75.974 -57.102 466.159 / -0.143 0.256 -0.265> #<bodyset-link #X12a84e10 RLEG_LINK5  64.811 -66.091 428.815 / -0.143 0.256 0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.466 104.485 926.666 / -0.183 -2.753e-08 5.092e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.653 202.817 936.166 / -0.075 -2.792e-08 2.102e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.653 202.817 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.418 199.699 804.668 / 0.29 -0.826 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.984 102.581 576.034 / -1.324 1.237 -1.265> #<bodyset-link #X1316f038 LLEG_LINK4  401.179 118.642 538.547 / -0.101 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.012 106.455 500.677 / -0.101 0.077 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  39.775 -62.412 332.07 / -0.143 0.256 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.374 107.418 400.974 / -0.101 0.077 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.466 104.485 926.666 / -0.183 -2.753e-08 5.092e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.28 6.153 936.166 / -0.074 -2.792e-08 2.081e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.28 6.153 814.166 / -0.074 -2.792e-08 -0.256> #<bodyset-link #X6f14d58 RLEG_LINK2  455.091 3.623 804.493 / -0.071 -0.013 -0.256> #<bodyset-link #X6f38680 RLEG_LINK3  453.157 -92.885 436.958 / -1.95 1.303 -1.865> #<bodyset-link #X130e0d78 RLEG_LINK4  75.974 -57.102 466.159 / -0.143 0.256 -0.265> #<bodyset-link #X12a84e10 RLEG_LINK5  64.811 -66.091 428.815 / -0.143 0.256 0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.466 104.485 926.666 / -0.183 -2.753e-08 5.092e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.653 202.817 936.166 / -0.075 -2.792e-08 2.102e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.653 202.817 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.418 199.699 804.668 / 0.29 -0.826 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.984 102.581 576.034 / -1.324 1.237 -1.265> #<bodyset-link #X1316f038 LLEG_LINK4  401.179 118.642 538.547 / -0.101 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.012 106.455 500.677 / -0.101 0.077 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.009 99.9973 1274.37) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.466 104.485 926.666 / -0.183 -2.753e-08 5.092e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  39.775 -62.412 332.07 / -0.143 0.256 0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.374 107.418 400.974 / -0.101 0.077 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.28 6.153 936.166 / -0.074 -2.792e-08 2.081e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.28 6.153 814.166 / -0.074 -2.792e-08 -0.256> #<bodyset-link #X6f14d58 RLEG_LINK2  455.091 3.623 804.493 / -0.071 -0.013 -0.256> #<bodyset-link #X6f38680 RLEG_LINK3  453.157 -92.885 436.958 / -1.95 1.303 -1.865> #<bodyset-link #X130e0d78 RLEG_LINK4  75.974 -57.102 466.159 / -0.143 0.256 -0.265> #<bodyset-link #X12a84e10 RLEG_LINK5  64.811 -66.091 428.815 / -0.143 0.256 0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.653 202.817 936.166 / -0.075 -2.792e-08 2.102e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.653 202.817 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.418 199.699 804.668 / 0.29 -0.826 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.984 102.581 576.034 / -1.324 1.237 -1.265> #<bodyset-link #X1316f038 LLEG_LINK4  401.179 118.642 538.547 / -0.101 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.012 106.455 500.677 / -0.101 0.077 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.009 99.9973 1274.37) :target-centroid-pos #f(400.009 99.9973 1274.37) :fix-limbs-target-coords (#<coordinates #X28e086a8  86.918 -100.0 322.928 / 1.291e-10 -5.202e-17 4.259e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983323 0.181865 -2.800114e-08 473.466) (-0.181865 0.983323 -8.218217e-19 104.485) (2.753418e-08 5.092431e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint667875224) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.2862 54.4225 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(86.918 -100.0 322.928) :rot #2f((1.0 -1.290908e-10 -5.197333e-17) (1.290908e-10 1.0 -4.259402e-10) (5.202296e-17 4.259402e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.211772e-17 7.105427e-15) (0.0 1.0 0.0 0.0) (-2.211772e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.873136e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-2.873136e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.211772e-17 7.105427e-15) (0.0 1.0 0.0 0.0) (-2.211772e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.873136e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-2.873136e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.009 99.9973 1274.37) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.211772e-17 7.105427e-15) (0.0 1.0 0.0 0.0) (-2.211772e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.873136e-18 5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-2.873136e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.009 99.9973 1274.37) :target-centroid-pos #f(400.009 99.9973 1274.37) :fix-limbs-target-coords (list #<coordinates #X28e086a8  86.918 -100.0 322.928 / 1.291e-10 -5.202e-17 4.259e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-41-51-68-24-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-41-51-68-24-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(53.6311 -30.3533 4.45602)/(61.7857/1)
;; dif-rot : #f(-0.019513 -0.262305 0.144525)/(0.30012/0.017453)
;; dif-pos : #f(11.3236 -6.29539 0.043837)/(12.956/1)
;; dif-rot : #f(-0.00576 -0.076606 0.100401)/(0.12642/0.017453)
;; cog-dif : #f(0.311892 -5.59018)/(5.59888/5.0)
;;  coords : #<coordinates #X1325f8e0  473.356 104.491 -91.834 / -0.183 -2.753e-08 5.094e-09>
;;  angles : (#f(18.2612 54.3944 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X269cc390  88.5 -100.0 325.548 / 1.284e-10 -5.289e-17 4.238e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  40.509 -62.299 335.19 / -0.145 0.263 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  389.409 107.395 400.968 / -0.1 0.077 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.356 104.491 926.666 / -0.183 -2.753e-08 5.094e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.162 6.16 936.166 / -0.074 -2.792e-08 2.077e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.162 6.16 814.166 / -0.074 -2.792e-08 -0.258> #<bodyset-link #X6f14d58 RLEG_LINK2  454.973 3.616 804.497 / -0.07 -0.017 -0.258> #<bodyset-link #X6f38680 RLEG_LINK3  454.554 -93.568 437.135 / -1.974 1.299 -1.888> #<bodyset-link #X130e0d78 RLEG_LINK4  77.654 -57.095 469.01 / -0.145 0.263 -0.267> #<bodyset-link #X12a84e10 RLEG_LINK5  66.207 -66.102 431.757 / -0.145 0.263 0.0>) (#<bodyset-link #X6ee5ff8 BODY  473.356 104.491 926.666 / -0.183 -2.753e-08 5.094e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.549 202.822 936.166 / -0.075 -2.792e-08 2.100e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.549 202.822 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.315 199.704 804.668 / 0.29 -0.826 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.973 102.627 576.132 / -1.323 1.237 -1.264> #<bodyset-link #X1316f038 LLEG_LINK4  401.176 118.626 538.543 / -0.1 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.02 106.437 500.673 / -0.1 0.077 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  40.509 -62.299 335.19 / -0.145 0.263 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  389.409 107.395 400.968 / -0.1 0.077 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.356 104.491 926.666 / -0.183 -2.753e-08 5.094e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.162 6.16 936.166 / -0.074 -2.792e-08 2.077e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.162 6.16 814.166 / -0.074 -2.792e-08 -0.258> #<bodyset-link #X6f14d58 RLEG_LINK2  454.973 3.616 804.497 / -0.07 -0.017 -0.258> #<bodyset-link #X6f38680 RLEG_LINK3  454.554 -93.568 437.135 / -1.974 1.299 -1.888> #<bodyset-link #X130e0d78 RLEG_LINK4  77.654 -57.095 469.01 / -0.145 0.263 -0.267> #<bodyset-link #X12a84e10 RLEG_LINK5  66.207 -66.102 431.757 / -0.145 0.263 0.0>) (#<bodyset-link #X6ee5ff8 BODY  473.356 104.491 926.666 / -0.183 -2.753e-08 5.094e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.549 202.822 936.166 / -0.075 -2.792e-08 2.100e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.549 202.822 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.315 199.704 804.668 / 0.29 -0.826 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.973 102.627 576.132 / -1.323 1.237 -1.264> #<bodyset-link #X1316f038 LLEG_LINK4  401.176 118.626 538.543 / -0.1 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.02 106.437 500.673 / -0.1 0.077 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.009 99.9974 1275.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.356 104.491 926.666 / -0.183 -2.753e-08 5.094e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  40.509 -62.299 335.19 / -0.145 0.263 0.0> #<cascaded-coords #X12422518 :lleg-end-coords  389.409 107.395 400.968 / -0.1 0.077 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.162 6.16 936.166 / -0.074 -2.792e-08 2.077e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.162 6.16 814.166 / -0.074 -2.792e-08 -0.258> #<bodyset-link #X6f14d58 RLEG_LINK2  454.973 3.616 804.497 / -0.07 -0.017 -0.258> #<bodyset-link #X6f38680 RLEG_LINK3  454.554 -93.568 437.135 / -1.974 1.299 -1.888> #<bodyset-link #X130e0d78 RLEG_LINK4  77.654 -57.095 469.01 / -0.145 0.263 -0.267> #<bodyset-link #X12a84e10 RLEG_LINK5  66.207 -66.102 431.757 / -0.145 0.263 0.0>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.549 202.822 936.166 / -0.075 -2.792e-08 2.100e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.549 202.822 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.315 199.704 804.668 / 0.29 -0.826 -0.479> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.973 102.627 576.132 / -1.323 1.237 -1.264> #<bodyset-link #X1316f038 LLEG_LINK4  401.176 118.626 538.543 / -0.1 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.02 106.437 500.673 / -0.1 0.077 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.009 99.9974 1275.04) :target-centroid-pos #f(400.009 99.9974 1275.04) :fix-limbs-target-coords (#<coordinates #X269cc390  88.5 -100.0 325.548 / 1.284e-10 -5.289e-17 4.238e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.98331 0.181936 -2.800114e-08 473.356) (-0.181936 0.98331 -8.218226e-19 104.491) (2.753381e-08 5.094428e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint659654736) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.2612 54.3944 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(88.4995 -100.0 325.548) :rot #2f((1.0 -1.284317e-10 -5.283639e-17) (1.284317e-10 1.0 -4.237657e-10) (5.288529e-17 4.237657e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 -7.105427e-15) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.084202e-19 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 -7.105427e-15) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.084202e-19 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.009 99.9974 1275.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.385245e-18 -7.105427e-15) (0.0 1.0 0.0 0.0) (2.385245e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.084202e-19 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-1.084202e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.009 99.9974 1275.04) :target-centroid-pos #f(400.009 99.9974 1275.04) :fix-limbs-target-coords (list #<coordinates #X269cc390  88.5 -100.0 325.548 / 1.284e-10 -5.289e-17 4.238e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-41-87-87-20-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-41-87-87-20-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(54.6034 -30.2112 4.56707)/(62.5708/1)
;; dif-rot : #f(-0.019985 -0.269185 0.146689)/(0.30721/0.017453)
;; dif-pos : #f(11.2868 -6.27602 0.04359)/(12.9144/1)
;; dif-rot : #f(-0.005734 -0.076353 0.100218)/(0.12612/0.017453)
;; cog-dif : #f(0.320051 -5.57681)/(5.58598/5.0)
;;  coords : #<coordinates #X1325f8e0  473.244 104.493 -91.834 / -0.183 -2.753e-08 5.097e-09>
;;  angles : (#f(18.2363 54.3663 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X26bb22c8  90.094 -100.0 328.139 / 1.278e-10 -5.375e-17 4.216e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  41.275 -62.199 338.287 / -0.148 0.27 8.652e-05> #<cascaded-coords #X12422518 :lleg-end-coords  389.442 107.37 400.962 / -0.1 0.077 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.244 104.493 926.666 / -0.183 -2.753e-08 5.097e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.04 6.164 936.166 / -0.074 -2.792e-08 2.073e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.04 6.164 814.166 / -0.074 -2.792e-08 -0.26> #<bodyset-link #X6f14d58 RLEG_LINK2  454.85 3.604 804.501 / -0.068 -0.021 -0.26> #<bodyset-link #X6f38680 RLEG_LINK3  455.955 -94.251 437.319 / -1.997 1.295 -1.911> #<bodyset-link #X130e0d78 RLEG_LINK4  79.354 -57.1 471.835 / -0.148 0.27 -0.27> #<bodyset-link #X12a84e10 RLEG_LINK5  67.627 -66.125 434.672 / -0.148 0.27 8.652e-05>) (#<bodyset-link #X6ee5ff8 BODY  473.244 104.493 926.666 / -0.183 -2.753e-08 5.097e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.447 202.822 936.166 / -0.075 -2.792e-08 2.097e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.447 202.822 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.213 199.704 804.668 / 0.29 -0.826 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.963 102.679 576.225 / -1.322 1.237 -1.264> #<bodyset-link #X1316f038 LLEG_LINK4  401.172 118.608 538.541 / -0.1 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.029 106.417 500.67 / -0.1 0.077 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  41.275 -62.199 338.287 / -0.148 0.27 8.652e-05> #<cascaded-coords #X12422518 :lleg-end-coords  389.442 107.37 400.962 / -0.1 0.077 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.244 104.493 926.666 / -0.183 -2.753e-08 5.097e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  455.04 6.164 936.166 / -0.074 -2.792e-08 2.073e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.04 6.164 814.166 / -0.074 -2.792e-08 -0.26> #<bodyset-link #X6f14d58 RLEG_LINK2  454.85 3.604 804.501 / -0.068 -0.021 -0.26> #<bodyset-link #X6f38680 RLEG_LINK3  455.955 -94.251 437.319 / -1.997 1.295 -1.911> #<bodyset-link #X130e0d78 RLEG_LINK4  79.354 -57.1 471.835 / -0.148 0.27 -0.27> #<bodyset-link #X12a84e10 RLEG_LINK5  67.627 -66.125 434.672 / -0.148 0.27 8.652e-05>) (#<bodyset-link #X6ee5ff8 BODY  473.244 104.493 926.666 / -0.183 -2.753e-08 5.097e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.447 202.822 936.166 / -0.075 -2.792e-08 2.097e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.447 202.822 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.213 199.704 804.668 / 0.29 -0.826 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.963 102.679 576.225 / -1.322 1.237 -1.264> #<bodyset-link #X1316f038 LLEG_LINK4  401.172 118.608 538.541 / -0.1 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.029 106.417 500.67 / -0.1 0.077 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.009 99.9976 1275.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.244 104.493 926.666 / -0.183 -2.753e-08 5.097e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  41.275 -62.199 338.287 / -0.148 0.27 8.652e-05> #<cascaded-coords #X12422518 :lleg-end-coords  389.442 107.37 400.962 / -0.1 0.077 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  455.04 6.164 936.166 / -0.074 -2.792e-08 2.073e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  455.04 6.164 814.166 / -0.074 -2.792e-08 -0.26> #<bodyset-link #X6f14d58 RLEG_LINK2  454.85 3.604 804.501 / -0.068 -0.021 -0.26> #<bodyset-link #X6f38680 RLEG_LINK3  455.955 -94.251 437.319 / -1.997 1.295 -1.911> #<bodyset-link #X130e0d78 RLEG_LINK4  79.354 -57.1 471.835 / -0.148 0.27 -0.27> #<bodyset-link #X12a84e10 RLEG_LINK5  67.627 -66.125 434.672 / -0.148 0.27 8.652e-05>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.447 202.822 936.166 / -0.075 -2.792e-08 2.097e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.447 202.822 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.213 199.704 804.668 / 0.29 -0.826 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.963 102.679 576.225 / -1.322 1.237 -1.264> #<bodyset-link #X1316f038 LLEG_LINK4  401.172 118.608 538.541 / -0.1 0.077 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.029 106.417 500.67 / -0.1 0.077 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.009 99.9976 1275.71) :target-centroid-pos #f(400.009 99.9976 1275.71) :fix-limbs-target-coords (#<coordinates #X26bb22c8  90.094 -100.0 328.139 / 1.278e-10 -5.375e-17 4.216e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983292 0.182035 -2.800114e-08 473.244) (-0.182035 0.983292 -8.218221e-19 104.493) (2.753330e-08 5.097198e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint618198232) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.2363 54.3663 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(90.0937 -100.0 328.139) :rot #2f((1.0 -1.277685e-10 -5.370491e-17) (1.277685e-10 1.0 -4.215775e-10) (5.375307e-17 4.215775e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.059984e-17 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (2.059984e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.198396e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-3.198396e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.059984e-17 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (2.059984e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.198396e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-3.198396e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.009 99.9976 1275.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.059984e-17 -7.105427e-15) (0.0 1.0 0.0 -1.421085e-14) (2.059984e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.198396e-18 -5.684342e-14) (0.0 1.0 0.0 -2.842171e-14) (-3.198396e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.009 99.9976 1275.71) :target-centroid-pos #f(400.009 99.9976 1275.71) :fix-limbs-target-coords (list #<coordinates #X26bb22c8  90.094 -100.0 328.139 / 1.278e-10 -5.375e-17 4.216e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-42-20-13-99-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-42-20-13-99-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(55.5559 -30.0557 4.67422)/(63.3376/1)
;; dif-rot : #f(-0.02044 -0.27598 0.148824)/(0.314215/0.017453)
;; dif-pos : #f(11.2519 -6.2544 0.043307)/(12.8734/1)
;; dif-rot : #f(-0.005706 -0.076117 0.100009)/(0.125811/0.017453)
;; cog-dif : #f(0.327945 -5.56124)/(5.5709/5.0)
;;  coords : #<coordinates #X1325f8e0  473.131 104.49 -91.834 / -0.183 -2.753e-08 5.101e-09>
;;  angles : (#f(18.2115 54.3384 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X27b68408  91.7 -100.0 330.699 / 1.271e-10 -5.463e-17 4.194e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  42.075 -62.114 341.359 / -0.15 0.276 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  389.473 107.343 400.957 / -0.1 0.076 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.131 104.49 926.666 / -0.183 -2.753e-08 5.101e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  454.915 6.164 936.166 / -0.074 -2.792e-08 2.068e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.915 6.164 814.166 / -0.074 -2.792e-08 -0.261> #<bodyset-link #X6f14d58 RLEG_LINK2  454.724 3.589 804.505 / -0.067 -0.025 -0.261> #<bodyset-link #X6f38680 RLEG_LINK3  457.36 -94.934 437.509 / -2.02 1.291 -1.933> #<bodyset-link #X130e0d78 RLEG_LINK4  81.073 -57.119 474.631 / -0.15 0.276 -0.272> #<bodyset-link #X12a84e10 RLEG_LINK5  69.07 -66.162 437.562 / -0.15 0.276 -0.0>) (#<bodyset-link #X6ee5ff8 BODY  473.131 104.49 926.666 / -0.183 -2.753e-08 5.101e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.347 202.817 936.166 / -0.075 -2.792e-08 2.093e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.347 202.817 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.113 199.699 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.954 102.736 576.312 / -1.321 1.236 -1.263> #<bodyset-link #X1316f038 LLEG_LINK4  401.168 118.587 538.538 / -0.1 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.036 106.394 500.666 / -0.1 0.076 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  42.075 -62.114 341.359 / -0.15 0.276 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  389.473 107.343 400.957 / -0.1 0.076 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.131 104.49 926.666 / -0.183 -2.753e-08 5.101e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  454.915 6.164 936.166 / -0.074 -2.792e-08 2.068e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.915 6.164 814.166 / -0.074 -2.792e-08 -0.261> #<bodyset-link #X6f14d58 RLEG_LINK2  454.724 3.589 804.505 / -0.067 -0.025 -0.261> #<bodyset-link #X6f38680 RLEG_LINK3  457.36 -94.934 437.509 / -2.02 1.291 -1.933> #<bodyset-link #X130e0d78 RLEG_LINK4  81.073 -57.119 474.631 / -0.15 0.276 -0.272> #<bodyset-link #X12a84e10 RLEG_LINK5  69.07 -66.162 437.562 / -0.15 0.276 -0.0>) (#<bodyset-link #X6ee5ff8 BODY  473.131 104.49 926.666 / -0.183 -2.753e-08 5.101e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.347 202.817 936.166 / -0.075 -2.792e-08 2.093e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.347 202.817 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.113 199.699 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.954 102.736 576.312 / -1.321 1.236 -1.263> #<bodyset-link #X1316f038 LLEG_LINK4  401.168 118.587 538.538 / -0.1 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.036 106.394 500.666 / -0.1 0.076 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.01 99.9977 1276.38) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.131 104.49 926.666 / -0.183 -2.753e-08 5.101e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  42.075 -62.114 341.359 / -0.15 0.276 -0.0> #<cascaded-coords #X12422518 :lleg-end-coords  389.473 107.343 400.957 / -0.1 0.076 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  454.915 6.164 936.166 / -0.074 -2.792e-08 2.068e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.915 6.164 814.166 / -0.074 -2.792e-08 -0.261> #<bodyset-link #X6f14d58 RLEG_LINK2  454.724 3.589 804.505 / -0.067 -0.025 -0.261> #<bodyset-link #X6f38680 RLEG_LINK3  457.36 -94.934 437.509 / -2.02 1.291 -1.933> #<bodyset-link #X130e0d78 RLEG_LINK4  81.073 -57.119 474.631 / -0.15 0.276 -0.272> #<bodyset-link #X12a84e10 RLEG_LINK5  69.07 -66.162 437.562 / -0.15 0.276 -0.0>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.347 202.817 936.166 / -0.075 -2.792e-08 2.093e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.347 202.817 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.113 199.699 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.954 102.736 576.312 / -1.321 1.236 -1.263> #<bodyset-link #X1316f038 LLEG_LINK4  401.168 118.587 538.538 / -0.1 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.036 106.394 500.666 / -0.1 0.076 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.01 99.9977 1276.38) :target-centroid-pos #f(400.01 99.9977 1276.38) :fix-limbs-target-coords (#<coordinates #X27b68408  91.7 -100.0 330.699 / 1.271e-10 -5.463e-17 4.194e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983268 0.182163 -2.800114e-08 473.131) (-0.182163 0.983268 -8.218221e-19 104.49) (2.753264e-08 5.100761e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint333194920) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.2115 54.3384 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(91.7004 -100.0 330.699) :rot #2f((1.0 -1.271012e-10 -5.457880e-17) (1.271012e-10 1.0 -4.193757e-10) (5.462621e-17 4.193757e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.288373e-18 2.842171e-14) (0.0 1.0 0.0 0.0) (-6.288373e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.168404e-19 0.0) (0.0 1.0 0.0 2.842171e-14) (-2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.288373e-18 2.842171e-14) (0.0 1.0 0.0 0.0) (-6.288373e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.168404e-19 0.0) (0.0 1.0 0.0 2.842171e-14) (-2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.01 99.9977 1276.38) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.288373e-18 2.842171e-14) (0.0 1.0 0.0 0.0) (-6.288373e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.168404e-19 0.0) (0.0 1.0 0.0 2.842171e-14) (-2.168404e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.01 99.9977 1276.38) :target-centroid-pos #f(400.01 99.9977 1276.38) :fix-limbs-target-coords (list #<coordinates #X27b68408  91.7 -100.0 330.699 / 1.271e-10 -5.463e-17 4.194e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-42-56-14-85-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-42-56-14-85-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(56.4882 -29.8867 4.77723)/(64.0855/1)
;; dif-rot : #f(-0.020879 -0.282686 0.150926)/(0.321132/0.017453)
;; dif-pos : #f(11.219 -6.23047 0.042986)/(12.833/1)
;; dif-rot : #f(-0.005678 -0.075899 0.099776)/(0.125492/0.017453)
;; cog-dif : #f(0.335568 -5.54343)/(5.55358/5.0)
;;  coords : #<coordinates #X1325f8e0  473.017 104.483 -91.834 / -0.183 -2.753e-08 5.105e-09>
;;  angles : (#f(18.1868 54.3106 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X17b67238  93.32 -100.0 333.228 / 1.264e-10 -5.550e-17 4.172e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  42.908 -62.044 344.406 / -0.152 0.283 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.501 107.314 400.953 / -0.1 0.076 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.017 104.483 926.666 / -0.183 -2.753e-08 5.105e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  454.785 6.159 936.166 / -0.074 -2.793e-08 2.062e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.785 6.159 814.166 / -0.074 -2.793e-08 -0.263> #<bodyset-link #X6f14d58 RLEG_LINK2  454.594 3.57 804.509 / -0.066 -0.029 -0.263> #<bodyset-link #X6f38680 RLEG_LINK3  458.77 -95.617 437.706 / -2.041 1.287 -1.953> #<bodyset-link #X130e0d78 RLEG_LINK4  82.811 -57.15 477.399 / -0.152 0.283 -0.274> #<bodyset-link #X12a84e10 RLEG_LINK5  70.537 -66.211 440.423 / -0.152 0.283 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.017 104.483 926.666 / -0.183 -2.753e-08 5.105e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.249 202.807 936.166 / -0.075 -2.792e-08 2.089e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.249 202.807 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.016 199.689 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.945 102.799 576.394 / -1.32 1.236 -1.262> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 118.563 538.536 / -0.1 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.043 106.369 500.663 / -0.1 0.076 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  42.908 -62.044 344.406 / -0.152 0.283 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.501 107.314 400.953 / -0.1 0.076 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  473.017 104.483 926.666 / -0.183 -2.753e-08 5.105e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  454.785 6.159 936.166 / -0.074 -2.793e-08 2.062e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.785 6.159 814.166 / -0.074 -2.793e-08 -0.263> #<bodyset-link #X6f14d58 RLEG_LINK2  454.594 3.57 804.509 / -0.066 -0.029 -0.263> #<bodyset-link #X6f38680 RLEG_LINK3  458.77 -95.617 437.706 / -2.041 1.287 -1.953> #<bodyset-link #X130e0d78 RLEG_LINK4  82.811 -57.15 477.399 / -0.152 0.283 -0.274> #<bodyset-link #X12a84e10 RLEG_LINK5  70.537 -66.211 440.423 / -0.152 0.283 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  473.017 104.483 926.666 / -0.183 -2.753e-08 5.105e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.249 202.807 936.166 / -0.075 -2.792e-08 2.089e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.249 202.807 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.016 199.689 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.945 102.799 576.394 / -1.32 1.236 -1.262> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 118.563 538.536 / -0.1 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.043 106.369 500.663 / -0.1 0.076 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.01 99.9979 1277.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  473.017 104.483 926.666 / -0.183 -2.753e-08 5.105e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  42.908 -62.044 344.406 / -0.152 0.283 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.501 107.314 400.953 / -0.1 0.076 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  454.785 6.159 936.166 / -0.074 -2.793e-08 2.062e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.785 6.159 814.166 / -0.074 -2.793e-08 -0.263> #<bodyset-link #X6f14d58 RLEG_LINK2  454.594 3.57 804.509 / -0.066 -0.029 -0.263> #<bodyset-link #X6f38680 RLEG_LINK3  458.77 -95.617 437.706 / -2.041 1.287 -1.953> #<bodyset-link #X130e0d78 RLEG_LINK4  82.811 -57.15 477.399 / -0.152 0.283 -0.274> #<bodyset-link #X12a84e10 RLEG_LINK5  70.537 -66.211 440.423 / -0.152 0.283 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.249 202.807 936.166 / -0.075 -2.792e-08 2.089e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.249 202.807 814.166 / -0.075 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  491.016 199.689 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.945 102.799 576.394 / -1.32 1.236 -1.262> #<bodyset-link #X1316f038 LLEG_LINK4  401.164 118.563 538.536 / -0.1 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.043 106.369 500.663 / -0.1 0.076 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.01 99.9979 1277.06) :target-centroid-pos #f(400.01 99.9979 1277.06) :fix-limbs-target-coords (#<coordinates #X17b67238  93.32 -100.0 333.228 / 1.264e-10 -5.550e-17 4.172e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983239 0.182319 -2.800114e-08 473.017) (-0.182319 0.983239 -8.218213e-19 104.483) (2.753183e-08 5.105133e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint324327384) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.1868 54.3106 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(93.3196 -100.0 333.228) :rot #2f((1.0 -1.264299e-10 -5.545798e-17) (1.264299e-10 1.0 -4.171606e-10) (5.550464e-17 4.171606e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.551115e-17 8.825406e-17 1.421085e-14) (-5.551115e-17 1.0 -1.040834e-17 -7.105427e-15) (-8.825406e-17 1.040834e-17 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-18 0.0) (0.0 1.0 0.0 0.0) (-5.963112e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.551115e-17 8.825406e-17 1.421085e-14) (-5.551115e-17 1.0 -1.040834e-17 -7.105427e-15) (-8.825406e-17 1.040834e-17 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-18 0.0) (0.0 1.0 0.0 0.0) (-5.963112e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.01 99.9979 1277.06) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 5.551115e-17 8.825406e-17 1.421085e-14) (-5.551115e-17 1.0 -1.040834e-17 -7.105427e-15) (-8.825406e-17 1.040834e-17 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.963112e-18 0.0) (0.0 1.0 0.0 0.0) (-5.963112e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.01 99.9979 1277.06) :target-centroid-pos #f(400.01 99.9979 1277.06) :fix-limbs-target-coords (list #<coordinates #X17b67238  93.32 -100.0 333.228 / 1.264e-10 -5.550e-17 4.172e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-42-90-73-20-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-42-90-73-20-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(57.3998 -29.704 4.87588)/(64.8139/1)
;; dif-rot : #f(-0.021299 -0.289302 0.152994)/(0.327958/0.017453)
;; dif-pos : #f(11.1882 -6.20419 0.042628)/(12.7933/1)
;; dif-rot : #f(-0.005648 -0.075699 0.099518)/(0.125164/0.017453)
;; cog-dif : #f(0.342916 -5.52334)/(5.53398/5.0)
;;  coords : #<coordinates #X1325f8e0  472.902 104.471 -91.834 / -0.184 -2.753e-08 5.110e-09>
;;  angles : (#f(18.1622 54.283 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2f300f00  94.951 -100.0 335.726 / 1.258e-10 -5.639e-17 4.149e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  43.774 -61.988 347.425 / -0.154 0.29 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.527 107.282 400.948 / -0.099 0.076 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  472.902 104.471 926.666 / -0.184 -2.753e-08 5.110e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  454.651 6.151 936.166 / -0.073 -2.793e-08 2.056e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.651 6.151 814.166 / -0.073 -2.793e-08 -0.264> #<bodyset-link #X6f14d58 RLEG_LINK2  454.459 3.547 804.513 / -0.065 -0.033 -0.264> #<bodyset-link #X6f38680 RLEG_LINK3  460.185 -96.3 437.91 / -2.062 1.283 -1.973> #<bodyset-link #X130e0d78 RLEG_LINK4  84.569 -57.194 480.137 / -0.154 0.29 -0.276> #<bodyset-link #X12a84e10 RLEG_LINK5  72.027 -66.273 443.256 / -0.154 0.29 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  472.902 104.471 926.666 / -0.184 -2.753e-08 5.110e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.152 202.792 936.166 / -0.074 -2.792e-08 2.084e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.152 202.792 814.166 / -0.074 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  490.919 199.674 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.936 102.868 576.469 / -1.319 1.236 -1.262> #<bodyset-link #X1316f038 LLEG_LINK4  401.159 118.536 538.534 / -0.099 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.049 106.342 500.661 / -0.099 0.076 0.002>)) :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  43.774 -61.988 347.425 / -0.154 0.29 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.527 107.282 400.948 / -0.099 0.076 0.002>) :link-list ((#<bodyset-link #X6ee5ff8 BODY  472.902 104.471 926.666 / -0.184 -2.753e-08 5.110e-09> #<bodyset-link #X6f7a4c8 RLEG_LINK0  454.651 6.151 936.166 / -0.073 -2.793e-08 2.056e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.651 6.151 814.166 / -0.073 -2.793e-08 -0.264> #<bodyset-link #X6f14d58 RLEG_LINK2  454.459 3.547 804.513 / -0.065 -0.033 -0.264> #<bodyset-link #X6f38680 RLEG_LINK3  460.185 -96.3 437.91 / -2.062 1.283 -1.973> #<bodyset-link #X130e0d78 RLEG_LINK4  84.569 -57.194 480.137 / -0.154 0.29 -0.276> #<bodyset-link #X12a84e10 RLEG_LINK5  72.027 -66.273 443.256 / -0.154 0.29 -0.001>) (#<bodyset-link #X6ee5ff8 BODY  472.902 104.471 926.666 / -0.184 -2.753e-08 5.110e-09> #<bodyset-link #X1258dac0 LLEG_LINK0  491.152 202.792 936.166 / -0.074 -2.792e-08 2.084e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.152 202.792 814.166 / -0.074 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  490.919 199.674 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.936 102.868 576.469 / -1.319 1.236 -1.262> #<bodyset-link #X1316f038 LLEG_LINK4  401.159 118.536 538.534 / -0.099 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.049 106.342 500.661 / -0.099 0.076 0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.01 99.998 1277.74) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X6ee5ff8 BODY  472.902 104.471 926.666 / -0.184 -2.753e-08 5.110e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #Xd2fbf20 :rleg-end-coords  43.774 -61.988 347.425 / -0.154 0.29 -0.001> #<cascaded-coords #X12422518 :lleg-end-coords  389.527 107.282 400.948 / -0.099 0.076 0.002>) :link-list ((#<bodyset-link #X6f7a4c8 RLEG_LINK0  454.651 6.151 936.166 / -0.073 -2.793e-08 2.056e-09> #<bodyset-link #X9501ce8 RLEG_LINK1  454.651 6.151 814.166 / -0.073 -2.793e-08 -0.264> #<bodyset-link #X6f14d58 RLEG_LINK2  454.459 3.547 804.513 / -0.065 -0.033 -0.264> #<bodyset-link #X6f38680 RLEG_LINK3  460.185 -96.3 437.91 / -2.062 1.283 -1.973> #<bodyset-link #X130e0d78 RLEG_LINK4  84.569 -57.194 480.137 / -0.154 0.29 -0.276> #<bodyset-link #X12a84e10 RLEG_LINK5  72.027 -66.273 443.256 / -0.154 0.29 -0.001>) (#<bodyset-link #X1258dac0 LLEG_LINK0  491.152 202.792 936.166 / -0.074 -2.792e-08 2.084e-09> #<bodyset-link #X6fe7740 LLEG_LINK1  491.152 202.792 814.166 / -0.074 -2.792e-08 -0.318> #<bodyset-link #X6fe1bf0 LLEG_LINK2  490.919 199.674 804.668 / 0.291 -0.827 -0.48> #<bodyset-link #X6f7a6c0 LLEG_LINK3  778.936 102.868 576.469 / -1.319 1.236 -1.262> #<bodyset-link #X1316f038 LLEG_LINK4  401.159 118.536 538.534 / -0.099 0.076 -0.319> #<bodyset-link #X6f6d3c0 LLEG_LINK5  397.049 106.342 500.661 / -0.099 0.076 0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(400.01 99.998 1277.74) :target-centroid-pos #f(400.01 99.998 1277.74) :fix-limbs-target-coords (#<coordinates #X2f300f00  94.951 -100.0 335.726 / 1.258e-10 -5.639e-17 4.149e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983205 0.182505 -2.800114e-08 472.902) (-0.182505 0.983205 -8.218217e-19 104.471) (2.753086e-08 5.110338e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint335053136) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(18.1622 54.283 0.0 0.0 0.0 22.5) 24.7861 -4.18488 27.6052 2.32123 -29.9264 4.18488 24.7861 -6.16266 -58.604 138.319 -79.3913 6.16266 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(94.951 -100.0 335.726) :rot #2f((1.0 -1.257546e-10 -5.634238e-17) (1.257546e-10 1.0 -4.149323e-10) (5.638829e-17 4.149323e-10 1.0))) (make-coords :pos #f(400.014 99.9999 400.131) :rot #2f((1.0 9.672709e-17 5.567676e-16) (-9.672709e-17 1.0 6.938894e-18) (-5.567676e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.496199e-17 2.842171e-14) (0.0 1.0 0.0 0.0) (1.496199e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.246832e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (1.246832e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.496199e-17 2.842171e-14) (0.0 1.0 0.0 0.0) (1.496199e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.246832e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (1.246832e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(400.01 99.998 1277.74) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.496199e-17 2.842171e-14) (0.0 1.0 0.0 0.0) (1.496199e-17 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.246832e-18 0.0) (0.0 1.0 0.0 -2.842171e-14) (1.246832e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(400.01 99.998 1277.74) :target-centroid-pos #f(400.01 99.998 1277.74) :fix-limbs-target-coords (list #<coordinates #X2f300f00  94.951 -100.0 335.726 / 1.258e-10 -5.639e-17 4.149e-10> #<coordinates #X2f8e2528 :lleg  400.014 100.0 400.131 / -9.673e-17 5.568e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-43-25-26-13-failure.l
;; (progn (load "/tmp/irtmodel-ik-18052/jaxon_red-robot-2019-10-04-16-45-43-25-26-13-failure.l")(ik-setup)(ik-check))
  C-c C-cinterrupt
16.B1-irteusgl$   C-c C-c
interrupt16.B2-irteusgl$   C-c C-c
interrupt16.B3-irteusgl$ 
nil
16.B3-irteusgl$ 
nil
16.B3-irteusgl$ 
nil
16.B3-irteusgl$ 
nil
16.B3-irteusgl$ reset
17.irteusgl$ send *robot* :reset-pose
#f(0.0 0.0 -20.0 40.0 -20.0 0.0 0.0 0.0 -20.0 40.0 -20.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
18.irteusgl$ send *robot* :legs :move-end-pos #f(0 0 100)
(#f(0.0 0.0 -20.0 40.0 -20.0 0.0 -4.787107e-09 2.582866e-07 -36.088 72.1759 -36.088 -2.752712e-07 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0) #f(4.787114e-09 -2.582866e-07 -36.088 72.1759 -36.088 2.752713e-07 -4.787107e-09 2.582866e-07 -36.088 72.1759 -36.088 -2.752712e-07 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0))
19.irteusgl$ (send *robot* :fix-leg-to-coords (make-coords))
#<coordinates #X17c4d548  -2.455e-05 2.842e-14 -141.834 / 5.551e-17 -2.046e-08 1.215e-17>
20.irteusgl$ walk-up-generate
;; #<rotational-joint #X8f416a0 CHEST_JOINT1> :joint-angle(-0.045931) violate min-angle(0.0)
[ WARN] [1570175485.075395245, 1435.466000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X26886fc8> received wrong goal
[ WARN] [1570175485.077245072, 1435.466000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X26ae5a58> received wrong goal
[ WARN] [1570175485.079046577, 1435.466000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X26d10720> received wrong goal
[ WARN] [1570175485.080896257, 1435.466000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X26c193d0> received wrong goal
generating walking pattern ...
real machine move
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 3 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
(nil)
21.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
22.irteusgl$ set-current-pose 
set-current-pose :zmp-offset #f(0.0 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
23.irteusgl$ 
nil
23.irteusgl$ 
nil
23.irteusgl$ 
nil
23.irteusgl$ 
nil
23.irteusgl$ [ INFO] [1570175673.626250255, 1591.897000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570175673.626306969, 1591.897000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x543aaf0[16374] --> 0x58bcdb0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$  jaxoninit

;; extending gcstack 0x58bcdb0[32738] --> 0x65d9710[65476] top=7fe1
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570175713.276211187, 28.992000000]: [/default_robot_interface_1570175712764709443] waiting /clock... 0.001776 seconds elapsed.
[ INFO] [1570175713.276359925, 28.992000000]: [/default_robot_interface_1570175712764709443] /clock is now published.
[ WARN] [1570175713.310910294, 29.005000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570175713.721509978, 29.407000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175714.044966052, 29.719000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175714.364825845, 30.031000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175714.577667458, 30.243000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175714.896574594, 30.559000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175715.231574423, 30.866000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570175715.547707234, 31.193000000]: ROSEUS is already installed as /default_robot_interface_1570175712764709443
[ WARN] [1570175718.324581365, 33.753000000]: ROSEUS is already installed as /default_robot_interface_1570175712764709443
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

make *ri*?(Y or N): n
nil
3.irteusgl$ walk-up-generate
;; #<rotational-joint #X9267948 CHEST_JOINT1> :joint-angle(-0.044842) violate min-angle(0.0)
generating walking pattern ...
real machine move
Call Stack (max depth: 20):
  0: at (let ((tm 3)) (set-curernt-pose :tm tm) (unix:sleep tm))
  1: at (progn (warn "real machine move~%") (let ((tm 3)) (set-curernt-pose :tm tm) (unix:sleep tm)) (send *ri* :angle-vector-sequence-full av-list tm-list) (send *ri* :wait-interpolation))
  2: at (if real (progn (warn "real machine move~%") (let ((tm 3)) (set-curernt-pose :tm tm) (unix:sleep tm)) (send *ri* :angle-vector-sequence-full av-list tm-list) (send *ri* :wait-interpolation)))
  3: at (when real (warn "real machine move~%") (let ((tm 3)) (set-curernt-pose :tm tm) (unix:sleep tm)) (send *ri* :angle-vector-sequence-full av-list tm-list) (send *ri* :wait-interpolation))
  4: at (let* ((fs-list) (rleg-end-coords (send *robot* :rleg :end-coords :copy-worldcoords)) (lleg-end-coords (send *robot* :lleg :end-coords :copy-worldcoords))) (setq fs-list (list (send (make-coords :coords (send rleg-end-coords :copy-worldcoords) :name :rleg) :translate (float-vector 0 0 0) :world) (send (make-coords :coords (send lleg-end-coords :copy-worldcoords) :name :lleg) :translate (float-vector stride 0 box-height) :world) (send (make-coords :coords (send rleg-end-coords :copy-worldcoords) :name :rleg) :translate (float-vector stride 0 box-height) :world))) (send *robot* :reset-pose) (send *robot* :legs :move-end-pos (float-vector 0 0 bend-knee-height)) (send *ri* :angle-vector (send *robot* :angle-vector)) (send *ri* :wait-interpolation) (send *robot* :fix-leg-to-coords (make-coords)) (warning-message 3 "generating walking pattern ...~%") (setq *walk-pattern* (send *robot* :calc-walk-pattern-from-footstep-list fs-list :all-limbs '(:rleg :lleg) :init-pose-function #'(lambda nil) :debug-view debug-view :default-step-time step-time :default-step-height step-height :dt dt)) (setq av-list nil) (setq tm-list nil) (dolist (a *walk-pattern*) (push (concatenate float-vector (cadr (memq :angle-vector a)) #f(0.0 0.0 0.0 0.0)) av-list) (push (* 1000 dt) tm-list)) (nreverse av-list) (nreverse tm-list) (when real (warn "real machine move~%") (let ((tm 3)) (set-curernt-pose :tm tm) (unix:sleep tm)) (send *ri* :angle-vector-sequence-full av-list tm-list) (send *ri* :wait-interpolation)))
  5: at (walk-up-generate)
  6: at #<compiled-code #X5469828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: undefined function set-curernt-pose in (let ((tm 3)) (set-curernt-pose :tm tm) (unix:sleep tm))
4.E1-irteusgl$ reset
5.irteusgl$ 
nil
5.irteusgl$ set-current-pose
set-current-pose :zmp-offset #f(0.0 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
6.irteusgl$ send *ri* :stop-auto-balancer
#<hrpsys_ros_bridge::openhrp_autobalancerservice_stopautobalancerresponse #X1215f878>
7.irteusgl$ [ INFO] [1570175833.484234880, 136.587000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570175833.484369909, 136.587000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x62b2af0[16374] --> 0x6734db0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$ send *ri* :stop-st
Call Stack (max depth: 20):
  0: at (send *ri* :stop-st)
  1: at #<compiled-code #X62e1828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: unbound variable *ri* in (send *ri* :stop-st)
3.E1-irteusgl$ reset
4.irteusgl$  jaxoninit

;; extending gcstack 0x6734db0[32738] --> 0x7451710[65476] top=7fe1
send *ri* :stop-st
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570175878.689290777, 36.657000000]: [/default_robot_interface_1570175878169071303] waiting /clock... 0.001797 seconds elapsed.
[ INFO] [1570175878.689529490, 36.657000000]: [/default_robot_interface_1570175878169071303] /clock is now published.
[ WARN] [1570175878.929165971, 36.889000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570175879.364297046, 37.327000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175879.688494233, 37.647000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175880.018142019, 37.973000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175880.350993163, 38.301000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175880.563059733, 38.517000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570175880.895800543, 38.845000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570175881.226833466, 39.171000000]: ROSEUS is already installed as /default_robot_interface_1570175878169071303
send *ri* :stop-auto-balancer
[ WARN] [1570175884.320678962, 42.193000000]: ROSEUS is already installed as /default_robot_interface_1570175878169071303
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

make *ri*?(Y or N): make *ri*?(Y or N): make *ri*?(Y or N): n
nil
5.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X103cc1d8>
6.irteusgl$ send *ri* :stop-auto-balancer
#<hrpsys_ros_bridge::openhrp_autobalancerservice_stopautobalancerresponse #X10c97140>
7.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
8.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X10e4b390>
9.irteusgl$ walk-up-generate
;; #<rotational-joint #X71504e0 CHEST_JOINT1> :joint-angle(-0.045925) violate min-angle(0.0)
generating walking pattern ...
real machine move
set-current-pose :zmp-offset #f(0.0 0.0 0.0)
now moving to current pose by load-pattern in 3 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
(nil)
10.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
11.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X35f1dc80>
12.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
13.irteusgl$ [ INFO] [1570176132.521134731, 287.012000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570176132.521178714, 287.012000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x5bbbaf0[16374] --> 0x603ddb0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$  jaxoninit

;; extending gcstack 0x603ddb0[32738] --> 0x6d5a710[65476] top=7fe1
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570176203.983987098, 38.511000000]: [/default_robot_interface_1570176203473501625] waiting /clock... 0.001743 seconds elapsed.
[ INFO] [1570176203.984098656, 38.511000000]: [/default_robot_interface_1570176203473501625] /clock is now published.
[ WARN] [1570176204.020783181, 38.531000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570176204.441051257, 38.935000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176204.762957658, 39.257000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176205.105331969, 39.576000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176205.334151846, 39.797000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176205.557340716, 40.009000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176205.870628631, 40.325000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570176206.107770732, 40.531000000]: ROSEUS is already installed as /default_robot_interface_1570176203473501625
[ WARN] [1570176208.925326570, 43.129000000]: ROSEUS is already installed as /default_robot_interface_1570176203473501625
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

make *ri*?(Y or N): n
nil
3.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_brsend *ri* :stop-stsend *ri* :stop-stsend *ri* :stop-stsend *ri* :stop-stidge::openhrp_stabilizerservice_stopstabilizerresponse #X1c1212d0>
4.irteusgl$ send *ri* :stop-auto-balancer
#<hrpsys_ros_bridge::openhrp_autobalancerservice_stopautobalancerresponse #X1c34d8e0>
5.irteusgl$ 
nil
5.irteusgl$ 
nil
5.irteusgl$ 
nil
5.irteusgl$ walk-up-generate
generating walking pattern ...
real machine move
set-current-pose :zmp-offset #f(0.0 0.0 0.0)
now moving to current pose by load-pattern in 3 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
(nil)
6.irteusgl$ [ INFO] [1570176635.167901681, 464.975000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570176635.167951992, 464.975000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x4b03af0[16374] --> 0x4f85db0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ oad "box-climb-stair.l 
sh: 1: Syntax error: Unterminated quoted string
512
2.irteusgl$ load "box-climb-stair.l 
t
3.irteusgl$  jaxoninit

;; extending gcstack 0x4f85db0[32738] --> 0x5ca2710[65476] top=7fe1
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570176663.123923740, 492.327000000]: [/default_robot_interface_1570176662613688896] waiting /clock... 0.001799 seconds elapsed.
[ INFO] [1570176663.124049846, 492.327000000]: [/default_robot_interface_1570176662613688896] /clock is now published.
[ WARN] [1570176663.152837136, 492.351000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570176663.571454970, 492.769000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176663.891104297, 493.085000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176664.198090114, 493.393000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176664.506190030, 493.707000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176664.837316868, 494.034000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570176665.163969780, 494.345000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570176665.390595986, 494.586000000]: ROSEUS is already installed as /default_robot_interface_1570176662613688896

;; extending gcstack 0x5ca2710[65466] --> 0x1f34f160[130932] top=ffb9
[ WARN] [1570176668.447162611, 497.598000000]: ROSEUS is already installed as /default_robot_interface_1570176662613688896
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

make *ri*?(Y or N): n
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ generate-walk-up-motion
;; #<rotational-joint #X5bfe8f8 CHEST_JOINT1> :joint-angle(-7.760425e-07) violate min-angle(0.0)
[ WARN] [1570176688.879000182, 517.819000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X14e14fc0> received wrong goal
[ WARN] [1570176688.880734406, 517.819000000]: [fullbody_controller/follow_joint_trajectory_action] feedback-cb #<control_msgs::followjointtrajectoryactionfeedback #X14e06740> received wrong goal
generating walking pattern ...

5.irteusgl$ load "box-climb-stair.l 
t
6.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
7.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X24081918>
8.irteusgl$ [ INFO] [1570177006.134779257, 827.286000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570177006.134818902, 827.286000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x6296af0[16374] --> 0x6718db0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$  jaxoninit

;; extending gcstack 0x6718db0[32738] --> 0x7435710[65476] top=7fe1
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570177052.348531006, 36.390000000]: [/default_robot_interface_1570177051835159356] waiting /clock... 0.003157 seconds elapsed.
[ INFO] [1570177052.348675663, 36.390000000]: [/default_robot_interface_1570177051835159356] /clock is now published.
[ WARN] [1570177052.386150921, 36.419000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570177052.806880970, 36.826000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177053.117048309, 37.135000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177053.417858931, 37.451000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177053.648771981, 37.665000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177053.953442291, 37.983000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177054.213345808, 38.195000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570177054.433266233, 38.411000000]: ROSEUS is already installed as /default_robot_interface_1570177051835159356
[ WARN] [1570177057.338812810, 41.277000000]: ROSEUS is already installed as /default_robot_interface_1570177051835159356
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

make *ri*?(Y or N): n
nil
3.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
4.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X2632a328>
5.irteusgl$ send *ri* :stop-auto-balancer
#<hrpsys_ros_bridge::openhrp_autobalancerservice_stopautobalancerresponse #X25af6338>
6.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
7.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X265e2870>
8.irteusgl$ generate-walk-up-motion
;; #<rotational-joint #X9b04658 CHEST_JOINT1> :joint-angle(-0.045931) violate min-angle(0.0)
generating walking pattern ...

9.irteusgl$ (send *robot* :reset-pose)
#f(0.0 0.0 -20.0 40.0 -20.0 0.0 0.0 0.0 -20.0 40.0 -20.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
10.irteusgl$ b
sh: 1: b: not found
32512
11.irteusgl$ (send *robot* :legs :move-end-pos (float-vector 0 0 bend-knee-height))
Call Stack (max depth: 20):
  0: at (float-vector 0 0 bend-knee-height)
  1: at (send *robot* :legs :move-end-pos (float-vector 0 0 bend-knee-height))
  2: at #<compiled-code #X62c5828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: unbound variable bend-knee-height in (float-vector 0 0 bend-knee-height)
12.E1-irteusgl$ reset
13.irteusgl$ setq bend-knee-height 50
50
14.irteusgl$ (send *robot* :legs :move-end-pos (float-vector 0 0 bend-knee-height))
(#f(0.0 0.0 -20.0 40.0 -20.0 0.0 -9.703661e-09 4.528055e-07 -29.0846 58.1691 -29.0846 -4.848231e-07 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0) #f(9.703646e-09 -4.528055e-07 -29.0846 58.1691 -29.0846 4.848231e-07 -9.703661e-09 4.528055e-07 -29.0846 58.1691 -29.0846 -4.848231e-07 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0))
15.irteusgl$ (send *robot* :fix-leg-to-coords (make-coords))
#<coordinates #X19c61078  -3.457e-05 -4.263e-14 -91.834 / 1.110e-16 -2.800e-08 -1.296e-17>
16.irteusgl$ set-current-pose :tm 3
set-current-pose :zmp-offset #f(0.0 0.0 0.0)
now moving to current pose by load-pattern in 3 sec
rtls: CORBA.COMM_FAILURE(omniORB.COMM_FAILURE_WaitingForReply, CORBA.COMPLETED_MAYBE)

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
[ERROR] [1570177313.365335604, 295.209000000]: attempted to call service  /SequencePlayerServiceROSBridge/loadPattern, but failed 
nil
17.irteusgl$ [ INFO] [1570177323.456613611, 295.209000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570177323.456720854, 295.209000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx 
eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x4a3caf0[16374] --> 0x4ebedb0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus 
;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf 
roseus_c_util 1.irteusgl$ nil
1.irteusgl$ nil
1.irteusgl$ nil
1.irteusgl$ [ INFO] [1570177384.694853712]: cell* ROSEUS_EXIT(context*, int, cell**)
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x5c9caf0[16374] --> 0x611edb0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$  jaxoninit

;; extending gcstack 0x611edb0[32738] --> 0x6e3b710[65476] top=7fe1
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570177404.365179390, 19.660000000]: [/default_robot_interface_1570177403854949130] waiting /clock... 0.001577 seconds elapsed.
[ INFO] [1570177404.365407810, 19.660000000]: [/default_robot_interface_1570177403854949130] /clock is now published.
[ WARN] [1570177404.395197471, 19.680000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570177404.729996926, 20.007000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177405.039186629, 20.329000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177405.353869458, 20.648000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177405.675695322, 20.965000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177406.002002936, 21.275000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177406.220249614, 21.501000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570177406.551157569, 21.813000000]: ROSEUS is already installed as /default_robot_interface_1570177403854949130
[ WARN] [1570177409.406050028, 24.605000000]: ROSEUS is already installed as /default_robot_interface_1570177403854949130
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

make *ri*?(Y or N): n
nil
3.irteusgl$ generate-walk-up-motion
;; #<rotational-joint #X6155a40 CHEST_JOINT1> :joint-angle(-0.044864) violate min-angle(0.0)
generating walking pattern ...

4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X12fa2610>
5.irteusgl$ send *ri* :stop-auto-balancer
#<hrpsys_ros_bridge::openhrp_autobalancerservice_stopautobalancerresponse #X24f86a48>
6.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
7.irteusgl$ send *ri* :stop-impedance
Call Stack (max depth: 20):
  0: at (send *ri* :stop-impedance)
  1: at #<compiled-code #X5ccb828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: mismatch argument in (send *ri* :stop-impedance)
8.E1-irteusgl$ reset
9.irteusgl$ send *ri* :stop-impedance :arms
(#<hrpsys_ros_bridge::openhrp_impedancecontrollerservice_stopimpedancecontrollerresponse #X26aeeb10> #<hrpsys_ros_bridge::openhrp_impedancecontrollerservice_stopimpedancecontrollerresponse #X26a43ca8>)
10.irteusgl$ setq bend-knee-height 50
50
11.irteusgl$ (send *robot* :reset-pose)
#f(0.0 0.0 -20.0 40.0 -20.0 0.0 0.0 0.0 -20.0 40.0 -20.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
12.irteusgl$ (send *robot* :fix-leg-to-coords (make-coords))
#<coordinates #X26da09e0  1.563e-13 4.774e-15 -41.834 / 1.016e-20 -1.145e-16 1.022e-21>
13.irteusgl$ (send *robot* :legs :move-end-pos (float-vector 0 0 bend-knee-height))
(#f(0.0 0.0 -20.0 40.0 -20.0 0.0 -9.703657e-09 4.528055e-07 -29.0846 58.1691 -29.0846 -4.848231e-07 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0) #f(9.703657e-09 -4.528055e-07 -29.0846 58.1691 -29.0846 4.848231e-07 -9.703657e-09 4.528055e-07 -29.0846 58.1691 -29.0846 -4.848231e-07 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0))
14.irteusgl$ (send *robot* :fix-leg-to-coords (make-coords))
#<coordinates #X89d7b40  -3.457e-05 4.774e-15 -91.834 / 5.770e-25 -2.800e-08 1.253e-24>
15.irteusgl$ ;set-current-pose :tm 3
nil
16.irteusgl$ 
nil
16.irteusgl$ 
nil
16.irteusgl$ 
nil
16.irteusgl$ set-current-pose :tm 3
set-current-pose :zmp-offset #f(0.0 0.0 0.0)
now moving to current pose by load-pattern in 3 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
17.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X1415b0f8>
18.irteusgl$ 
nil
18.irteusgl$ 
nil
18.irteusgl$ 
nil
18.irteusgl$ (send *ri* :angle-vector-sequence-full av-list tm-list)
#<hrpsys_ros_bridge::openhrp_sequenceplayerservice_setjointanglessequencefullresponse #X8056f30>
19.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X275cfd10>
20.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
21.irteusgl$ [ INFO] [1570177944.756164354, 548.315000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570177944.756210254, 548.315000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x62bbaf0[16374] --> 0x673ddb0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 
1.irteusgl$ nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$  jaxoninit

;; extending gcstack 0x673ddb0[32738] --> 0x745be70[65476] top=7c1c
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570177996.294115480, 30.718000000]: [/default_robot_interface_1570177995783409988] waiting /clock... 0.002224 seconds elapsed.
[ INFO] [1570177996.294255053, 30.718000000]: [/default_robot_interface_1570177995783409988] /clock is now published.
[ WARN] [1570177996.333247992, 30.743000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570177996.769131972, 31.169000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177997.080123609, 31.485000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177997.397570221, 31.799000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177997.612855408, 32.015000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177997.927971673, 32.329000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570177998.242538178, 32.647000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570177998.564425726, 32.965000000]: ROSEUS is already installed as /default_robot_interface_1570177995783409988
[ WARN] [1570178001.597904481, 35.932000000]: ROSEUS is already installed as /default_robot_interface_1570177995783409988
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

stop st
(reset-pose)
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
stop abc
stop ic
(#<hrpsys_ros_bridge::openhrp_impedancecontrollerservice_stopimpedancecontrollerresponse #X15757138> #<hrpsys_ros_bridge::openhrp_impedancecontrollerservice_stopimpedancecontrollerresponse #X15753f70>)
3.irteusgl$ 
nil
3.irteusgl$ 
nil
3.irteusgl$ 
nil
3.irteusgl$ generate-walk-up-motion
;; #<rotational-joint #Xa13ee08 CHEST_JOINT1> :joint-angle(-0.046167) violate min-angle(0.0)
generating walking pattern ...

4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X313d6e60>
5.irteusgl$ load "box-climb-stair.l 
t
6.irteusgl$ [ INFO] [1570178310.955877326, 343.525000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570178310.955961857, 343.525000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x638baf0[16374] --> 0x680ddb0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$ 
nil
2.irteusgl$ 
nil
2.irteusgl$ 
nil
2.irteusgl$ 
nil
2.irteusgl$  jaxoninit

;; extending gcstack 0x680ddb0[32738] --> 0x752be70[65476] top=7c1d
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570178369.335923806, 29.311000000]: [/default_robot_interface_1570178368818421721] waiting /clock... 0.007441 seconds elapsed.
[ INFO] [1570178369.336025352, 29.311000000]: [/default_robot_interface_1570178368818421721] /clock is now published.
[ WARN] [1570178369.365951220, 29.328000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570178369.697156361, 29.660000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570178370.015405923, 29.984000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570178370.338683038, 30.303000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570178370.670776807, 30.629000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570178370.995066632, 30.941000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570178371.297674769, 31.255000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570178371.617258707, 31.569000000]: ROSEUS is already installed as /default_robot_interface_1570178368818421721
[ WARN] [1570178374.348530320, 34.279000000]: ROSEUS is already installed as /default_robot_interface_1570178368818421721
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

stop st
(reset-pose)
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
stop abc
stop ic
start st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X25f8a640>
3.irteusgl$ generate-walk-up-motion
generating walking pattern ...

4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ (send *robot* :reset-pose)
#f(0.0 0.0 -20.0 40.0 -20.0 0.0 0.0 0.0 -20.0 40.0 -20.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
5.irteusgl$ setq bend-knee-height 50
50
6.irteusgl$ (send *robot* :legs :move-end-pos (float-vector 0 0 bend-knee-height))
(#f(0.0 0.0 -20.0 40.0 -20.0 0.0 -9.703657e-09 4.528055e-07 -29.0846 58.1691 -29.0846 -4.848231e-07 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0) #f(9.703670e-09 -4.528055e-07 -29.0846 58.1691 -29.0846 4.848231e-07 -9.703657e-09 4.528055e-07 -29.0846 58.1691 -29.0846 -4.848231e-07 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0))
7.irteusgl$ (send *robot* :fix-leg-to-coords (make-coords))
#<coordinates #X2cca39d0  -3.457e-05 -1.421e-14 -91.834 / -5.551e-17 -2.800e-08 -1.333e-17>
8.irteusgl$ (set-current-pose :tm 3)
set-current-pose :zmp-offset #f(0.0 0.0 0.0)
now moving to current pose by load-pattern in 3 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
9.irteusgl$ ;(send *ri* :angle-vector-sequence-full av-list tm-list)
nil
10.irteusgl$ car av-list
#f(2.628160e-05 8.382165e-05 -29.0678 58.1691 -29.1014 -8.378964e-05 2.626219e-05 8.472726e-05 -29.0678 58.1691 -29.1014 -8.475928e-05 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0 0.0 0.0 0.0 0.0)
11.irteusgl$ send *ri* :state :potentio-vector
;; #<rotational-joint #Xa20ef40 CHEST_JOINT1> :joint-angle(-0.046903) violate min-angle(0.0)
#f(-0.000609 0.031599 -23.0581 57.4391 -34.3074 -0.074357 -0.001583 0.023339 -23.0438 57.4476 -34.3151 -0.02958 -0.000388 0.0 -3.107984e-06 -3.901868e-07 0.012007 -5.226657e-05 39.9908 -19.9766 -4.98511 -79.97 0.000905 0.003705 -19.993 4.530631e-05 39.9907 19.9766 4.98512 -79.97 -0.000904 -0.003702 -19.993)
12.irteusgl$ v- (send *ri* :state :potentio-vector) (car av-list)
;; #<rotational-joint #Xa20ef40 CHEST_JOINT1> :joint-angle(-0.046898) violate min-angle(0.0)
Call Stack (max depth: 20):
  0: at (v- (send *ri* :state :potentio-vector) (car av-list))
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: vector dimension mismatch in (v- (send *ri* :state :potentio-vector) (car av-list))
13.E1-irteusgl$ reset
14.irteusgl$ v- (send *ri* :state :potentio-vector) (subseq (car av-list) 0 33)
;; #<rotational-joint #Xa20ef40 CHEST_JOINT1> :joint-angle(-0.04685) violate min-angle(0.0)
#f(-0.001085 0.03251 6.00636 -0.722188 -5.23086 -0.047259 -0.000945 0.023289 6.0206 -0.727807 -5.24162 0.005186 -0.000363 0.0 2.251202e-06 1.497988e-06 0.012004 -4.951352e-05 -0.009241 0.023389 0.014879 0.030037 0.000904 0.003703 0.006965 5.874125e-05 -0.009231 -0.023394 -0.014881 0.030043 -0.000904 -0.003703 0.006966)
15.irteusgl$ v- (send *robot* :angle-vector) (subseq (car av-list) 0 33)
#f(-0.00097 0.026147 5.87047 -0.926569 -4.9439 -0.026147 -0.00097 0.026147 5.87013 -0.926472 -4.94366 -0.026147 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)
16.irteusgl$ 
nil
16.irteusgl$ 
nil
16.irteusgl$ 
nil
16.irteusgl$ load "box-climb-stair.l 
t
17.irteusgl$ cat tm-list
cat: tm-list: そのようなファイルやディレクトリはありません
256
18.irteusgl$ car tm-list
20.0
19.irteusgl$ load "box-climb-stair.l 
t
20.irteusgl$ execute-motion
real machine move
move to initial pose
[ERROR] [1570179029.678345594, 685.871000000]: [fullbody_controller/follow_joint_trajectory_action] :wait-for-result (return nil when no goal exists)
move
[ERROR] [1570179031.544017115, 687.628000000]: [fullbody_controller/follow_joint_trajectory_action] :wait-for-result (return nil when no goal exists)
(nil)
21.irteusgl$ execute-motion
real machine move
move to initial pose
[ERROR] [1570179046.060061018, 701.837000000]: [fullbody_controller/follow_joint_trajectory_action] :wait-for-result (return nil when no goal exists)
move
[ERROR] [1570179047.426350160, 703.174000000]: [fullbody_controller/follow_joint_trajectory_action] :wait-for-result (return nil when no goal exists)
(nil)
22.irteusgl$ leng av-list
sh: 1: leng: not found
32512
23.irteusgl$ len av-list
sh: 1: len: not found
32512
24.irteusgl$ length av-list
1999
25.irteusgl$ length tm-list
1999
26.irteusgl$ car av-list
#f(2.628160e-05 8.382165e-05 -29.0678 58.1691 -29.1014 -8.378964e-05 2.626219e-05 8.472726e-05 -29.0678 58.1691 -29.1014 -8.475928e-05 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0 0.0 0.0 0.0 0.0)
27.irteusgl$ 
nil
27.irteusgl$ car *walk-pattern*
(:angle-vector #f(2.628160e-05 8.382165e-05 -29.0678 58.1691 -29.1014 -8.378964e-05 2.626219e-05 8.472726e-05 -29.0678 58.1691 -29.1014 -8.475928e-05 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0) :root-coords #<coordinates #X264dffb0  0.195 -0.001 926.666 / -4.585e-07 -2.800e-08 1.284e-14> :czmp #f(-99.3811 0.518476 5.684342e-14) :zmp #f(-7.243616e-14 -7.105427e-15 5.684342e-14) :cog #f(-56.6841 0.296529 1016.93) :time 0 :pz #f(-105.238 0.550525 5.684342e-14) :all-limbs (:rleg :lleg) :contact-state (:support :support) :end-coords-list (#<coordinates #X264c99a8  8.015e-10 -100.0 2.122e-05 / 1.694e-10 -4.014e-16 5.588e-10> #<coordinates #X264c9f78  8.004e-10 100.0 2.123e-05 / -1.694e-10 -1.523e-16 -5.588e-10>))
28.irteusgl$ memq :zmp (car *walk-pattern*)
(:zmp #f(-7.243616e-14 -7.105427e-15 5.684342e-14) :cog #f(-56.6841 0.296529 1016.93) :time 0 :pz #f(-105.238 0.550525 5.684342e-14) :all-limbs (:rleg :lleg) :contact-state (:support :support) :end-coords-list (#<coordinates #X264c99a8  8.015e-10 -100.0 2.122e-05 / 1.694e-10 -4.014e-16 5.588e-10> #<coordinates #X264c9f78  8.004e-10 100.0 2.123e-05 / -1.694e-10 -1.523e-16 -5.588e-10>))
29.irteusgl$ (car *walk-pattern*)
(:angle-vector #f(2.628160e-05 8.382165e-05 -29.0678 58.1691 -29.1014 -8.378964e-05 2.626219e-05 8.472726e-05 -29.0678 58.1691 -29.1014 -8.475928e-05 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0) :root-coords #<coordinates #X264dffb0  0.195 -0.001 926.666 / -4.585e-07 -2.800e-08 1.284e-14> :czmp #f(-99.3811 0.518476 5.684342e-14) :zmp #f(-7.243616e-14 -7.105427e-15 5.684342e-14) :cog #f(-56.6841 0.296529 1016.93) :time 0 :pz #f(-105.238 0.550525 5.684342e-14) :all-limbs (:rleg :lleg) :contact-state (:support :support) :end-coords-list (#<coordinates #X264c99a8  8.015e-10 -100.0 2.122e-05 / 1.694e-10 -4.014e-16 5.588e-10> #<coordinates #X264c9f78  8.004e-10 100.0 2.123e-05 / -1.694e-10 -1.523e-16 -5.588e-10>))
30.irteusgl$ memq :root-coords (car *walk-pattern*)
(:root-coords #<coordinates #X264dffb0  0.195 -0.001 926.666 / -4.585e-07 -2.800e-08 1.284e-14> :czmp #f(-99.3811 0.518476 5.684342e-14) :zmp #f(-7.243616e-14 -7.105427e-15 5.684342e-14) :cog #f(-56.6841 0.296529 1016.93) :time 0 :pz #f(-105.238 0.550525 5.684342e-14) :all-limbs (:rleg :lleg) :contact-state (:support :support) :end-coords-list (#<coordinates #X264c99a8  8.015e-10 -100.0 2.122e-05 / 1.694e-10 -4.014e-16 5.588e-10> #<coordinates #X264c9f78  8.004e-10 100.0 2.123e-05 / -1.694e-10 -1.523e-16 -5.588e-10>))
31.irteusgl$ (memq :contact-state (car *walk-pattern*))
(:contact-state (:support :support) :end-coords-list (#<coordinates #X264c99a8  8.015e-10 -100.0 2.122e-05 / 1.694e-10 -4.014e-16 5.588e-10> #<coordinates #X264c9f78  8.004e-10 100.0 2.123e-05 / -1.694e-10 -1.523e-16 -5.588e-10>))
32.irteusgl$ cadr (memq :contact-state (car *walk-pattern*))
(:support :support)
33.irteusgl$ mapcar #'(lambda (cs) (equal :support cs) (cadr (memq :contact-state (car *walk-pattern*)))
Call Stack (max depth: 20):
  0: at (mapcar #'(lambda (cs) (equal :support cs) (cadr (memq :contact-state (car *walk-pattern*)))))
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: mismatch argument in (mapcar #'(lambda (cs) (equal :support cs) (cadr (memq :contact-state (car *walk-pattern*)))))
34.E1-irteusgl$ reset
35.irteusgl$ mapcar #'(lambda (cs) (equal :support cs)) (cadr (memq :contact-state (car *walk-pattern*)))
(t t)
36.irteusgl$ mapcar #'(lambda (cs) (if (equal :support cs) 1 0)) (cadr (memq :contact-state (car *walk-pattern*)))
(1 1)
37.irteusgl$ (concatenate cons (mapcar #'(lambda (cs) (if (equal :support cs) 1 0)) (cadr (memq :contact-state (car *walk-pattern*)))) '(0 0 0 0 1 1))
(1 1 0 0 0 0 1 1)
38.irteusgl$ (concatenate flat-vector (mapcar #'(lambda (cs) (if (equal :support cs) 1 0)) (cadr (memq :contact-state (car *walk-pattern*)))) '(0 0 0 0 1 1))
Call Stack (max depth: 20):
  0: at (concatenate flat-vector (mapcar #'(lambda (cs) (if (equal :support cs) 1 0)) (cadr (memq :contact-state (car *walk-pattern*)))) '(0 0 0 0 1 1))
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: unbound variable flat-vector in (concatenate flat-vector (mapcar #'(lambda (cs) (if (equal :support cs) 1 0)) (cadr (memq :contact-state (car *walk-pattern*)))) '(0 0 0 0 1 1))
39.E1-irteusgl$ reset
40.irteusgl$ (concatenate float-vector (mapcar #'(lambda (cs) (if (equal :support cs) 1 0)) (cadr (memq :contact-state (car *walk-pattern*)))) '(0 0 0 0 1 1))
#f(1.0 1.0 0.0 0.0 0.0 0.0 1.0 1.0)
41.irteusgl$ (cadr (memq :root-coord a))
Call Stack (max depth: 20):
  0: at (memq :root-coord a)
  1: at (cadr (memq :root-coord a))
  2: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: unbound variable a in (memq :root-coord a)
42.E1-irteusgl$ reset
43.irteusgl$ (cadr (memq :root-coord (car *walk-pattern*)))
nil
44.irteusgl$ (cadr (memq :root-coords (car *walk-pattern*)))
#<coordinates #X264dffb0  0.195 -0.001 926.666 / -4.585e-07 -2.800e-08 1.284e-14>
45.irteusgl$ 
nil
45.irteusgl$ 
nil
45.irteusgl$ 
nil
45.irteusgl$ 
nil
45.irteusgl$ 
nil
45.irteusgl$ 
nil
45.irteusgl$ load "box-climb-stair.l 
t
46.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
47.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X24087d68>
48.irteusgl$ 
nil
48.irteusgl$ 
nil
48.irteusgl$ 
nil
48.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X2419ac10>
49.irteusgl$ generate-walk-up-motion
generating walking pattern ...
(20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0)
50.irteusgl$ 
nil
50.irteusgl$ 
nil
50.irteusgl$ 
nil
50.irteusgl$ 
nil
50.irteusgl$ is-choreonoid
t
51.irteusgl$ is-simulation
t
52.irteusgl$ is-simulation
t
53.irteusgl$ is-choreonoid
t
54.irteusgl$ length (car zmp-list)
3
55.irteusgl$ length zmp-list
1999
56.irteusgl$ execute-motion
real machine move
move to initial pose
Call Stack (max depth: 20):
  0: at (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))
  1: at (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))
  2: at (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))
  3: at (setq pos (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos)))
  4: at (let* ((jvss (instance std_msgs::float64multiarray :init)) (vels (instance std_msgs::float64multiarray :init)) (torques (instance std_msgs::float64multiarray :init)) (poss (instance std_msgs::float64multiarray :init)) (rpys (instance std_msgs::float64multiarray :init)) (accs (instance std_msgs::float64multiarray :init)) (zmps (instance std_msgs::float64multiarray :init)) (wrenchs (instance std_msgs::float64multiarray :init)) (optionals (instance std_msgs::float64multiarray :init)) (tms (coerce (mapcar #'(lambda (ttm) (* 0.001 ttm)) tm) float-vector))) (let ((jvs (apply #'matrix (mapcar #'(lambda (x) (map float-vector #'deg2rad x)) jpos)))) (send jvss :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions jvs)) :stride (* (nth 0 (array-dimensions jvs)) (nth 1 (array-dimensions jvs)))) (instance std_msgs::multiarraydimension :init :label "jvs length" :size (nth 1 (array-dimensions jvs)) :stride (nth 1 (array-dimensions jvs))))) (send jvss :data (array-entity jvs))) (setq vel (apply #'matrix (mapcar #'(lambda (x) (map float-vector #'deg2rad x)) vel))) (send vels :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions vel)) :stride (* (nth 0 (array-dimensions vel)) (nth 1 (array-dimensions vel)))) (instance std_msgs::multiarraydimension :init :label "vel length" :size (nth 1 (array-dimensions vel)) :stride (nth 1 (array-dimensions vel))))) (send vels :data (array-entity vel)) (setq torque (apply #'matrix torque)) (send torques :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions torque)) :stride (* (nth 0 (array-dimensions torque)) (nth 1 (array-dimensions torque)))) (instance std_msgs::multiarraydimension :init :label "torque length" :size (nth 1 (array-dimensions torque)) :stride (nth 1 (array-dimensions torque))))) (send torques :data (array-entity torque)) (setq pos (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))) (send poss :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions pos)) :stride (* (nth 0 (array-dimensions pos)) (nth 1 (array-dimensions pos)))) (instance std_msgs::multiarraydimension :init :label "pos length" :size (nth 1 (array-dimensions pos)) :stride (nth 1 (array-dimensions pos))))) (send poss :data (array-entity pos)) (setq rpy (apply #'matrix rpy)) (send rpys :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions rpy)) :stride (* (nth 0 (array-dimensions rpy)) (nth 1 (array-dimensions rpy)))) (instance std_msgs::multiarraydimension :init :label "rpy length" :size (nth 1 (array-dimensions rpy)) :stride (nth 1 (array-dimensions rpy))))) (send rpys :data (array-entity rpy)) (setq acc (apply #'matrix acc)) (send accs :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions acc)) :stride (* (nth 0 (array-dimensions acc)) (nth 1 (array-dimensions acc)))) (instance std_msgs::multiarraydimension :init :label "acc length" :size (nth 1 (array-dimensions acc)) :stride (nth 1 (array-dimensions acc))))) (send accs :data (array-entity acc)) (setq zmp (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) root-local-zmp))) (send zmps :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions zmp)) :stride (* (nth 0 (array-dimensions zmp)) (nth 1 (array-dimensions zmp)))) (instance std_msgs::multiarraydimension :init :label "zmp length" :size (nth 1 (array-dimensions zmp)) :stride (nth 1 (array-dimensions zmp))))) (send zmps :data (array-entity zmp)) (setq wrench (apply #'matrix wrench)) (send wrenchs :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions wrench)) :stride (* (nth 0 (array-dimensions wrench)) (nth 1 (array-dimensions wrench)))) (instance std_msgs::multiarraydimension :init :label "wrench length" :size (nth 1 (array-dimensions wrench)) :stride (nth 1 (array-dimensions wrench))))) (send wrenchs :data (array-entity wrench)) (setq optional (apply #'matrix optional)) (send optionals :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions optional)) :stride (* (nth 0 (array-dimensions optional)) (nth 1 (array-dimensions optional)))) (instance std_msgs::multiarraydimension :init :label "optional length" :size (nth 1 (array-dimensions optional)) :stride (nth 1 (array-dimensions optional))))) (send optionals :data (array-entity optional)) (send self :sequenceplayerservice_setjointanglessequencefull :jvss jvss :vels vels :torques torques :poss poss :rpys rpys :accs accs :zmps zmps :wrenchs wrenchs :optionals optionals :tms tms))
  5: at (send *ri* :angle-vector-sequence-full (list (car av-list)) (list 1000) :root-coords (car root-coord-list) :zmp (car zmp-list) :optional (car contact-state-list))
  6: at (progn (warn "real machine move~%") (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list 1000) :root-coords (car root-coord-list) :zmp (car zmp-list) :optional (car contact-state-list)) (send *ri* :wait-interpolation) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation))
  7: at (if real (progn (warn "real machine move~%") (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list 1000) :root-coords (car root-coord-list) :zmp (car zmp-list) :optional (car contact-state-list)) (send *ri* :wait-interpolation) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation)))
  8: at (when real (warn "real machine move~%") (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list 1000) :root-coords (car root-coord-list) :zmp (car zmp-list) :optional (car contact-state-list)) (send *ri* :wait-interpolation) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation))
  9: at (execute-motion)
  10: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: mismatch argument in (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))
57.E1-irteusgl$ reset
58.irteusgl$ execute-motion
real machine move
move to initial pose
Call Stack (max depth: 20):
  0: at (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))
  1: at (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))
  2: at (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))
  3: at (setq pos (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos)))
  4: at (let* ((jvss (instance std_msgs::float64multiarray :init)) (vels (instance std_msgs::float64multiarray :init)) (torques (instance std_msgs::float64multiarray :init)) (poss (instance std_msgs::float64multiarray :init)) (rpys (instance std_msgs::float64multiarray :init)) (accs (instance std_msgs::float64multiarray :init)) (zmps (instance std_msgs::float64multiarray :init)) (wrenchs (instance std_msgs::float64multiarray :init)) (optionals (instance std_msgs::float64multiarray :init)) (tms (coerce (mapcar #'(lambda (ttm) (* 0.001 ttm)) tm) float-vector))) (let ((jvs (apply #'matrix (mapcar #'(lambda (x) (map float-vector #'deg2rad x)) jpos)))) (send jvss :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions jvs)) :stride (* (nth 0 (array-dimensions jvs)) (nth 1 (array-dimensions jvs)))) (instance std_msgs::multiarraydimension :init :label "jvs length" :size (nth 1 (array-dimensions jvs)) :stride (nth 1 (array-dimensions jvs))))) (send jvss :data (array-entity jvs))) (setq vel (apply #'matrix (mapcar #'(lambda (x) (map float-vector #'deg2rad x)) vel))) (send vels :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions vel)) :stride (* (nth 0 (array-dimensions vel)) (nth 1 (array-dimensions vel)))) (instance std_msgs::multiarraydimension :init :label "vel length" :size (nth 1 (array-dimensions vel)) :stride (nth 1 (array-dimensions vel))))) (send vels :data (array-entity vel)) (setq torque (apply #'matrix torque)) (send torques :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions torque)) :stride (* (nth 0 (array-dimensions torque)) (nth 1 (array-dimensions torque)))) (instance std_msgs::multiarraydimension :init :label "torque length" :size (nth 1 (array-dimensions torque)) :stride (nth 1 (array-dimensions torque))))) (send torques :data (array-entity torque)) (setq pos (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))) (send poss :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions pos)) :stride (* (nth 0 (array-dimensions pos)) (nth 1 (array-dimensions pos)))) (instance std_msgs::multiarraydimension :init :label "pos length" :size (nth 1 (array-dimensions pos)) :stride (nth 1 (array-dimensions pos))))) (send poss :data (array-entity pos)) (setq rpy (apply #'matrix rpy)) (send rpys :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions rpy)) :stride (* (nth 0 (array-dimensions rpy)) (nth 1 (array-dimensions rpy)))) (instance std_msgs::multiarraydimension :init :label "rpy length" :size (nth 1 (array-dimensions rpy)) :stride (nth 1 (array-dimensions rpy))))) (send rpys :data (array-entity rpy)) (setq acc (apply #'matrix acc)) (send accs :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions acc)) :stride (* (nth 0 (array-dimensions acc)) (nth 1 (array-dimensions acc)))) (instance std_msgs::multiarraydimension :init :label "acc length" :size (nth 1 (array-dimensions acc)) :stride (nth 1 (array-dimensions acc))))) (send accs :data (array-entity acc)) (setq zmp (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) root-local-zmp))) (send zmps :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions zmp)) :stride (* (nth 0 (array-dimensions zmp)) (nth 1 (array-dimensions zmp)))) (instance std_msgs::multiarraydimension :init :label "zmp length" :size (nth 1 (array-dimensions zmp)) :stride (nth 1 (array-dimensions zmp))))) (send zmps :data (array-entity zmp)) (setq wrench (apply #'matrix wrench)) (send wrenchs :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions wrench)) :stride (* (nth 0 (array-dimensions wrench)) (nth 1 (array-dimensions wrench)))) (instance std_msgs::multiarraydimension :init :label "wrench length" :size (nth 1 (array-dimensions wrench)) :stride (nth 1 (array-dimensions wrench))))) (send wrenchs :data (array-entity wrench)) (setq optional (apply #'matrix optional)) (send optionals :layout :dim (list (instance std_msgs::multiarraydimension :init :label "sequence length" :size (nth 0 (array-dimensions optional)) :stride (* (nth 0 (array-dimensions optional)) (nth 1 (array-dimensions optional)))) (instance std_msgs::multiarraydimension :init :label "optional length" :size (nth 1 (array-dimensions optional)) :stride (nth 1 (array-dimensions optional))))) (send optionals :data (array-entity optional)) (send self :sequenceplayerservice_setjointanglessequencefull :jvss jvss :vels vels :torques torques :poss poss :rpys rpys :accs accs :zmps zmps :wrenchs wrenchs :optionals optionals :tms tms))
  5: at (send *ri* :angle-vector-sequence-full (list (car av-list)) (list 1000) :root-coords (car root-coord-list) :zmp (car zmp-list) :optional (car contact-state-list))
  6: at (progn (warn "real machine move~%") (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list 1000) :root-coords (car root-coord-list) :zmp (car zmp-list) :optional (car contact-state-list)) (send *ri* :wait-interpolation) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation))
  7: at (if real (progn (warn "real machine move~%") (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list 1000) :root-coords (car root-coord-list) :zmp (car zmp-list) :optional (car contact-state-list)) (send *ri* :wait-interpolation) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation)))
  8: at (when real (warn "real machine move~%") (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list 1000) :root-coords (car root-coord-list) :zmp (car zmp-list) :optional (car contact-state-list)) (send *ri* :wait-interpolation) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation))
  9: at (execute-motion)
  10: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: mismatch argument in (apply #'matrix (mapcar #'(lambda (x) (scale 0.001 x)) pos))
59.E1-irteusgl$ ,pos
nil
60.E1-irteusgl$ car root-coord-list
#<coordinates #X263eb370  0.195 -0.001 926.666 / -4.585e-07 -2.800e-08 1.284e-14>
61.E1-irteusgl$ length root-coord-list
1999
62.E1-irteusgl$ send (car root-coord-list) :worldpos
#f(0.19455 -0.00105 926.666)
63.E1-irteusgl$ 
nil
63.E1-irteusgl$ 
nil
63.E1-irteusgl$ 
nil
63.E1-irteusgl$ reset
64.irteusgl$ load "box-climb-stair.l 
t
65.irteusgl$ generate-walk-up-motion
generating walking pattern ...
;; inverse-kinematics failed.
;; dif-pos : #f(-2.088418e-05 -2.846316e-06 -3.790820e-05)/(4.337375e-05/1)
;; dif-rot : #f(1.390241e-17 9.228198e-18 -1.340418e-17)/(2.140347e-17/0.017453)
;; dif-pos : #f(3.21977 -5.638084e-06 -6.104125e-05)/(3.21977/1)
;; dif-rot : #f(2.307341e-09 -0.022963 0.002373)/(0.023086/0.017453)
;; cog-dif : #f(0.027329 -0.000164)/(0.027329/5.0)
;;  coords : #<coordinates #X13271e38  410.25 42.854 -91.834 / -0.46 -2.509e-08 1.244e-08>
;;  angles : (#f(2.33021 0.763828 0.0 0.0 0.0 -1.62256) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X284a3cf0  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  2.088e-05 -100.0 3.791e-05 / 1.694e-10 -1.196e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.795 100.008 400.206 / -0.002 0.023 -2.725e-05>) :link-list ((#<bodyset-link #X14617ec0 BODY  410.25 42.854 926.666 / -0.46 -2.509e-08 1.244e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  365.84 -46.744 936.166 / 2.257e-09 -2.800e-08 -3.136e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.84 -46.744 814.166 / 2.257e-09 -2.800e-08 -0.074> #<bodyset-link #X148e35b8 RLEG_LINK2  365.84 -47.488 804.194 / -0.04 0.497 -0.085> #<bodyset-link #X14a807b0 RLEG_LINK3  184.018 -72.301 471.44 / -0.041 0.504 -0.085> #<bodyset-link #X11857c90 RLEG_LINK4  2.088e-05 -97.025 139.889 / 1.694e-10 -1.196e-16 -0.074> #<bodyset-link #X115a6908 RLEG_LINK5  2.088e-05 -100.0 100.0 / 1.694e-10 -1.196e-16 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  410.25 42.854 926.666 / -0.46 -2.509e-08 1.244e-08> #<bodyset-link #X113734b0 LLEG_LINK0  454.659 132.452 936.166 / 1.885e-07 -2.800e-08 -5.245e-15> #<bodyset-link #Xfbddc18 LLEG_LINK1  454.659 132.452 814.166 / 1.885e-07 -2.800e-08 -0.103> #<bodyset-link #X10027230 LLEG_LINK2  454.659 131.424 804.219 / 0.16 -0.995 -0.19> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.035 110.419 600.95 / -0.561 1.379 -0.57> #<bodyset-link #X10a385f8 LLEG_LINK4  400.014 104.116 539.957 / -0.002 0.023 -0.103> #<bodyset-link #X14ba89c8 LLEG_LINK5  399.091 100.005 500.179 / -0.002 0.023 -2.725e-05>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  2.088e-05 -100.0 3.791e-05 / 1.694e-10 -1.196e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.795 100.008 400.206 / -0.002 0.023 -2.725e-05>) :link-list ((#<bodyset-link #X14617ec0 BODY  410.25 42.854 926.666 / -0.46 -2.509e-08 1.244e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  365.84 -46.744 936.166 / 2.257e-09 -2.800e-08 -3.136e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.84 -46.744 814.166 / 2.257e-09 -2.800e-08 -0.074> #<bodyset-link #X148e35b8 RLEG_LINK2  365.84 -47.488 804.194 / -0.04 0.497 -0.085> #<bodyset-link #X14a807b0 RLEG_LINK3  184.018 -72.301 471.44 / -0.041 0.504 -0.085> #<bodyset-link #X11857c90 RLEG_LINK4  2.088e-05 -97.025 139.889 / 1.694e-10 -1.196e-16 -0.074> #<bodyset-link #X115a6908 RLEG_LINK5  2.088e-05 -100.0 100.0 / 1.694e-10 -1.196e-16 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  410.25 42.854 926.666 / -0.46 -2.509e-08 1.244e-08> #<bodyset-link #X113734b0 LLEG_LINK0  454.659 132.452 936.166 / 1.885e-07 -2.800e-08 -5.245e-15> #<bodyset-link #Xfbddc18 LLEG_LINK1  454.659 132.452 814.166 / 1.885e-07 -2.800e-08 -0.103> #<bodyset-link #X10027230 LLEG_LINK2  454.659 131.424 804.219 / 0.16 -0.995 -0.19> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.035 110.419 600.95 / -0.561 1.379 -0.57> #<bodyset-link #X10a385f8 LLEG_LINK4  400.014 104.116 539.957 / -0.002 0.023 -0.103> #<bodyset-link #X14ba89c8 LLEG_LINK5  399.091 100.005 500.179 / -0.002 0.023 -2.725e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(339.841 69.9148 1217.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  410.25 42.854 926.666 / -0.46 -2.509e-08 1.244e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  2.088e-05 -100.0 3.791e-05 / 1.694e-10 -1.196e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.795 100.008 400.206 / -0.002 0.023 -2.725e-05>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  365.84 -46.744 936.166 / 2.257e-09 -2.800e-08 -3.136e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.84 -46.744 814.166 / 2.257e-09 -2.800e-08 -0.074> #<bodyset-link #X148e35b8 RLEG_LINK2  365.84 -47.488 804.194 / -0.04 0.497 -0.085> #<bodyset-link #X14a807b0 RLEG_LINK3  184.018 -72.301 471.44 / -0.041 0.504 -0.085> #<bodyset-link #X11857c90 RLEG_LINK4  2.088e-05 -97.025 139.889 / 1.694e-10 -1.196e-16 -0.074> #<bodyset-link #X115a6908 RLEG_LINK5  2.088e-05 -100.0 100.0 / 1.694e-10 -1.196e-16 5.588e-10>) (#<bodyset-link #X113734b0 LLEG_LINK0  454.659 132.452 936.166 / 1.885e-07 -2.800e-08 -5.245e-15> #<bodyset-link #Xfbddc18 LLEG_LINK1  454.659 132.452 814.166 / 1.885e-07 -2.800e-08 -0.103> #<bodyset-link #X10027230 LLEG_LINK2  454.659 131.424 804.219 / 0.16 -0.995 -0.19> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.035 110.419 600.95 / -0.561 1.379 -0.57> #<bodyset-link #X10a385f8 LLEG_LINK4  400.014 104.116 539.957 / -0.002 0.023 -0.103> #<bodyset-link #X14ba89c8 LLEG_LINK5  399.091 100.005 500.179 / -0.002 0.023 -2.725e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(339.841 69.9148 1217.9) :target-centroid-pos #f(339.841 69.9148 1217.9) :fix-limbs-target-coords (#<coordinates #X284a3cf0  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.895979 0.444097 -2.800114e-08 410.25) (-0.444097 0.895979 -3.184985e-17 42.8538) (2.508842e-08 1.243522e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint656969728) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(2.33021 0.763828 0.0 0.0 0.0 -1.62256) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.043613e-32 -3.388132e-21) (0.0 1.0 0.0 -1.421085e-14) (1.043613e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.580325e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (8.580325e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.043613e-32 -3.388132e-21) (0.0 1.0 0.0 -1.421085e-14) (1.043613e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.580325e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (8.580325e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(339.841 69.9148 1217.9) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.043613e-32 -3.388132e-21) (0.0 1.0 0.0 -1.421085e-14) (1.043613e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.580325e-19 -5.684342e-14) (0.0 1.0 0.0 0.0) (8.580325e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(339.841 69.9148 1217.9) :target-centroid-pos #f(339.841 69.9148 1217.9) :fix-limbs-target-coords (list #<coordinates #X284a3cf0  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-34-30-85-07-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-34-30-85-07-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-4.26257 -0.600922 -7.49211)/(8.64073/1)
;; dif-rot : #f(2.778020e-17 5.421671e-14 4.784120e-15)/(5.442739e-14/0.017453)
;; dif-pos : #f(1.00786 0.019255 -0.005568)/(1.00806/1)
;; dif-rot : #f(4.897422e-06 -0.007129 0.001014)/(0.0072/0.017453)
;; cog-dif : #f(-0.185143 -0.026627)/(0.187048/5.0)
;;  coords : #<coordinates #X13271e38  416.88 52.452 -91.834 / -0.348 -2.632e-08 9.556e-09>
;;  angles : (#f(4.68509 1.5737 0.0 0.0 0.0 -3.18028) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X28918148  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  4.263 -99.399 7.492 / 1.694e-10 -5.433e-14 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  399.006 99.982 400.145 / -0.001 0.007 -8.512e-06>) :link-list ((#<bodyset-link #X14617ec0 BODY  416.88 52.452 926.666 / -0.348 -2.632e-08 9.556e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  382.754 -41.544 936.166 / 2.462e-09 -2.800e-08 -3.708e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  382.754 -41.544 814.166 / 2.462e-09 -2.800e-08 -0.082> #<bodyset-link #X148e35b8 RLEG_LINK2  382.754 -42.36 804.2 / -0.046 0.515 -0.094> #<bodyset-link #X14a807b0 RLEG_LINK3  195.051 -69.32 474.896 / -0.047 0.524 -0.094> #<bodyset-link #X11857c90 RLEG_LINK4  4.263 -96.135 147.359 / 1.694e-10 -5.433e-14 -0.082> #<bodyset-link #X115a6908 RLEG_LINK5  4.263 -99.399 107.492 / 1.694e-10 -5.433e-14 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  416.88 52.452 926.666 / -0.348 -2.632e-08 9.556e-09> #<bodyset-link #X113734b0 LLEG_LINK0  451.006 146.449 936.166 / 4.067e-05 -2.800e-08 -1.139e-12> #<bodyset-link #Xfbddc18 LLEG_LINK1  451.006 146.449 814.166 / 4.067e-05 -2.800e-08 -0.147> #<bodyset-link #X10027230 LLEG_LINK2  451.006 144.986 804.274 / 0.232 -0.999 -0.274> #<bodyset-link #X14c9bc38 LLEG_LINK3  774.006 115.698 606.25 / -0.683 1.341 -0.696> #<bodyset-link #X10a385f8 LLEG_LINK4  400.007 105.837 539.71 / -0.001 0.007 -0.147> #<bodyset-link #X14ba89c8 LLEG_LINK5  399.719 99.982 500.142 / -0.001 0.007 -8.512e-06>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  4.263 -99.399 7.492 / 1.694e-10 -5.433e-14 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  399.006 99.982 400.145 / -0.001 0.007 -8.512e-06>) :link-list ((#<bodyset-link #X14617ec0 BODY  416.88 52.452 926.666 / -0.348 -2.632e-08 9.556e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  382.754 -41.544 936.166 / 2.462e-09 -2.800e-08 -3.708e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  382.754 -41.544 814.166 / 2.462e-09 -2.800e-08 -0.082> #<bodyset-link #X148e35b8 RLEG_LINK2  382.754 -42.36 804.2 / -0.046 0.515 -0.094> #<bodyset-link #X14a807b0 RLEG_LINK3  195.051 -69.32 474.896 / -0.047 0.524 -0.094> #<bodyset-link #X11857c90 RLEG_LINK4  4.263 -96.135 147.359 / 1.694e-10 -5.433e-14 -0.082> #<bodyset-link #X115a6908 RLEG_LINK5  4.263 -99.399 107.492 / 1.694e-10 -5.433e-14 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  416.88 52.452 926.666 / -0.348 -2.632e-08 9.556e-09> #<bodyset-link #X113734b0 LLEG_LINK0  451.006 146.449 936.166 / 4.067e-05 -2.800e-08 -1.139e-12> #<bodyset-link #Xfbddc18 LLEG_LINK1  451.006 146.449 814.166 / 4.067e-05 -2.800e-08 -0.147> #<bodyset-link #X10027230 LLEG_LINK2  451.006 144.986 804.274 / 0.232 -0.999 -0.274> #<bodyset-link #X14c9bc38 LLEG_LINK3  774.006 115.698 606.25 / -0.683 1.341 -0.696> #<bodyset-link #X10a385f8 LLEG_LINK4  400.007 105.837 539.71 / -0.001 0.007 -0.147> #<bodyset-link #X14ba89c8 LLEG_LINK5  399.719 99.982 500.142 / -0.001 0.007 -8.512e-06>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(342.793 71.391 1217.97) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  416.88 52.452 926.666 / -0.348 -2.632e-08 9.556e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  4.263 -99.399 7.492 / 1.694e-10 -5.433e-14 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  399.006 99.982 400.145 / -0.001 0.007 -8.512e-06>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  382.754 -41.544 936.166 / 2.462e-09 -2.800e-08 -3.708e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  382.754 -41.544 814.166 / 2.462e-09 -2.800e-08 -0.082> #<bodyset-link #X148e35b8 RLEG_LINK2  382.754 -42.36 804.2 / -0.046 0.515 -0.094> #<bodyset-link #X14a807b0 RLEG_LINK3  195.051 -69.32 474.896 / -0.047 0.524 -0.094> #<bodyset-link #X11857c90 RLEG_LINK4  4.263 -96.135 147.359 / 1.694e-10 -5.433e-14 -0.082> #<bodyset-link #X115a6908 RLEG_LINK5  4.263 -99.399 107.492 / 1.694e-10 -5.433e-14 5.588e-10>) (#<bodyset-link #X113734b0 LLEG_LINK0  451.006 146.449 936.166 / 4.067e-05 -2.800e-08 -1.139e-12> #<bodyset-link #Xfbddc18 LLEG_LINK1  451.006 146.449 814.166 / 4.067e-05 -2.800e-08 -0.147> #<bodyset-link #X10027230 LLEG_LINK2  451.006 144.986 804.274 / 0.232 -0.999 -0.274> #<bodyset-link #X14c9bc38 LLEG_LINK3  774.006 115.698 606.25 / -0.683 1.341 -0.696> #<bodyset-link #X10a385f8 LLEG_LINK4  400.007 105.837 539.71 / -0.001 0.007 -0.147> #<bodyset-link #X14ba89c8 LLEG_LINK5  399.719 99.982 500.142 / -0.001 0.007 -8.512e-06>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(342.793 71.391 1217.97) :target-centroid-pos #f(342.793 71.391 1217.97) :fix-limbs-target-coords (#<coordinates #X28918148  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.939969 0.341261 -2.800114e-08 416.88) (-0.341261 0.939969 -3.184985e-17 52.4524) (2.632019e-08 9.555693e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint613321176) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(4.68509 1.5737 0.0 0.0 0.0 -3.18028) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.285597e-30 0.0) (0.0 1.0 0.0 0.0) (-2.285597e-30 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.708041e-20 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (7.708041e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.285597e-30 0.0) (0.0 1.0 0.0 0.0) (-2.285597e-30 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.708041e-20 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (7.708041e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(342.793 71.391 1217.97) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.285597e-30 0.0) (0.0 1.0 0.0 0.0) (-2.285597e-30 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.708041e-20 5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (7.708041e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(342.793 71.391 1217.97) :target-centroid-pos #f(342.793 71.391 1217.97) :fix-limbs-target-coords (list #<coordinates #X28918148  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-34-62-93-65-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-34-62-93-65-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-8.558067e-05 -1.207413e-05 -0.000156)/(0.000178/1)
;; dif-rot : #f(-2.773095e-17 1.494253e-16 2.927276e-16)/(3.298278e-16/0.017453)
;; dif-pos : #f(7.6559 -1.876334e-05 -0.000252)/(7.6559/1)
;; dif-rot : #f(1.720407e-08 -0.054617 0.005114)/(0.054856/0.017453)
;; cog-dif : #f(0.064834 -0.000546)/(0.064836/5.0)
;;  coords : #<coordinates #X13271e38  414.785 42.376 -91.834 / -0.515 -2.437e-08 1.379e-08>
;;  angles : (#f(6.98701 2.36535 0.0 0.0 0.0 -4.70295) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X28d7e9f8  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  8.558e-05 -100.0 0.0 / 1.694e-10 -2.598e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  392.369 100.039 400.55 / -0.005 0.055 -0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  414.785 42.376 926.666 / -0.515 -2.437e-08 1.379e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  365.532 -44.654 936.166 / 2.339e-09 -2.800e-08 -3.366e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.532 -44.654 814.166 / 2.339e-09 -2.800e-08 -0.077> #<bodyset-link #X148e35b8 RLEG_LINK2  365.532 -45.427 804.196 / -0.042 0.494 -0.088> #<bodyset-link #X14a807b0 RLEG_LINK3  184.75 -71.252 470.953 / -0.043 0.506 -0.088> #<bodyset-link #X11857c90 RLEG_LINK4  8.558e-05 -96.909 139.881 / 1.694e-10 -2.598e-16 -0.077> #<bodyset-link #X115a6908 RLEG_LINK5  8.558e-05 -100.0 100.0 / 1.694e-10 -2.598e-16 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  414.785 42.376 926.666 / -0.515 -2.437e-08 1.379e-08> #<bodyset-link #X113734b0 LLEG_LINK0  464.038 129.405 936.166 / 4.907e-07 -2.800e-08 -1.371e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  464.038 129.405 814.166 / 4.907e-07 -2.800e-08 -0.093> #<bodyset-link #X10027230 LLEG_LINK2  464.038 128.473 804.21 / 0.134 -0.96 -0.163> #<bodyset-link #X14c9bc38 LLEG_LINK3  776.8 108.352 589.326 / -0.618 1.411 -0.624> #<bodyset-link #X10a385f8 LLEG_LINK4  400.021 103.749 540.167 / -0.005 0.055 -0.094> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.828 100.025 500.401 / -0.005 0.055 -0.0>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  8.558e-05 -100.0 0.0 / 1.694e-10 -2.598e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  392.369 100.039 400.55 / -0.005 0.055 -0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  414.785 42.376 926.666 / -0.515 -2.437e-08 1.379e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  365.532 -44.654 936.166 / 2.339e-09 -2.800e-08 -3.366e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.532 -44.654 814.166 / 2.339e-09 -2.800e-08 -0.077> #<bodyset-link #X148e35b8 RLEG_LINK2  365.532 -45.427 804.196 / -0.042 0.494 -0.088> #<bodyset-link #X14a807b0 RLEG_LINK3  184.75 -71.252 470.953 / -0.043 0.506 -0.088> #<bodyset-link #X11857c90 RLEG_LINK4  8.558e-05 -96.909 139.881 / 1.694e-10 -2.598e-16 -0.077> #<bodyset-link #X115a6908 RLEG_LINK5  8.558e-05 -100.0 100.0 / 1.694e-10 -2.598e-16 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  414.785 42.376 926.666 / -0.515 -2.437e-08 1.379e-08> #<bodyset-link #X113734b0 LLEG_LINK0  464.038 129.405 936.166 / 4.907e-07 -2.800e-08 -1.371e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  464.038 129.405 814.166 / 4.907e-07 -2.800e-08 -0.093> #<bodyset-link #X10027230 LLEG_LINK2  464.038 128.473 804.21 / 0.134 -0.96 -0.163> #<bodyset-link #X14c9bc38 LLEG_LINK3  776.8 108.352 589.326 / -0.618 1.411 -0.624> #<bodyset-link #X10a385f8 LLEG_LINK4  400.021 103.749 540.167 / -0.005 0.055 -0.094> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.828 100.025 500.401 / -0.005 0.055 -0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(345.68 72.834 1218.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  414.785 42.376 926.666 / -0.515 -2.437e-08 1.379e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  8.558e-05 -100.0 0.0 / 1.694e-10 -2.598e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  392.369 100.039 400.55 / -0.005 0.055 -0.0>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  365.532 -44.654 936.166 / 2.339e-09 -2.800e-08 -3.366e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.532 -44.654 814.166 / 2.339e-09 -2.800e-08 -0.077> #<bodyset-link #X148e35b8 RLEG_LINK2  365.532 -45.427 804.196 / -0.042 0.494 -0.088> #<bodyset-link #X14a807b0 RLEG_LINK3  184.75 -71.252 470.953 / -0.043 0.506 -0.088> #<bodyset-link #X11857c90 RLEG_LINK4  8.558e-05 -96.909 139.881 / 1.694e-10 -2.598e-16 -0.077> #<bodyset-link #X115a6908 RLEG_LINK5  8.558e-05 -100.0 100.0 / 1.694e-10 -2.598e-16 5.588e-10>) (#<bodyset-link #X113734b0 LLEG_LINK0  464.038 129.405 936.166 / 4.907e-07 -2.800e-08 -1.371e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  464.038 129.405 814.166 / 4.907e-07 -2.800e-08 -0.093> #<bodyset-link #X10027230 LLEG_LINK2  464.038 128.473 804.21 / 0.134 -0.96 -0.163> #<bodyset-link #X14c9bc38 LLEG_LINK3  776.8 108.352 589.326 / -0.618 1.411 -0.624> #<bodyset-link #X10a385f8 LLEG_LINK4  400.021 103.749 540.167 / -0.005 0.055 -0.094> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.828 100.025 500.401 / -0.005 0.055 -0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(345.68 72.834 1218.04) :target-centroid-pos #f(345.68 72.834 1218.04) :fix-limbs-target-coords (#<coordinates #X28d7e9f8  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.870295 0.49253 -2.800114e-08 414.785) (-0.49253 0.870295 -3.184985e-17 42.3756) (2.436926e-08 1.379141e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint622523608) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(6.98701 2.36535 0.0 0.0 0.0 -4.70295) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.645382e-33 0.0) (0.0 1.0 0.0 -1.421085e-14) (5.645382e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.199157e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-3.199157e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.645382e-33 0.0) (0.0 1.0 0.0 -1.421085e-14) (5.645382e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.199157e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-3.199157e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(345.68 72.834 1218.04) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -5.645382e-33 0.0) (0.0 1.0 0.0 -1.421085e-14) (5.645382e-33 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.199157e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (-3.199157e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(345.68 72.834 1218.04) :target-centroid-pos #f(345.68 72.834 1218.04) :fix-limbs-target-coords (list #<coordinates #X28d7e9f8  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-35-08-42-50-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-35-08-42-50-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-0.615993 -0.940832 -0.415291)/(1.19878/1)
;; dif-rot : #f(1.748683e-07 -2.832996e-07 -8.681319e-07)/(9.297799e-07/0.017453)
;; dif-pos : #f(10.3825 0.835174 -0.215272)/(10.4182/1)
;; dif-rot : #f(-3.721887e-05 -0.071507 0.008922)/(0.072061/0.017453)
;; cog-dif : #f(-0.477594 0.247109)/(0.537735/5.0)
;;  coords : #<coordinates #X13271e38  417.848 42.407 -91.834 / -0.534 -2.410e-08 1.426e-08>
;;  angles : (#f(9.23252 3.13761 0.0 0.0 0.0 -6.18832) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X292439f8  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  0.616 -99.059 0.415 / 8.683e-07 2.833e-07 -1.743e-07> #<cascaded-coords #X1235fdf0 :lleg-end-coords  389.666 99.258 401.089 / -0.009 0.072 -0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  366.913 -43.649 936.166 / 8.925e-07 -2.800e-08 -2.496e-14> #<bodyset-link #X1115b7f0 RLEG_LINK1  366.913 -43.649 814.166 / 8.925e-07 -2.800e-08 -0.077> #<bodyset-link #X148e35b8 RLEG_LINK2  366.913 -44.423 804.196 / -0.042 0.498 -0.088> #<bodyset-link #X14a807b0 RLEG_LINK3  184.775 -70.236 471.692 / -0.043 0.504 -0.089> #<bodyset-link #X11857c90 RLEG_LINK4  0.616 -95.963 140.295 / 8.683e-07 2.833e-07 -0.077> #<bodyset-link #X115a6908 RLEG_LINK5  0.616 -99.059 100.415 / 8.683e-07 2.833e-07 -1.743e-07>) (#<bodyset-link #X14617ec0 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #<bodyset-link #X113734b0 LLEG_LINK0  468.782 128.464 936.166 / -0.002 -2.800e-08 6.203e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  468.782 128.464 814.166 / -0.002 -2.800e-08 -0.094> #<bodyset-link #X10027230 LLEG_LINK2  468.78 127.529 804.21 / 0.127 -0.941 -0.159> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.259 106.121 583.343 / -0.689 1.424 -0.693> #<bodyset-link #X10a385f8 LLEG_LINK4  399.689 102.943 540.555 / -0.009 0.072 -0.094> #<bodyset-link #X14ba89c8 LLEG_LINK5  396.811 99.222 500.833 / -0.009 0.072 -0.0>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  0.616 -99.059 0.415 / 8.683e-07 2.833e-07 -1.743e-07> #<cascaded-coords #X1235fdf0 :lleg-end-coords  389.666 99.258 401.089 / -0.009 0.072 -0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  366.913 -43.649 936.166 / 8.925e-07 -2.800e-08 -2.496e-14> #<bodyset-link #X1115b7f0 RLEG_LINK1  366.913 -43.649 814.166 / 8.925e-07 -2.800e-08 -0.077> #<bodyset-link #X148e35b8 RLEG_LINK2  366.913 -44.423 804.196 / -0.042 0.498 -0.088> #<bodyset-link #X14a807b0 RLEG_LINK3  184.775 -70.236 471.692 / -0.043 0.504 -0.089> #<bodyset-link #X11857c90 RLEG_LINK4  0.616 -95.963 140.295 / 8.683e-07 2.833e-07 -0.077> #<bodyset-link #X115a6908 RLEG_LINK5  0.616 -99.059 100.415 / 8.683e-07 2.833e-07 -1.743e-07>) (#<bodyset-link #X14617ec0 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #<bodyset-link #X113734b0 LLEG_LINK0  468.782 128.464 936.166 / -0.002 -2.800e-08 6.203e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  468.782 128.464 814.166 / -0.002 -2.800e-08 -0.094> #<bodyset-link #X10027230 LLEG_LINK2  468.78 127.529 804.21 / 0.127 -0.941 -0.159> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.259 106.121 583.343 / -0.689 1.424 -0.693> #<bodyset-link #X10a385f8 LLEG_LINK4  399.689 102.943 540.555 / -0.009 0.072 -0.094> #<bodyset-link #X14ba89c8 LLEG_LINK5  396.811 99.222 500.833 / -0.009 0.072 -0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(348.495 74.2417 1218.11) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  417.848 42.407 926.666 / -0.534 -2.410e-08 1.426e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  0.616 -99.059 0.415 / 8.683e-07 2.833e-07 -1.743e-07> #<cascaded-coords #X1235fdf0 :lleg-end-coords  389.666 99.258 401.089 / -0.009 0.072 -0.0>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  366.913 -43.649 936.166 / 8.925e-07 -2.800e-08 -2.496e-14> #<bodyset-link #X1115b7f0 RLEG_LINK1  366.913 -43.649 814.166 / 8.925e-07 -2.800e-08 -0.077> #<bodyset-link #X148e35b8 RLEG_LINK2  366.913 -44.423 804.196 / -0.042 0.498 -0.088> #<bodyset-link #X14a807b0 RLEG_LINK3  184.775 -70.236 471.692 / -0.043 0.504 -0.089> #<bodyset-link #X11857c90 RLEG_LINK4  0.616 -95.963 140.295 / 8.683e-07 2.833e-07 -0.077> #<bodyset-link #X115a6908 RLEG_LINK5  0.616 -99.059 100.415 / 8.683e-07 2.833e-07 -1.743e-07>) (#<bodyset-link #X113734b0 LLEG_LINK0  468.782 128.464 936.166 / -0.002 -2.800e-08 6.203e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  468.782 128.464 814.166 / -0.002 -2.800e-08 -0.094> #<bodyset-link #X10027230 LLEG_LINK2  468.78 127.529 804.21 / 0.127 -0.941 -0.159> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.259 106.121 583.343 / -0.689 1.424 -0.693> #<bodyset-link #X10a385f8 LLEG_LINK4  399.689 102.943 540.555 / -0.009 0.072 -0.094> #<bodyset-link #X14ba89c8 LLEG_LINK5  396.811 99.222 500.833 / -0.009 0.072 -0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(348.495 74.2417 1218.11) :target-centroid-pos #f(348.495 74.2417 1218.11) :fix-limbs-target-coords (#<coordinates #X292439f8  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.860562 0.509345 -2.800114e-08 417.848) (-0.509345 0.860562 -3.184985e-17 42.4073) (2.409673e-08 1.426224e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint123694328) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(9.23252 3.13761 0.0 0.0 0.0 -6.18832) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.147690e-23 -1.110223e-16) (0.0 1.0 0.0 0.0) (2.147690e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.175578e-18 -1.136868e-13) (0.0 1.0 0.0 0.0) (2.175578e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.147690e-23 -1.110223e-16) (0.0 1.0 0.0 0.0) (2.147690e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.175578e-18 -1.136868e-13) (0.0 1.0 0.0 0.0) (2.175578e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(348.495 74.2417 1218.11) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.147690e-23 -1.110223e-16) (0.0 1.0 0.0 0.0) (2.147690e-23 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.175578e-18 -1.136868e-13) (0.0 1.0 0.0 0.0) (2.175578e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(348.495 74.2417 1218.11) :target-centroid-pos #f(348.495 74.2417 1218.11) :fix-limbs-target-coords (list #<coordinates #X292439f8  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-35-40-73-59-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-35-40-73-59-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-18.0047 -8.2646 -40.8337)/(45.3857/1)
;; dif-rot : #f(-3.469200e-16 1.193434e-12 9.183305e-14)/(1.196962e-12/0.017453)
;; dif-pos : #f(3.17606 5.45587 -2.99222)/(6.98622/1)
;; dif-rot : #f(-0.000114 -0.007401 -0.004688)/(0.008762/0.017453)
;; cog-dif : #f(-4.19418 1.52787)/(4.4638/5.0)
;;  coords : #<coordinates #X13271e38  430.599 67.221 -91.834 / -0.19 -2.750e-08 5.298e-09>
;;  angles : (#f(11.418 3.88921 0.0 0.0 0.0 -7.63397) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X297b1e90  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  18.005 -91.735 40.834 / 1.693e-10 -1.194e-12 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.886 94.529 403.147 / 0.005 0.007 0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  430.598 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  411.678 -30.972 936.166 / 2.696e-09 -2.800e-08 -4.364e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  411.678 -30.972 814.166 / 2.696e-09 -2.800e-08 -0.09> #<bodyset-link #X148e35b8 RLEG_LINK2  411.678 -31.871 804.207 / -0.031 0.327 -0.095> #<bodyset-link #X14a807b0 RLEG_LINK3  288.956 -64.194 446.025 / -0.091 0.79 -0.128> #<bodyset-link #X11857c90 RLEG_LINK4  18.005 -88.14 180.672 / 1.693e-10 -1.194e-12 -0.09> #<bodyset-link #X115a6908 RLEG_LINK5  18.005 -91.735 140.834 / 1.693e-10 -1.194e-12 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  430.598 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #<bodyset-link #X113734b0 LLEG_LINK0  449.519 165.415 936.166 / 0.006 -2.800e-08 -1.783e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  449.519 165.415 814.166 / 0.006 -2.800e-08 -0.223> #<bodyset-link #X10027230 LLEG_LINK2  449.533 163.203 804.414 / 0.346 -0.973 -0.404> #<bodyset-link #X14c9bc38 LLEG_LINK3  771.796 120.604 607.61 / -0.883 1.287 -0.909> #<bodyset-link #X10a385f8 LLEG_LINK4  397.873 103.371 542.152 / 0.005 0.007 -0.223> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.626 94.52 503.144 / 0.005 0.007 0.0>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  18.005 -91.735 40.834 / 1.693e-10 -1.194e-12 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.886 94.529 403.147 / 0.005 0.007 0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  430.598 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  411.678 -30.972 936.166 / 2.696e-09 -2.800e-08 -4.364e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  411.678 -30.972 814.166 / 2.696e-09 -2.800e-08 -0.09> #<bodyset-link #X148e35b8 RLEG_LINK2  411.678 -31.871 804.207 / -0.031 0.327 -0.095> #<bodyset-link #X14a807b0 RLEG_LINK3  288.956 -64.194 446.025 / -0.091 0.79 -0.128> #<bodyset-link #X11857c90 RLEG_LINK4  18.005 -88.14 180.672 / 1.693e-10 -1.194e-12 -0.09> #<bodyset-link #X115a6908 RLEG_LINK5  18.005 -91.735 140.834 / 1.693e-10 -1.194e-12 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  430.598 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #<bodyset-link #X113734b0 LLEG_LINK0  449.519 165.415 936.166 / 0.006 -2.800e-08 -1.783e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  449.519 165.415 814.166 / 0.006 -2.800e-08 -0.223> #<bodyset-link #X10027230 LLEG_LINK2  449.533 163.203 804.414 / 0.346 -0.973 -0.404> #<bodyset-link #X14c9bc38 LLEG_LINK3  771.796 120.604 607.61 / -0.883 1.287 -0.909> #<bodyset-link #X10a385f8 LLEG_LINK4  397.873 103.371 542.152 / 0.005 0.007 -0.223> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.626 94.52 503.144 / 0.005 0.007 0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(351.235 75.6117 1218.19) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  430.598 67.221 926.666 / -0.19 -2.750e-08 5.298e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  18.005 -91.735 40.834 / 1.693e-10 -1.194e-12 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.886 94.529 403.147 / 0.005 0.007 0.0>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  411.678 -30.972 936.166 / 2.696e-09 -2.800e-08 -4.364e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  411.678 -30.972 814.166 / 2.696e-09 -2.800e-08 -0.09> #<bodyset-link #X148e35b8 RLEG_LINK2  411.678 -31.871 804.207 / -0.031 0.327 -0.095> #<bodyset-link #X14a807b0 RLEG_LINK3  288.956 -64.194 446.025 / -0.091 0.79 -0.128> #<bodyset-link #X11857c90 RLEG_LINK4  18.005 -88.14 180.672 / 1.693e-10 -1.194e-12 -0.09> #<bodyset-link #X115a6908 RLEG_LINK5  18.005 -91.735 140.834 / 1.693e-10 -1.194e-12 5.588e-10>) (#<bodyset-link #X113734b0 LLEG_LINK0  449.519 165.415 936.166 / 0.006 -2.800e-08 -1.783e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  449.519 165.415 814.166 / 0.006 -2.800e-08 -0.223> #<bodyset-link #X10027230 LLEG_LINK2  449.533 163.203 804.414 / 0.346 -0.973 -0.404> #<bodyset-link #X14c9bc38 LLEG_LINK3  771.796 120.604 607.61 / -0.883 1.287 -0.909> #<bodyset-link #X10a385f8 LLEG_LINK4  397.873 103.371 542.152 / 0.005 0.007 -0.223> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.626 94.52 503.144 / 0.005 0.007 0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(351.235 75.6117 1218.19) :target-centroid-pos #f(351.235 75.6117 1218.19) :fix-limbs-target-coords (#<coordinates #X297b1e90  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.981938 0.189204 -2.800114e-08 430.599) (-0.189204 0.981938 -3.184985e-17 67.2214) (2.749538e-08 5.297922e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint259169264) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(11.418 3.88921 0.0 0.0 0.0 -7.63397) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.614466e-29 0.0) (0.0 1.0 0.0 0.0) (-9.614466e-29 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.356368e-19 0.0) (0.0 1.0 0.0 0.0) (-3.356368e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.614466e-29 0.0) (0.0 1.0 0.0 0.0) (-9.614466e-29 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.356368e-19 0.0) (0.0 1.0 0.0 0.0) (-3.356368e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(351.235 75.6117 1218.19) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.614466e-29 0.0) (0.0 1.0 0.0 0.0) (-9.614466e-29 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.356368e-19 0.0) (0.0 1.0 0.0 0.0) (-3.356368e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(351.235 75.6117 1218.19) :target-centroid-pos #f(351.235 75.6117 1218.19) :fix-limbs-target-coords (list #<coordinates #X297b1e90  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-35-73-15-52-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-35-73-15-52-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-0.000247 -3.707930e-05 -0.000449)/(0.000514/1)
;; dif-rot : #f(-1.803866e-16 9.469713e-18 -6.555392e-17)/(1.921622e-16/0.017453)
;; dif-pos : #f(13.5284 -0.002573 -0.001157)/(13.5284/1)
;; dif-rot : #f(-8.964586e-06 -0.096546 0.007622)/(0.096847/0.017453)
;; cog-dif : #f(0.114048 -0.001215)/(0.114054/5.0)
;;  coords : #<coordinates #X13271e38  420.873 41.844 -91.834 / -0.593 -2.323e-08 1.564e-08>
;;  angles : (#f(13.5395 4.61883 0.0 0.0 0.0 -9.03733) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X29c82f80  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  0.0 -100.0 0.0 / 1.694e-10 -1.198e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  386.549 100.106 401.437 / -0.008 0.097 -0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  420.873 41.844 926.666 / -0.593 -2.323e-08 1.564e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  365.018 -41.103 936.166 / 2.479e-09 -2.800e-08 -3.755e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.018 -41.103 814.166 / 2.479e-09 -2.800e-08 -0.082> #<bodyset-link #X148e35b8 RLEG_LINK2  365.018 -41.925 804.2 / -0.044 0.493 -0.093> #<bodyset-link #X14a807b0 RLEG_LINK3  184.434 -69.405 470.982 / -0.046 0.505 -0.094> #<bodyset-link #X11857c90 RLEG_LINK4  0.0 -96.712 139.865 / 1.694e-10 -1.198e-16 -0.082> #<bodyset-link #X115a6908 RLEG_LINK5  0.0 -100.0 100.0 / 1.694e-10 -1.198e-16 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  420.873 41.844 926.666 / -0.593 -2.323e-08 1.564e-08> #<bodyset-link #X113734b0 LLEG_LINK0  476.728 124.791 936.166 / -9.376e-07 -2.800e-08 2.629e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  476.728 124.791 814.166 / -9.376e-07 -2.800e-08 -0.079> #<bodyset-link #X10027230 LLEG_LINK2  476.728 124.004 804.197 / 0.103 -0.914 -0.129> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.575 105.838 574.071 / -0.727 1.453 -0.73> #<bodyset-link #X10a385f8 LLEG_LINK4  400.056 103.201 540.66 / -0.008 0.097 -0.079> #<bodyset-link #X14ba89c8 LLEG_LINK5  396.188 100.068 500.971 / -0.008 0.097 -0.0>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  0.0 -100.0 0.0 / 1.694e-10 -1.198e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  386.549 100.106 401.437 / -0.008 0.097 -0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  420.873 41.844 926.666 / -0.593 -2.323e-08 1.564e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  365.018 -41.103 936.166 / 2.479e-09 -2.800e-08 -3.755e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.018 -41.103 814.166 / 2.479e-09 -2.800e-08 -0.082> #<bodyset-link #X148e35b8 RLEG_LINK2  365.018 -41.925 804.2 / -0.044 0.493 -0.093> #<bodyset-link #X14a807b0 RLEG_LINK3  184.434 -69.405 470.982 / -0.046 0.505 -0.094> #<bodyset-link #X11857c90 RLEG_LINK4  0.0 -96.712 139.865 / 1.694e-10 -1.198e-16 -0.082> #<bodyset-link #X115a6908 RLEG_LINK5  0.0 -100.0 100.0 / 1.694e-10 -1.198e-16 5.588e-10>) (#<bodyset-link #X14617ec0 BODY  420.873 41.844 926.666 / -0.593 -2.323e-08 1.564e-08> #<bodyset-link #X113734b0 LLEG_LINK0  476.728 124.791 936.166 / -9.376e-07 -2.800e-08 2.629e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  476.728 124.791 814.166 / -9.376e-07 -2.800e-08 -0.079> #<bodyset-link #X10027230 LLEG_LINK2  476.728 124.004 804.197 / 0.103 -0.914 -0.129> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.575 105.838 574.071 / -0.727 1.453 -0.73> #<bodyset-link #X10a385f8 LLEG_LINK4  400.056 103.201 540.66 / -0.008 0.097 -0.079> #<bodyset-link #X14ba89c8 LLEG_LINK5  396.188 100.068 500.971 / -0.008 0.097 -0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(353.895 76.9416 1218.27) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  420.873 41.844 926.666 / -0.593 -2.323e-08 1.564e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  0.0 -100.0 0.0 / 1.694e-10 -1.198e-16 5.588e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  386.549 100.106 401.437 / -0.008 0.097 -0.0>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  365.018 -41.103 936.166 / 2.479e-09 -2.800e-08 -3.755e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  365.018 -41.103 814.166 / 2.479e-09 -2.800e-08 -0.082> #<bodyset-link #X148e35b8 RLEG_LINK2  365.018 -41.925 804.2 / -0.044 0.493 -0.093> #<bodyset-link #X14a807b0 RLEG_LINK3  184.434 -69.405 470.982 / -0.046 0.505 -0.094> #<bodyset-link #X11857c90 RLEG_LINK4  0.0 -96.712 139.865 / 1.694e-10 -1.198e-16 -0.082> #<bodyset-link #X115a6908 RLEG_LINK5  0.0 -100.0 100.0 / 1.694e-10 -1.198e-16 5.588e-10>) (#<bodyset-link #X113734b0 LLEG_LINK0  476.728 124.791 936.166 / -9.376e-07 -2.800e-08 2.629e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  476.728 124.791 814.166 / -9.376e-07 -2.800e-08 -0.079> #<bodyset-link #X10027230 LLEG_LINK2  476.728 124.004 804.197 / 0.103 -0.914 -0.129> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.575 105.838 574.071 / -0.727 1.453 -0.73> #<bodyset-link #X10a385f8 LLEG_LINK4  400.056 103.201 540.66 / -0.008 0.097 -0.079> #<bodyset-link #X14ba89c8 LLEG_LINK5  396.188 100.068 500.971 / -0.008 0.097 -0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(353.895 76.9416 1218.27) :target-centroid-pos #f(353.895 76.9416 1218.27) :fix-limbs-target-coords (#<coordinates #X29c82f80  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.82947 0.558552 -2.800114e-08 420.873) (-0.558552 0.82947 -3.184985e-17 41.8439) (2.322610e-08 1.564008e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint432601352) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(13.5395 4.61883 0.0 0.0 0.0 -9.03733) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.210928e-32 0.0) (0.0 1.0 0.0 1.421085e-14) (1.210928e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.195080e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-6.195080e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.210928e-32 0.0) (0.0 1.0 0.0 1.421085e-14) (1.210928e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.195080e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-6.195080e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(353.895 76.9416 1218.27) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.210928e-32 0.0) (0.0 1.0 0.0 1.421085e-14) (1.210928e-32 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 6.195080e-18 -5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-6.195080e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(353.895 76.9416 1218.27) :target-centroid-pos #f(353.895 76.9416 1218.27) :fix-limbs-target-coords (list #<coordinates #X29c82f80  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-36-06-86-91-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-36-06-86-91-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-2.96099 -0.757318 -4.05066)/(5.07433/1)
;; dif-rot : #f(1.207324e-09 -5.195955e-09 -2.091905e-08)/(2.158848e-08/0.017453)
;; dif-pos : #f(13.9603 0.56947 -0.054797)/(13.972/1)
;; dif-rot : #f(0.000134 -0.098056 0.013574)/(0.098991/0.017453)
;; cog-dif : #f(-0.375007 0.167479)/(0.410706/5.0)
;;  coords : #<coordinates #X13271e38  426.41 46.683 -91.834 / -0.539 -2.403e-08 1.437e-08>
;;  angles : (#f(15.593 5.32505 0.0 0.0 0.0 -10.3957) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2a13e950  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  2.961 -99.243 4.051 / 2.109e-08 5.196e-09 -6.485e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  386.119 99.62 401.553 / -0.014 0.098 -0.001>) :link-list ((#<bodyset-link #X14617ec0 BODY  426.41 46.683 926.666 / -0.539 -2.403e-08 1.437e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  375.098 -39.149 936.166 / 2.390e-08 -2.800e-08 -6.373e-16> #<bodyset-link #X1115b7f0 RLEG_LINK1  375.098 -39.149 814.166 / 2.390e-08 -2.800e-08 -0.084> #<bodyset-link #X148e35b8 RLEG_LINK2  375.098 -39.992 804.202 / -0.047 0.507 -0.097> #<bodyset-link #X14a807b0 RLEG_LINK3  189.863 -67.97 473.589 / -0.048 0.512 -0.097> #<bodyset-link #X11857c90 RLEG_LINK4  2.961 -95.87 143.908 / 2.109e-08 5.196e-09 -0.084> #<bodyset-link #X115a6908 RLEG_LINK5  2.961 -99.243 104.051 / 2.109e-08 5.196e-09 -6.485e-10>) (#<bodyset-link #X14617ec0 BODY  426.41 46.683 926.666 / -0.539 -2.403e-08 1.437e-08> #<bodyset-link #X113734b0 LLEG_LINK0  477.722 132.515 936.166 / -0.003 -2.800e-08 8.933e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  477.722 132.515 814.166 / -0.003 -2.800e-08 -0.106> #<bodyset-link #X10027230 LLEG_LINK2  477.719 131.46 804.222 / 0.133 -0.906 -0.172> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.447 106.01 573.322 / -0.886 1.434 -0.887> #<bodyset-link #X10a385f8 LLEG_LINK4  399.86 103.753 540.657 / -0.014 0.098 -0.106> #<bodyset-link #X14ba89c8 LLEG_LINK5  395.909 99.567 501.073 / -0.014 0.098 -0.001>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  2.961 -99.243 4.051 / 2.109e-08 5.196e-09 -6.485e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  386.119 99.62 401.553 / -0.014 0.098 -0.001>) :link-list ((#<bodyset-link #X14617ec0 BODY  426.41 46.683 926.666 / -0.539 -2.403e-08 1.437e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  375.098 -39.149 936.166 / 2.390e-08 -2.800e-08 -6.373e-16> #<bodyset-link #X1115b7f0 RLEG_LINK1  375.098 -39.149 814.166 / 2.390e-08 -2.800e-08 -0.084> #<bodyset-link #X148e35b8 RLEG_LINK2  375.098 -39.992 804.202 / -0.047 0.507 -0.097> #<bodyset-link #X14a807b0 RLEG_LINK3  189.863 -67.97 473.589 / -0.048 0.512 -0.097> #<bodyset-link #X11857c90 RLEG_LINK4  2.961 -95.87 143.908 / 2.109e-08 5.196e-09 -0.084> #<bodyset-link #X115a6908 RLEG_LINK5  2.961 -99.243 104.051 / 2.109e-08 5.196e-09 -6.485e-10>) (#<bodyset-link #X14617ec0 BODY  426.41 46.683 926.666 / -0.539 -2.403e-08 1.437e-08> #<bodyset-link #X113734b0 LLEG_LINK0  477.722 132.515 936.166 / -0.003 -2.800e-08 8.933e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  477.722 132.515 814.166 / -0.003 -2.800e-08 -0.106> #<bodyset-link #X10027230 LLEG_LINK2  477.719 131.46 804.222 / 0.133 -0.906 -0.172> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.447 106.01 573.322 / -0.886 1.434 -0.887> #<bodyset-link #X10a385f8 LLEG_LINK4  399.86 103.753 540.657 / -0.014 0.098 -0.106> #<bodyset-link #X14ba89c8 LLEG_LINK5  395.909 99.567 501.073 / -0.014 0.098 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(356.47 78.2289 1218.35) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  426.41 46.683 926.666 / -0.539 -2.403e-08 1.437e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  2.961 -99.243 4.051 / 2.109e-08 5.196e-09 -6.485e-10> #<cascaded-coords #X1235fdf0 :lleg-end-coords  386.119 99.62 401.553 / -0.014 0.098 -0.001>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  375.098 -39.149 936.166 / 2.390e-08 -2.800e-08 -6.373e-16> #<bodyset-link #X1115b7f0 RLEG_LINK1  375.098 -39.149 814.166 / 2.390e-08 -2.800e-08 -0.084> #<bodyset-link #X148e35b8 RLEG_LINK2  375.098 -39.992 804.202 / -0.047 0.507 -0.097> #<bodyset-link #X14a807b0 RLEG_LINK3  189.863 -67.97 473.589 / -0.048 0.512 -0.097> #<bodyset-link #X11857c90 RLEG_LINK4  2.961 -95.87 143.908 / 2.109e-08 5.196e-09 -0.084> #<bodyset-link #X115a6908 RLEG_LINK5  2.961 -99.243 104.051 / 2.109e-08 5.196e-09 -6.485e-10>) (#<bodyset-link #X113734b0 LLEG_LINK0  477.722 132.515 936.166 / -0.003 -2.800e-08 8.933e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  477.722 132.515 814.166 / -0.003 -2.800e-08 -0.106> #<bodyset-link #X10027230 LLEG_LINK2  477.719 131.46 804.222 / 0.133 -0.906 -0.172> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.447 106.01 573.322 / -0.886 1.434 -0.887> #<bodyset-link #X10a385f8 LLEG_LINK4  399.86 103.753 540.657 / -0.014 0.098 -0.106> #<bodyset-link #X14ba89c8 LLEG_LINK5  395.909 99.567 501.073 / -0.014 0.098 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(356.47 78.2289 1218.35) :target-centroid-pos #f(356.47 78.2289 1218.35) :fix-limbs-target-coords (#<coordinates #X2a13e950  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.858318 0.513119 -2.800114e-08 426.41) (-0.513119 0.858318 -3.184985e-17 46.6831) (2.403387e-08 1.436791e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint644617016) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(15.593 5.32505 0.0 0.0 0.0 -10.3957) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.079895e-25 0.0) (0.0 1.0 0.0 1.421085e-14) (3.079895e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.746822e-18 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-2.746822e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.079895e-25 0.0) (0.0 1.0 0.0 1.421085e-14) (3.079895e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.746822e-18 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-2.746822e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(356.47 78.2289 1218.35) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.079895e-25 0.0) (0.0 1.0 0.0 1.421085e-14) (3.079895e-25 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.746822e-18 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-2.746822e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(356.47 78.2289 1218.35) :target-centroid-pos #f(356.47 78.2289 1218.35) :fix-limbs-target-coords (list #<coordinates #X2a13e950  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-36-39-07-26-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-36-39-07-26-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(45.4663 -3.10512 -42.095)/(62.0388/1)
;; dif-rot : #f(4.469203e-11 -0.120837 0.012414)/(0.121473/0.017453)
;; dif-pos : #f(5.45166 0.726206 -0.192046)/(5.50316/1)
;; dif-rot : #f(3.375418e-06 -0.035253 0.007549)/(0.036052/0.017453)
;; cog-dif : #f(0.818009 0.204102)/(0.843087/5.0)
;;  coords : #<coordinates #X13271e38  437.986 69.326 -91.834 / -0.238 -2.721e-08 6.607e-09>
;;  angles : (#f(17.5741 6.00635 0.0 0.0 0.0 -11.7061) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2a687690  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -40.019 -96.364 47.266 / -0.012 0.121 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  394.567 99.315 400.516 / -0.008 0.035 -0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  437.986 69.326 926.666 / -0.238 -2.721e-08 6.607e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  414.392 -27.851 936.166 / 3.051e-09 -2.800e-08 -5.357e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  414.392 -27.851 814.166 / 3.051e-09 -2.800e-08 -0.102> #<bodyset-link #X148e35b8 RLEG_LINK2  414.392 -28.873 804.219 / -0.072 0.61 -0.125> #<bodyset-link #X14a807b0 RLEG_LINK3  195.637 -60.627 495.127 / -0.072 0.61 -0.125> #<bodyset-link #X11857c90 RLEG_LINK4  -23.118 -92.381 186.034 / -0.012 0.121 -0.103> #<bodyset-link #X115a6908 RLEG_LINK5  -27.965 -96.439 146.537 / -0.012 0.121 -0.001>) (#<bodyset-link #X14617ec0 BODY  437.986 69.326 926.666 / -0.238 -2.721e-08 6.607e-09> #<bodyset-link #X113734b0 LLEG_LINK0  461.581 166.502 936.166 / 2.479e-06 -2.800e-08 -6.939e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  461.581 166.502 814.166 / 2.479e-06 -2.800e-08 -0.211> #<bodyset-link #X10027230 LLEG_LINK2  461.581 164.408 804.388 / 0.297 -0.94 -0.363> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.317 119.5 594.739 / -0.949 1.313 -0.964> #<bodyset-link #X10a385f8 LLEG_LINK4  399.533 107.675 539.541 / -0.008 0.035 -0.211> #<bodyset-link #X14ba89c8 LLEG_LINK5  398.091 99.302 500.454 / -0.008 0.035 -0.0>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -40.019 -96.364 47.266 / -0.012 0.121 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  394.567 99.315 400.516 / -0.008 0.035 -0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  437.986 69.326 926.666 / -0.238 -2.721e-08 6.607e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  414.392 -27.851 936.166 / 3.051e-09 -2.800e-08 -5.357e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  414.392 -27.851 814.166 / 3.051e-09 -2.800e-08 -0.102> #<bodyset-link #X148e35b8 RLEG_LINK2  414.392 -28.873 804.219 / -0.072 0.61 -0.125> #<bodyset-link #X14a807b0 RLEG_LINK3  195.637 -60.627 495.127 / -0.072 0.61 -0.125> #<bodyset-link #X11857c90 RLEG_LINK4  -23.118 -92.381 186.034 / -0.012 0.121 -0.103> #<bodyset-link #X115a6908 RLEG_LINK5  -27.965 -96.439 146.537 / -0.012 0.121 -0.001>) (#<bodyset-link #X14617ec0 BODY  437.986 69.326 926.666 / -0.238 -2.721e-08 6.607e-09> #<bodyset-link #X113734b0 LLEG_LINK0  461.581 166.502 936.166 / 2.479e-06 -2.800e-08 -6.939e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  461.581 166.502 814.166 / 2.479e-06 -2.800e-08 -0.211> #<bodyset-link #X10027230 LLEG_LINK2  461.581 164.408 804.388 / 0.297 -0.94 -0.363> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.317 119.5 594.739 / -0.949 1.313 -0.964> #<bodyset-link #X10a385f8 LLEG_LINK4  399.533 107.675 539.541 / -0.008 0.035 -0.211> #<bodyset-link #X14ba89c8 LLEG_LINK5  398.091 99.302 500.454 / -0.008 0.035 -0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(358.953 79.4708 1218.43) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  437.986 69.326 926.666 / -0.238 -2.721e-08 6.607e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -40.019 -96.364 47.266 / -0.012 0.121 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  394.567 99.315 400.516 / -0.008 0.035 -0.0>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  414.392 -27.851 936.166 / 3.051e-09 -2.800e-08 -5.357e-17> #<bodyset-link #X1115b7f0 RLEG_LINK1  414.392 -27.851 814.166 / 3.051e-09 -2.800e-08 -0.102> #<bodyset-link #X148e35b8 RLEG_LINK2  414.392 -28.873 804.219 / -0.072 0.61 -0.125> #<bodyset-link #X14a807b0 RLEG_LINK3  195.637 -60.627 495.127 / -0.072 0.61 -0.125> #<bodyset-link #X11857c90 RLEG_LINK4  -23.118 -92.381 186.034 / -0.012 0.121 -0.103> #<bodyset-link #X115a6908 RLEG_LINK5  -27.965 -96.439 146.537 / -0.012 0.121 -0.001>) (#<bodyset-link #X113734b0 LLEG_LINK0  461.581 166.502 936.166 / 2.479e-06 -2.800e-08 -6.939e-14> #<bodyset-link #Xfbddc18 LLEG_LINK1  461.581 166.502 814.166 / 2.479e-06 -2.800e-08 -0.211> #<bodyset-link #X10027230 LLEG_LINK2  461.581 164.408 804.388 / 0.297 -0.94 -0.363> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.317 119.5 594.739 / -0.949 1.313 -0.964> #<bodyset-link #X10a385f8 LLEG_LINK4  399.533 107.675 539.541 / -0.008 0.035 -0.211> #<bodyset-link #X14ba89c8 LLEG_LINK5  398.091 99.302 500.454 / -0.008 0.035 -0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(358.953 79.4708 1218.43) :target-centroid-pos #f(358.953 79.4708 1218.43) :fix-limbs-target-coords (#<coordinates #X2a687690  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.971767 0.235944 -2.800114e-08 437.986) (-0.235944 0.971767 -3.184985e-17 69.3257) (2.721058e-08 6.606691e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint652506776) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(17.5741 6.00635 0.0 0.0 0.0 -11.7061) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.898540e-18 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (6.898540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.313902e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (1.313902e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.898540e-18 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (6.898540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.313902e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (1.313902e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(358.953 79.4708 1218.43) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.898540e-18 7.105427e-15) (0.0 1.0 0.0 1.421085e-14) (6.898540e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.313902e-18 0.0) (0.0 1.0 0.0 1.421085e-14) (1.313902e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(358.953 79.4708 1218.43) :target-centroid-pos #f(358.953 79.4708 1218.43) :fix-limbs-target-coords (list #<coordinates #X2a687690  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-36-71-23-57-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-36-71-23-57-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(144.636 -19.8711 -93.7924)/(173.526/1)
;; dif-rot : #f(-0.005663 -0.173345 0.024544)/(0.175165/0.017453)
;; dif-pos : #f(8.29387 -0.159847 -0.081453)/(8.29581/1)
;; dif-rot : #f(-0.000773 -0.059159 0.012096)/(0.060388/0.017453)
;; cog-dif : #f(0.004596 -0.028799)/(0.029163/5.0)
;;  coords : #<coordinates #X13271e38  445.803 69.722 -91.834 / -0.242 -2.719e-08 6.701e-09>
;;  angles : (#f(19.478 6.66113 0.0 0.0 0.0 -12.9655) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2ac00998  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -125.761 -77.402 117.409 / -0.024 0.173 0.004> #<cascaded-coords #X1235fdf0 :lleg-end-coords  391.742 100.26 400.704 / -0.012 0.059 0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  445.803 69.722 926.666 / -0.242 -2.719e-08 6.701e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  421.871 -27.372 936.166 / -0.008 -2.800e-08 2.283e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  421.871 -27.372 814.166 / -0.008 -2.800e-08 -0.092> #<bodyset-link #X148e35b8 RLEG_LINK2  421.864 -28.289 804.209 / -0.095 0.755 -0.126> #<bodyset-link #X14a807b0 RLEG_LINK3  160.151 -51.454 529.673 / -0.095 0.755 -0.126> #<bodyset-link #X11857c90 RLEG_LINK4  -101.562 -74.619 255.138 / -0.024 0.173 -0.093> #<bodyset-link #X115a6908 RLEG_LINK5  -108.522 -78.177 215.909 / -0.024 0.173 0.004>) (#<bodyset-link #X14617ec0 BODY  445.803 69.722 926.666 / -0.242 -2.719e-08 6.701e-09> #<bodyset-link #X113734b0 LLEG_LINK0  469.735 166.816 936.166 / 0.0 -2.800e-08 -1.393e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  469.735 166.816 814.166 / 0.0 -2.800e-08 -0.209> #<bodyset-link #X10027230 LLEG_LINK2  469.736 164.738 804.385 / 0.279 -0.913 -0.347> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.113 118.453 585.805 / -1.028 1.328 -1.041> #<bodyset-link #X10a385f8 LLEG_LINK4  400.067 108.446 539.584 / -0.012 0.059 -0.21> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.654 100.147 500.529 / -0.012 0.059 0.0>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -125.761 -77.402 117.409 / -0.024 0.173 0.004> #<cascaded-coords #X1235fdf0 :lleg-end-coords  391.742 100.26 400.704 / -0.012 0.059 0.0>) :link-list ((#<bodyset-link #X14617ec0 BODY  445.803 69.722 926.666 / -0.242 -2.719e-08 6.701e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  421.871 -27.372 936.166 / -0.008 -2.800e-08 2.283e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  421.871 -27.372 814.166 / -0.008 -2.800e-08 -0.092> #<bodyset-link #X148e35b8 RLEG_LINK2  421.864 -28.289 804.209 / -0.095 0.755 -0.126> #<bodyset-link #X14a807b0 RLEG_LINK3  160.151 -51.454 529.673 / -0.095 0.755 -0.126> #<bodyset-link #X11857c90 RLEG_LINK4  -101.562 -74.619 255.138 / -0.024 0.173 -0.093> #<bodyset-link #X115a6908 RLEG_LINK5  -108.522 -78.177 215.909 / -0.024 0.173 0.004>) (#<bodyset-link #X14617ec0 BODY  445.803 69.722 926.666 / -0.242 -2.719e-08 6.701e-09> #<bodyset-link #X113734b0 LLEG_LINK0  469.735 166.816 936.166 / 0.0 -2.800e-08 -1.393e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  469.735 166.816 814.166 / 0.0 -2.800e-08 -0.209> #<bodyset-link #X10027230 LLEG_LINK2  469.736 164.738 804.385 / 0.279 -0.913 -0.347> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.113 118.453 585.805 / -1.028 1.328 -1.041> #<bodyset-link #X10a385f8 LLEG_LINK4  400.067 108.446 539.584 / -0.012 0.059 -0.21> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.654 100.147 500.529 / -0.012 0.059 0.0>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(361.341 80.6643 1218.52) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  445.803 69.722 926.666 / -0.242 -2.719e-08 6.701e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -125.761 -77.402 117.409 / -0.024 0.173 0.004> #<cascaded-coords #X1235fdf0 :lleg-end-coords  391.742 100.26 400.704 / -0.012 0.059 0.0>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  421.871 -27.372 936.166 / -0.008 -2.800e-08 2.283e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  421.871 -27.372 814.166 / -0.008 -2.800e-08 -0.092> #<bodyset-link #X148e35b8 RLEG_LINK2  421.864 -28.289 804.209 / -0.095 0.755 -0.126> #<bodyset-link #X14a807b0 RLEG_LINK3  160.151 -51.454 529.673 / -0.095 0.755 -0.126> #<bodyset-link #X11857c90 RLEG_LINK4  -101.562 -74.619 255.138 / -0.024 0.173 -0.093> #<bodyset-link #X115a6908 RLEG_LINK5  -108.522 -78.177 215.909 / -0.024 0.173 0.004>) (#<bodyset-link #X113734b0 LLEG_LINK0  469.735 166.816 936.166 / 0.0 -2.800e-08 -1.393e-11> #<bodyset-link #Xfbddc18 LLEG_LINK1  469.735 166.816 814.166 / 0.0 -2.800e-08 -0.209> #<bodyset-link #X10027230 LLEG_LINK2  469.736 164.738 804.385 / 0.279 -0.913 -0.347> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.113 118.453 585.805 / -1.028 1.328 -1.041> #<bodyset-link #X10a385f8 LLEG_LINK4  400.067 108.446 539.584 / -0.012 0.059 -0.21> #<bodyset-link #X14ba89c8 LLEG_LINK5  397.654 100.147 500.529 / -0.012 0.059 0.0>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(361.341 80.6643 1218.52) :target-centroid-pos #f(361.341 80.6643 1218.52) :fix-limbs-target-coords (#<coordinates #X2ac00998  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.970941 0.23932 -2.800114e-08 445.803) (-0.23932 0.970941 -3.184985e-17 69.7223) (2.718745e-08 6.701231e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint636669976) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(19.478 6.66113 0.0 0.0 0.0 -12.9655) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.559423e-18 0.0) (0.0 1.0 0.0 0.0) (6.559423e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.284794e-18 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-3.284794e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.559423e-18 0.0) (0.0 1.0 0.0 0.0) (6.559423e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.284794e-18 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-3.284794e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(361.341 80.6643 1218.52) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.559423e-18 0.0) (0.0 1.0 0.0 0.0) (6.559423e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 3.284794e-18 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-3.284794e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(361.341 80.6643 1218.52) :target-centroid-pos #f(361.341 80.6643 1218.52) :fix-limbs-target-coords (list #<coordinates #X2ac00998  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-37-04-20-84-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-37-04-20-84-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-67.8071 -1.64101 -162.814)/(176.377/1)
;; dif-rot : #f(0.001056 4.120607e-05 -0.016374)/(0.016408/0.017453)
;; dif-pos : #f(11.2928 7.90836 -4.62636)/(14.5421/1)
;; dif-rot : #f(0.002152 -0.043462 -0.021092)/(0.048358/0.017453)
;; cog-dif : #f(-4.07657 2.8476)/(4.97265/5.0)
;;  coords : #<coordinates #X13271e38  438.035 73.845 -91.834 / -0.181 -2.754e-08 5.046e-09>
;;  angles : (#f(21.2996 7.28762 0.0 0.0 0.0 -14.1705) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2b314808  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  67.763 -97.077 162.815 / 0.016 -3.256e-05 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  389.102 91.868 405.258 / 0.021 0.043 -0.002>) :link-list ((#<bodyset-link #X14617ec0 BODY  438.035 73.845 926.666 / -0.181 -2.754e-08 5.046e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  420.016 -24.518 936.166 / 0.016 -2.800e-08 -4.584e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  420.016 -24.518 814.166 / 0.016 -2.800e-08 -0.12> #<bodyset-link #X148e35b8 RLEG_LINK2  420.036 -25.719 804.239 / 0.018 -0.014 -0.12> #<bodyset-link #X14a807b0 RLEG_LINK3  426.094 -71.244 427.024 / -0.314 1.214 -0.351> #<bodyset-link #X11857c90 RLEG_LINK4  67.678 -92.17 302.525 / 0.016 -3.256e-05 -0.12> #<bodyset-link #X115a6908 RLEG_LINK5  67.758 -96.972 262.815 / 0.016 -3.256e-05 -0.001>) (#<bodyset-link #X14617ec0 BODY  438.035 73.845 926.666 / -0.181 -2.754e-08 5.046e-09> #<bodyset-link #X113734b0 LLEG_LINK0  456.054 172.208 936.166 / 0.032 -2.799e-08 -8.972e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  456.054 172.208 814.166 / 0.032 -2.799e-08 -0.247> #<bodyset-link #X10027230 LLEG_LINK2  456.133 169.761 804.471 / 0.373 -0.925 -0.419> #<bodyset-link #X14c9bc38 LLEG_LINK3  770.579 127.026 595.432 / -1.016 1.287 -1.065> #<bodyset-link #X10a385f8 LLEG_LINK4  394.923 101.965 543.907 / 0.021 0.043 -0.248> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.444 92.129 505.163 / 0.021 0.043 -0.002>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  67.763 -97.077 162.815 / 0.016 -3.256e-05 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  389.102 91.868 405.258 / 0.021 0.043 -0.002>) :link-list ((#<bodyset-link #X14617ec0 BODY  438.035 73.845 926.666 / -0.181 -2.754e-08 5.046e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  420.016 -24.518 936.166 / 0.016 -2.800e-08 -4.584e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  420.016 -24.518 814.166 / 0.016 -2.800e-08 -0.12> #<bodyset-link #X148e35b8 RLEG_LINK2  420.036 -25.719 804.239 / 0.018 -0.014 -0.12> #<bodyset-link #X14a807b0 RLEG_LINK3  426.094 -71.244 427.024 / -0.314 1.214 -0.351> #<bodyset-link #X11857c90 RLEG_LINK4  67.678 -92.17 302.525 / 0.016 -3.256e-05 -0.12> #<bodyset-link #X115a6908 RLEG_LINK5  67.758 -96.972 262.815 / 0.016 -3.256e-05 -0.001>) (#<bodyset-link #X14617ec0 BODY  438.035 73.845 926.666 / -0.181 -2.754e-08 5.046e-09> #<bodyset-link #X113734b0 LLEG_LINK0  456.054 172.208 936.166 / 0.032 -2.799e-08 -8.972e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  456.054 172.208 814.166 / 0.032 -2.799e-08 -0.247> #<bodyset-link #X10027230 LLEG_LINK2  456.133 169.761 804.471 / 0.373 -0.925 -0.419> #<bodyset-link #X14c9bc38 LLEG_LINK3  770.579 127.026 595.432 / -1.016 1.287 -1.065> #<bodyset-link #X10a385f8 LLEG_LINK4  394.923 101.965 543.907 / 0.021 0.043 -0.248> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.444 92.129 505.163 / 0.021 0.043 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(363.625 81.8062 1218.62) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  438.035 73.845 926.666 / -0.181 -2.754e-08 5.046e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  67.763 -97.077 162.815 / 0.016 -3.256e-05 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  389.102 91.868 405.258 / 0.021 0.043 -0.002>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  420.016 -24.518 936.166 / 0.016 -2.800e-08 -4.584e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  420.016 -24.518 814.166 / 0.016 -2.800e-08 -0.12> #<bodyset-link #X148e35b8 RLEG_LINK2  420.036 -25.719 804.239 / 0.018 -0.014 -0.12> #<bodyset-link #X14a807b0 RLEG_LINK3  426.094 -71.244 427.024 / -0.314 1.214 -0.351> #<bodyset-link #X11857c90 RLEG_LINK4  67.678 -92.17 302.525 / 0.016 -3.256e-05 -0.12> #<bodyset-link #X115a6908 RLEG_LINK5  67.758 -96.972 262.815 / 0.016 -3.256e-05 -0.001>) (#<bodyset-link #X113734b0 LLEG_LINK0  456.054 172.208 936.166 / 0.032 -2.799e-08 -8.972e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  456.054 172.208 814.166 / 0.032 -2.799e-08 -0.247> #<bodyset-link #X10027230 LLEG_LINK2  456.133 169.761 804.471 / 0.373 -0.925 -0.419> #<bodyset-link #X14c9bc38 LLEG_LINK3  770.579 127.026 595.432 / -1.016 1.287 -1.065> #<bodyset-link #X10a385f8 LLEG_LINK4  394.923 101.965 543.907 / 0.021 0.043 -0.248> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.444 92.129 505.163 / 0.021 0.043 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(363.625 81.8062 1218.62) :target-centroid-pos #f(363.625 81.8062 1218.62) :fix-limbs-target-coords (#<coordinates #X2b314808  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.983632 0.180191 -2.800114e-08 438.035) (-0.180191 0.983632 -3.184985e-17 73.8448) (2.754280e-08 5.045558e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint622221408) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(21.2996 7.28762 0.0 0.0 0.0 -14.1705) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.588413e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (9.588413e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.588413e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (9.588413e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(363.625 81.8062 1218.62) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.694066e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-1.694066e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -9.588413e-19 0.0) (0.0 1.0 0.0 -1.421085e-14) (9.588413e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(363.625 81.8062 1218.62) :target-centroid-pos #f(363.625 81.8062 1218.62) :fix-limbs-target-coords (list #<coordinates #X2b314808  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-37-37-02-79-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-37-37-02-79-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-209.453 4.66597 -402.499)/(453.759/1)
;; dif-rot : #f(0.009613 -0.05496 -0.070274)/(0.08973/0.017453)
;; dif-pos : #f(8.869 0.144728 -8.05628)/(11.9826/1)
;; dif-rot : #f(0.002316 0.002581 -0.067474)/(0.067563/0.017453)
;; cog-dif : #f(34.6399 1.28783)/(34.6638/5.0)
;;  coords : #<coordinates #X13271e38  368.254 40.924 -91.834 / -0.651 -2.228e-08 1.696e-08>
;;  angles : (#f(23.0335 7.88392 0.0 0.0 0.0 -15.3174) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X2b99f448  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  230.904 -85.37 390.342 / 0.07 0.055 -0.008> #<cascaded-coords #X1235fdf0 :lleg-end-coords  391.153 99.276 408.166 / 0.067 -0.003 -0.002>) :link-list ((#<bodyset-link #X14617ec0 BODY  368.254 40.924 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  307.687 -38.647 936.166 / 0.077 -2.792e-08 -2.151e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  307.687 -38.647 814.166 / 0.077 -2.792e-08 -0.123> #<bodyset-link #X148e35b8 RLEG_LINK2  307.781 -39.868 804.242 / 0.239 -0.919 -0.203> #<bodyset-link #X14a807b0 RLEG_LINK3  613.447 -44.235 578.522 / -0.678 1.393 -0.762> #<bodyset-link #X11857c90 RLEG_LINK4  238.203 -79.172 529.824 / 0.07 0.055 -0.123> #<bodyset-link #X115a6908 RLEG_LINK5  236.359 -84.217 490.186 / 0.07 0.055 -0.008>) (#<bodyset-link #X14617ec0 BODY  368.254 40.924 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X113734b0 LLEG_LINK0  428.82 120.496 936.166 / 0.067 -2.794e-08 -1.884e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  428.82 120.496 814.166 / 0.067 -2.794e-08 -0.06> #<bodyset-link #X10027230 LLEG_LINK2  428.861 119.897 804.184 / 0.177 -1.067 -0.125> #<bodyset-link #X14c9bc38 LLEG_LINK3  762.184 131.399 622.077 / -0.226 1.366 -0.299> #<bodyset-link #X10a385f8 LLEG_LINK4  390.626 101.887 548.093 / 0.067 -0.003 -0.06> #<bodyset-link #X14ba89c8 LLEG_LINK5  390.888 99.499 508.166 / 0.067 -0.003 -0.002>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  230.904 -85.37 390.342 / 0.07 0.055 -0.008> #<cascaded-coords #X1235fdf0 :lleg-end-coords  391.153 99.276 408.166 / 0.067 -0.003 -0.002>) :link-list ((#<bodyset-link #X14617ec0 BODY  368.254 40.924 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  307.687 -38.647 936.166 / 0.077 -2.792e-08 -2.151e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  307.687 -38.647 814.166 / 0.077 -2.792e-08 -0.123> #<bodyset-link #X148e35b8 RLEG_LINK2  307.781 -39.868 804.242 / 0.239 -0.919 -0.203> #<bodyset-link #X14a807b0 RLEG_LINK3  613.447 -44.235 578.522 / -0.678 1.393 -0.762> #<bodyset-link #X11857c90 RLEG_LINK4  238.203 -79.172 529.824 / 0.07 0.055 -0.123> #<bodyset-link #X115a6908 RLEG_LINK5  236.359 -84.217 490.186 / 0.07 0.055 -0.008>) (#<bodyset-link #X14617ec0 BODY  368.254 40.924 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X113734b0 LLEG_LINK0  428.82 120.496 936.166 / 0.067 -2.794e-08 -1.884e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  428.82 120.496 814.166 / 0.067 -2.794e-08 -0.06> #<bodyset-link #X10027230 LLEG_LINK2  428.861 119.897 804.184 / 0.177 -1.067 -0.125> #<bodyset-link #X14c9bc38 LLEG_LINK3  762.184 131.399 622.077 / -0.226 1.366 -0.299> #<bodyset-link #X10a385f8 LLEG_LINK4  390.626 101.887 548.093 / 0.067 -0.003 -0.06> #<bodyset-link #X14ba89c8 LLEG_LINK5  390.888 99.499 508.166 / 0.067 -0.003 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(365.798 82.8932 1218.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  368.254 40.924 926.666 / -0.651 -2.228e-08 1.696e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  230.904 -85.37 390.342 / 0.07 0.055 -0.008> #<cascaded-coords #X1235fdf0 :lleg-end-coords  391.153 99.276 408.166 / 0.067 -0.003 -0.002>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  307.687 -38.647 936.166 / 0.077 -2.792e-08 -2.151e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  307.687 -38.647 814.166 / 0.077 -2.792e-08 -0.123> #<bodyset-link #X148e35b8 RLEG_LINK2  307.781 -39.868 804.242 / 0.239 -0.919 -0.203> #<bodyset-link #X14a807b0 RLEG_LINK3  613.447 -44.235 578.522 / -0.678 1.393 -0.762> #<bodyset-link #X11857c90 RLEG_LINK4  238.203 -79.172 529.824 / 0.07 0.055 -0.123> #<bodyset-link #X115a6908 RLEG_LINK5  236.359 -84.217 490.186 / 0.07 0.055 -0.008>) (#<bodyset-link #X113734b0 LLEG_LINK0  428.82 120.496 936.166 / 0.067 -2.794e-08 -1.884e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  428.82 120.496 814.166 / 0.067 -2.794e-08 -0.06> #<bodyset-link #X10027230 LLEG_LINK2  428.861 119.897 804.184 / 0.177 -1.067 -0.125> #<bodyset-link #X14c9bc38 LLEG_LINK3  762.184 131.399 622.077 / -0.226 1.366 -0.299> #<bodyset-link #X10a385f8 LLEG_LINK4  390.626 101.887 548.093 / 0.067 -0.003 -0.06> #<bodyset-link #X14ba89c8 LLEG_LINK5  390.888 99.499 508.166 / 0.067 -0.003 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(365.798 82.8932 1218.71) :target-centroid-pos #f(365.798 82.8932 1218.71) :fix-limbs-target-coords (#<coordinates #X2b99f448  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.795718 0.605667 -2.800114e-08 368.254) (-0.605667 0.795718 -3.184985e-17 40.9244) (2.228101e-08 1.695938e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint582449816) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(23.0335 7.88392 0.0 0.0 0.0 -15.3174) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.387779e-17 1.122149e-17 -2.842171e-14) (1.387779e-17 1.0 1.517883e-18 0.0) (-1.122149e-17 -1.517883e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.131516e-20 0.0) (0.0 1.0 0.0 -1.421085e-14) (8.131516e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.387779e-17 1.122149e-17 -2.842171e-14) (1.387779e-17 1.0 1.517883e-18 0.0) (-1.122149e-17 -1.517883e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.131516e-20 0.0) (0.0 1.0 0.0 -1.421085e-14) (8.131516e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(365.798 82.8932 1218.71) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.387779e-17 1.122149e-17 -2.842171e-14) (1.387779e-17 1.0 1.517883e-18 0.0) (-1.122149e-17 -1.517883e-18 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.131516e-20 0.0) (0.0 1.0 0.0 -1.421085e-14) (8.131516e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(365.798 82.8932 1218.71) :target-centroid-pos #f(365.798 82.8932 1218.71) :fix-limbs-target-coords (list #<coordinates #X2b99f448  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-37-71-03-23-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-37-71-03-23-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-101.841 -22.5806 -368.049)/(382.546/1)
;; dif-rot : #f(0.0022 -0.166634 -0.010779)/(0.166997/0.017453)
;; dif-pos : #f(18.4467 3.99009 -0.893931)/(18.8944/1)
;; dif-rot : #f(0.008959 -0.121008 -0.019656)/(0.122921/0.017453)
;; cog-dif : #f(-4.83876 0.995104)/(4.94002/5.0)
;;  coords : #<coordinates #X13271e38  416.099 39.92 -91.834 / -0.712 -2.121e-08 1.829e-08>
;;  angles : (#f(24.6744 8.44822 0.0 0.0 0.0 -16.4028) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #Xf8f2cf0  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  161.219 -75.211 346.028 / 0.011 0.167 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  381.894 95.668 403.278 / 0.019 0.121 -0.008>) :link-list ((#<bodyset-link #X14617ec0 BODY  416.099 39.92 926.666 / -0.712 -2.121e-08 1.829e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  350.793 -35.811 936.166 / 0.026 -2.799e-08 -7.393e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  350.793 -35.811 814.166 / 0.026 -2.799e-08 -0.093> #<bodyset-link #X148e35b8 RLEG_LINK2  350.818 -36.74 804.21 / 0.089 -0.591 -0.112> #<bodyset-link #X14a807b0 RLEG_LINK3  564.159 -60.401 490.64 / -1.355 1.476 -1.383> #<bodyset-link #X11857c90 RLEG_LINK4  184.368 -71.06 483.913 / 0.011 0.167 -0.094> #<bodyset-link #X115a6908 RLEG_LINK5  177.804 -74.902 444.643 / 0.011 0.167 -0.001>) (#<bodyset-link #X14617ec0 BODY  416.099 39.92 926.666 / -0.712 -2.121e-08 1.829e-08> #<bodyset-link #X113734b0 LLEG_LINK0  481.405 115.651 936.166 / 0.026 -2.799e-08 -7.205e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  481.405 115.651 814.166 / 0.026 -2.799e-08 -0.054> #<bodyset-link #X10027230 LLEG_LINK2  481.418 115.116 804.181 / 0.092 -0.892 -0.085> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.803 109.988 566.421 / -0.671 1.487 -0.699> #<bodyset-link #X10a385f8 LLEG_LINK4  398.738 98.931 542.192 / 0.019 0.121 -0.054> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.955 96.681 502.543 / 0.019 0.121 -0.008>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  161.219 -75.211 346.028 / 0.011 0.167 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  381.894 95.668 403.278 / 0.019 0.121 -0.008>) :link-list ((#<bodyset-link #X14617ec0 BODY  416.099 39.92 926.666 / -0.712 -2.121e-08 1.829e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  350.793 -35.811 936.166 / 0.026 -2.799e-08 -7.393e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  350.793 -35.811 814.166 / 0.026 -2.799e-08 -0.093> #<bodyset-link #X148e35b8 RLEG_LINK2  350.818 -36.74 804.21 / 0.089 -0.591 -0.112> #<bodyset-link #X14a807b0 RLEG_LINK3  564.159 -60.401 490.64 / -1.355 1.476 -1.383> #<bodyset-link #X11857c90 RLEG_LINK4  184.368 -71.06 483.913 / 0.011 0.167 -0.094> #<bodyset-link #X115a6908 RLEG_LINK5  177.804 -74.902 444.643 / 0.011 0.167 -0.001>) (#<bodyset-link #X14617ec0 BODY  416.099 39.92 926.666 / -0.712 -2.121e-08 1.829e-08> #<bodyset-link #X113734b0 LLEG_LINK0  481.405 115.651 936.166 / 0.026 -2.799e-08 -7.205e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  481.405 115.651 814.166 / 0.026 -2.799e-08 -0.054> #<bodyset-link #X10027230 LLEG_LINK2  481.418 115.116 804.181 / 0.092 -0.892 -0.085> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.803 109.988 566.421 / -0.671 1.487 -0.699> #<bodyset-link #X10a385f8 LLEG_LINK4  398.738 98.931 542.192 / 0.019 0.121 -0.054> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.955 96.681 502.543 / 0.019 0.121 -0.008>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(367.856 83.9218 1218.81) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  416.099 39.92 926.666 / -0.712 -2.121e-08 1.829e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  161.219 -75.211 346.028 / 0.011 0.167 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  381.894 95.668 403.278 / 0.019 0.121 -0.008>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  350.793 -35.811 936.166 / 0.026 -2.799e-08 -7.393e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  350.793 -35.811 814.166 / 0.026 -2.799e-08 -0.093> #<bodyset-link #X148e35b8 RLEG_LINK2  350.818 -36.74 804.21 / 0.089 -0.591 -0.112> #<bodyset-link #X14a807b0 RLEG_LINK3  564.159 -60.401 490.64 / -1.355 1.476 -1.383> #<bodyset-link #X11857c90 RLEG_LINK4  184.368 -71.06 483.913 / 0.011 0.167 -0.094> #<bodyset-link #X115a6908 RLEG_LINK5  177.804 -74.902 444.643 / 0.011 0.167 -0.001>) (#<bodyset-link #X113734b0 LLEG_LINK0  481.405 115.651 936.166 / 0.026 -2.799e-08 -7.205e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  481.405 115.651 814.166 / 0.026 -2.799e-08 -0.054> #<bodyset-link #X10027230 LLEG_LINK2  481.418 115.116 804.181 / 0.092 -0.892 -0.085> #<bodyset-link #X14c9bc38 LLEG_LINK3  777.803 109.988 566.421 / -0.671 1.487 -0.699> #<bodyset-link #X10a385f8 LLEG_LINK4  398.738 98.931 542.192 / 0.019 0.121 -0.054> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.955 96.681 502.543 / 0.019 0.121 -0.008>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(367.856 83.9218 1218.81) :target-centroid-pos #f(367.856 83.9218 1218.81) :fix-limbs-target-coords (#<coordinates #Xf8f2cf0  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.75731 0.653056 -2.800114e-08 416.099) (-0.653056 0.75731 -3.184985e-17 39.9203) (2.120554e-08 1.828631e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint569844848) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(24.6744 8.44822 0.0 0.0 0.0 -16.4028) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693607e-10 -1.102584e-16) (1.693607e-10 1.0 -5.588126e-10) (1.103531e-16 5.588126e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -3.469447e-18 6.756612e-17 -1.421085e-14) (3.469447e-18 1.0 8.673617e-19 0.0) (-6.756612e-17 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.016440e-18 0.0) (0.0 1.0 0.0 0.0) (1.016440e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -3.469447e-18 6.756612e-17 -1.421085e-14) (3.469447e-18 1.0 8.673617e-19 0.0) (-6.756612e-17 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.016440e-18 0.0) (0.0 1.0 0.0 0.0) (1.016440e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(367.856 83.9218 1218.81) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -3.469447e-18 6.756612e-17 -1.421085e-14) (3.469447e-18 1.0 8.673617e-19 0.0) (-6.756612e-17 -8.673617e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -1.016440e-18 0.0) (0.0 1.0 0.0 0.0) (1.016440e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(367.856 83.9218 1218.81) :target-centroid-pos #f(367.856 83.9218 1218.81) :fix-limbs-target-coords (list #<coordinates #Xf8f2cf0  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-38-04-10-38-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-38-04-10-38-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(24.0045 -17.7003 -44.3725)/(53.4644/1)
;; dif-rot : #f(-0.001133 -0.07505 0.038754)/(0.084473/0.017453)
;; dif-pos : #f(7.07171 -1.54708 0.00636)/(7.23896/1)
;; dif-rot : #f(-0.001198 -0.05441 0.043312)/(0.069555/0.017453)
;; cog-dif : #f(-0.174198 -2.56858)/(2.57448/5.0)
;;  coords : #<coordinates #X13271e38  450.593 78.916 -91.834 / -0.226 -2.729e-08 6.280e-09>
;;  angles : (#f(26.2195 8.97961 0.0 0.0 0.0 -17.4249) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X12527650  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -19.908 -81.5 46.042 / -0.039 0.075 -0.0> #<cascaded-coords #X1235fdf0 :lleg-end-coords  393.026 101.852 400.51 / -0.043 0.054 1.887e-05>) :link-list ((#<bodyset-link #X14617ec0 BODY  450.593 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  428.164 -18.536 936.166 / -0.03 -2.799e-08 8.449e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  428.164 -18.536 814.166 / -0.03 -2.799e-08 -0.114> #<bodyset-link #X148e35b8 RLEG_LINK2  428.13 -19.672 804.231 / -0.109 0.606 -0.139> #<bodyset-link #X14a807b0 RLEG_LINK3  209.435 -48.494 494.809 / -0.109 0.606 -0.139> #<bodyset-link #X11857c90 RLEG_LINK4  -9.26 -77.316 185.388 / -0.039 0.075 -0.114> #<bodyset-link #X115a6908 RLEG_LINK5  -12.414 -81.758 145.76 / -0.039 0.075 -0.0>) (#<bodyset-link #X14617ec0 BODY  450.593 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #<bodyset-link #X113734b0 LLEG_LINK0  473.022 176.369 936.166 / -0.03 -2.799e-08 8.389e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  473.022 176.369 814.166 / -0.03 -2.799e-08 -0.24> #<bodyset-link #X10027230 LLEG_LINK2  472.95 173.988 804.454 / 0.285 -0.901 -0.394> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.001 111.414 586.672 / -1.102 1.298 -1.087> #<bodyset-link #X10a385f8 LLEG_LINK4  400.984 111.055 539.15 / -0.043 0.054 -0.241> #<bodyset-link #X14ba89c8 LLEG_LINK5  398.46 101.614 500.362 / -0.043 0.054 1.887e-05>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -19.908 -81.5 46.042 / -0.039 0.075 -0.0> #<cascaded-coords #X1235fdf0 :lleg-end-coords  393.026 101.852 400.51 / -0.043 0.054 1.887e-05>) :link-list ((#<bodyset-link #X14617ec0 BODY  450.593 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #<bodyset-link #X14e81de8 RLEG_LINK0  428.164 -18.536 936.166 / -0.03 -2.799e-08 8.449e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  428.164 -18.536 814.166 / -0.03 -2.799e-08 -0.114> #<bodyset-link #X148e35b8 RLEG_LINK2  428.13 -19.672 804.231 / -0.109 0.606 -0.139> #<bodyset-link #X14a807b0 RLEG_LINK3  209.435 -48.494 494.809 / -0.109 0.606 -0.139> #<bodyset-link #X11857c90 RLEG_LINK4  -9.26 -77.316 185.388 / -0.039 0.075 -0.114> #<bodyset-link #X115a6908 RLEG_LINK5  -12.414 -81.758 145.76 / -0.039 0.075 -0.0>) (#<bodyset-link #X14617ec0 BODY  450.593 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #<bodyset-link #X113734b0 LLEG_LINK0  473.022 176.369 936.166 / -0.03 -2.799e-08 8.389e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  473.022 176.369 814.166 / -0.03 -2.799e-08 -0.24> #<bodyset-link #X10027230 LLEG_LINK2  472.95 173.988 804.454 / 0.285 -0.901 -0.394> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.001 111.414 586.672 / -1.102 1.298 -1.087> #<bodyset-link #X10a385f8 LLEG_LINK4  400.984 111.055 539.15 / -0.043 0.054 -0.241> #<bodyset-link #X14ba89c8 LLEG_LINK5  398.46 101.614 500.362 / -0.043 0.054 1.887e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(369.793 84.8904 1218.91) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  450.593 78.916 926.666 / -0.226 -2.729e-08 6.280e-09> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -19.908 -81.5 46.042 / -0.039 0.075 -0.0> #<cascaded-coords #X1235fdf0 :lleg-end-coords  393.026 101.852 400.51 / -0.043 0.054 1.887e-05>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  428.164 -18.536 936.166 / -0.03 -2.799e-08 8.449e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  428.164 -18.536 814.166 / -0.03 -2.799e-08 -0.114> #<bodyset-link #X148e35b8 RLEG_LINK2  428.13 -19.672 804.231 / -0.109 0.606 -0.139> #<bodyset-link #X14a807b0 RLEG_LINK3  209.435 -48.494 494.809 / -0.109 0.606 -0.139> #<bodyset-link #X11857c90 RLEG_LINK4  -9.26 -77.316 185.388 / -0.039 0.075 -0.114> #<bodyset-link #X115a6908 RLEG_LINK5  -12.414 -81.758 145.76 / -0.039 0.075 -0.0>) (#<bodyset-link #X113734b0 LLEG_LINK0  473.022 176.369 936.166 / -0.03 -2.799e-08 8.389e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  473.022 176.369 814.166 / -0.03 -2.799e-08 -0.24> #<bodyset-link #X10027230 LLEG_LINK2  472.95 173.988 804.454 / 0.285 -0.901 -0.394> #<bodyset-link #X14c9bc38 LLEG_LINK3  778.001 111.414 586.672 / -1.102 1.298 -1.087> #<bodyset-link #X10a385f8 LLEG_LINK4  400.984 111.055 539.15 / -0.043 0.054 -0.241> #<bodyset-link #X14ba89c8 LLEG_LINK5  398.46 101.614 500.362 / -0.043 0.054 1.887e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(369.793 84.8904 1218.91) :target-centroid-pos #f(369.793 84.8904 1218.91) :fix-limbs-target-coords (#<coordinates #X12527650  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.974523 0.224287 -2.800114e-08 450.593) (-0.224287 0.974523 -3.184985e-17 78.9163) (2.728776e-08 6.280284e-09 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint716901976) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(26.2195 8.97961 0.0 0.0 0.0 -17.4249) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.391521e-14 -100.0 0.0) :rot #2f((1.0 -1.693605e-10 -1.102598e-16) (1.693605e-10 1.0 -5.588121e-10) (1.103544e-16 5.588121e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.081697e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (6.081697e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.406075e-18 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-1.406075e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.081697e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (6.081697e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.406075e-18 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-1.406075e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(369.793 84.8904 1218.91) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.081697e-18 3.552714e-15) (0.0 1.0 0.0 0.0) (6.081697e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.406075e-18 -5.684342e-14) (0.0 1.0 0.0 1.421085e-14) (-1.406075e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(369.793 84.8904 1218.91) :target-centroid-pos #f(369.793 84.8904 1218.91) :fix-limbs-target-coords (list #<coordinates #X12527650  4.392e-14 -100.0 0.0 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-38-48-73-74-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-38-48-73-74-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-132.339 0.769629 -272.091)/(302.569/1)
;; dif-rot : #f(0.001316 -0.039086 -0.038184)/(0.054658/0.017453)
;; dif-pos : #f(17.8283 0.262346 -0.591304)/(17.8401/1)
;; dif-rot : #f(0.002427 -0.109433 -0.033798)/(0.114559/0.017453)
;; cog-dif : #f(2.56214 1.87394)/(3.1743/5.0)
;;  coords : #<coordinates #X13271e38  419.936 48.305 -91.834 / -0.603 -2.306e-08 1.589e-08>
;;  angles : (#f(27.6708 9.50603 0.0 0.0 0.0 -18.3651) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X12dc3e68  4.112e-05 -100.0 0.025 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  142.794 -95.161 266.736 / 0.038 0.039 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  382.376 99.142 402.667 / 0.034 0.109 -0.001>) :link-list ((#<bodyset-link #X14617ec0 BODY  419.936 48.305 926.666 / -0.603 -2.306e-08 1.589e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  363.194 -34.037 936.166 / 0.043 -2.798e-08 -1.195e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  363.194 -34.037 814.166 / 0.043 -2.798e-08 -0.115> #<bodyset-link #X148e35b8 RLEG_LINK2  363.243 -35.182 804.232 / 0.095 -0.428 -0.126> #<bodyset-link #X14a807b0 RLEG_LINK3  523.431 -67.946 461.207 / -0.62 1.385 -0.671> #<bodyset-link #X11857c90 RLEG_LINK4  148.075 -90.312 406.365 / 0.038 0.039 -0.115> #<bodyset-link #X115a6908 RLEG_LINK5  146.698 -94.955 366.659 / 0.038 0.039 -0.001>) (#<bodyset-link #X14617ec0 BODY  419.936 48.305 926.666 / -0.603 -2.306e-08 1.589e-08> #<bodyset-link #X113734b0 LLEG_LINK0  476.678 130.648 936.166 / 0.043 -2.797e-08 -1.216e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  476.678 130.648 814.166 / 0.043 -2.797e-08 -0.088> #<bodyset-link #X10027230 LLEG_LINK2  476.716 129.773 804.205 / 0.154 -0.899 -0.141> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.979 122.198 570.144 / -0.816 1.455 -0.863> #<bodyset-link #X10a385f8 LLEG_LINK4  397.522 103.237 541.675 / 0.034 0.109 -0.088> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.291 99.569 502.069 / 0.034 0.109 -0.001>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  142.794 -95.161 266.736 / 0.038 0.039 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  382.376 99.142 402.667 / 0.034 0.109 -0.001>) :link-list ((#<bodyset-link #X14617ec0 BODY  419.936 48.305 926.666 / -0.603 -2.306e-08 1.589e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  363.194 -34.037 936.166 / 0.043 -2.798e-08 -1.195e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  363.194 -34.037 814.166 / 0.043 -2.798e-08 -0.115> #<bodyset-link #X148e35b8 RLEG_LINK2  363.243 -35.182 804.232 / 0.095 -0.428 -0.126> #<bodyset-link #X14a807b0 RLEG_LINK3  523.431 -67.946 461.207 / -0.62 1.385 -0.671> #<bodyset-link #X11857c90 RLEG_LINK4  148.075 -90.312 406.365 / 0.038 0.039 -0.115> #<bodyset-link #X115a6908 RLEG_LINK5  146.698 -94.955 366.659 / 0.038 0.039 -0.001>) (#<bodyset-link #X14617ec0 BODY  419.936 48.305 926.666 / -0.603 -2.306e-08 1.589e-08> #<bodyset-link #X113734b0 LLEG_LINK0  476.678 130.648 936.166 / 0.043 -2.797e-08 -1.216e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  476.678 130.648 814.166 / 0.043 -2.797e-08 -0.088> #<bodyset-link #X10027230 LLEG_LINK2  476.716 129.773 804.205 / 0.154 -0.899 -0.141> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.979 122.198 570.144 / -0.816 1.455 -0.863> #<bodyset-link #X10a385f8 LLEG_LINK4  397.522 103.237 541.675 / 0.034 0.109 -0.088> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.291 99.569 502.069 / 0.034 0.109 -0.001>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(371.614 85.8006 1219.02) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  419.936 48.305 926.666 / -0.603 -2.306e-08 1.589e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  142.794 -95.161 266.736 / 0.038 0.039 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  382.376 99.142 402.667 / 0.034 0.109 -0.001>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  363.194 -34.037 936.166 / 0.043 -2.798e-08 -1.195e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  363.194 -34.037 814.166 / 0.043 -2.798e-08 -0.115> #<bodyset-link #X148e35b8 RLEG_LINK2  363.243 -35.182 804.232 / 0.095 -0.428 -0.126> #<bodyset-link #X14a807b0 RLEG_LINK3  523.431 -67.946 461.207 / -0.62 1.385 -0.671> #<bodyset-link #X11857c90 RLEG_LINK4  148.075 -90.312 406.365 / 0.038 0.039 -0.115> #<bodyset-link #X115a6908 RLEG_LINK5  146.698 -94.955 366.659 / 0.038 0.039 -0.001>) (#<bodyset-link #X113734b0 LLEG_LINK0  476.678 130.648 936.166 / 0.043 -2.797e-08 -1.216e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  476.678 130.648 814.166 / 0.043 -2.797e-08 -0.088> #<bodyset-link #X10027230 LLEG_LINK2  476.716 129.773 804.205 / 0.154 -0.899 -0.141> #<bodyset-link #X14c9bc38 LLEG_LINK3  775.979 122.198 570.144 / -0.816 1.455 -0.863> #<bodyset-link #X10a385f8 LLEG_LINK4  397.522 103.237 541.675 / 0.034 0.109 -0.088> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.291 99.569 502.069 / 0.034 0.109 -0.001>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(371.614 85.8006 1219.02) :target-centroid-pos #f(371.614 85.8006 1219.02) :fix-limbs-target-coords (#<coordinates #X12dc3e68  4.112e-05 -100.0 0.025 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.823427 0.567422 -2.800114e-08 419.936) (-0.567422 0.823427 -3.184985e-17 48.3054) (2.305689e-08 1.588847e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint608403064) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(27.6708 9.50603 0.0 0.0 0.0 -18.3651) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(4.112434e-05 -100.0 0.025294) :rot #2f((1.0 -1.693601e-10 -1.102638e-16) (1.693601e-10 1.0 -5.588105e-10) (1.103584e-16 5.588105e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.542836e-38 -1.423015e-19 0.0) (-1.542836e-38 1.0 -2.168404e-19 0.0) (1.423015e-19 2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 0.0) (0.0 1.0 0.0 0.0) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.542836e-38 -1.423015e-19 0.0) (-1.542836e-38 1.0 -2.168404e-19 0.0) (1.423015e-19 2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 0.0) (0.0 1.0 0.0 0.0) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(371.614 85.8006 1219.02) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 -1.542836e-38 -1.423015e-19 0.0) (-1.542836e-38 1.0 -2.168404e-19 0.0) (1.423015e-19 2.168404e-19 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 4.878910e-19 0.0) (0.0 1.0 0.0 0.0) (-4.878910e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(371.614 85.8006 1219.02) :target-centroid-pos #f(371.614 85.8006 1219.02) :fix-limbs-target-coords (list #<coordinates #X12dc3e68  4.112e-05 -100.0 0.025 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-38-83-26-31-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-38-83-26-31-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(109.175 -31.4771 -36.3218)/(119.286/1)
;; dif-rot : #f(-0.005069 -0.21877 0.064583)/(0.228159/0.017453)
;; dif-pos : #f(27.6747 5.70578 -2.11917)/(28.3361/1)
;; dif-rot : #f(-0.005732 -0.192173 0.079646)/(0.208103/0.017453)
;; cog-dif : #f(-4.18028 -1.73609)/(4.52645/5.0)
;;  coords : #<coordinates #X13271e38  449.035 50.233 -91.834 / -0.651 -2.228e-08 1.696e-08>
;;  angles : (#f(29.0327 10.0564 0.0 0.0 0.0 -19.2065) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1475e580  0.0 -100.0 0.101 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -96.442 -62.097 59.189 / -0.065 0.219 -0.002> #<cascaded-coords #X1235fdf0 :lleg-end-coords  372.885 96.457 407.509 / -0.08 0.192 -0.002>) :link-list ((#<bodyset-link #X14617ec0 BODY  449.035 50.233 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  388.455 -29.329 936.166 / -0.046 -2.797e-08 1.297e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  388.455 -29.329 814.166 / -0.046 -2.797e-08 -0.084> #<bodyset-link #X148e35b8 RLEG_LINK2  388.417 -30.168 804.202 / -0.108 0.635 -0.104> #<bodyset-link #X14a807b0 RLEG_LINK3  161.25 -45.3 499.954 / -0.108 0.635 -0.104> #<bodyset-link #X11857c90 RLEG_LINK4  -65.916 -60.432 195.707 / -0.065 0.219 -0.086> #<bodyset-link #X115a6908 RLEG_LINK5  -74.771 -63.303 156.805 / -0.065 0.219 -0.002>) (#<bodyset-link #X14617ec0 BODY  449.035 50.233 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X113734b0 LLEG_LINK0  509.614 129.795 936.166 / -0.054 -2.796e-08 1.517e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  509.614 129.795 814.166 / -0.054 -2.796e-08 -0.132> #<bodyset-link #X10027230 LLEG_LINK2  509.543 128.48 804.254 / 0.08 -0.789 -0.188> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.321 78.841 541.279 / -1.691 1.438 -1.637> #<bodyset-link #X10a385f8 LLEG_LINK4  399.918 99.871 544.576 / -0.08 0.192 -0.135> #<bodyset-link #X14ba89c8 LLEG_LINK5  391.941 95.126 505.668 / -0.08 0.192 -0.002>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -96.442 -62.097 59.189 / -0.065 0.219 -0.002> #<cascaded-coords #X1235fdf0 :lleg-end-coords  372.885 96.457 407.509 / -0.08 0.192 -0.002>) :link-list ((#<bodyset-link #X14617ec0 BODY  449.035 50.233 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  388.455 -29.329 936.166 / -0.046 -2.797e-08 1.297e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  388.455 -29.329 814.166 / -0.046 -2.797e-08 -0.084> #<bodyset-link #X148e35b8 RLEG_LINK2  388.417 -30.168 804.202 / -0.108 0.635 -0.104> #<bodyset-link #X14a807b0 RLEG_LINK3  161.25 -45.3 499.954 / -0.108 0.635 -0.104> #<bodyset-link #X11857c90 RLEG_LINK4  -65.916 -60.432 195.707 / -0.065 0.219 -0.086> #<bodyset-link #X115a6908 RLEG_LINK5  -74.771 -63.303 156.805 / -0.065 0.219 -0.002>) (#<bodyset-link #X14617ec0 BODY  449.035 50.233 926.666 / -0.651 -2.228e-08 1.696e-08> #<bodyset-link #X113734b0 LLEG_LINK0  509.614 129.795 936.166 / -0.054 -2.796e-08 1.517e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  509.614 129.795 814.166 / -0.054 -2.796e-08 -0.132> #<bodyset-link #X10027230 LLEG_LINK2  509.543 128.48 804.254 / 0.08 -0.789 -0.188> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.321 78.841 541.279 / -1.691 1.438 -1.637> #<bodyset-link #X10a385f8 LLEG_LINK4  399.918 99.871 544.576 / -0.08 0.192 -0.135> #<bodyset-link #X14ba89c8 LLEG_LINK5  391.941 95.126 505.668 / -0.08 0.192 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(373.324 86.6558 1219.13) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  449.035 50.233 926.666 / -0.651 -2.228e-08 1.696e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -96.442 -62.097 59.189 / -0.065 0.219 -0.002> #<cascaded-coords #X1235fdf0 :lleg-end-coords  372.885 96.457 407.509 / -0.08 0.192 -0.002>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  388.455 -29.329 936.166 / -0.046 -2.797e-08 1.297e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  388.455 -29.329 814.166 / -0.046 -2.797e-08 -0.084> #<bodyset-link #X148e35b8 RLEG_LINK2  388.417 -30.168 804.202 / -0.108 0.635 -0.104> #<bodyset-link #X14a807b0 RLEG_LINK3  161.25 -45.3 499.954 / -0.108 0.635 -0.104> #<bodyset-link #X11857c90 RLEG_LINK4  -65.916 -60.432 195.707 / -0.065 0.219 -0.086> #<bodyset-link #X115a6908 RLEG_LINK5  -74.771 -63.303 156.805 / -0.065 0.219 -0.002>) (#<bodyset-link #X113734b0 LLEG_LINK0  509.614 129.795 936.166 / -0.054 -2.796e-08 1.517e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  509.614 129.795 814.166 / -0.054 -2.796e-08 -0.132> #<bodyset-link #X10027230 LLEG_LINK2  509.543 128.48 804.254 / 0.08 -0.789 -0.188> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.321 78.841 541.279 / -1.691 1.438 -1.637> #<bodyset-link #X10a385f8 LLEG_LINK4  399.918 99.871 544.576 / -0.08 0.192 -0.135> #<bodyset-link #X14ba89c8 LLEG_LINK5  391.941 95.126 505.668 / -0.08 0.192 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(373.324 86.6558 1219.13) :target-centroid-pos #f(373.324 86.6558 1219.13) :fix-limbs-target-coords (#<coordinates #X1475e580  0.0 -100.0 0.101 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.795622 0.605794 -2.800114e-08 449.035) (-0.605794 0.795622 -3.184985e-17 50.2327) (2.227831e-08 1.696292e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint725181272) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(29.0327 10.0564 0.0 0.0 0.0 -19.2065) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.000329 -100.0 0.101171) :rot #2f((1.0 -1.693591e-10 -1.102718e-16) (1.693591e-10 1.0 -5.588075e-10) (1.103664e-16 5.588075e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.535205e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-7.535205e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.767603e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (3.767603e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.535205e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-7.535205e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.767603e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (3.767603e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(373.324 86.6558 1219.13) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.535205e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-7.535205e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -3.767603e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (3.767603e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(373.324 86.6558 1219.13) :target-centroid-pos #f(373.324 86.6558 1219.13) :fix-limbs-target-coords (list #<coordinates #X1475e580  0.0 -100.0 0.101 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-39-17-26-32-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-39-17-26-32-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(7.64983 -3.36085 -18.2098)/(20.0353/1)
;; dif-rot : #f(-3.038867e-05 -5.185929e-05 -0.000689)/(0.000692/0.017453)
;; dif-pos : #f(24.316 0.422463 0.031297)/(24.3197/1)
;; dif-rot : #f(-0.000507 -0.170982 0.025536)/(0.172879/0.017453)
;; cog-dif : #f(-0.351036 0.219846)/(0.414196/5.0)
;;  coords : #<coordinates #X13271e38  444.972 52.426 -91.834 / -0.607 -2.300e-08 1.598e-08>
;;  angles : (#f(30.3108 10.6328 0.0 0.0 0.0 -19.9527) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X19061c20  0.001 -100.0 0.228 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -7.65 -96.645 18.438 / 0.001 5.185e-05 3.041e-05> #<cascaded-coords #X1235fdf0 :lleg-end-coords  376.044 100.195 404.239 / -0.026 0.171 -0.002>) :link-list ((#<bodyset-link #X14617ec0 BODY  444.972 52.426 926.666 / -0.607 -2.300e-08 1.598e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  387.918 -29.701 936.166 / 0.001 -2.800e-08 -1.943e-11> #<bodyset-link #X1115b7f0 RLEG_LINK1  387.918 -29.701 814.166 / 0.001 -2.800e-08 -0.096> #<bodyset-link #X148e35b8 RLEG_LINK2  387.919 -30.655 804.212 / -0.057 0.542 -0.112> #<bodyset-link #X14a807b0 RLEG_LINK3  190.86 -61.785 480.795 / -0.058 0.547 -0.112> #<bodyset-link #X11857c90 RLEG_LINK4  -7.645 -92.832 158.256 / 0.001 5.185e-05 -0.096> #<bodyset-link #X115a6908 RLEG_LINK5  -7.645 -96.648 118.438 / 0.001 5.185e-05 3.041e-05>) (#<bodyset-link #X14617ec0 BODY  444.972 52.426 926.666 / -0.607 -2.300e-08 1.598e-08> #<bodyset-link #X113734b0 LLEG_LINK0  502.026 134.553 936.166 / -0.006 -2.800e-08 1.728e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  502.026 134.553 814.166 / -0.006 -2.800e-08 -0.113> #<bodyset-link #X10027230 LLEG_LINK2  502.019 133.426 804.23 / 0.114 -0.814 -0.165> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.897 102.538 546.878 / -1.461 1.457 -1.456> #<bodyset-link #X10a385f8 LLEG_LINK4  399.933 104.323 541.939 / -0.026 0.171 -0.115> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.057 99.927 502.781 / -0.026 0.171 -0.002>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -7.65 -96.645 18.438 / 0.001 5.185e-05 3.041e-05> #<cascaded-coords #X1235fdf0 :lleg-end-coords  376.044 100.195 404.239 / -0.026 0.171 -0.002>) :link-list ((#<bodyset-link #X14617ec0 BODY  444.972 52.426 926.666 / -0.607 -2.300e-08 1.598e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  387.918 -29.701 936.166 / 0.001 -2.800e-08 -1.943e-11> #<bodyset-link #X1115b7f0 RLEG_LINK1  387.918 -29.701 814.166 / 0.001 -2.800e-08 -0.096> #<bodyset-link #X148e35b8 RLEG_LINK2  387.919 -30.655 804.212 / -0.057 0.542 -0.112> #<bodyset-link #X14a807b0 RLEG_LINK3  190.86 -61.785 480.795 / -0.058 0.547 -0.112> #<bodyset-link #X11857c90 RLEG_LINK4  -7.645 -92.832 158.256 / 0.001 5.185e-05 -0.096> #<bodyset-link #X115a6908 RLEG_LINK5  -7.645 -96.648 118.438 / 0.001 5.185e-05 3.041e-05>) (#<bodyset-link #X14617ec0 BODY  444.972 52.426 926.666 / -0.607 -2.300e-08 1.598e-08> #<bodyset-link #X113734b0 LLEG_LINK0  502.026 134.553 936.166 / -0.006 -2.800e-08 1.728e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  502.026 134.553 814.166 / -0.006 -2.800e-08 -0.113> #<bodyset-link #X10027230 LLEG_LINK2  502.019 133.426 804.23 / 0.114 -0.814 -0.165> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.897 102.538 546.878 / -1.461 1.457 -1.456> #<bodyset-link #X10a385f8 LLEG_LINK4  399.933 104.323 541.939 / -0.026 0.171 -0.115> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.057 99.927 502.781 / -0.026 0.171 -0.002>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(374.931 87.4595 1219.24) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  444.972 52.426 926.666 / -0.607 -2.300e-08 1.598e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  -7.65 -96.645 18.438 / 0.001 5.185e-05 3.041e-05> #<cascaded-coords #X1235fdf0 :lleg-end-coords  376.044 100.195 404.239 / -0.026 0.171 -0.002>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  387.918 -29.701 936.166 / 0.001 -2.800e-08 -1.943e-11> #<bodyset-link #X1115b7f0 RLEG_LINK1  387.918 -29.701 814.166 / 0.001 -2.800e-08 -0.096> #<bodyset-link #X148e35b8 RLEG_LINK2  387.919 -30.655 804.212 / -0.057 0.542 -0.112> #<bodyset-link #X14a807b0 RLEG_LINK3  190.86 -61.785 480.795 / -0.058 0.547 -0.112> #<bodyset-link #X11857c90 RLEG_LINK4  -7.645 -92.832 158.256 / 0.001 5.185e-05 -0.096> #<bodyset-link #X115a6908 RLEG_LINK5  -7.645 -96.648 118.438 / 0.001 5.185e-05 3.041e-05>) (#<bodyset-link #X113734b0 LLEG_LINK0  502.026 134.553 936.166 / -0.006 -2.800e-08 1.728e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  502.026 134.553 814.166 / -0.006 -2.800e-08 -0.113> #<bodyset-link #X10027230 LLEG_LINK2  502.019 133.426 804.23 / 0.114 -0.814 -0.165> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.897 102.538 546.878 / -1.461 1.457 -1.456> #<bodyset-link #X10a385f8 LLEG_LINK4  399.933 104.323 541.939 / -0.026 0.171 -0.115> #<bodyset-link #X14ba89c8 LLEG_LINK5  393.057 99.927 502.781 / -0.026 0.171 -0.002>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(374.931 87.4595 1219.24) :target-centroid-pos #f(374.931 87.4595 1219.24) :fix-limbs-target-coords (#<coordinates #X19061c20  0.001 -100.0 0.228 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.82127 0.57054 -2.800114e-08 444.972) (-0.57054 0.82127 -3.184985e-17 52.4257) (2.299650e-08 1.597576e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint595547112) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(30.3108 10.6328 0.0 0.0 0.0 -19.9527) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.00111 -100.0 0.227612) :rot #2f((1.0 -1.693576e-10 -1.102850e-16) (1.693576e-10 1.0 -5.588023e-10) (1.103796e-16 5.588023e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.008395e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.008395e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.916370e-18 0.0) (0.0 1.0 0.0 0.0) (-7.916370e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.008395e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.008395e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.916370e-18 0.0) (0.0 1.0 0.0 0.0) (-7.916370e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(374.931 87.4595 1219.24) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 2.008395e-21 0.0) (0.0 1.0 0.0 1.421085e-14) (-2.008395e-21 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 7.916370e-18 0.0) (0.0 1.0 0.0 0.0) (-7.916370e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(374.931 87.4595 1219.24) :target-centroid-pos #f(374.931 87.4595 1219.24) :fix-limbs-target-coords (list #<coordinates #X19061c20  0.001 -100.0 0.228 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-39-49-85-53-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-39-49-85-53-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(13.5042 -13.6759 -600.77)/(601.078/1)
;; dif-rot : #f(0.024154 -0.43018 -0.066236)/(0.435919/0.017453)
;; dif-pos : #f(26.8911 3.98551 -0.815674)/(27.1971/1)
;; dif-rot : #f(0.012621 -0.143595 -0.1031)/(0.177225/0.017453)
;; cog-dif : #f(-2.39119 2.07629)/(3.16682/5.0)
;;  coords : #<coordinates #X13271e38  416.28 40.414 -91.834 / -0.715 -2.114e-08 1.837e-08>
;;  angles : (#f(31.51 11.237 0.0 0.0 0.0 -20.607) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1985bcd0  0.003 -100.0 0.405 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  236.669 -64.675 551.799 / 0.065 0.431 -0.01> #<cascaded-coords #X1235fdf0 :lleg-end-coords  374.07 93.319 404.818 / 0.103 0.144 -0.005>) :link-list ((#<bodyset-link #X14617ec0 BODY  416.28 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  350.683 -35.065 936.166 / 0.112 -2.783e-08 -3.135e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  350.683 -35.065 814.166 / 0.112 -2.783e-08 -0.102> #<bodyset-link #X148e35b8 RLEG_LINK2  350.797 -36.079 804.219 / 0.256 -0.948 -0.176> #<bodyset-link #X14a807b0 RLEG_LINK3  661.657 -23.59 586.02 / -2.646 1.303 -2.746> #<bodyset-link #X11857c90 RLEG_LINK4  294.525 -55.371 678.78 / 0.065 0.431 -0.113> #<bodyset-link #X115a6908 RLEG_LINK5  278.259 -60.933 642.663 / 0.065 0.431 -0.01>) (#<bodyset-link #X14617ec0 BODY  416.28 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #<bodyset-link #X113734b0 LLEG_LINK0  481.876 115.893 936.166 / 0.108 -2.784e-08 -3.012e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  481.876 115.893 814.166 / 0.108 -2.784e-08 -0.033> #<bodyset-link #X10027230 LLEG_LINK2  481.912 115.56 804.172 / 0.147 -0.868 -0.052> #<bodyset-link #X14c9bc38 LLEG_LINK3  771.278 138.602 558.944 / -0.576 1.518 -0.684> #<bodyset-link #X10a385f8 LLEG_LINK4  393.857 97.248 543.346 / 0.103 0.144 -0.034> #<bodyset-link #X14ba89c8 LLEG_LINK5  388.29 95.313 503.782 / 0.103 0.144 -0.005>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  236.669 -64.675 551.799 / 0.065 0.431 -0.01> #<cascaded-coords #X1235fdf0 :lleg-end-coords  374.07 93.319 404.818 / 0.103 0.144 -0.005>) :link-list ((#<bodyset-link #X14617ec0 BODY  416.28 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  350.683 -35.065 936.166 / 0.112 -2.783e-08 -3.135e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  350.683 -35.065 814.166 / 0.112 -2.783e-08 -0.102> #<bodyset-link #X148e35b8 RLEG_LINK2  350.797 -36.079 804.219 / 0.256 -0.948 -0.176> #<bodyset-link #X14a807b0 RLEG_LINK3  661.657 -23.59 586.02 / -2.646 1.303 -2.746> #<bodyset-link #X11857c90 RLEG_LINK4  294.525 -55.371 678.78 / 0.065 0.431 -0.113> #<bodyset-link #X115a6908 RLEG_LINK5  278.259 -60.933 642.663 / 0.065 0.431 -0.01>) (#<bodyset-link #X14617ec0 BODY  416.28 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #<bodyset-link #X113734b0 LLEG_LINK0  481.876 115.893 936.166 / 0.108 -2.784e-08 -3.012e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  481.876 115.893 814.166 / 0.108 -2.784e-08 -0.033> #<bodyset-link #X10027230 LLEG_LINK2  481.912 115.56 804.172 / 0.147 -0.868 -0.052> #<bodyset-link #X14c9bc38 LLEG_LINK3  771.278 138.602 558.944 / -0.576 1.518 -0.684> #<bodyset-link #X10a385f8 LLEG_LINK4  393.857 97.248 543.346 / 0.103 0.144 -0.034> #<bodyset-link #X14ba89c8 LLEG_LINK5  388.29 95.313 503.782 / 0.103 0.144 -0.005>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(376.442 88.2147 1219.36) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  416.28 40.414 926.666 / -0.715 -2.114e-08 1.837e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  236.669 -64.675 551.799 / 0.065 0.431 -0.01> #<cascaded-coords #X1235fdf0 :lleg-end-coords  374.07 93.319 404.818 / 0.103 0.144 -0.005>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  350.683 -35.065 936.166 / 0.112 -2.783e-08 -3.135e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  350.683 -35.065 814.166 / 0.112 -2.783e-08 -0.102> #<bodyset-link #X148e35b8 RLEG_LINK2  350.797 -36.079 804.219 / 0.256 -0.948 -0.176> #<bodyset-link #X14a807b0 RLEG_LINK3  661.657 -23.59 586.02 / -2.646 1.303 -2.746> #<bodyset-link #X11857c90 RLEG_LINK4  294.525 -55.371 678.78 / 0.065 0.431 -0.113> #<bodyset-link #X115a6908 RLEG_LINK5  278.259 -60.933 642.663 / 0.065 0.431 -0.01>) (#<bodyset-link #X113734b0 LLEG_LINK0  481.876 115.893 936.166 / 0.108 -2.784e-08 -3.012e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  481.876 115.893 814.166 / 0.108 -2.784e-08 -0.033> #<bodyset-link #X10027230 LLEG_LINK2  481.912 115.56 804.172 / 0.147 -0.868 -0.052> #<bodyset-link #X14c9bc38 LLEG_LINK3  771.278 138.602 558.944 / -0.576 1.518 -0.684> #<bodyset-link #X10a385f8 LLEG_LINK4  393.857 97.248 543.346 / 0.103 0.144 -0.034> #<bodyset-link #X14ba89c8 LLEG_LINK5  388.29 95.313 503.782 / 0.103 0.144 -0.005>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(376.442 88.2147 1219.36) :target-centroid-pos #f(376.442 88.2147 1219.36) :fix-limbs-target-coords (#<coordinates #X1985bcd0  0.003 -100.0 0.405 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.754792 0.655965 -2.800114e-08 416.28) (-0.655965 0.754792 -3.184985e-17 40.4141) (2.113502e-08 1.836776e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint617127384) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(31.51 11.237 0.0 0.0 0.0 -20.607) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.002631 -100.0 0.404585) :rot #2f((1.0 -1.693553e-10 -1.103048e-16) (1.693553e-10 1.0 -5.587947e-10) (1.103994e-16 5.587947e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.589415e-18 0.0) (0.0 1.0 0.0 0.0) (7.589415e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.890458e-18 0.0) (0.0 1.0 0.0 0.0) (8.890458e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.589415e-18 0.0) (0.0 1.0 0.0 0.0) (7.589415e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.890458e-18 0.0) (0.0 1.0 0.0 0.0) (8.890458e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(376.442 88.2147 1219.36) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -7.589415e-18 0.0) (0.0 1.0 0.0 0.0) (7.589415e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -8.890458e-18 0.0) (0.0 1.0 0.0 0.0) (8.890458e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(376.442 88.2147 1219.36) :target-centroid-pos #f(376.442 88.2147 1219.36) :fix-limbs-target-coords (list #<coordinates #X1985bcd0  0.003 -100.0 0.405 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-39-82-06-76-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-39-82-06-76-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-189.338 -13.4783 -349.871)/(398.046/1)
;; dif-rot : #f(0.000668 -0.057609 -0.008255)/(0.058201/0.017453)
;; dif-pos : #f(-2.89155 -0.179499 2.37085)/(3.74356/1)
;; dif-rot : #f(6.737358e-05 -0.016646 -0.015011)/(0.022415/0.017453)
;; cog-dif : #f(20.8892 -0.422377)/(20.8935/5.0)
;;  coords : #<coordinates #X13271e38  398.173 51.148 -91.834 / -0.652 -2.227e-08 1.698e-08>
;;  angles : (#f(32.6351 11.8708 0.0 0.0 0.0 -21.1723) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X19c9ecf8  0.005 -100.0 0.632 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  209.055 -84.647 339.015 / 0.008 0.058 -0.0> #<cascaded-coords #X1235fdf0 :lleg-end-coords  402.862 100.223 397.713 / 0.015 0.017 5.757e-05>) :link-list ((#<bodyset-link #X14617ec0 BODY  398.172 51.148 926.666 / -0.652 -2.227e-08 1.698e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  337.533 -28.368 936.166 / 0.017 -2.800e-08 -4.638e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  337.533 -28.368 814.166 / 0.017 -2.800e-08 -0.143> #<bodyset-link #X148e35b8 RLEG_LINK2  337.556 -29.796 804.269 / 0.146 -0.729 -0.193> #<bodyset-link #X14a807b0 RLEG_LINK3  593.821 -65.704 525.99 / -0.825 1.38 -0.851> #<bodyset-link #X11857c90 RLEG_LINK4  217.045 -78.817 478.372 / 0.008 0.058 -0.144> #<bodyset-link #X115a6908 RLEG_LINK5  214.812 -84.556 438.849 / 0.008 0.058 -0.0>) (#<bodyset-link #X14617ec0 BODY  398.172 51.148 926.666 / -0.652 -2.227e-08 1.698e-08> #<bodyset-link #X113734b0 LLEG_LINK0  458.812 130.664 936.166 / 0.017 -2.800e-08 -4.638e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  458.812 130.664 814.166 / 0.017 -2.800e-08 -0.093> #<bodyset-link #X10027230 LLEG_LINK2  458.828 129.735 804.21 / 0.161 -0.997 -0.172> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.607 116.088 600.95 / -0.483 1.379 -0.508> #<bodyset-link #X10a385f8 LLEG_LINK4  405.134 103.967 537.521 / 0.015 0.017 -0.093> #<bodyset-link #X14ba89c8 LLEG_LINK5  404.527 100.242 497.699 / 0.015 0.017 5.757e-05>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  209.055 -84.647 339.015 / 0.008 0.058 -0.0> #<cascaded-coords #X1235fdf0 :lleg-end-coords  402.862 100.223 397.713 / 0.015 0.017 5.757e-05>) :link-list ((#<bodyset-link #X14617ec0 BODY  398.172 51.148 926.666 / -0.652 -2.227e-08 1.698e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  337.533 -28.368 936.166 / 0.017 -2.800e-08 -4.638e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  337.533 -28.368 814.166 / 0.017 -2.800e-08 -0.143> #<bodyset-link #X148e35b8 RLEG_LINK2  337.556 -29.796 804.269 / 0.146 -0.729 -0.193> #<bodyset-link #X14a807b0 RLEG_LINK3  593.821 -65.704 525.99 / -0.825 1.38 -0.851> #<bodyset-link #X11857c90 RLEG_LINK4  217.045 -78.817 478.372 / 0.008 0.058 -0.144> #<bodyset-link #X115a6908 RLEG_LINK5  214.812 -84.556 438.849 / 0.008 0.058 -0.0>) (#<bodyset-link #X14617ec0 BODY  398.172 51.148 926.666 / -0.652 -2.227e-08 1.698e-08> #<bodyset-link #X113734b0 LLEG_LINK0  458.812 130.664 936.166 / 0.017 -2.800e-08 -4.638e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  458.812 130.664 814.166 / 0.017 -2.800e-08 -0.093> #<bodyset-link #X10027230 LLEG_LINK2  458.828 129.735 804.21 / 0.161 -0.997 -0.172> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.607 116.088 600.95 / -0.483 1.379 -0.508> #<bodyset-link #X10a385f8 LLEG_LINK4  405.134 103.967 537.521 / 0.015 0.017 -0.093> #<bodyset-link #X14ba89c8 LLEG_LINK5  404.527 100.242 497.699 / 0.015 0.017 5.757e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(377.861 88.9244 1219.48) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  398.172 51.148 926.666 / -0.652 -2.227e-08 1.698e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  209.055 -84.647 339.015 / 0.008 0.058 -0.0> #<cascaded-coords #X1235fdf0 :lleg-end-coords  402.862 100.223 397.713 / 0.015 0.017 5.757e-05>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  337.533 -28.368 936.166 / 0.017 -2.800e-08 -4.638e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  337.533 -28.368 814.166 / 0.017 -2.800e-08 -0.143> #<bodyset-link #X148e35b8 RLEG_LINK2  337.556 -29.796 804.269 / 0.146 -0.729 -0.193> #<bodyset-link #X14a807b0 RLEG_LINK3  593.821 -65.704 525.99 / -0.825 1.38 -0.851> #<bodyset-link #X11857c90 RLEG_LINK4  217.045 -78.817 478.372 / 0.008 0.058 -0.144> #<bodyset-link #X115a6908 RLEG_LINK5  214.812 -84.556 438.849 / 0.008 0.058 -0.0>) (#<bodyset-link #X113734b0 LLEG_LINK0  458.812 130.664 936.166 / 0.017 -2.800e-08 -4.638e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  458.812 130.664 814.166 / 0.017 -2.800e-08 -0.093> #<bodyset-link #X10027230 LLEG_LINK2  458.828 129.735 804.21 / 0.161 -0.997 -0.172> #<bodyset-link #X14c9bc38 LLEG_LINK3  779.607 116.088 600.95 / -0.483 1.379 -0.508> #<bodyset-link #X10a385f8 LLEG_LINK4  405.134 103.967 537.521 / 0.015 0.017 -0.093> #<bodyset-link #X14ba89c8 LLEG_LINK5  404.527 100.242 497.699 / 0.015 0.017 5.757e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(377.861 88.9244 1219.48) :target-centroid-pos #f(377.861 88.9244 1219.48) :fix-limbs-target-coords (#<coordinates #X19c9ecf8  0.005 -100.0 0.632 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.795162 0.606396 -2.800114e-08 398.173) (-0.606396 0.795162 -3.184985e-17 51.1478) (2.226545e-08 1.697979e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint598330504) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(32.6351 11.8708 0.0 0.0 0.0 -21.1723) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.005139 -100.0 0.632047) :rot #2f((1.0 -1.693520e-10 -1.103323e-16) (1.693520e-10 1.0 -5.587841e-10) (1.104269e-16 5.587841e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.403032e-18 -2.842171e-14) (0.0 1.0 0.0 0.0) (2.403032e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.943108e-19 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-9.943108e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.403032e-18 -2.842171e-14) (0.0 1.0 0.0 0.0) (2.403032e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.943108e-19 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-9.943108e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(377.861 88.9244 1219.48) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -2.403032e-18 -2.842171e-14) (0.0 1.0 0.0 0.0) (2.403032e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 9.943108e-19 5.684342e-14) (0.0 1.0 0.0 -1.421085e-14) (-9.943108e-19 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(377.861 88.9244 1219.48) :target-centroid-pos #f(377.861 88.9244 1219.48) :fix-limbs-target-coords (list #<coordinates #X19c9ecf8  0.005 -100.0 0.632 / 1.694e-10 -1.104e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-40-14-04-28-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-40-14-04-28-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-14.7394 40.9562 -0.002466)/(43.5277/1)
;; dif-rot : #f(2.602849e-09 -5.406031e-11 -0.094559)/(0.094559/0.017453)
;; dif-pos : #f(33.4906 7.10518 1.03567)/(34.2516/1)
;; dif-rot : #f(0.021275 -0.201187 -0.086381)/(0.219978/0.017453)
;; cog-dif : #f(3.98803 6.09077)/(7.28023/5.0)
;;  coords : #<coordinates #X13271e38  439.256 43.399 -91.834 / -0.706 -2.132e-08 1.816e-08>
;;  angles : (#f(33.6904 12.5357 0.0 0.0 0.0 -21.6514) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1a3dc540  0.009 -100.0 0.91 / 1.693e-10 -1.105e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  18.549 -139.382 0.912 / 0.095 1.242e-10 -2.040e-09> #<cascaded-coords #X1235fdf0 :lleg-end-coords  367.741 90.094 405.92 / 0.085 0.202 -0.013>) :link-list ((#<bodyset-link #X14617ec0 BODY  439.256 43.399 926.666 / -0.706 -2.132e-08 1.816e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  374.412 -32.727 936.166 / 0.095 -2.788e-08 -2.644e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  374.412 -32.727 814.166 / 0.095 -2.788e-08 -0.101> #<bodyset-link #X148e35b8 RLEG_LINK2  374.507 -33.735 804.218 / 0.041 0.488 -0.115> #<bodyset-link #X14a807b0 RLEG_LINK3  199.428 -84.421 470.784 / 0.038 0.506 -0.116> #<bodyset-link #X11857c90 RLEG_LINK4  18.167 -135.35 140.707 / 0.095 1.242e-10 -0.101> #<bodyset-link #X115a6908 RLEG_LINK5  18.549 -139.382 100.912 / 0.095 1.242e-10 -2.040e-09>) (#<bodyset-link #X14617ec0 BODY  439.256 43.399 926.666 / -0.706 -2.132e-08 1.816e-08> #<bodyset-link #X113734b0 LLEG_LINK0  504.101 119.525 936.166 / 0.095 -2.787e-08 -2.668e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  504.101 119.525 814.166 / 0.095 -2.787e-08 -0.049> #<bodyset-link #X10027230 LLEG_LINK2  504.148 119.036 804.178 / 0.145 -0.787 -0.07> #<bodyset-link #X14c9bc38 LLEG_LINK3  773.662 131.639 536.591 / -1.808 1.519 -1.903> #<bodyset-link #X10a385f8 LLEG_LINK4  395.416 95.748 543.021 / 0.085 0.202 -0.05> #<bodyset-link #X14ba89c8 LLEG_LINK5  387.606 93.07 503.882 / 0.085 0.202 -0.013>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  18.549 -139.382 0.912 / 0.095 1.242e-10 -2.040e-09> #<cascaded-coords #X1235fdf0 :lleg-end-coords  367.741 90.094 405.92 / 0.085 0.202 -0.013>) :link-list ((#<bodyset-link #X14617ec0 BODY  439.256 43.399 926.666 / -0.706 -2.132e-08 1.816e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  374.412 -32.727 936.166 / 0.095 -2.788e-08 -2.644e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  374.412 -32.727 814.166 / 0.095 -2.788e-08 -0.101> #<bodyset-link #X148e35b8 RLEG_LINK2  374.507 -33.735 804.218 / 0.041 0.488 -0.115> #<bodyset-link #X14a807b0 RLEG_LINK3  199.428 -84.421 470.784 / 0.038 0.506 -0.116> #<bodyset-link #X11857c90 RLEG_LINK4  18.167 -135.35 140.707 / 0.095 1.242e-10 -0.101> #<bodyset-link #X115a6908 RLEG_LINK5  18.549 -139.382 100.912 / 0.095 1.242e-10 -2.040e-09>) (#<bodyset-link #X14617ec0 BODY  439.256 43.399 926.666 / -0.706 -2.132e-08 1.816e-08> #<bodyset-link #X113734b0 LLEG_LINK0  504.101 119.525 936.166 / 0.095 -2.787e-08 -2.668e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  504.101 119.525 814.166 / 0.095 -2.787e-08 -0.049> #<bodyset-link #X10027230 LLEG_LINK2  504.148 119.036 804.178 / 0.145 -0.787 -0.07> #<bodyset-link #X14c9bc38 LLEG_LINK3  773.662 131.639 536.591 / -1.808 1.519 -1.903> #<bodyset-link #X10a385f8 LLEG_LINK4  395.416 95.748 543.021 / 0.085 0.202 -0.05> #<bodyset-link #X14ba89c8 LLEG_LINK5  387.606 93.07 503.882 / 0.085 0.202 -0.013>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(379.195 89.5914 1219.61) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  439.256 43.399 926.666 / -0.706 -2.132e-08 1.816e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  18.549 -139.382 0.912 / 0.095 1.242e-10 -2.040e-09> #<cascaded-coords #X1235fdf0 :lleg-end-coords  367.741 90.094 405.92 / 0.085 0.202 -0.013>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  374.412 -32.727 936.166 / 0.095 -2.788e-08 -2.644e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  374.412 -32.727 814.166 / 0.095 -2.788e-08 -0.101> #<bodyset-link #X148e35b8 RLEG_LINK2  374.507 -33.735 804.218 / 0.041 0.488 -0.115> #<bodyset-link #X14a807b0 RLEG_LINK3  199.428 -84.421 470.784 / 0.038 0.506 -0.116> #<bodyset-link #X11857c90 RLEG_LINK4  18.167 -135.35 140.707 / 0.095 1.242e-10 -0.101> #<bodyset-link #X115a6908 RLEG_LINK5  18.549 -139.382 100.912 / 0.095 1.242e-10 -2.040e-09>) (#<bodyset-link #X113734b0 LLEG_LINK0  504.101 119.525 936.166 / 0.095 -2.787e-08 -2.668e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  504.101 119.525 814.166 / 0.095 -2.787e-08 -0.049> #<bodyset-link #X10027230 LLEG_LINK2  504.148 119.036 804.178 / 0.145 -0.787 -0.07> #<bodyset-link #X14c9bc38 LLEG_LINK3  773.662 131.639 536.591 / -1.808 1.519 -1.903> #<bodyset-link #X10a385f8 LLEG_LINK4  395.416 95.748 543.021 / 0.085 0.202 -0.05> #<bodyset-link #X14ba89c8 LLEG_LINK5  387.606 93.07 503.882 / 0.085 0.202 -0.013>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(379.195 89.5914 1219.61) :target-centroid-pos #f(379.195 89.5914 1219.61) :fix-limbs-target-coords (#<coordinates #X1a3dc540  0.009 -100.0 0.91 / 1.693e-10 -1.105e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.761259 0.648448 -2.800114e-08 439.256) (-0.648448 0.761259 -3.184985e-17 43.3986) (2.131613e-08 1.815727e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint592510496) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(33.6904 12.5357 0.0 0.0 0.0 -21.6514) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.008879 -100.0 0.909942) :rot #2f((1.0 -1.693478e-10 -1.103688e-16) (1.693478e-10 1.0 -5.587699e-10) (1.104634e-16 5.587699e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.305061e-54 -1.292470e-26 -8.881784e-16) (1.305061e-54 1.0 2.019484e-28 -2.842171e-14) (1.292470e-26 -2.019484e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.312591e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (-5.312591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.305061e-54 -1.292470e-26 -8.881784e-16) (1.305061e-54 1.0 2.019484e-28 -2.842171e-14) (1.292470e-26 -2.019484e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.312591e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (-5.312591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(379.195 89.5914 1219.61) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 1.305061e-54 -1.292470e-26 -8.881784e-16) (1.305061e-54 1.0 2.019484e-28 -2.842171e-14) (1.292470e-26 -2.019484e-28 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 5.312591e-18 0.0) (0.0 1.0 0.0 7.105427e-15) (-5.312591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(379.195 89.5914 1219.61) :target-centroid-pos #f(379.195 89.5914 1219.61) :fix-limbs-target-coords (list #<coordinates #X1a3dc540  0.009 -100.0 0.91 / 1.693e-10 -1.105e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-40-46-61-78-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-40-46-61-78-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-272.317 -21.4904 -424.41)/(504.72/1)
;; dif-rot : #f(0.00082 -0.018189 -0.016962)/(0.024884/0.017453)
;; dif-pos : #f(3.93946 -0.442626 -2.68257)/(4.78659/1)
;; dif-rot : #f(-2.960535e-05 0.001913 -0.018383)/(0.018483/0.017453)
;; cog-dif : #f(35.7982 4.07182)/(36.0291/5.0)
;;  coords : #<coordinates #X13271e38  381.445 48.375 -91.834 / -0.622 -2.275e-08 1.632e-08>
;;  angles : (#f(34.68 13.2333 0.0 0.0 0.0 -22.0472) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1ab11028  0.014 -100.0 1.238 / 1.693e-10 -1.105e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  279.598 -73.483 420.61 / 0.017 0.018 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.062 100.37 402.807 / 0.018 -0.002 1.202e-05>) :link-list ((#<bodyset-link #X14617ec0 BODY  381.445 48.375 926.666 / -0.622 -2.275e-08 1.632e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  323.154 -32.879 936.166 / 0.019 -2.800e-08 -5.437e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  323.154 -32.879 814.166 / 0.019 -2.800e-08 -0.134> #<bodyset-link #X148e35b8 RLEG_LINK2  323.18 -34.218 804.257 / 0.258 -1.052 -0.273> #<bodyset-link #X14a807b0 RLEG_LINK3  656.538 -52.288 622.746 / -0.653 1.357 -0.683> #<bodyset-link #X11857c90 RLEG_LINK4  282.046 -68.014 560.226 / 0.017 0.018 -0.134> #<bodyset-link #X115a6908 RLEG_LINK5  281.416 -73.386 520.593 / 0.017 0.018 -0.001>) (#<bodyset-link #X14617ec0 BODY  381.445 48.375 926.666 / -0.622 -2.275e-08 1.632e-08> #<bodyset-link #X113734b0 LLEG_LINK0  439.737 129.628 936.166 / 0.018 -2.800e-08 -5.098e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  439.737 129.628 814.166 / 0.018 -2.800e-08 -0.091> #<bodyset-link #X10027230 LLEG_LINK2  439.753 128.718 804.208 / 0.174 -1.038 -0.18> #<bodyset-link #X14c9bc38 LLEG_LINK3  768.678 117.344 614.263 / -0.423 1.36 -0.45> #<bodyset-link #X10a385f8 LLEG_LINK4  395.727 104.004 542.641 / 0.018 -0.002 -0.091> #<bodyset-link #X14ba89c8 LLEG_LINK5  395.87 100.366 502.807 / 0.018 -0.002 1.202e-05>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  279.598 -73.483 420.61 / 0.017 0.018 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.062 100.37 402.807 / 0.018 -0.002 1.202e-05>) :link-list ((#<bodyset-link #X14617ec0 BODY  381.445 48.375 926.666 / -0.622 -2.275e-08 1.632e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  323.154 -32.879 936.166 / 0.019 -2.800e-08 -5.437e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  323.154 -32.879 814.166 / 0.019 -2.800e-08 -0.134> #<bodyset-link #X148e35b8 RLEG_LINK2  323.18 -34.218 804.257 / 0.258 -1.052 -0.273> #<bodyset-link #X14a807b0 RLEG_LINK3  656.538 -52.288 622.746 / -0.653 1.357 -0.683> #<bodyset-link #X11857c90 RLEG_LINK4  282.046 -68.014 560.226 / 0.017 0.018 -0.134> #<bodyset-link #X115a6908 RLEG_LINK5  281.416 -73.386 520.593 / 0.017 0.018 -0.001>) (#<bodyset-link #X14617ec0 BODY  381.445 48.375 926.666 / -0.622 -2.275e-08 1.632e-08> #<bodyset-link #X113734b0 LLEG_LINK0  439.737 129.628 936.166 / 0.018 -2.800e-08 -5.098e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  439.737 129.628 814.166 / 0.018 -2.800e-08 -0.091> #<bodyset-link #X10027230 LLEG_LINK2  439.753 128.718 804.208 / 0.174 -1.038 -0.18> #<bodyset-link #X14c9bc38 LLEG_LINK3  768.678 117.344 614.263 / -0.423 1.36 -0.45> #<bodyset-link #X10a385f8 LLEG_LINK4  395.727 104.004 542.641 / 0.018 -0.002 -0.091> #<bodyset-link #X14ba89c8 LLEG_LINK5  395.87 100.366 502.807 / 0.018 -0.002 1.202e-05>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(380.449 90.2182 1219.73) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  381.445 48.375 926.666 / -0.622 -2.275e-08 1.632e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  279.598 -73.483 420.61 / 0.017 0.018 -0.001> #<cascaded-coords #X1235fdf0 :lleg-end-coords  396.062 100.37 402.807 / 0.018 -0.002 1.202e-05>) :link-list ((#<bodyset-link #X14e81de8 RLEG_LINK0  323.154 -32.879 936.166 / 0.019 -2.800e-08 -5.437e-10> #<bodyset-link #X1115b7f0 RLEG_LINK1  323.154 -32.879 814.166 / 0.019 -2.800e-08 -0.134> #<bodyset-link #X148e35b8 RLEG_LINK2  323.18 -34.218 804.257 / 0.258 -1.052 -0.273> #<bodyset-link #X14a807b0 RLEG_LINK3  656.538 -52.288 622.746 / -0.653 1.357 -0.683> #<bodyset-link #X11857c90 RLEG_LINK4  282.046 -68.014 560.226 / 0.017 0.018 -0.134> #<bodyset-link #X115a6908 RLEG_LINK5  281.416 -73.386 520.593 / 0.017 0.018 -0.001>) (#<bodyset-link #X113734b0 LLEG_LINK0  439.737 129.628 936.166 / 0.018 -2.800e-08 -5.098e-10> #<bodyset-link #Xfbddc18 LLEG_LINK1  439.737 129.628 814.166 / 0.018 -2.800e-08 -0.091> #<bodyset-link #X10027230 LLEG_LINK2  439.753 128.718 804.208 / 0.174 -1.038 -0.18> #<bodyset-link #X14c9bc38 LLEG_LINK3  768.678 117.344 614.263 / -0.423 1.36 -0.45> #<bodyset-link #X10a385f8 LLEG_LINK4  395.727 104.004 542.641 / 0.018 -0.002 -0.091> #<bodyset-link #X14ba89c8 LLEG_LINK5  395.87 100.366 502.807 / 0.018 -0.002 1.202e-05>)) :fix-limbs (:rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (1 1) :rthre (0.017453 0.017453) :target-centroid-pos #f(380.449 90.2182 1219.73) :target-centroid-pos #f(380.449 90.2182 1219.73) :fix-limbs-target-coords (#<coordinates #X1ab11028  0.014 -100.0 1.238 / 1.693e-10 -1.105e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)
;; command : (let ((r (instance jaxon_red-robot :init))) (progn (send r :newcoords (make-coords :4x4 #2f((0.812535 0.582913 -2.800114e-08 381.445) (-0.582913 0.812535 -3.184985e-17 48.3749) (2.275190e-08 1.632222e-08 1.0 -91.8336) (0.0 0.0 0.0 1.0)))) (mapc #'(lambda (j a) (send* j :joint-angle a nil)) (list (send r :joint444221456) (send r :rleg_joint0) (send r :rleg_joint1) (send r :rleg_joint2) (send r :rleg_joint3) (send r :rleg_joint4) (send r :rleg_joint5) (send r :lleg_joint0) (send r :lleg_joint1) (send r :lleg_joint2) (send r :lleg_joint3) (send r :lleg_joint4) (send r :lleg_joint5) (send r :chest_joint0) (send r :chest_joint1) (send r :chest_joint2) (send r :head_joint0) (send r :head_joint1) (send r :rarm_joint0) (send r :rarm_joint1) (send r :rarm_joint2) (send r :rarm_joint3) (send r :rarm_joint4) (send r :rarm_joint5) (send r :rarm_joint6) (send r :rarm_joint7) (send r :larm_joint0) (send r :larm_joint1) (send r :larm_joint2) (send r :larm_joint3) (send r :larm_joint4) (send r :larm_joint5) (send r :larm_joint6) (send r :larm_joint7)) '(#f(34.68 13.2333 0.0 0.0 0.0 -22.0472) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)) (objects (list r))) (send* r :inverse-kinematics (list (list (make-coords :pos #f(0.014097 -100.0 1.2382) :rot #2f((1.0 -1.693423e-10 -1.104154e-16) (1.693423e-10 1.0 -5.587519e-10) (1.105100e-16 5.587519e-10 1.0))) (make-coords :pos #f(400.014 100.0 400.132) :rot #2f((1.0 2.964804e-17 -2.215895e-16) (-2.964804e-17 1.0 6.938894e-18) (2.215895e-16 -6.938894e-18 1.0)))) :dump-command nil :debug-view t :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.458591e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-1.458591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.680972e-20 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.680972e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.458591e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-1.458591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.680972e-20 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.680972e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "BODY") (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "BODY") (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(380.449 90.2182 1219.73) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list (list (list (send r :link "BODY") #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (list (let* ((p (send r :link "RLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 1.458591e-18 0.0) (0.0 1.0 0.0 -1.421085e-14) (-1.458591e-18 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt) (let* ((p (send r :link "LLEG_LINK5")) (mt (make-cascoords :coords (send (send p :copy-worldcoords) :transform (make-coords :4x4 #2f((1.0 0.0 -6.680972e-20 -5.684342e-14) (0.0 1.0 0.0 0.0) (6.680972e-20 0.0 1.0 -100.0) (0.0 0.0 0.0 1.0))))))) (send p :assoc mt) mt)) :link-list (list (list (send r :link "RLEG_LINK0") (send r :link "RLEG_LINK1") (send r :link "RLEG_LINK2") (send r :link "RLEG_LINK3") (send r :link "RLEG_LINK4") (send r :link "RLEG_LINK5")) (list (send r :link "LLEG_LINK0") (send r :link "LLEG_LINK1") (send r :link "LLEG_LINK2") (send r :link "LLEG_LINK3") (send r :link "LLEG_LINK4") (send r :link "LLEG_LINK5"))) :fix-limbs (list :rleg :lleg) :root-link-virtual-joint-weight #f(0.1 0.1 0.0 0.0 0.0 0.5) :thre (list 1 1) :rthre (list 0.017453 0.017453) :target-centroid-pos #f(380.449 90.2182 1219.73) :target-centroid-pos #f(380.449 90.2182 1219.73) :fix-limbs-target-coords (list #<coordinates #X1ab11028  0.014 -100.0 1.238 / 1.693e-10 -1.105e-16 5.588e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :cog-gain 3.5 :stop 100)))
;; dump debug command to /tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-40-79-29-97-failure.l
;; (progn (load "/tmp/irtmodel-ik-15660/jaxon_red-robot-2019-10-04-18-25-40-79-29-97-failure.l")(ik-setup)(ik-check))
;; inverse-kinematics failed.
;; dif-pos : #f(-106.261 33.7115 -308.628)/(328.145/1)
;; dif-rot : #f(0.012874 -0.104461 -0.065101)/(0.123757/0.017453)
;; dif-pos : #f(27.5887 -3.32444 -0.596757)/(27.7947/1)
  C-c C-c;; dif-rot : #f(0.00851 -0.157287 -0.074106)/(0.174079/0.017453)
;; cog-dif : #f(4.98934 2.60701)/(5.62939/5.0)
;;  coords : #<coordinates #X13271e38  425.738 49.881 -91.834 / -0.663 -2.207e-08 1.723e-08>
;;  angles : (#f(35.6077 13.9649 0.0 0.0 0.0 -22.3619) 24.786 -4.1849 27.6052 2.32124 -29.9264 4.1849 24.786 -6.16271 -58.604 138.319 -79.3913 6.16271 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
;;    args : ((#<coordinates #X1af81f38  0.021 -100.0 1.617 / 1.693e-10 -1.106e-16 5.587e-10> #<coordinates #X29ee7e50 :lleg  400.014 100.0 400.132 / -2.965e-17 -2.216e-16 -6.939e-18>) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  139.718 -121.798 297.74 / 0.065 0.105 -0.009> #<cascaded-coords #X1235fdf0 :lleg-end-coords  372.687 101.308 405.039 / 0.074 0.157 -0.003>) :link-list ((#<bodyset-link #X14617ec0 BODY  425.738 49.881 926.666 / -0.663 -2.207e-08 1.723e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  364.206 -28.947 936.166 / 0.083 -2.790e-08 -2.325e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  364.206 -28.947 814.166 / 0.083 -2.790e-08 -0.174> #<bodyset-link #X148e35b8 RLEG_LINK2  364.35 -30.668 804.317 / 0.164 -0.434 -0.192> #<bodyset-link #X14a807b0 RLEG_LINK3  530.845 -76.378 465.805 / -1.059 1.38 -1.149> #<bodyset-link #X11857c90 RLEG_LINK4  153.758 -112.974 436.362 / 0.065 0.105 -0.175> #<bodyset-link #X115a6908 RLEG_LINK5  150.095 -120.174 397.186 / 0.065 0.105 -0.009>) (#<bodyset-link #X14617ec0 BODY  425.738 49.881 926.666 / -0.663 -2.207e-08 1.723e-08> #<bodyset-link #X113734b0 LLEG_LINK0  487.271 128.708 936.166 / 0.083 -2.790e-08 -2.324e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  487.271 128.708 814.166 / 0.083 -2.790e-08 -0.057> #<bodyset-link #X10027230 LLEG_LINK2  487.318 128.142 804.183 / 0.148 -0.848 -0.086> #<bodyset-link #X14c9bc38 LLEG_LINK3  772.877 137.61 553.65 / -1.038 1.508 -1.122> #<bodyset-link #X10a385f8 LLEG_LINK4  394.379 105.495 543.241 / 0.074 0.157 -0.058> #<bodyset-link #X14ba89c8 LLEG_LINK5  388.305 102.736 503.801 / 0.074 0.157 -0.003>)) :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  139.718 -121.798 297.74 / 0.065 0.105 -0.009> #<cascaded-coords #X1235fdf0 :lleg-end-coords  372.687 101.308 405.039 / 0.074 0.157 -0.003>) :link-list ((#<bodyset-link #X14617ec0 BODY  425.738 49.881 926.666 / -0.663 -2.207e-08 1.723e-08> #<bodyset-link #X14e81de8 RLEG_LINK0  364.206 -28.947 936.166 / 0.083 -2.790e-08 -2.325e-09> #<bodyset-link #X1115b7f0 RLEG_LINK1  364.206 -28.947 814.166 / 0.083 -2.790e-08 -0.174> #<bodyset-link #X148e35b8 RLEG_LINK2  364.35 -30.668 804.317 / 0.164 -0.434 -0.192> #<bodyset-link #X14a807b0 RLEG_LINK3  530.845 -76.378 465.805 / -1.059 1.38 -1.149> #<bodyset-link #X11857c90 RLEG_LINK4  153.758 -112.974 436.362 / 0.065 0.105 -0.175> #<bodyset-link #X115a6908 RLEG_LINK5  150.095 -120.174 397.186 / 0.065 0.105 -0.009>) (#<bodyset-link #X14617ec0 BODY  425.738 49.881 926.666 / -0.663 -2.207e-08 1.723e-08> #<bodyset-link #X113734b0 LLEG_LINK0  487.271 128.708 936.166 / 0.083 -2.790e-08 -2.324e-09> #<bodyset-link #Xfbddc18 LLEG_LINK1  487.271 128.708 814.166 / 0.083 -2.790e-08 -0.057> #<bodyset-link #X10027230 LLEG_LINK2  487.318 128.142 804.183 / 0.148 -0.848 -0.086> #<bodyset-link #X14c9bc38 LLEG_LINK3  772.877 137.61 553.65 / -1.038 1.508 -1.122> #<bodyset-link #X10a385f8 LLEG_LINK4  394.379 105.495 543.241 / 0.074 0.157 -0.058> #<bodyset-link #X14ba89c8 LLEG_LINK5  388.305 102.736 503.801 / 0.074 0.157 -0.003>)) :cog-gain 3.5 :centroid-thre 5.0 :target-centroid-pos #f(381.627 90.8073 1219.87) :cog-translation-axis :z :centroid-offset-func nil :cog-null-space nil :min-loop 2 :additional-weight-list ((#<bodyset-link #X14617ec0 BODY  425.738 49.881 926.666 / -0.663 -2.207e-08 1.723e-08> #f(0.1 0.1 0.0 0.0 0.0 0.5))) :stop 100 :cog-gain 3.5 :additional-weight-list nil :move-target (#<cascaded-coords #X1236cba0 :rleg-end-coords  139.718 -121.798 297.74 / 0.065 0.105 -0.009> #<cascaded-coords #X1235fdf0 :lleg-end-coords  372.687 101.308 405.039 / 0.074 0.157 -0.003>) :link-list ((#<bodyset-link #X14e81de8 RLinterrupt
66.B1-irteusgl$   C-c C-c
interrupt66.B2-irteusgl$   C-c C-c
interrupt66.B3-irteusgl$   C-c C-c
interrupt66.B4-irteusgl$ reset
67.irteusgl$ 
nil
67.irteusgl$ 
nil
67.irteusgl$ load "box-climb-stair.l 
t
68.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
69.irteusgl$ load "box-climb-stair.l 
t
70.irteusgl$ generate-walk-up-motion
generating walking pattern ...

71.irteusgl$ 
nil
71.irteusgl$ 
nil
71.irteusgl$ 
nil
71.irteusgl$ 
nil
71.irteusgl$ execute-motion
real machine move
move to initial pose
[ERROR] [1570181210.348730894, 2853.724000000]: [fullbody_controller/follow_joint_trajectory_action] :wait-for-result (return nil when no goal exists)
move
[ERROR] [1570181212.266027953, 2855.530000000]: [fullbody_controller/follow_joint_trajectory_action] :wait-for-result (return nil when no goal exists)
(nil)
72.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
73.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #Xfbdd618>
74.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X106719c0>
75.irteusgl$ load "box-climb-stair.l 
t
76.irteusgl$ execute-motion
real machine move
move to initial pose
move
#<hrpsys_ros_bridge::openhrp_sequenceplayerservice_setjointanglessequencefullresponse #X7adad10>
77.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X132eecb0>
78.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
79.irteusgl$ 
nil
79.irteusgl$ 
nil
79.irteusgl$ load "box-climb-stair.l 
t
80.irteusgl$ execute-motion
real machine move
move to initial pose
  C-c C-c
interrupt81.B1-irteusgl$   C-c C-c
interrupt81.B2-irteusgl$ reset
82.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
83.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X19b5bfc0>
84.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X19d9f438>
85.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
86.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X1a68db78>
87.irteusgl$ 
nil
87.irteusgl$ 
nil
87.irteusgl$ 
nil
87.irteusgl$ execute-motion
real machine move
move to initial pose

  C-c C-c
interrupt88.B1-irteusgl$   C-c C-c
interrupt88.B2-irteusgl$   C-c C-c
interrupt88.B3-irteusgl$ 
nil
88.B3-irteusgl$ 
nil
88.B3-irteusgl$ 
nil
88.B3-irteusgl$ reset
89.irteusgl$ load "box-climb-stair.l 
t
90.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
91.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1ae93cf8>
92.irteusgl$ 
nil
92.irteusgl$ 
nil
92.irteusgl$ 
nil
92.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X1adda4c0>
93.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1addaa48>
94.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X1addafd0>
95.irteusgl$ load "box-climb-stair.l 
t
96.irteusgl$ generate-walk-up-motion
generating walking pattern ...

97.irteusgl$ 
nil
97.irteusgl$ 
nil
97.irteusgl$ 
nil
97.irteusgl$ 
nil
97.irteusgl$ execute-motion
real machine move
move to initial pose
move
#<hrpsys_ros_bridge::openhrp_sequenceplayerservice_setjointanglessequencefullresponse #X7a68860>
98.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X24ad3f48>
99.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
100.irteusgl$ execute-motion
real machine move
move to initial pose
move
#<hrpsys_ros_bridge::openhrp_sequenceplayerservice_setjointanglessequencefullresponse #X7ada8a8>
101.irteusgl$ generate-walk-up-motion
generating walking pattern ...

102.irteusgl$ load "box-climb-stair.l 
t
103.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
104.irteusgl$ (send *robot* :move-centroid-on-foot :both (make-coords))
Call Stack (max depth: 20):
  0: at (send *robot* :move-centroid-on-foot :both (make-coords))
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: sequence expected in (send *robot* :move-centroid-on-foot :both (make-coords))
105.E1-irteusgl$ reset
106.irteusgl$ (send *robot* :move-centroid-on-foot :both '(:lleg :rleg) (make-coords))
Call Stack (max depth: 20):
  0: at (send *robot* :move-centroid-on-foot :both '(:lleg :rleg) (make-coords))
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: keyword expected for arguments in (send *robot* :move-centroid-on-foot :both '(:lleg :rleg) (make-coords))
107.E1-irteusgl$ reset
108.irteusgl$ (send *robot* :move-centroid-on-foot '(:lleg :rleg) :both (make-coords))
Call Stack (max depth: 20):
  0: at (send *robot* :move-centroid-on-foot '(:lleg :rleg) :both (make-coords))
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: keyword expected for arguments in (send *robot* :move-centroid-on-foot '(:lleg :rleg) :both (make-coords))
109.E1-irteusgl$ reset
110.irteusgl$ (send *robot* :move-centroid-on-foot (make-coords) :both)
Call Stack (max depth: 20):
  0: at (send *robot* :move-centroid-on-foot (make-coords) :both)
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: cannot find method #<coordinates #X12d8f440  0.0 0.0 0.0 / 0.0 0.0 0.0> in (send *robot* :move-centroid-on-foot (make-coords) :both)
111.E1-irteusgl$ reset
112.irteusgl$ (send *robot* :move-centroid-on-foot (make-coords) :legs)
Call Stack (max depth: 20):
  0: at (send *robot* :move-centroid-on-foot (make-coords) :legs)
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: cannot find method #<coordinates #X12d2ecc0  0.0 0.0 0.0 / 0.0 0.0 0.0> in (send *robot* :move-centroid-on-foot (make-coords) :legs)
113.E1-irteusgl$ reset
114.irteusgl$ (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg))
Call Stack (max depth: 20):
  0: at (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg))
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: cannot find method #<coordinates #X12d470f8  0.0 0.0 0.0 / 0.0 0.0 0.0> in (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg))
115.E1-irteusgl$ reset
116.irteusgl$ (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg) :both)
Call Stack (max depth: 20):
  0: at (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg) :both)
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: keyword expected for arguments in (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg) :both)
117.E1-irteusgl$ reset
118.irteusgl$ (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg))
Call Stack (max depth: 20):
  0: at (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg))
  1: at #<compiled-code #X63ba828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: cannot find method #<coordinates #X12ed73a8  0.0 0.0 0.0 / 0.0 0.0 0.0> in (send *robot* :move-centroid-on-foot (make-coords) '(:lleg :rleg))
119.E1-irteusgl$ reset
120.irteusgl$ (send *robot* :move-centroid-on-foot :both '(:lleg :r(send *robot* :move-centroid-on-foot :both '(:lleg :rleg))leg))
#f(0.038604 0.028488 -13.9993 38.7519 -24.7526 -0.028488 0.038604 0.028488 -13.9859 38.7467 -24.7607 -0.028488 0.0 0.0 0.0 0.0 0.0 0.0 40.0 -20.0 -5.0 -80.0 0.0 0.0 -20.0 0.0 40.0 20.0 5.0 -80.0 0.0 0.0 -20.0)
121.irteusgl$ load "box-climb-stair.l 
t
122.irteusgl$ generate-walk-up-motion
generating walking pattern ...

123.irteusgl$ execute-motion
real machine move
move to initial pose
move
#<hrpsys_ros_bridge::openhrp_sequenceplayerservice_setjointanglessequencefullresponse #X76e95e8>
124.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
125.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #Xfc17d40>
126.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X10682a48>
127.irteusgl$ 
nil
127.irteusgl$ 
nil
127.irteusgl$ 
nil
127.irteusgl$ 
nil
127.irteusgl$ 
nil
127.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1067c7c0>
128.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X10676b68>
129.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X10670b80>
130.irteusgl$ execute-motion
real machine move
move to initial pose
move
#<hrpsys_ros_bridge::openhrp_sequenceplayerservice_setjointanglessequencefullresponse #X7ab2200>
131.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X1a2b34d0>
132.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1a2b7388>
133.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
134.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X1a891058>
135.irteusgl$ load "box-climb-stair.l 
t
136.irteusgl$ execute-motion
real machine move
move to initial pose
move
#<hrpsys_ros_bridge::openhrp_sequenceplayerservice_setjointanglessequencefullresponse #X7a6c238>
137.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X19266d10>
138.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
139.irteusgl$ load "box-climb-stair.l 
t
140.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X19d61e90>
141.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X19d64458>
142.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X19d39450>
143.irteusgl$ 
nil
143.irteusgl$ 
nil
143.irteusgl$ 
nil
143.irteusgl$ 
nil
143.irteusgl$ 
nil
143.irteusgl$ 
nil
143.irteusgl$ 
nil
143.irteusgl$ Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.709 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.719 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.729 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.75 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.764 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.776 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.786 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.796 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.807 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.827 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.842 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.852 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.872 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.887 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.897 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.907 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.917 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.927 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.942 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.953 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.963 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.973 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.984 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 0.994 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.01 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.02 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.03 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.04 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.05 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.06 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.081 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.095 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.105 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.115 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.125 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.14 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.156 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.171 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.186 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.199 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.211 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.221 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.232 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.247 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.26 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.276 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.287 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.297 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.307 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.318 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.328 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.342 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.353 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.363 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.378 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.388 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.403 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.413 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.423 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.433 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.444 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.454 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.469 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.48 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.495 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.505 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.515 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.525 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.539 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.555 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.565 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.575 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.586 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.599 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.61 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.62 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.63 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.64 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.651 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.661 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.685 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.696 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.706 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.716 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.726 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.742 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.758 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.769 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.779 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.789 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.804 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.814 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.825 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.835 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.85 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.86 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.872 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.882 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.895 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.906 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.921 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.933 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.943 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.956 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.966 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.976 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.986 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 1.996 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.01 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.02 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.031 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.041 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.051 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.061 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.076 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.086 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.097 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.107 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.117 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.127 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.142 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.161 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.171 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.181 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.191 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.205 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.216 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.227 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.237 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.247 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.257 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.271 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.287 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.298 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.308 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.318 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.328 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.34 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.359 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.369 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.379 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.393 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.409 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.425 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.435 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.445 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.455 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.471 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.482 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.495 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.505 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.515 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.525 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.535 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.556 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.566 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.576 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.586 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.597 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.618 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.632 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.642 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.652 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.662 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.675 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.693 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.703 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.714 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.727 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.737 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.757 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.769 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.779 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.789 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.801 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.813 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.828 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.846 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.858 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.868 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.885 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.895 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.91 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.92 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.933 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
  C-c C-cWarning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.943 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
interrupt
143.B1-irteusgl$ Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.954 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.965 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.981 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 2.991 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.002 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.014 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.024 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.035 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.047 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.057 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.068 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.082 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.093 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.108 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.121 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.131 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.143 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.158 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.168 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.178 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.188 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.202 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.213 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.223 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.234 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.244 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.254 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.268 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.285 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.295 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
  C-c C-c
interrupt143.B2-irteusgl$ Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.31 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.32 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.332 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.344 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.365 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.376 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.386 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.397 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.411 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.428 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.44 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.45 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.46 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.473 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.491 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.503 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.513 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.523 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.536 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.547 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.557 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.568 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.579 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.589 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.599 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.609 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.619 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.629 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.639 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.649 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.659 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.669 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.69 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.7 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.71 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.72 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.734 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.753 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.764 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.775 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.785 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.795 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.805 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.817 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.83 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.84 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.85 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.86 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.872 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.892 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.902 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.913 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.923 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.939 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.958 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.969 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.979 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 3.989 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.003 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.014 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.033 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.043 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.053 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.063 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.075 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.086 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.096 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.106 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.116 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.127 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.143 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.16 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.179 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.192 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.202 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.219 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.23 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.242 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.252 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.263 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.279 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.289 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.302 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.313 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.323 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.335 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.348 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.359 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.369 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.379 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.393 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.403 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.423 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.438 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.449 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.46 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.471 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.485 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.499 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.51 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.523 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.533 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.543 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.553 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.563 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.574 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.589 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.604 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.619 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.629 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.639 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
Warning: TF_OLD_DATA ignoring data from the past for frame choreonoid_origin at time 4.651 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
         at line 277 in /tmp/binarydeb/ros-kinetic-tf2-0.5.20/src/buffer_core.cpp
[ WARN] [1570182904.973843299, 4.653000000]: Detected jump back in time of 4478.48s. Clearing TF buffer.
  C-c C-c
interrupt143.B3-irteusgl$ 
nil
143.B3-irteusgl$ 
nil
143.B3-irteusgl$ 
nil
143.B3-irteusgl$ 
nil
143.B3-irteusgl$ reset
144.irteusgl$ 
nil
144.irteusgl$ 
nil
144.irteusgl$ 
nil
144.irteusgl$ 
nil
144.irteusgl$ 
nil
144.irteusgl$ 
nil
144.irteusgl$ load "box-climb-stair.l 
t
145.irteusgl$ generate-walk-up-motion
generating walking pattern ...

146.irteusgl$ 
nil
146.irteusgl$ 
nil
146.irteusgl$ 
nil
146.irteusgl$ (save-log :fname "walk-up")
;; save log to /tmp/test_2019_10-04_18-56_02
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
rtls: CORBA.COMM_FAILURE(omniORB.COMM_FAILURE_WaitingForReply, CORBA.COMPLETED_MAYBE)
saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/hrpsys-simulator_test_JAXON_RED_2019_10-04_18-56_02/%"hrpsys-simulator_test_JAXON_RED_2019_10-04_18-56_02"
147.irteusgl$ [ INFO] [1570183024.075595644, 72.342000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570183024.075698993, 72.342000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ roseus
configuring by "/opt/ros/kinetic/share/euslisp/jskeus/eus//lib/eusrt.l"
;; readmacro ;; object ;; packsym ;; common ;; constants ;; stream ;; string ;; loader ;; pprint ;; process ;; hashtab ;; array ;; mathtran ;; eusdebug ;; eusforeign ;; coordinates ;; tty ;; history ;; toplevel ;; trans ;; comp ;; builtins ;; par ;; intersection ;; geoclasses ;; geopack ;; geobody ;; primt ;; compose ;; polygon ;; viewing ;; viewport ;; viewsurface ;; hid ;; shadow ;; bodyrel ;; dda ;; helpsub ;; eushelp ;; xforeign ;; Xdecl ;; Xgraphics ;; Xcolor ;; Xeus ;; Xevent ;; Xpanel ;; Xitem ;; Xtext ;; Xmenu ;; Xscroll ;; Xcanvas ;; Xtop ;; Xapplwin 
connected to Xserver DISPLAY=:0
X events are being asynchronously monitored.
;; pixword ;; RGBHLS ;; convolve ;; piximage ;; pbmfile ;; image_correlation ;; oglforeign ;; gldecl ;; glconst ;; glforeign ;; gluconst ;; gluforeign ;; glxconst ;; glxforeign ;; eglforeign ;; eglfunc ;; glutil ;; gltexture ;; glprim ;; gleus ;; glview ;; toiv-undefined ;; fstringdouble irtmath irtutil irtc irtgeoc irtgraph ___time ___pgsql irtgeo euspqp pqp irtscene irtmodel irtdyna irtrobot irtsensor irtbvh irtcollada irtpointcloud irtx eusjpeg euspng png irtimage irtglrgb 
;; extending gcstack 0x570daf0[16374] --> 0x5b8fdb0[32748] top=3d61
irtgl irtglc irtviewer 
EusLisp 9.26( 1.2.1) for Linux64 created on ip-172-30-1-90(Wed Mar 20 08:16:06 PST 2019)
roseus ;; loading roseus("1.7.4") on euslisp((9.26 ip-172-30-1-90 Wed Mar 20 08:16:06 PST 2019  1.2.1))
eustf roseus_c_util 
1.irteusgl$ nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ 
nil
1.irteusgl$ load "box-climb-stair.l 
t
2.irteusgl$  jaxoninit

;; extending gcstack 0x5b8fdb0[32738] --> 0x689a5f0[65476] top=7d56
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
Using New hrpsys

loading robot interface file (jaxon_red)...
[rospack] Error: package 'thk_hand_controller' not found
;; could not find pacakge [thk_hand_controller]
[ WARN] [1570183062.584264141, 26.660000000]: [/default_robot_interface_1570183062074055907] waiting /clock... 0.001764 seconds elapsed.
[ INFO] [1570183062.584424090, 26.660000000]: [/default_robot_interface_1570183062074055907] /clock is now published.
[ WARN] [1570183062.613834081, 26.676000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add controllers"
[ WARN] [1570183062.944986755, 26.996000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570183063.250127008, 27.307000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570183063.504395772, 27.525000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570183063.834325833, 27.837000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570183064.069871648, 28.055000000]: Waiting for actionlib interface forever because controller-timeout is nil
[ WARN] [1570183064.298328651, 28.267000000]: Waiting for actionlib interface forever because controller-timeout is nil
";; Add hands"
[ WARN] [1570183064.625094728, 28.593000000]: ROSEUS is already installed as /default_robot_interface_1570183062074055907
[ WARN] [1570183067.570492702, 31.312000000]: ROSEUS is already installed as /default_robot_interface_1570183062074055907
loading test-st-state-estimate-data.l...

;; (log-plot-usage)
[[usage]]

play-hrpsysfile.l
(create-robot-interface jaxon)
(scale-hrpsysfile :fname <FILE NAME>)
(copy-files :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(prepare-experiment :start-st t :set-pose t :st-algorithm :eefmqpcop2)
(init-pose :fname <FILE NAME> :sample-name <SAMPLE NAME> :real t)
(play-hrpsysfile :fname <FILE NAME> :sample-name <SAMPLE NAME> :use-init-file nil :real t)
(save-log :fname <FILE NAME> :add-fname <FILE NAME OPTION>)

(set-pgain <l-crotch dgain>)
(set-dgain <l-crotch dgain>)


log-tools.l
(save-log :fname <file-name> :add-fname <file-name-option> :type <:new or :old>)
(prepare-plot) in log directory
(get-parsed-fname nil) in log directory
(make-list-from-input :fname <motion-name>  :span <time-span> )
(make-list-and-file-from-log :start <start-index> :span <time-span>)
(save-list '(<list-name1> <list-name2>) :make-script t :type <log-type> :multi-plot nil)
joint velocity and torque list name: joint-vel-tq-list


hrpsys-base-log-parser.l
Execute in log dir!!
Or log file name has to correspond to log directory name!!
(create-robot-instance jaxon)
(prepare-plot :robot hrp2jsknts-robot)
(plot-rs :mode :ee-pos :axis 2 :proc-mode :press-enter :yrange (list 0 0.1) :robot hrp2jsknts-robot :save t :create t)
(plot-foot-force :axis 2 :save t :create t)
(plot-foot-cop :axis 2 :save t :create t)
(plot-imu :fname "HRP2JSKNTS/go-vel-test_hoge" :axis 1 :start-tm 7 :stop-tm 8 :robot hrp2jsknts-robot :save t :create t :correct-offset t)


util.l
(get-joint-name-list :underbar-replace <replace-pattern or nil>)


hrpsys-test/test-st-state-estimate-data.l
;; Usage
;; 1. Load robot model first
;;   (load-hrp2jsk)
;;   (load-hrp2jsknt)
;;   (load-hrp2jsknts)
;;   (load-urataleg)
;;   (load-staro)
;;   (load-jaxon)
;;   (load-jaxon_red)
;;   (load-chidori)
;;   (load-samplerobot)
;; 2. Set *log*
;;   (setq *log* (instance datalogger-log-parser-controller :init "/path/to/log/basename" :robot hrp2jsknts-robot)) ;; please specify full-path basename of log files and your robot name
;; 3. Generate robot state data list
;;   (convert-to-robot-state-data-for-st-debug)
;; 4. Plot data
;;   plot examples
;;   (plot-st-cog-zmp)
;;   (plot-st-ref-force)
;;   (plot-st-ref-moment)
;;   (plot-st-force-comp)
;;   (plot-st-moment-comp)
;;   (plot-st-actref-force)
;;   (plot-st-actref-moment)
;;   (plot-st-base-rpy)
;;   (plot-off-force)
;;   (plot-off-moment)
;;   (plot-abc-ee-pos)
;;   (plot-abc-contact-states)
;;   (plot-abc-control-swing-support-time)
;;   (plot-servo-state)
;;   (plot-constraint-force :name :robothardware0_f_body :axis :z)
;;   (plot-all-data "add-fname") ;; please specify add-fname
;; 5. View
;;   (play-robot-state-data-list-with-constraint-force *rs-list*)

stop st
(reset-pose)
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
stop abc
stop ic
start st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X2587c5c0>
3.irteusgl$ 
nil
3.irteusgl$ 
nil
3.irteusgl$ generate-walk-up-motion
generating walking pattern ...

4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ 
nil
4.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; save log to /tmp/test_2019_10-04_19-01_34
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/choreonoid_walk-up_fall-forward_JAXON_RED_2019_10-04_19-01_34/%"choreonoid_walk-up_fall-forward_JAXON_RED_2019_10-04_19-01_34"
5.irteusgl$ 
nil
5.irteusgl$ 
nil
5.irteusgl$ 
nil
5.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X6711790>
6.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
7.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X103c2458>
8.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X10a97388>
9.irteusgl$ load "box-climb-stair.l 
t
10.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X1122ba00>
11.irteusgl$ 
nil
11.irteusgl$ 
nil
11.irteusgl$ 
nil
11.irteusgl$ execute-motion
real machine move
move to initial pose
;; save log to /tmp/test_2019_10-04_19-06_21
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
nil
12.irteusgl$ send *ri* :set-log-max-length
Call Stack (max depth: 20):
  0: at (send *ri* :set-log-max-length)
  1: at #<compiled-code #X573c828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: cannot find method :set-log-max-length in (send *ri* :set-log-max-length)
13.E1-irteusgl$ reset
14.irteusgl$ send *ri* :methods
(:init :set-hand-controller :rarm-controller :larm-controller :rleg-controller :lleg-controller :head-controller :torso-controller :init :move-gripper :start-grasp :stop-grasp :hand-reset :hand-stop :hand-resume :get-joint-angle :get-joint-velocity :get-joint-effort :gripper :state :init :rtmros-motor-states-callback :rtmros-zmp-callback :rtmros-imu-callback :rtmros-force-sensor-callback :rtmros-emergency-mode-callback :rtmros-capture-point-callback :rtmros-contact-states-callback :tmp-force-moment-vector-for-limb :tmp-force-moment-vector :force-vector :moment-vector :off-force-vector :off-moment-vector :reference-force-vector :reference-moment-vector :absolute-force-vector :absolute-moment-vector :zmp-vector :ref-capture-point-vector :act-capture-point-vector :ref-contact-states :act-contact-states :temperature-vector :motor-extra-data :imucoords :accel-vector :gyro-vector :state :define-all-rosbridge-srv-methods :get-rosbridge-fnames-from-type :get-rosbridge-idl-fnames :get-rosbridge-srv-fnames :get-rosbridge-method-def-macro :get-idl-enum-values :set-interpolation-mode :calc-zmp-from-state :get-robot-date-string :def-limb-controller-method :set-base-pose :set-base-coords :set-base-pos :set-base-rpy :wait-interpolation-of-group :add-joint-group :remove-joint-group :set-joint-angles-of-group :load-pattern :wait-interpolation-seq :sync-controller :set-ref-forces-moments :set-ref-forces :set-ref-moments :set-ref-force :set-ref-moment :angle-vector-sequence-full :set-tolerance :start-collision-detection :stop-collision-detection :get-collision-status :save-log :start-log :set-log-maxlength :set-servo-gain-percentage :remove-force-sensor-offset :set-servo-error-limit :calibrate-inertia-sensor :raw-get-impedance-controller-param :raw-set-impedance-controller-param :get-impedance-controller-param-arguments :start-impedance :raw-start-impedance :start-impedance-no-wait :stop-impedance :stop-impedance-no-wait :wait-impedance-controller-transition :set-impedance-controller-param :get-impedance-controller-param :get-impedance-controller-controller-mode :force-sensor-method :get-object-turnaround-detector-param :raw-set-object-turnaround-detector-param :get-object-turnaround-detector-param-arguments :start-object-turnaround-detection :check-object-turnaround-detection :get-otd-object-forces-moments :set-object-turnaround-ref-force :set-object-turnaround-ref-moment :set-object-turnaround-detector-param :get-object-turnaround-detector-detector-total-wrench :raw-get-forcemoment-offset-param :raw-set-forcemoment-offset-param :get-forcemoment-offset-param-arguments :zero-set-forcemoment-offset-param :set-forcemoment-offset-param :get-forcemoment-offset-param :load-forcemoment-offset-param :load-forcemoment-offset-params :dump-forcemoment-offset-params :remove-force-sensor-offset-rmfo :remove-force-sensor-offset-rmfo-arms :remove-force-sensor-offset-rmfo-legs :reset-force-moment-offset-arms :reset-force-moment-offset-legs :reset-force-moment-offset :_reset-force-moment-offset :get-gait-generator-param :raw-set-gait-generator-param :get-gait-generator-param-arguments :get-auto-balancer-param :raw-set-auto-balancer-param :get-auto-balancer-param-arguments :start-auto-balancer :stop-auto-balancer :go-pos-no-wait :go-pos :raw-get-foot-step-param :get-foot-step-params :get-foot-step-param :set-foot-steps-no-wait :set-foot-steps :set-foot-steps-with-param-no-wait :set-foot-steps-with-param :set-foot-steps-roll-pitch :set-foot-steps-with-base-height :set-foot-steps-with-param-and-base-height :adjust-foot-steps :adjust-foot-steps-roll-pitch :get-remaining-foot-step-sequence-current-index :get-current-footstep-index :get-remaining-foot-step-sequence :get-go-pos-footsteps-sequence :draw-remaining-foot-step-sequence :go-velocity :go-stop :emergency-walking-stop :calc-go-velocity-param-from-velocity-center-offset :wait-foot-steps :set-gait-generator-param :print-gait-generator-orbit-type :get-gait-generator-orbit-type :calc-toe-heel-phase-ratio :set-gait-generator-toe-heel-angles :get-auto-balancer-controller-mode :set-auto-balancer-param :print-auto-balancer-use-force-mode :get-auto-balancer-use-force-mode :abc-footstep->eus-footstep :eus-footstep->abc-footstep :cmd-vel-cb :cmd-vel-mode :start-cmd-vel-mode :stop-cmd-vel-mode :calc-dvel-with-velocity-center-offset :set-default-step-time-with-the-same-swing-time :start-graspless-manip-mode :stop-graspless-manip-mode :calc-hand-trans-coords-dual-arms :calc-hand-trans-coords-single-arm :set-soft-error-limit :get-st-param :raw-set-st-param :get-st-param-arguments :set-st-param :set-st-param-for-non-feedback-lip-mode :set-default-st-param :set-st-param-by-ratio :get-st-controller-mode :get-st-algorithm :start-st :stop-st :get-kalman-filter-param :set-kalman-filter-param :get-kalman-filter-param-arguments :get-kalman-filter-algorithm :get-emergency-stopper-param :set-emergency-stopper-param :get-emergency-stopper-param-arguments :emergency-stop-motion :hard-emergency-stop-motion :emergency-release-motion :hard-emergency-release-motion :emergency-mode :get-hand-config-list :start-grasp :stop-grasp :start-default-unstable-controllers :stop-default-unstable-controllers :raw-get-reference-force-updater-param :raw-set-reference-force-updater-param :get-reference-force-updater-param-arguments :get-supported-reference-force-updater-name-list :start-reference-force-updater :stop-reference-force-updater :start-reference-force-updater-no-wait :stop-reference-force-updater-no-wait :set-reference-force-updater-param :get-reference-force-updater-param :get-torque-controller-param :set-torque-controller-param :get-torque-controller-param-arguments :enable-torque-control :disable-torque-control :start-torque-control :stop-torque-control :set-reference-torque :print-rtc-param-all :accelerationfilterservice_resetfilter :accelerationfilterservice_setaccelerationfilterparam :accelerationfilterservice_getaccelerationfilterparam :dataloggerservice_add :dataloggerservice_save :dataloggerservice_maxlength :dataloggerservice_clear :kalmanfilterservice_resetkalmanfilterstate :kalmanfilterservice_getkalmanfilterparam :kalmanfilterservice_setkalmanfilterparam :thermolimiterservice_setparameter :thermolimiterservice_getparameter :graspcontrollerservice_stopgrasp :graspcontrollerservice_startgrasp :collisiondetectorservice_getcollisionstatus :collisiondetectorservice_enablecollisiondetection :collisiondetectorservice_setcollisionloop :collisiondetectorservice_disablecollisiondetection :collisiondetectorservice_settolerance :timekeeperservice_sleep :nullservice_echo :virtualforcesensorservice_removevirtualforcesensoroffset :removeforcesensorlinkoffsetservice_setforcemomentoffsetparam :removeforcesensorlinkoffsetservice_getforcemomentoffsetparam :removeforcesensorlinkoffsetservice_loadforcemomentoffsetparams :removeforcesensorlinkoffsetservice_dumpforcemomentoffsetparams :removeforcesensorlinkoffsetservice_removeforcesensoroffset :stateholderservice_getcommand :stateholderservice_goactual :objectcontactturnarounddetectorservice_startobjectcontactturnarounddetection :objectcontactturnarounddetectorservice_getobjectcontactturnarounddetectorparam :objectcontactturnarounddetectorservice_startobjectcontactturnarounddetectionforgeneralizedwrench :objectcontactturnarounddetectorservice_checkobjectcontactturnarounddetection :objectcontactturnarounddetectorservice_getobjectforcesmoments :objectcontactturnarounddetectorservice_getobjectgeneralizedconstraintwrenches :objectcontactturnarounddetectorservice_setobjectcontactturnarounddetectorparam :objectcontactturnarounddetectorservice_checkobjectcontactturnarounddetectionforgeneralizedwrench :robothardwareservice_setdisturbanceobservergain :robothardwareservice_writedigitaloutputwithmask :robothardwareservice_writedigitaloutput :robothardwareservice_lengthdigitalinput :robothardwareservice_readdigitalinput :robothardwareservice_getstatus2 :robothardwareservice_calibrateinertiasensor :robothardwareservice_setjointinertia :robothardwareservice_enabledisturbanceobserver :robothardwareservice_removeforcesensoroffset :robothardwareservice_setservogainpercentage :robothardwareservice_readdigitaloutput :robothardwareservice_setservotorquegainpercentage :robothardwareservice_setjointcontrolmode :robothardwareservice_addjointgroup :robothardwareservice_disabledisturbanceobserver :robothardwareservice_power :robothardwareservice_lengthdigitaloutput :robothardwareservice_initializejointangle :robothardwareservice_setservoerrorlimit :robothardwareservice_setjointinertias :robothardwareservice_servo :robothardwareservice_getstatus :torquecontrollerservice_settorquecontrollerparam :torquecontrollerservice_enablemultipletorquecontrollers :torquecontrollerservice_starttorquecontrol :torquecontrollerservice_setmultiplereferencetorques :torquecontrollerservice_disablemultipletorquecontrollers :torquecontrollerservice_startmultipletorquecontrols :torquecontrollerservice_gettorquecontrollerparam :torquecontrollerservice_stoptorquecontrol :torquecontrollerservice_setreferencetorque :torquecontrollerservice_stopmultipletorquecontrols :torquecontrollerservice_disabletorquecontroller :torquecontrollerservice_enabletorquecontroller :referenceforceupdaterservice_setreferenceforceupdaterparam :referenceforceupdaterservice_stopreferenceforceupdater :referenceforceupdaterservice_startreferenceforceupdater :referenceforceupdaterservice_getreferenceforceupdaterparam :referenceforceupdaterservice_waitreferenceforceupdatertransition :referenceforceupdaterservice_getsupportedreferenceforceupdaternamesequence :referenceforceupdaterservice_stopreferenceforceupdaternowait :referenceforceupdaterservice_startreferenceforceupdaternowait :img_cameracaptureservice_stop_continuous :img_cameracaptureservice_take_one_frame :img_cameracaptureservice_start_continuous :pcdloaderservice_load :wavplayerservice_playwavnowait :wavplayerservice_playwav :forwardkinematicsservice_getrelativecurrentposition :forwardkinematicsservice_getreferencepose :forwardkinematicsservice_getcurrentpose :forwardkinematicsservice_selectbaselink :torquefilterservice_dummy :impedancecontrollerservice_waitimpedancecontrollertransition :impedancecontrollerservice_setimpedancecontrollerparam :impedancecontrollerservice_getimpedancecontrollerparam :impedancecontrollerservice_startimpedancecontrollernowait :impedancecontrollerservice_startimpedancecontroller :impedancecontrollerservice_stopimpedancecontrollernowait :impedancecontrollerservice_stopimpedancecontroller :sequenceplayerservice_playpatternofgroup :sequenceplayerservice_setzmp :sequenceplayerservice_isempty :sequenceplayerservice_clearofgroup :sequenceplayerservice_removejointgroup :sequenceplayerservice_clearnowait :sequenceplayerservice_setinterpolationmode :sequenceplayerservice_setmaxikerror :sequenceplayerservice_setjointanglessequencefull :sequenceplayerservice_setjointanglessequenceofgroup :sequenceplayerservice_setjointangle :sequenceplayerservice_setjointangleswithmask :sequenceplayerservice_setwrenches :sequenceplayerservice_settargetpose :sequenceplayerservice_setmaxikiteration :sequenceplayerservice_addjointgroup :sequenceplayerservice_setbaserpy :sequenceplayerservice_clearjointangles :sequenceplayerservice_loadpattern :sequenceplayerservice_setjointangles :sequenceplayerservice_setjointanglesofgroup :sequenceplayerservice_clearjointanglesofgroup :sequenceplayerservice_setjointanglessequencewithmask :sequenceplayerservice_clear :sequenceplayerservice_setbasepos :sequenceplayerservice_setinitialstate :sequenceplayerservice_waitinterpolation :sequenceplayerservice_playpattern :sequenceplayerservice_waitinterpolationofgroup :sequenceplayerservice_setjointanglessequence :servocontrollerservice_getspeed :servocontrollerservice_servoon :servocontrollerservice_setjointanglesofgroup :servocontrollerservice_removejointgroup :servocontrollerservice_getmaxtorque :servocontrollerservice_setmaxtorque :servocontrollerservice_setjointangle :servocontrollerservice_addjointgroup :servocontrollerservice_servooff :servocontrollerservice_gettorque :servocontrollerservice_getjointangles :servocontrollerservice_getjointangle :servocontrollerservice_setreset :servocontrollerservice_setjointangles :servocontrollerservice_getduration :servocontrollerservice_gettemperature :servocontrollerservice_getvoltage :emergencystopperservice_releasemotion :emergencystopperservice_stopmotion :emergencystopperservice_setemergencystopperparam :emergencystopperservice_getemergencystopperparam :executionprofileservice_getprofile :executionprofileservice_resetprofile :executionprofileservice_getcomponentprofile :ogmap3dservice_getogmap3d :ogmap3dservice_save :ogmap3dservice_clear :softerrorlimiterservice_setservoerrorlimit :stabilizerservice_startstabilizer :stabilizerservice_setparameter :stabilizerservice_stopstabilizer :stabilizerservice_getparameter :stabilizerservice_dummy :autobalancerservice_setfootsteps :autobalancerservice_getremainingfootstepsequence :autobalancerservice_adjustfootsteps :autobalancerservice_setautobalancerparam :autobalancerservice_waitfootstepsearly :autobalancerservice_gostop :autobalancerservice_setfootstepswithparam :autobalancerservice_waitfootsteps :autobalancerservice_getautobalancerparam :autobalancerservice_getgaitgeneratorparam :autobalancerservice_stopautobalancer :autobalancerservice_setgaitgeneratorparam :autobalancerservice_getgoposfootstepssequence :autobalancerservice_gopos :autobalancerservice_startautobalancer :autobalancerservice_emergencystop :autobalancerservice_getfootstepparam :autobalancerservice_govelocity :autobalancerservice_releaseemergencystop :init :add-controller :robot-interface-simulation-callback :publish-joint-state :angle-vector-safe :angle-vector-duration :angle-vector-simulation :angle-vector :angle-vector-sequence :wait-interpolation :interpolatingp :wait-interpolation-smooth :interpolating-smoothp :stop-motion :cancel-angle-vector :worldcoords :torque-vector :potentio-vector :reference-vector :actual-vector :error-vector :state-vector :stamp :send-ros-controller :set-robot-state1 :get-robot-state :ros-state-callback :wait-until-update-all-joints :update-robot-state :state :default-controller :sub-angle-vector :robot :viewer :objects :set-simulation-default-look-at :draw-objects :find-object :joint-action-enable :simulation-modep :warningp :spin-once :send-trajectory :send-trajectory-each :ros-wait :go-pos :go-pos-no-wait :go-wait :go-velocity :go-stop :gripper :joint-trajectory-to-angle-vector-list :show-goal-hand-coords :find-descendants-dae-links :show-mesh-traj-with-color :nod :eus-mannequin-mode :play-sound :speak :speak-en :speak-jp :plist :get :put :name :remprop :prin1 :prin1 :warning :error :slots :methods :super :get-val :set-val)
15.irteusgl$ send *ri* :set-log-maxlength
#<hrpsys_ros_bridge::openhrp_dataloggerservice_maxlengthresponse #X133157f0>
16.irteusgl$ send *ri* :set-log-maxsend *ri* :set-log-maxlength (* 500 15)length (* 500 15)
#<hrpsys_ros_bridge::openhrp_dataloggerservice_maxlengthresponse #X133fb0b8>
17.irteusgl$ (:init :set-hand-controller :rarm-controller :larm-controller :rleg-controller :lleg-controller :head-controller :torso-controller :init :move-gripper :start-grasp :stop-grasp :hand-reset :hand-stop :hand-resume :get-joint-angle :get-joint-velocity :get-joint-effort :gripper :state :init :rtmros-motor-states-callback :rtmros-zmp-callback :rtmros-imu-callback :rtmros-force-sensor-callback :rtmros-emergency-mode-callback :rtmros-capture-point-callback :rtmros-contact-states-callback :tmp-force-moment-vector-for-limb :tmp-force-moment-vector :force-vector :moment-vector :off-force-vector :off-moment-vector :reference-force-vector :reference-moment-vector :absolute-force-vector :absolute-moment-vector :zmp-vector :ref-capture-point-vector :act-capture-point-vector :ref-contact-states :act-contact-states :temperature-vector :motor-extra-data :imucoords :accel-vector :gyro-vector :state :define-all-rosbridge-srv-methods :get-rosbridge-fnames-from-type :get-rosbridge-idl-fnames :get-rosbridge-srv-fnames :get-rosbridge-method-def-macro :get-idl-enum-values :set-interpolation-mode :calc-zmp-from-state :get-robot-date-string :def-limb-controller-method :set-base-pose :set-base-coords :set-base-pos :set-base-rpy :wait-interpolation-of-group :add-joint-group :remove-joint-group :set-joint-angles-of-group :load-pattern :wait-interpolation-seq :sync-controller :set-ref-forces-moments :set-ref-forces :set-ref-moments :set-ref-force :set-ref-moment :angle-vector-sequence-full :set-tolerance :start-collision-detection :stop-collision-detection :get-collision-status :save-log :start-log :set-log-maxlength :set-servo-gain-percentage :remove-force-sensor-offset :set-servo-error-limit :calibrate-inertia-sensor :raw-get-impedance-controller-param :raw-set-impedance-controller-param :get-impedance-controller-param-arguments :start-impedance :raw-start-impedance :start-impedance-no-wait :stop-impedance :stop-impedance-no-wait :wait-impedance-controller-transition :set-impedance-controller-param :get-impedance-controller-param :get-impedance-controller-controller-mode :force-sensor-method :get-object-turnaround-detector-param :raw-set-object-turnaround-detector-param :get-object-turnaround-detector-param-arguments :start-object-turnaround-detection :check-object-turnaround-detection :get-otd-object-forces-moments :set-object-turnaround-ref-force :set-object-turnaround-ref-moment :set-object-turnaround-detector-param :get-object-turnaround-detector-detector-total-wrench :raw-get-forcemoment-offset-param :raw-set-forcemoment-offset-param :get-forcemoment-offset-param-arguments :zero-set-forcemoment-offset-param :set-forcemoment-offset-param :get-forcemoment-offset-param :load-forcemoment-offset-param :load-forcemoment-offset-params :dump-forcemoment-offset-params :remove-force-sensor-offset-rmfo :remove-force-sensor-offset-rmfo-arms :remove-force-sensor-offset-rmfo-legs :reset-force-moment-offset-arms :reset-force-moment-offset-legs :reset-force-moment-offset :_reset-force-moment-offset :get-gait-generator-param :raw-set-gait-generator-param :get-gait-generator-param-arguments :get-auto-balancer-param :raw-set-auto-balancer-param :get-auto-balancer-param-arguments :start-auto-balancer :stop-auto-balancer :go-pos-no-wait :go-pos :raw-get-foot-step-param :get-foot-step-params :get-foot-step-param :set-foot-steps-no-wait :set-foot-steps :set-foot-steps-with-param-no-wait :set-foot-steps-with-param :set-foot-steps-roll-pitch :set-foot-steps-with-base-height :set-foot-steps-with-param-and-base-height :adjust-foot-steps :adjust-foot-steps-roll-pitch :get-remaining-foot-step-sequence-current-index :get-current-footstep-index :get-remaining-foot-step-sequence :get-go-pos-footsteps-sequence :draw-remaining-foot-step-sequence :go-velocity :go-stop :emergency-walking-stop :calc-go-velocity-param-from-velocity-center-offset :wait-foot-steps :set-gait-generator-param :print-gait-generator-orbit-type :get-gait-generator-orbit-type :calc-toe-heel-phase-ratio :set-gait-generator-toe-heel-angles :get-auto-balancer-controller-mode :set-auto-balancer-param :print-auto-balancer-use-force-mode :get-auto-balancer-use-force-mode :abc-footstep->eus-footstep :eus-footstep->abc-footstep :cmd-vel-cb :cmd-vel-mode :start-cmd-vel-mode :stop-cmd-vel-mode :calc-dvel-with-velocity-center-offset :set-default-step-time-with-the-same-swing-time :start-graspless-manip-mode :stop-graspless-manip-mode :calc-hand-trans-coords-dual-arms :calc-hand-trans-coords-single-arm :set-soft-error-limit :get-st-param :raw-set-st-param :get-st-param-arguments :set-st-param :set-st-param-for-non-feedback-lip-mode :set-default-st-param :set-st-param-by-ratio :get-st-controller-mode :get-st-algorithm :start-st :stop-st :get-kalman-filter-param :set-kalman-filter-param :get-kalman-filter-param-arguments :get-kalman-filter-algorithm :get-emergency-stopper-param :set-emergency-stopper-param :get-emergency-stopper-param-arguments :emergency-stop-motion :hard-emergency-stop-motion :emergency-release-motion :hard-emergency-release-motion :emergency-mode :get-hand-config-list :start-grasp :stop-grasp :start-default-unstable-controllers :stop-default-unstable-controllers :raw-get-reference-force-updater-param :raw-set-reference-force-updater-param :get-reference-force-updater-param-arguments :get-supported-reference-force-updater-name-list :start-reference-force-updater :stop-reference-force-updater :start-reference-force-updater-no-wait :stop-reference-force-updater-no-wait :set-reference-force-updater-param :get-reference-force-updater-param :get-torque-controller-param :set-torque-controller-param :get-torque-controller-param-arguments :enable-torque-control :disable-torque-control :start-torque-control :stop-torque-control :set-reference-torque :print-rtc-param-all :accelerationfilterservice_resetfilter :accelerationfilterservice_setaccelerationfilterparam :accelerationfilterservice_getaccelerationfilterparam :dataloggerservice_add :dataloggerservice_save :dataloggerservice_maxlength :dataloggerservice_clear :kalmanfilterservice_resetkalmanfilterstate :kalmanfilterservice_getkalmanfilterparam :kalmanfilterservice_setkalmanfilterparam :thermolimiterservice_setparameter :thermolimiterservice_getparameter :graspcontrollerservice_stopgrasp :graspcontrollerservice_startgrasp :collisiondetectorservice_getcollisionstatus :collisiondetectorservice_enablecollisiondetection :collisiondetectorservice_setcollisionloop :collisiondetectorservice_disablecollisiondetection :collisiondetectorservice_settolerance :timekeeperservice_sleep :nullservice_echo :virtualforcesensorservice_removevirtualforcesensoroffset :removeforcesensorlinkoffsetservice_setforcemomentoffsetparam :removeforcesensorlinkoffsetservice_getforcemomentoffsetparam :removeforcesensorlinkoffsetservice_loadforcemomentoffsetparams :removeforcesensorlinkoffsetservice_dumpforcemomentoffsetparams :removeforcesensorlinkoffsetservice_removeforcesensoroffset :stateholderservice_getcommand :stateholderservice_goactual :objectcontactturnarounddetectorservice_startobjectcontactturnarounddetection :objectcontactturnarounddetectorservice_getobjectcontactturnarounddetectorparam :objectcontactturnarounddetectorservice_startobjectcontactturnarounddetectionforgeneralizedwrench :objectcontactturnarounddetectorservice_checkobjectcontactturnarounddetection :objectcontactturnarounddetectorservice_getobjectforcesmoments :objectcontactturnarounddetectorservice_getobjectgeneralizedconstraintwrenches :objectcontactturnarounddetectorservice_setobjectcontactturnarounddetectorparam :objectcontactturnarounddetectorservice_checkobjectcontactturnarounddetectionforgeneralizedwrench :robothardwareservice_setdisturbanceobservergain :robothardwareservice_writedigitaloutputwithmask :robothardwareservice_writedigitaloutput :robothardwareservice_lengthdigitalinput :robothardwareservice_readdigitalinput :robothardwareservice_getstatus2 :robothardwareservice_calibrateinertiasensor :robothardwareservice_setjointinertia :robothardwareservice_enabledisturbanceobserver :robothardwareservice_removeforcesensoroffset :robothardwareservice_setservogainpercentage :robothardwareservice_readdigitaloutput :robothardwareservice_setservotorquegainpercentage :robothardwareservice_setjointcontrolmode :robothardwareservice_addjointgroup :robothardwareservice_disabledisturbanceobserver :robothardwareservice_power :robothardwareservice_lengthdigitaloutput :robothardwareservice_initializejointangle :robothardwareservice_setservoerrorlimit :robothardwareservice_setjointinertias :robothardwareservice_servo :robothardwareservice_getstatus :torquecontrollerservice_settorquecontrollerparam :torquecontrollerservice_enablemultipletorquecontrollers :torquecontrollerservice_starttorquecontrol :torquecontrollerservice_setmultiplereferencetorques :torquecontrollerservice_disablemultipletorquecontrollers :torquecontrollerservice_startmultipletorquecontrols :torquecontrollerservice_gettorquecontrollerparam :torquecontrollerservice_stoptorquecontrol :torquecontrollerservice_setreferencetorque :torquecontrollerservice_stopmultipletorquecontrols :torquecontrollerservice_disabletorquecontroller :torquecontrollerservice_enabletorquecontroller :referenceforceupdaterservice_setreferenceforceupdaterparam :referenceforceupdaterservice_stopreferenceforceupdater :referenceforceupdaterservice_startreferenceforceupdater :referenceforceupdaterservice_getreferenceforceupdaterparam :referenceforceupdaterservice_waitreferenceforceupdatertransition :referenceforceupdaterservice_getsupportedreferenceforceupdaternamesequence :referenceforceupdaterservice_stopreferenceforceupdaternowait :referenceforceupdaterservice_startreferenceforceupdaternowait :img_cameracaptureservice_stop_continuous :img_cameracaptureservice_take_one_frame :img_cameracaptureservice_start_continuous :pcdloaderservice_load :wavplayerservice_playwavnowait :wavplayerservice_playwav :forwardkinematicsservice_getrelativecurrentposition :forwardkinematicsservice_getreferencepose :forwardkinematicsservice_getcurrentpose :forwardkinematicsservice_selectbaselink :torquefilterservice_dummy :impedancecontrollerservice_waitimpedancecontrollertransition :impedancecontrollerservice_setimpedancecontrollerparam :impedancecontrollerservice_getimpedancecontrollerparam :impedancecontrollerservice_startimpedancecontrollernowait :impedancecontrollerservice_startimpedancecontroller :impedancecontrollerservice_stopimpedancecontrollernowait :impedancecontrollerservice_stopimpedancecontroller :sequenceplayerservice_playpatternofgroup :sequenceplayerservice_setzmp :sequenceplayerservice_isempty :sequenceplayerservice_clearofgroup :sequenceplayerservice_removejointgroup :sequenceplayerservice_clearnowait :sequenceplayerservice_setinterpolationmode :sequenceplayerservice_setmaxikerror :sequenceplayerservice_setjointanglessequencefull :sequenceplayerservice_setjointanglessequenceofgroup :sequenceplayerservice_setjointangle :sequenceplayerservice_setjointangleswithmask :sequenceplayerservice_setwrenches :sequenceplayerservice_settargetpose :sequenceplayerservice_setmaxikiteration :sequenceplayerservice_addjointgroup :sequenceplayerservice_setbaserpy :sequenceplayerservice_clearjointangles :sequenceplayerservice_loadpattern :sequenceplayerservice_setjointangles :sequenceplayerservice_setjointanglesofgroup :sequenceplayerservice_clearjointanglesofgroup :sequenceplayerservice_setjointanglessequencewithmask :sequenceplayerservice_clear :sequenceplayerservice_setbasepos :sequenceplayerservice_setinitialstate :sequenceplayerservice_waitinterpolation :sequenceplayerservice_playpattern :sequenceplayerservice_waitinterpolationofgroup :sequenceplayerservice_setjointanglessequence :servocontrollerservice_getspeed :servocontrollerservice_servoon :servocontrollerservice_setjointanglesofgroup :servocontrollerservice_removejointgroup :servocontrollerservice_getmaxtorque :servocontrollerservice_setmaxtorque :servocontrollerservice_setjointangle :servocontrollerservice_addjointgroup :servocontrollerservice_servooff :servocontrollerservice_gettorque :servocontrollerservice_getjointangles :servocontrollerservice_getjointangle :servocontrollerservice_setreset :servocontrollerservice_setjointangles :servocontrollerservice_getduration :servocontrollerservice_gettemperature :servocontrollerservice_getvoltage :emergencystopperservice_releasemotion :emergencystopperservice_stopmotion :emergencystopperservice_setemergencystopperparam :emergencystopperservice_getemergencystopperparam :executionprofileservice_getprofile :executionprofileservice_resetprofile :executionprofileservice_getcomponentprofile :ogmap3dservice_getogmap3d :ogmap3dservice_save :ogmap3dservice_clear :softerrorlimiterservice_setservoerrorlimit :stabilizerservice_startstabilizer :stabilizerservice_setparameter :stabilizerservice_stopstabilizer :stabilizerservice_getparameter :stabilizerservice_dummy :autobalancerservice_setfootsteps :autobalancerservice_getremainingfootstepsequence :autobalancerservice_adjustfootsteps :autobalancerservice_setautobalancerparam :autobalancerservice_waitfootstepsearly :autobalancerservice_gostop :autobalancerservice_setfootstepswithparam :autobalancerservice_waitfootsteps :autobalancerservice_getautobalancerparam :autobalancerservice_getgaitgeneratorparam :autobalancerservice_stopautobalancer :autobalancerservice_setgaitgeneratorparam :autobalancerservice_getgoposfootstepssequence :autobalancerservice_gopos :autobalancerservice_startautobalancer :autobalancerservice_emergencystop :autobalancerservice_getfootstepparam :autobalancerservice_govelocity :autobalancerservice_releaseemergencystop :init :add-controller :robot-interface-simulation-callback :publish-joint-state :angle-vector-safe :angle-vector-duration :angle-vector-simulation :angle-vector :angle-vector-sequence :wait-interpolation :interpolatingp :wait-interpolation-smooth :interpolating-smoothp :stop-motion :cancel-angle-vector :worldcoords :torque-vector :potentio-vector :reference-vector :actual-vector :error-vector :state-vector :stamp :send-ros-controller :set-robot-state1 :get-robot-state :ros-state-callback :wait-until-update-all-joints :update-robot-state :state :default-controller :sub-angle-vector :robot :viewer :objects :set-simulation-default-look-at :draw-objects :find-object :joint-action-enable :simulation-modep :warningp :spin-once :send-trajectory :send-trajectory-each :ros-wait :go-pos :go-pos-no-wait :go-wait :go-velocity :go-stop :gripper :joint-trajectory-to-angle-vector-list :show-goal-hand-coords :find-descendants-dae-links :show-mesh-traj-with-color :nod :eus-mannequin-mode :play-sound :speak :speak-en :speak-jp :plist :get :put :name :remprop :prin1 :prin1 :warning :error :slots :methods :super :get-val :set-val)
15.irteusgl$ 






  C-c C-c
  C-c C-c

interrupt17.B1-irteusgl$ 
nil
17.B1-irteusgl$ 
nil
17.B1-irteusgl$ reset
18.irteusgl$ load "box-climb-stair.l 
t
19.irteusgl$ 
nil
19.irteusgl$ 
nil
19.irteusgl$ 
nil
19.irteusgl$ 
nil
19.irteusgl$ 
nil
19.irteusgl$
nil
19.irteusgl$ 
nil
19.irteusgl$ 
15.irteusgl$ 
nil
19.irteusgl$ sh: 1: 15.irteusgl$: not found
32512
20.irteusgl$ 
nil
20.irteusgl$ 
nil
20.irteusgl$ send *ri* :start-log
#<hrpsys_ros_bridge::openhrp_dataloggerservice_clearresponse #Xeff91a0>
21.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X18d41410>
22.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; bad stream buffer, 0xd85a358
;; bad stream buffer, 0xd85a7c0
;; bad stream buffer, 0xd85ba68
;; bad stream buffer, 0x679b5c8
;; bad stream buffer, 0xd8616f0
;; bad stream buffer, 0xd865740
;; save log to /tmp/test_2019_10-04_19-10_21
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/choreonoid_walk-up_JAXON_RED_2019_10-04_19-10_21/%"choreonoid_walk-up_JAXON_RED_2019_10-04_19-10_21"
23.irteusgl$ load "box-climb-stair.l 
t
24.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X2376ea00>
25.irteusgl$ 
nil
25.irteusgl$ 
nil
25.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
26.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X23fd07c0>
27.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X240486f8>
28.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X24048c80>
29.irteusgl$ 
nil
29.irteusgl$ 
nil
29.irteusgl$ 
nil
29.irteusgl$ 
nil
29.irteusgl$ load "box-climb-stair.l 
t
30.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; bad stream buffer, 0x69872a0
;; bad stream buffer, 0x69894c0
;; save log to /tmp/test_2019_10-04_19-14_08
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/choreonoid_walk-up_fall-forward_JAXON_RED_2019_10-04_19-14_08/%"choreonoid_walk-up_fall-forward_JAXON_RED_2019_10-04_19-14_08"
31.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
32.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X22b33210>
33.irteusgl$ send *Ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X22bc15e8>
34.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; bad stream buffer, 0x22209f70
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
















  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
cc












  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c























  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
  C-c C-c
c






interrupt35.B1-irteusgl$ sh: 1: c: not found
32512
36.B1-irteusgl$ nil
36.B1-irteusgl$ nil
36.B1-irteusgl$ nil
36.B1-irteusgl$ nil
36.B1-irteusgl$ nil
36.B1-irteusgl$ nil
36.B1-irteusgl$ 
nil
36.B1-irteusgl$ 
nil
36.B1-irteusgl$ 
nil
36.B1-irteusgl$ 
nil
36.B1-irteusgl$ load "box-climb-stair.l 
t
37.B1-irteusgl$ send *ri* :stops-t
Call Stack (max depth: 20):
  0: at (send *ri* :stops-t)
  1: at sigint-handler
  2: at sigint-handler
  3: at (progn (warn "real machine move~%") (let ((tm 10000)) (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list tm) :root-coords (list (car root-coord-list)) :zmp (list (car zmp-list)) :optional (list (car contact-state-list))) (send *ri* :wait-interpolation-seq)) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation-seq) (save-log :fname "walk-up"))
  4: at (if real (progn (warn "real machine move~%") (let ((tm 10000)) (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list tm) :root-coords (list (car root-coord-list)) :zmp (list (car zmp-list)) :optional (list (car contact-state-list))) (send *ri* :wait-interpolation-seq)) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation-seq) (save-log :fname "walk-up")))
  5: at (when real (warn "real machine move~%") (let ((tm 10000)) (warning-message 3 "move to initial pose~%") (send *ri* :angle-vector-sequence-full (list (car av-list)) (list tm) :root-coords (list (car root-coord-list)) :zmp (list (car zmp-list)) :optional (list (car contact-state-list))) (send *ri* :wait-interpolation-seq)) (warning-message 3 "move~%") (send *ri* :angle-vector-sequence-full av-list tm-list :root-coords root-coord-list :zmp zmp-list :optional contact-state-list) (send *ri* :wait-interpolation-seq) (save-log :fname "walk-up"))
  6: at (execute-motion)
  7: at #<compiled-code #X573c828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: cannot find method :stops-t in (send *ri* :stops-t)
38.E2-irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X222465e8>
39.E2-irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
40.E2-irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X23e86608>
41.E2-irteusgl$send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X23ed3160>
42.E2-irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
43.E2-irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X24a17c80>
44.E2-irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X24b4df18>
45.E2-irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
46.E2-irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X257f52e0>
47.E2-irteusgl$ execute-motion
real machine move
move to initial pose
move
;; save log to /tmp/test_2019_10-04_19-23_53
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/choreonoid_walk-up-fall-forward_JAXON_RED_2019_10-04_19-23_53/%"choreonoid_walk-up-fall-forward_JAXON_RED_2019_10-04_19-23_53"
48.E2-irteusgl$ reset
49.irteusgl$ send (send *ri* :get-st-param) :st_algorithm
3
50.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X224f2178>
51.irteusgl$ send *ri* :set-st-param :st-algothrithm 3
Call Stack (max depth: 20):
  0: at (apply #'send self :raw-set-st-param (append (if (memq :st-algorithm args) (list :st-algorithm (if (or (null st-algorithm) (integerp st-algorithm)) st-algorithm (let ((sa (read-from-string (format nil "HRPSYS_ROS_BRIDGE::OPENHRP_STABILIZERSERVICE_STALGORITHM::*~A*" (string-downcase st-algorithm))))) (if (boundp sa) (eval sa) (error ";; no such :st-algorithm ~A in :set-st-param~%" st-algorithm)))))) (if (and (memq :eefm-pos-damping-gain args) eefm-pos-damping-gain) (let ((tmp (send prm :eefm_pos_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-damping-gain)) (list :eefm-pos-damping-gain tmp))) (if (and (memq :eefm-rot-damping-gain args) eefm-rot-damping-gain) (let ((tmp (send prm :eefm_rot_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-damping-gain)) (list :eefm-rot-damping-gain tmp))) (if (and (memq :eefm-rot-time-const args) eefm-rot-time-const) (let ((tmp (send prm :eefm_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-time-const)) (list :eefm-rot-time-const tmp))) (if (and (memq :eefm-pos-time-const-support args) eefm-pos-time-const-support) (let ((tmp (send prm :eefm_pos_time_const_support))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-time-const-support)) (list :eefm-pos-time-const-support tmp))) (if (and (memq :eefm-swing-pos-spring-gain args) eefm-swing-pos-spring-gain) (let ((tmp (send prm :eefm_swing_pos_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-spring-gain)) (list :eefm-swing-pos-spring-gain tmp))) (if (and (memq :eefm-swing-pos-time-const args) eefm-swing-pos-time-const) (let ((tmp (send prm :eefm_swing_pos_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-time-const)) (list :eefm-swing-pos-time-const tmp))) (if (and (memq :eefm-swing-rot-spring-gain args) eefm-swing-rot-spring-gain) (let ((tmp (send prm :eefm_swing_rot_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-spring-gain)) (list :eefm-swing-rot-spring-gain tmp))) (if (and (memq :eefm-swing-rot-time-const args) eefm-swing-rot-time-const) (let ((tmp (send prm :eefm_swing_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-time-const)) (list :eefm-swing-rot-time-const tmp))) (if (and (memq :eefm-ee-forcemoment-distribution-weight args) eefm-ee-forcemoment-distribution-weight) (let ((tmp (send prm :eefm_ee_forcemoment_distribution_weight))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-ee-forcemoment-distribution-weight)) (list :eefm-ee-forcemoment-distribution-weight tmp))) args))
  1: at (apply #'send self :raw-set-st-param (append (if (memq :st-algorithm args) (list :st-algorithm (if (or (null st-algorithm) (integerp st-algorithm)) st-algorithm (let ((sa (read-from-string (format nil "HRPSYS_ROS_BRIDGE::OPENHRP_STABILIZERSERVICE_STALGORITHM::*~A*" (string-downcase st-algorithm))))) (if (boundp sa) (eval sa) (error ";; no such :st-algorithm ~A in :set-st-param~%" st-algorithm)))))) (if (and (memq :eefm-pos-damping-gain args) eefm-pos-damping-gain) (let ((tmp (send prm :eefm_pos_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-damping-gain)) (list :eefm-pos-damping-gain tmp))) (if (and (memq :eefm-rot-damping-gain args) eefm-rot-damping-gain) (let ((tmp (send prm :eefm_rot_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-damping-gain)) (list :eefm-rot-damping-gain tmp))) (if (and (memq :eefm-rot-time-const args) eefm-rot-time-const) (let ((tmp (send prm :eefm_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-time-const)) (list :eefm-rot-time-const tmp))) (if (and (memq :eefm-pos-time-const-support args) eefm-pos-time-const-support) (let ((tmp (send prm :eefm_pos_time_const_support))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-time-const-support)) (list :eefm-pos-time-const-support tmp))) (if (and (memq :eefm-swing-pos-spring-gain args) eefm-swing-pos-spring-gain) (let ((tmp (send prm :eefm_swing_pos_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-spring-gain)) (list :eefm-swing-pos-spring-gain tmp))) (if (and (memq :eefm-swing-pos-time-const args) eefm-swing-pos-time-const) (let ((tmp (send prm :eefm_swing_pos_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-time-const)) (list :eefm-swing-pos-time-const tmp))) (if (and (memq :eefm-swing-rot-spring-gain args) eefm-swing-rot-spring-gain) (let ((tmp (send prm :eefm_swing_rot_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-spring-gain)) (list :eefm-swing-rot-spring-gain tmp))) (if (and (memq :eefm-swing-rot-time-const args) eefm-swing-rot-time-const) (let ((tmp (send prm :eefm_swing_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-time-const)) (list :eefm-swing-rot-time-const tmp))) (if (and (memq :eefm-ee-forcemoment-distribution-weight args) eefm-ee-forcemoment-distribution-weight) (let ((tmp (send prm :eefm_ee_forcemoment_distribution_weight))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-ee-forcemoment-distribution-weight)) (list :eefm-ee-forcemoment-distribution-weight tmp))) args))
  2: at (send* self :raw-set-st-param (append (if (memq :st-algorithm args) (list :st-algorithm (if (or (null st-algorithm) (integerp st-algorithm)) st-algorithm (let ((sa (read-from-string (format nil "HRPSYS_ROS_BRIDGE::OPENHRP_STABILIZERSERVICE_STALGORITHM::*~A*" (string-downcase st-algorithm))))) (if (boundp sa) (eval sa) (error ";; no such :st-algorithm ~A in :set-st-param~%" st-algorithm)))))) (if (and (memq :eefm-pos-damping-gain args) eefm-pos-damping-gain) (let ((tmp (send prm :eefm_pos_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-damping-gain)) (list :eefm-pos-damping-gain tmp))) (if (and (memq :eefm-rot-damping-gain args) eefm-rot-damping-gain) (let ((tmp (send prm :eefm_rot_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-damping-gain)) (list :eefm-rot-damping-gain tmp))) (if (and (memq :eefm-rot-time-const args) eefm-rot-time-const) (let ((tmp (send prm :eefm_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-time-const)) (list :eefm-rot-time-const tmp))) (if (and (memq :eefm-pos-time-const-support args) eefm-pos-time-const-support) (let ((tmp (send prm :eefm_pos_time_const_support))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-time-const-support)) (list :eefm-pos-time-const-support tmp))) (if (and (memq :eefm-swing-pos-spring-gain args) eefm-swing-pos-spring-gain) (let ((tmp (send prm :eefm_swing_pos_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-spring-gain)) (list :eefm-swing-pos-spring-gain tmp))) (if (and (memq :eefm-swing-pos-time-const args) eefm-swing-pos-time-const) (let ((tmp (send prm :eefm_swing_pos_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-time-const)) (list :eefm-swing-pos-time-const tmp))) (if (and (memq :eefm-swing-rot-spring-gain args) eefm-swing-rot-spring-gain) (let ((tmp (send prm :eefm_swing_rot_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-spring-gain)) (list :eefm-swing-rot-spring-gain tmp))) (if (and (memq :eefm-swing-rot-time-const args) eefm-swing-rot-time-const) (let ((tmp (send prm :eefm_swing_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-time-const)) (list :eefm-swing-rot-time-const tmp))) (if (and (memq :eefm-ee-forcemoment-distribution-weight args) eefm-ee-forcemoment-distribution-weight) (let ((tmp (send prm :eefm_ee_forcemoment_distribution_weight))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-ee-forcemoment-distribution-weight)) (list :eefm-ee-forcemoment-distribution-weight tmp))) args))
  3: at (let ((prm (send self :get-st-param))) (send* self :raw-set-st-param (append (if (memq :st-algorithm args) (list :st-algorithm (if (or (null st-algorithm) (integerp st-algorithm)) st-algorithm (let ((sa (read-from-string (format nil "HRPSYS_ROS_BRIDGE::OPENHRP_STABILIZERSERVICE_STALGORITHM::*~A*" (string-downcase st-algorithm))))) (if (boundp sa) (eval sa) (error ";; no such :st-algorithm ~A in :set-st-param~%" st-algorithm)))))) (if (and (memq :eefm-pos-damping-gain args) eefm-pos-damping-gain) (let ((tmp (send prm :eefm_pos_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-damping-gain)) (list :eefm-pos-damping-gain tmp))) (if (and (memq :eefm-rot-damping-gain args) eefm-rot-damping-gain) (let ((tmp (send prm :eefm_rot_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-damping-gain)) (list :eefm-rot-damping-gain tmp))) (if (and (memq :eefm-rot-time-const args) eefm-rot-time-const) (let ((tmp (send prm :eefm_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-time-const)) (list :eefm-rot-time-const tmp))) (if (and (memq :eefm-pos-time-const-support args) eefm-pos-time-const-support) (let ((tmp (send prm :eefm_pos_time_const_support))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-time-const-support)) (list :eefm-pos-time-const-support tmp))) (if (and (memq :eefm-swing-pos-spring-gain args) eefm-swing-pos-spring-gain) (let ((tmp (send prm :eefm_swing_pos_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-spring-gain)) (list :eefm-swing-pos-spring-gain tmp))) (if (and (memq :eefm-swing-pos-time-const args) eefm-swing-pos-time-const) (let ((tmp (send prm :eefm_swing_pos_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-time-const)) (list :eefm-swing-pos-time-const tmp))) (if (and (memq :eefm-swing-rot-spring-gain args) eefm-swing-rot-spring-gain) (let ((tmp (send prm :eefm_swing_rot_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-spring-gain)) (list :eefm-swing-rot-spring-gain tmp))) (if (and (memq :eefm-swing-rot-time-const args) eefm-swing-rot-time-const) (let ((tmp (send prm :eefm_swing_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-time-const)) (list :eefm-swing-rot-time-const tmp))) (if (and (memq :eefm-ee-forcemoment-distribution-weight args) eefm-ee-forcemoment-distribution-weight) (let ((tmp (send prm :eefm_ee_forcemoment_distribution_weight))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-ee-forcemoment-distribution-weight)) (list :eefm-ee-forcemoment-distribution-weight tmp))) args)))
  4: at (send *ri* :set-st-param :st-algothrithm 3)
  5: at #<compiled-code #X573c828>
/opt/ros/kinetic/share/euslisp/jskeus/eus/Linux64/bin/irteusgl 0 error: no such keyword :st-algothrithm in (apply #'send self :raw-set-st-param (append (if (memq :st-algorithm args) (list :st-algorithm (if (or (null st-algorithm) (integerp st-algorithm)) st-algorithm (let ((sa (read-from-string (format nil "HRPSYS_ROS_BRIDGE::OPENHRP_STABILIZERSERVICE_STALGORITHM::*~A*" (string-downcase st-algorithm))))) (if (boundp sa) (eval sa) (error ";; no such :st-algorithm ~A in :set-st-param~%" st-algorithm)))))) (if (and (memq :eefm-pos-damping-gain args) eefm-pos-damping-gain) (let ((tmp (send prm :eefm_pos_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-damping-gain)) (list :eefm-pos-damping-gain tmp))) (if (and (memq :eefm-rot-damping-gain args) eefm-rot-damping-gain) (let ((tmp (send prm :eefm_rot_damping_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-damping-gain)) (list :eefm-rot-damping-gain tmp))) (if (and (memq :eefm-rot-time-const args) eefm-rot-time-const) (let ((tmp (send prm :eefm_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-rot-time-const)) (list :eefm-rot-time-const tmp))) (if (and (memq :eefm-pos-time-const-support args) eefm-pos-time-const-support) (let ((tmp (send prm :eefm_pos_time_const_support))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-pos-time-const-support)) (list :eefm-pos-time-const-support tmp))) (if (and (memq :eefm-swing-pos-spring-gain args) eefm-swing-pos-spring-gain) (let ((tmp (send prm :eefm_swing_pos_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-spring-gain)) (list :eefm-swing-pos-spring-gain tmp))) (if (and (memq :eefm-swing-pos-time-const args) eefm-swing-pos-time-const) (let ((tmp (send prm :eefm_swing_pos_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-pos-time-const)) (list :eefm-swing-pos-time-const tmp))) (if (and (memq :eefm-swing-rot-spring-gain args) eefm-swing-rot-spring-gain) (let ((tmp (send prm :eefm_swing_rot_spring_gain))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-spring-gain)) (list :eefm-swing-rot-spring-gain tmp))) (if (and (memq :eefm-swing-rot-time-const args) eefm-swing-rot-time-const) (let ((tmp (send prm :eefm_swing_rot_time_const))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-swing-rot-time-const)) (list :eefm-swing-rot-time-const tmp))) (if (and (memq :eefm-ee-forcemoment-distribution-weight args) eefm-ee-forcemoment-distribution-weight) (let ((tmp (send prm :eefm_ee_forcemoment_distribution_weight))) (setq (tmp . ros::_data) (apply #'concatenate float-vector eefm-ee-forcemoment-distribution-weight)) (list :eefm-ee-forcemoment-distribution-weight tmp))) args))
52.E1-irteusgl$ reset
53.irteusgl$ send *ri* :set-st-param :st-algorithm 3
#<hrpsys_ros_bridge::openhrp_stabilizerservice_setparameterresponse #X22e6d928>
54.irteusgl$ 
nil
54.irteusgl$ 
nil
54.irteusgl$ 
nil
54.irteusgl$ 
nil
54.irteusgl$ car contact-state-list
#f(1.0 1.0 0.0 0.0 0.0 0.0 1.0 1.0)
55.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
56.irteusgl$ load "box-climb-stair.l 
t
57.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X23b09ae8>
58.irteusgl$ 
nil
58.irteusgl$ 
nil
58.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; save log to /tmp/test_2019_10-04_20-14_53
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/choreonoid_walk-up_phase-remain-time1,1,1,1_JAXON_RED_2019_10-04_20-14_53/%"choreonoid_walk-up_phase-remain-time1,1,1,1_JAXON_RED_2019_10-04_20-14_53"
59.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X213bc6f0>
60.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
61.irteusgl$ send *ri* :methods
(:init :set-hand-controller :rarm-controller :larm-controller :rleg-controller :lleg-controller :head-controller :torso-controller :init :move-gripper :start-grasp :stop-grasp :hand-reset :hand-stop :hand-resume :get-joint-angle :get-joint-velocity :get-joint-effort :gripper :state :init :rtmros-motor-states-callback :rtmros-zmp-callback :rtmros-imu-callback :rtmros-force-sensor-callback :rtmros-emergency-mode-callback :rtmros-capture-point-callback :rtmros-contact-states-callback :tmp-force-moment-vector-for-limb :tmp-force-moment-vector :force-vector :moment-vector :off-force-vector :off-moment-vector :reference-force-vector :reference-moment-vector :absolute-force-vector :absolute-moment-vector :zmp-vector :ref-capture-point-vector :act-capture-point-vector :ref-contact-states :act-contact-states :temperature-vector :motor-extra-data :imucoords :accel-vector :gyro-vector :state :define-all-rosbridge-srv-methods :get-rosbridge-fnames-from-type :get-rosbridge-idl-fnames :get-rosbridge-srv-fnames :get-rosbridge-method-def-macro :get-idl-enum-values :set-interpolation-mode :calc-zmp-from-state :get-robot-date-string :def-limb-controller-method :set-base-pose :set-base-coords :set-base-pos :set-base-rpy :wait-interpolation-of-group :add-joint-group :remove-joint-group :set-joint-angles-of-group :load-pattern :wait-interpolation-seq :sync-controller :set-ref-forces-moments :set-ref-forces :set-ref-moments :set-ref-force :set-ref-moment :angle-vector-sequence-full :set-tolerance :start-collision-detection :stop-collision-detection :get-collision-status :save-log :start-log :set-log-maxlength :set-servo-gain-percentage :remove-force-sensor-offset :set-servo-error-limit :calibrate-inertia-sensor :raw-get-impedance-controller-param :raw-set-impedance-controller-param :get-impedance-controller-param-arguments :start-impedance :raw-start-impedance :start-impedance-no-wait :stop-impedance :stop-impedance-no-wait :wait-impedance-controller-transition :set-impedance-controller-param :get-impedance-controller-param :get-impedance-controller-controller-mode :force-sensor-method :get-object-turnaround-detector-param :raw-set-object-turnaround-detector-param :get-object-turnaround-detector-param-arguments :start-object-turnaround-detection :check-object-turnaround-detection :get-otd-object-forces-moments :set-object-turnaround-ref-force :set-object-turnaround-ref-moment :set-object-turnaround-detector-param :get-object-turnaround-detector-detector-total-wrench :raw-get-forcemoment-offset-param :raw-set-forcemoment-offset-param :get-forcemoment-offset-param-arguments :zero-set-forcemoment-offset-param :set-forcemoment-offset-param :get-forcemoment-offset-param :load-forcemoment-offset-param :load-forcemoment-offset-params :dump-forcemoment-offset-params :remove-force-sensor-offset-rmfo :remove-force-sensor-offset-rmfo-arms :remove-force-sensor-offset-rmfo-legs :reset-force-moment-offset-arms :reset-force-moment-offset-legs :reset-force-moment-offset :_reset-force-moment-offset :get-gait-generator-param :raw-set-gait-generator-param :get-gait-generator-param-arguments :get-auto-balancer-param :raw-set-auto-balancer-param :get-auto-balancer-param-arguments :start-auto-balancer :stop-auto-balancer :go-pos-no-wait :go-pos :raw-get-foot-step-param :get-foot-step-params :get-foot-step-param :set-foot-steps-no-wait :set-foot-steps :set-foot-steps-with-param-no-wait :set-foot-steps-with-param :set-foot-steps-roll-pitch :set-foot-steps-with-base-height :set-foot-steps-with-param-and-base-height :adjust-foot-steps :adjust-foot-steps-roll-pitch :get-remaining-foot-step-sequence-current-index :get-current-footstep-index :get-remaining-foot-step-sequence :get-go-pos-footsteps-sequence :draw-remaining-foot-step-sequence :go-velocity :go-stop :emergency-walking-stop :calc-go-velocity-param-from-velocity-center-offset :wait-foot-steps :set-gait-generator-param :print-gait-generator-orbit-type :get-gait-generator-orbit-type :calc-toe-heel-phase-ratio :set-gait-generator-toe-heel-angles :get-auto-balancer-controller-mode :set-auto-balancer-param :print-auto-balancer-use-force-mode :get-auto-balancer-use-force-mode :abc-footstep->eus-footstep :eus-footstep->abc-footstep :cmd-vel-cb :cmd-vel-mode :start-cmd-vel-mode :stop-cmd-vel-mode :calc-dvel-with-velocity-center-offset :set-default-step-time-with-the-same-swing-time :start-graspless-manip-mode :stop-graspless-manip-mode :calc-hand-trans-coords-dual-arms :calc-hand-trans-coords-single-arm :set-soft-error-limit :get-st-param :raw-set-st-param :get-st-param-arguments :set-st-param :set-st-param-for-non-feedback-lip-mode :set-default-st-param :set-st-param-by-ratio :get-st-controller-mode :get-st-algorithm :start-st :stop-st :get-kalman-filter-param :set-kalman-filter-param :get-kalman-filter-param-arguments :get-kalman-filter-algorithm :get-emergency-stopper-param :set-emergency-stopper-param :get-emergency-stopper-param-arguments :emergency-stop-motion :hard-emergency-stop-motion :emergency-release-motion :hard-emergency-release-motion :emergency-mode :get-hand-config-list :start-grasp :stop-grasp :start-default-unstable-controllers :stop-default-unstable-controllers :raw-get-reference-force-updater-param :raw-set-reference-force-updater-param :get-reference-force-updater-param-arguments :get-supported-reference-force-updater-name-list :start-reference-force-updater :stop-reference-force-updater :start-reference-force-updater-no-wait :stop-reference-force-updater-no-wait :set-reference-force-updater-param :get-reference-force-updater-param :get-torque-controller-param :set-torque-controller-param :get-torque-controller-param-arguments :enable-torque-control :disable-torque-control :start-torque-control :stop-torque-control :set-reference-torque :print-rtc-param-all :accelerationfilterservice_resetfilter :accelerationfilterservice_setaccelerationfilterparam :accelerationfilterservice_getaccelerationfilterparam :dataloggerservice_add :dataloggerservice_save :dataloggerservice_maxlength :dataloggerservice_clear :kalmanfilterservice_resetkalmanfilterstate :kalmanfilterservice_getkalmanfilterparam :kalmanfilterservice_setkalmanfilterparam :thermolimiterservice_setparameter :thermolimiterservice_getparameter :graspcontrollerservice_stopgrasp :graspcontrollerservice_startgrasp :collisiondetectorservice_getcollisionstatus :collisiondetectorservice_enablecollisiondetection :collisiondetectorservice_setcollisionloop :collisiondetectorservice_disablecollisiondetection :collisiondetectorservice_settolerance :timekeeperservice_sleep :nullservice_echo :virtualforcesensorservice_removevirtualforcesensoroffset :removeforcesensorlinkoffsetservice_setforcemomentoffsetparam :removeforcesensorlinkoffsetservice_getforcemomentoffsetparam :removeforcesensorlinkoffsetservice_loadforcemomentoffsetparams :removeforcesensorlinkoffsetservice_dumpforcemomentoffsetparams :removeforcesensorlinkoffsetservice_removeforcesensoroffset :stateholderservice_getcommand :stateholderservice_goactual :objectcontactturnarounddetectorservice_startobjectcontactturnarounddetection :objectcontactturnarounddetectorservice_getobjectcontactturnarounddetectorparam :objectcontactturnarounddetectorservice_startobjectcontactturnarounddetectionforgeneralizedwrench :objectcontactturnarounddetectorservice_checkobjectcontactturnarounddetection :objectcontactturnarounddetectorservice_getobjectforcesmoments :objectcontactturnarounddetectorservice_getobjectgeneralizedconstraintwrenches :objectcontactturnarounddetectorservice_setobjectcontactturnarounddetectorparam :objectcontactturnarounddetectorservice_checkobjectcontactturnarounddetectionforgeneralizedwrench :robothardwareservice_setdisturbanceobservergain :robothardwareservice_writedigitaloutputwithmask :robothardwareservice_writedigitaloutput :robothardwareservice_lengthdigitalinput :robothardwareservice_readdigitalinput :robothardwareservice_getstatus2 :robothardwareservice_calibrateinertiasensor :robothardwareservice_setjointinertia :robothardwareservice_enabledisturbanceobserver :robothardwareservice_removeforcesensoroffset :robothardwareservice_setservogainpercentage :robothardwareservice_readdigitaloutput :robothardwareservice_setservotorquegainpercentage :robothardwareservice_setjointcontrolmode :robothardwareservice_addjointgroup :robothardwareservice_disabledisturbanceobserver :robothardwareservice_power :robothardwareservice_lengthdigitaloutput :robothardwareservice_initializejointangle :robothardwareservice_setservoerrorlimit :robothardwareservice_setjointinertias :robothardwareservice_servo :robothardwareservice_getstatus :torquecontrollerservice_settorquecontrollerparam :torquecontrollerservice_enablemultipletorquecontrollers :torquecontrollerservice_starttorquecontrol :torquecontrollerservice_setmultiplereferencetorques :torquecontrollerservice_disablemultipletorquecontrollers :torquecontrollerservice_startmultipletorquecontrols :torquecontrollerservice_gettorquecontrollerparam :torquecontrollerservice_stoptorquecontrol :torquecontrollerservice_setreferencetorque :torquecontrollerservice_stopmultipletorquecontrols :torquecontrollerservice_disabletorquecontroller :torquecontrollerservice_enabletorquecontroller :referenceforceupdaterservice_setreferenceforceupdaterparam :referenceforceupdaterservice_stopreferenceforceupdater :referenceforceupdaterservice_startreferenceforceupdater :referenceforceupdaterservice_getreferenceforceupdaterparam :referenceforceupdaterservice_waitreferenceforceupdatertransition :referenceforceupdaterservice_getsupportedreferenceforceupdaternamesequence :referenceforceupdaterservice_stopreferenceforceupdaternowait :referenceforceupdaterservice_startreferenceforceupdaternowait :img_cameracaptureservice_stop_continuous :img_cameracaptureservice_take_one_frame :img_cameracaptureservice_start_continuous :pcdloaderservice_load :wavplayerservice_playwavnowait :wavplayerservice_playwav :forwardkinematicsservice_getrelativecurrentposition :forwardkinematicsservice_getreferencepose :forwardkinematicsservice_getcurrentpose :forwardkinematicsservice_selectbaselink :torquefilterservice_dummy :impedancecontrollerservice_waitimpedancecontrollertransition :impedancecontrollerservice_setimpedancecontrollerparam :impedancecontrollerservice_getimpedancecontrollerparam :impedancecontrollerservice_startimpedancecontrollernowait :impedancecontrollerservice_startimpedancecontroller :impedancecontrollerservice_stopimpedancecontrollernowait :impedancecontrollerservice_stopimpedancecontroller :sequenceplayerservice_playpatternofgroup :sequenceplayerservice_setzmp :sequenceplayerservice_isempty :sequenceplayerservice_clearofgroup :sequenceplayerservice_removejointgroup :sequenceplayerservice_clearnowait :sequenceplayerservice_setinterpolationmode :sequenceplayerservice_setmaxikerror :sequenceplayerservice_setjointanglessequencefull :sequenceplayerservice_setjointanglessequenceofgroup :sequenceplayerservice_setjointangle :sequenceplayerservice_setjointangleswithmask :sequenceplayerservice_setwrenches :sequenceplayerservice_settargetpose :sequenceplayerservice_setmaxikiteration :sequenceplayerservice_addjointgroup :sequenceplayerservice_setbaserpy :sequenceplayerservice_clearjointangles :sequenceplayerservice_loadpattern :sequenceplayerservice_setjointangles :sequenceplayerservice_setjointanglesofgroup :sequenceplayerservice_clearjointanglesofgroup :sequenceplayerservice_setjointanglessequencewithmask :sequenceplayerservice_clear :sequenceplayerservice_setbasepos :sequenceplayerservice_setinitialstate :sequenceplayerservice_waitinterpolation :sequenceplayerservice_playpattern :sequenceplayerservice_waitinterpolationofgroup :sequenceplayerservice_setjointanglessequence :servocontrollerservice_getspeed :servocontrollerservice_servoon :servocontrollerservice_setjointanglesofgroup :servocontrollerservice_removejointgroup :servocontrollerservice_getmaxtorque :servocontrollerservice_setmaxtorque :servocontrollerservice_setjointangle :servocontrollerservice_addjointgroup :servocontrollerservice_servooff :servocontrollerservice_gettorque :servocontrollerservice_getjointangles :servocontrollerservice_getjointangle :servocontrollerservice_setreset :servocontrollerservice_setjointangles :servocontrollerservice_getduration :servocontrollerservice_gettemperature :servocontrollerservice_getvoltage :emergencystopperservice_releasemotion :emergencystopperservice_stopmotion :emergencystopperservice_setemergencystopperparam :emergencystopperservice_getemergencystopperparam :executionprofileservice_getprofile :executionprofileservice_resetprofile :executionprofileservice_getcomponentprofile :ogmap3dservice_getogmap3d :ogmap3dservice_save :ogmap3dservice_clear :softerrorlimiterservice_setservoerrorlimit :stabilizerservice_startstabilizer :stabilizerservice_setparameter :stabilizerservice_stopstabilizer :stabilizerservice_getparameter :stabilizerservice_dummy :autobalancerservice_setfootsteps :autobalancerservice_getremainingfootstepsequence :autobalancerservice_adjustfootsteps :autobalancerservice_setautobalancerparam :autobalancerservice_waitfootstepsearly :autobalancerservice_gostop :autobalancerservice_setfootstepswithparam :autobalancerservice_waitfootsteps :autobalancerservice_getautobalancerparam :autobalancerservice_getgaitgeneratorparam :autobalancerservice_stopautobalancer :autobalancerservice_setgaitgeneratorparam :autobalancerservice_getgoposfootstepssequence :autobalancerservice_gopos :autobalancerservice_startautobalancer :autobalancerservice_emergencystop :autobalancerservice_getfootstepparam :autobalancerservice_govelocity :autobalancerservice_releaseemergencystop :init :add-controller :robot-interface-simulation-callback :publish-joint-state :angle-vector-safe :angle-vector-duration :angle-vector-simulation :angle-vector :angle-vector-sequence :wait-interpolation :interpolatingp :wait-interpolation-smooth :interpolating-smoothp :stop-motion :cancel-angle-vector :worldcoords :torque-vector :potentio-vector :reference-vector :actual-vector :error-vector :state-vector :stamp :send-ros-controller :set-robot-state1 :get-robot-state :ros-state-callback :wait-until-update-all-joints :update-robot-state :state :default-controller :sub-angle-vector :robot :viewer :objects :set-simulation-default-look-at :draw-objects :find-object :joint-action-enable :simulation-modep :warningp :spin-once :send-trajectory :send-trajectory-each :ros-wait :go-pos :go-pos-no-wait :go-wait :go-velocity :go-stop :gripper :joint-trajectory-to-angle-vector-list :show-goal-hand-coords :find-descendants-dae-links :show-mesh-traj-with-color :nod :eus-mannequin-mode :play-sound :speak :speak-en :speak-jp :plist :get :put :name :remprop :prin1 :prin1 :warning :error :slots :methods :super :get-val :set-val)
62.irteusgl$ (send *ri* :get-emergency-stopper-param)
#<hrpsys_ros_bridge::openhrp_emergencystopperservice_emergencystopperparam #X22b7e780>
63.irteusgl$ send (send *ri* :get-emergency-stopper-param) :methods
(:init :default_recover_time :default_retrieve_time :is_stop_mode :serialization-length :serialize :deserialize :init :md5sum- :datatype- :connection-header :plist :get :put :name :remprop :prin1 :prin1 :warning :error :slots :methods :super :get-val :set-val)
64.irteusgl$ send (send *ri* :get-emergency-stopper-param) :slots
((plist) (ros::_connection-header) (ros::_default_recover_time . 10.0) (ros::_default_retrieve_time . 1.0) (ros::_is_stop_mode))
65.irteusgl$ send *ri* :emergency-mode
0
66.irteusgl$ send (send *ri* :get-st-param) :emergency_check_mode
2
67.irteusgl$ (send *ri* :set-st-param :emergency-check-mode 0)
#<hrpsys_ros_bridge::openhrp_stabilizerservice_setparameterresponse #X23489888>
68.irteusgl$ send (send *ri* :get-st-param) :emergency_check_mode
0
69.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X23bd4dd8>
70.irteusgl$ 
nil
70.irteusgl$ 
nil
70.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; save log to /tmp/test_2019_10-04_20-23_47
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/choreonoid_walk-up_no-em-check_JAXON_RED_2019_10-04_20-23_47/%"choreonoid_walk-up_no-em-check_JAXON_RED_2019_10-04_20-23_47"
71.irteusgl$ 
nil
71.irteusgl$ 
nil
71.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X20394200>
72.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
73.irteusgl$ 
nil
73.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X22ccca30>
74.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X22e2a640>
75.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X22e2abc8>
76.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; bad stream buffer, 0x20390df8
;; save log to /tmp/test_2019_10-04_20-31_49
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
nil
77.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X203b0850>
78.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
79.irteusgl$ car root-coord-list
#<coordinates #X25f60c18  63.059 -0.327 926.645 / 1.590e-05 -2.800e-08 -4.452e-13>
80.irteusgl$ car zmp-list
#f(-2.336432e-14 1.421085e-14 1.207923e-13)
81.irteusgl$ elt zmp-list 1000
#f(102.007 1.99997 102.067)
82.irteusgl$ elt contact-state-list 1000
#f(1.0 1.0 0.0 0.0 0.0 0.0 1.0 1.0)
83.irteusgl$ 
nil
83.irteusgl$ 
nil
83.irteusgl$ 
nil
83.irteusgl$ 
nil
83.irteusgl$ generate-walk-up-motion
generating walking pattern ...
(20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0 20.0)
84.irteusgl$ elt contact-state-list 1000
#f(1.0 1.0 0.0 0.0 1.0 1.0 1.0 1.0)
85.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X2c7d7818>
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ 
nil
86.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; save log to /tmp/test_2019_10-04_20-40_24
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.

(zenity:30949): Gdk-WARNING **: Event with type 8 not holding a GdkDevice. It is most likely synthesized outside Gdk/GTK+


(zenity:30949): Gdk-WARNING **: Event with type 8 not holding a GdkDevice. It is most likely synthesized outside Gdk/GTK+


(zenity:30949): Gdk-WARNING **: Event with type 8 not holding a GdkDevice. It is most likely synthesized outside Gdk/GTK+


(zenity:30949): Gdk-WARNING **: Event with type 8 not holding a GdkDevice. It is most likely synthesized outside Gdk/GTK+

saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/choreonoid_walk-up_remain-time1,1,1,1_JAXON_RED_2019_10-04_20-40_24/%"choreonoid_walk-up_remain-time1,1,1,1_JAXON_RED_2019_10-04_20-40_24"
87.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X5c5bc00>
88.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
89.irteusgl$ generate-walk-up-motion :stride 250
generating walking pattern ...
;; bad stream buffer, 0x5bf8670

90.irteusgl$ 
nil
90.irteusgl$ 
nil
90.irteusgl$ 
nil
90.irteusgl$ execute-motion
real machine move
move to initial pose
move
;; save log to /tmp/test_2019_10-04_20-46_42
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
nil
91.irteusgl$ .git/
sh: 1: .git/: Permission denied
32256
92.irteusgl$ 
nil
92.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X5c670f0>
93.irteusgl$ load "box-climb-stair.l 
t
94.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
95.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X10b14380>
96.irteusgl$ execute-motion
start st
real machine move
move to initial pose
move
;; bad stream buffer, 0x2416a770
;; bad stream buffer, 0x5bf8670
;; save log to /tmp/test_2019_10-04_20-49_49
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
nil
97.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1994c430>
98.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1994c9b8>
99.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
100.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1a108138>
101.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1a39e2d8>
102.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X1a39e860>
103.irteusgl$ send *ri* :stop-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_stopstabilizerresponse #X1a39ede8>
104.irteusgl$ reset-pose
set-current-pose :zmp-offset #f(15.5 0.0 0.0)
now moving to current pose by load-pattern in 10 sec

(exec-copy) now copying files /tmp/set-current-pose
cp: '/tmp/set-current-pose.optionaldata' と '/tmp/set-current-pose.optionaldata' は同じファイルです
cp: '/tmp/set-current-pose.pos' と '/tmp/set-current-pose.pos' は同じファイルです
cp: '/tmp/set-current-pose.waist' と '/tmp/set-current-pose.waist' は同じファイルです
cp: '/tmp/set-current-pose.wrenches' と '/tmp/set-current-pose.wrenches' は同じファイルです
cp: '/tmp/set-current-pose.zmp' と '/tmp/set-current-pose.zmp' は同じファイルです
nil
105.irteusgl$ send *ri* :start-st
#<hrpsys_ros_bridge::openhrp_stabilizerservice_startstabilizerresponse #X21328cf0>
106.irteusgl$ execute-motion
start st
real machine move
move to initial pose
move
;; bad stream buffer, 0x68889e0
;; bad stream buffer, 0x688d300
;; save log to /tmp/test_2019_10-04_20-53_29
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.
saved logs in /home/fukazawa/k-kojima@jsk.imi.i.u-tokyo.ac.jp/Documents/log/JAXON_RED/choreonoid_walk-up_sccess_rotating-waist_JAXON_RED_2019_10-04_20-53_29/%"choreonoid_walk-up_sccess_rotating-waist_JAXON_RED_2019_10-04_20-53_29"
107.irteusgl$ 
nil
107.irteusgl$ 
nil
107.irteusgl$ 
nil
107.irteusgl$ 
nil
107.irteusgl$ 
nil
107.irteusgl$ 
nil
107.irteusgl$ 
nil
107.irteusgl
nil
107.irteusgl$ 
nil
107.irteusgl$ 
nil
107.irteusgl$ quit
[ INFO] [1570429880.410127914, 18024.296000000]: cell* ROSEUS_EXIT(context*, int, cell**)
[ INFO] [1570429880.411047600, 18024.296000000]: exiting roseus 0
fukazawa@exiarepair3:~/catkin_ws/jaxon_tutorial/src/gymnastic_control$ 